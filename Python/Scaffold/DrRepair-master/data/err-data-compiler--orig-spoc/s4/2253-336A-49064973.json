{
  "meta": {
    "index": 2253,
    "hitid": "3OND0WXMHW9FDVK4XJLCI9ON1LZHEH",
    "workerid": "A277IUJ2DY3GZQ",
    "probid": "336A",
    "subid": "49064973"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let x , y integers",
      "code": "int x , y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read x and y",
      "code": "cin >> x >> y ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if x and y both positive",
      "code": "if ( x > 0 && y > 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print 0",
      "code": "cout << \" 0 \"",
      "indent": 2
    },
    {
      "line": 5,
      "text": "print a space , then x + y , then a space , then x + y , then a space",
      "code": "<< \" \" << x + y << \" \" << x + y << \" \"",
      "indent": 3
    },
    {
      "line": 6,
      "text": "print 0",
      "code": "<< \" 0 \" << endl ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else if x negative and y positive",
      "code": "else if ( x < 0 && y > 0 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print - ( - x - ( - y ) ) , then a space",
      "code": "cout << - ( - x - ( - y ) ) << \" \"",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print 0",
      "code": "<< \" 0 \"",
      "indent": 3
    },
    {
      "line": 10,
      "text": "print a space",
      "code": "<< \" \"",
      "indent": 3
    },
    {
      "line": 11,
      "text": "print 0",
      "code": "<< \" 0 \"",
      "indent": 3
    },
    {
      "line": 12,
      "text": "print a space , then print absolute value of ( - x + ( y ) )",
      "code": "<< \" \" << abs ( - x + ( y ) ) << endl ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else if x positive and y negative",
      "code": "else if ( x > 0 && y < 0 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print 0",
      "code": "cout << \" 0 \"",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print a space , then ( - x - ( - y ) ) , then a space , then absolute value of - x + y , then a space",
      "code": "<< \" \" << ( - x - ( - y ) ) << \" \" << abs ( - x + ( y ) ) << \" \"",
      "indent": 3
    },
    {
      "line": 16,
      "text": "print 0",
      "code": "<< \" 0 \" << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print x + y , then a space",
      "code": "cout << ( x + ( y ) ) << \" \"",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print 0",
      "code": "<< \" 0 \"",
      "indent": 3
    },
    {
      "line": 20,
      "text": "print a space",
      "code": "<< \" \"",
      "indent": 3
    },
    {
      "line": 21,
      "text": "print 0",
      "code": "<< \" 0 \"",
      "indent": 3
    },
    {
      "line": 22,
      "text": "print a space , then - ( x + ( - y ) )",
      "code": "<< \" \" << - ( - x + ( - y ) ) << endl ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cout << a << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "cout << x + y << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> x >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cout << 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y , endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cout << 0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" << a << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout << 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << 0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x - ( - y ) ) << \" \" << abs ( - y ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cout << 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "cout << x + y << \" \" << a << endl ;"
      ],
      "err_line": 18,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "cout << 0 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "cout << a << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "cout << 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "cout << a << \" \" << ( x + ( - y ) ) << \" \\n \" ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        7
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        8
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        7
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        8
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        8
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        12,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        12,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        12,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        12,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        12,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        12,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        12,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        12,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        8
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        12,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        12,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        12,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        12,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        12,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        12,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        12,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        12,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        12,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        12,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        12,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        12,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        12,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        12,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        12,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        12,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        12,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        12,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        12,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        12,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        12,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        12,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        12,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        12,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        12,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        12,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        12,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        12,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        12,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        12,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        12,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        12,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        12,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        18,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        18,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        18,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        18,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        18,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        18,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        19,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        19,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        7
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        8
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        9
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        10
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        11
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        8
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        9
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        10
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        11
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        10
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        11
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        10
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        11
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        11
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        12,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        12,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        12,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        12,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        12,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        12,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        12,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        12,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        12,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        14,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        14,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        14,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        14,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        14,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        14,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        14,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        15,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        15,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        15,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        15,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        15,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        15,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        8
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        9
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        10
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        11
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        10
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        11
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        10
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        10,
        11
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        10,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        10,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        10,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        10,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        10,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        10,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        10,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        10,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        10,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        10,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        11
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        11,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        11,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        11,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        11,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        11,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        11,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        11,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        11,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        11,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        11,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        12,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        12,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        12,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        12,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        12,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        12,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        12,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        12,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        12,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        13,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        13,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        13,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        13,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        13,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        13,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        13,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        13,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        14,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        14,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        14,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        14,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        14,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        14,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        14,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        15,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        15,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        15,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        15,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        15,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        15,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        9
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        10
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        11
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        10
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        11
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        11
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        12,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        12,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        12,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        12,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        12,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        12,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        12,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        12,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        12,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        14,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        14,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        14,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        14,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        14,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        14,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        14,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        15,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        15,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        15,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        15,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        15,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        15,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        10
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        11
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        11
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        12,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        12,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        12,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        12,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        12,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        12,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        12,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        12,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        12,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        14,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        14,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        14,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        14,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        14,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        14,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        14,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        15,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        15,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        15,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        15,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        15,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        15,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        11
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        12,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        12,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        12,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        12,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        12,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        12,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        12,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        12,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        12,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        14,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        14,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        14,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        14,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        14,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        14,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        14,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        15,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        15,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        15,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        15,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        15,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        15,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        10,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        12,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        12,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        12,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        12,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        12,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        12,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        12,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        12,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        12,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        14,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        14,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        14,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        14,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        14,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        14,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        14,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        15,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        15,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        15,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        15,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        15,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        15,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        11,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        13,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        13,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        13,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        13,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        13,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        13,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        13,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        13,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        14,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        14,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        14,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        14,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        14,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        14,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        14,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        15,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        15,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        15,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        15,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        15,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        15,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        12,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        14,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        14,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        14,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        14,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        14,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        14,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        14,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        15,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        15,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        15,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        15,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        15,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        15,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        13,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        15,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        15,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        15,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        15,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        15,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        15,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        14,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        15,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        16,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        16,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        16,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        16,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        16,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        16,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        16,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        16,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        16,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        16,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        18,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        18,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        18,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        18,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        18,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        18,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        19,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        19,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        8
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        12,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        12,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        12,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        12,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        12,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        12,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        12,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        12,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        12,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        12,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        12,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        12,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        12,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        12,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        12,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        12,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        12,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        12,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        12,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        12,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        12,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        12,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        12,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        12,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        12,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        16,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        16,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        16,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        16,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        16,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        16,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        16,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        16,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        16,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        16,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        18,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        18,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        18,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        18,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        18,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        18,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        19,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        19,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        9
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        10
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        11
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        12
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        13
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        10
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        11
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        12
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        13
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        11
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        11,
        12
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        11,
        13
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        11,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        11,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        11,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        11,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        11,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        11,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        11,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        11,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        12
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        12,
        13
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        12,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        12,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        12,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        12,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        12,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        12,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        12,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        12,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        13
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        13,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        13,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        13,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        13,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        13,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        13,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        13,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        13,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        14,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        14,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        14,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        14,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        14,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        14,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        14,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        15,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        15,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        15,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        15,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        15,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        15,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        16,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        16,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        16,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        16,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        16,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        18,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        18,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        18,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        18,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        19,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        19,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        19,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        20,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        20,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        21,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        10
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        11
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        12
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        13
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        11
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        12
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        13
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        12
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        12,
        13
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        12,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        12,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        12,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        12,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        12,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        12,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        12,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        12,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        13
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        13,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        14,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        14,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        14,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        14,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        14,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        14,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        14,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        15,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        15,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        15,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        15,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        15,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        15,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        16,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        16,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        16,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        16,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        16,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        18,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        18,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        18,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        18,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        19,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        19,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        19,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        20,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        20,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        21,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        9,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        12
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        13
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        12
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        12,
        13
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        12,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        12,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        12,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        12,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        12,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        12,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        12,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        12,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        13
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        14,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        14,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        14,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        14,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        14,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        14,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        14,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        15,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        15,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        15,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        15,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        15,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        15,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        16,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        16,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        16,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        16,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        16,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        18,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        18,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        18,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        18,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        19,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        19,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        19,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        20,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        20,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        21,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        12
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        12,
        13
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        12,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        12,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        12,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        12,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        12,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        12,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        12,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        12,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        13
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        14,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        14,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        14,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        14,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        14,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        14,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        14,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        15,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        15,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        15,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        15,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        15,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        15,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        16,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        16,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        16,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        16,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        16,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        18,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        18,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        18,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        18,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        19,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        19,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        19,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        20,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        20,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        21,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        13
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        13,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        13,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        13,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        13,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        13,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        13,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        13,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        13,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        14,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        14,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        14,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        14,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        14,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        14,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        14,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        15,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        15,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        15,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        15,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        15,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        15,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        16,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        16,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        16,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        16,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        16,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        18,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        18,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        18,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        18,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        19,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        19,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        19,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        20,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        20,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        21,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        12,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        13,
        14,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13,
        14,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        13,
        14,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        13,
        14,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        13,
        14,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        13,
        14,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        13,
        14,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        13,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        15,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        15,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        15,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        15,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        15,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        15,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        16,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        16,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        16,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        16,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        16,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        13,
        18,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        13,
        18,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        13,
        18,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        13,
        18,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        13,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        19,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        19,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        19,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        20,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        20,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        21,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        15,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        15,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        15,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        15,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        15,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        15,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        16,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        16,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        16,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        16,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        16,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        18,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        18,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        18,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        18,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        19,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        19,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        19,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        20,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        20,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        21,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        15
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        16,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        16,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        16,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        16,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        16,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        18,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        18,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        18,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        18,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        19,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        19,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        19,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        20,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        20,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        21,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        15,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        16,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        16,
        18,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        16,
        18,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        16,
        18,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        16,
        18,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        16,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        16,
        19,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        16,
        19,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        16,
        19,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        16,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        16,
        20,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        16,
        20,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        16,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        16,
        21,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        16,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        18
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        18,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        18,
        19,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 20,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        18,
        19,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        18,
        19,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        18,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        18,
        20,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        18,
        20,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        18,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        18,
        21,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        18,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        19
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        19,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        19,
        20,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        19,
        20,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        19,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        19,
        21,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        19,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        20
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        20,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        20,
        21,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        20,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        21
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        21,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        22
      ],
      "mod_code": [
        "else if ( x > y && y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        10
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        11
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        12
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        13
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        14
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        11
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        12
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        13
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        14
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        12
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        13
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        14
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        13
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        14
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        14
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        14,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        14,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        14,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        14,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        14,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        14,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        14,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        15,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        15,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        15,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        15,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        15,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        15,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        18,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        18,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        18,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        18,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        19,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        19,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        19,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        20,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        20,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        21,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        12
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        13
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        14
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        12
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        13
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        14
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        13
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        14
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        14
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        14,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        14,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        14,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        14,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        14,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        14,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        14,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        15,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        15,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        15,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        15,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        15,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        15,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        16,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        16,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        16,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        16,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        16,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        18,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        18,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        18,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        18,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        19,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        19,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        19,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        20,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        20,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        21,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        12
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        13
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        14
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        13
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        14
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        14
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        15,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        15,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        15,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        15,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        15,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        15,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        18,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        18,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        18,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        18,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        19,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        19,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        19,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        20,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        20,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        21,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        13
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        14
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        14
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        18,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        18,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        18,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        18,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        19,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        19,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        19,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        20,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        20,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        21,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        14
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        18,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        18,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        18,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        18,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        20,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        20,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        21,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        18,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        18,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        18,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        18,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        19,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        19,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        19,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        21,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        18,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        18,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        18,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        18,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        19,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        19,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        19,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        20,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        20,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        21,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        20,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        20,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        21,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        18
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        18,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        18,
        19,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        18,
        19,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        18,
        19,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        18,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        18,
        20,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        18,
        20,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        18,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        18,
        21,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        18,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        19,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        19,
        20,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        19,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        19,
        21,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        19,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        20
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        20,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        20,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        21
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        21,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        22
      ],
      "mod_code": [
        "cout << - ( - x - ( - y ) ) << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        18,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        18,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        18,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        18,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        18,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        18,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        19,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        19,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        12
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        13
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        14
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        15
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        16
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        13
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        14
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        15
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        16
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        14
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        15
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        16
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        15
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        15,
        16
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        15,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        15,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        15,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        15,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        15,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        16
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        13
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        13,
        14
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        13,
        15
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        13,
        16
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        13,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        13,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        13,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        13,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        13,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        14
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        14,
        15
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        14,
        16
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        14,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        14,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        14,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        14,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        14,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        15
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        15,
        16
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        15,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        15,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        15,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        15,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        15,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        16
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        12,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        14
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        14,
        15
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        14,
        16
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        14,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        14,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        14,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        14,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        14,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        15
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        15,
        16
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        15,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        15,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        15,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        15,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        15,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        16
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        15
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        15,
        16
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        15,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        15,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        15,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        15,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        15,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        16
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        14,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        16
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        15,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        16
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        16,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        16,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        16,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        16,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        16,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        16,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        16,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        16,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        16,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        16,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        18
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        18,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        18,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        18,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        18,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        18,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        18,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        19,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        19,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        20
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        12,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        16,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        16,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        16,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        16,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        16,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        16,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        16,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        16,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        16,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        16,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        18,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        18,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        18,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        18,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        18,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        18,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        19,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        19,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        13,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        14,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        15,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        16
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        16,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        16,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        16,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        16,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        16,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        16,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        16,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        16,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        16,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        16,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        16,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        16,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        16,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        16,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        16,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        18
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        18,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        18,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        18,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        18,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        18,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        18,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        18,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        19
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        19,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        19,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        19,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        19,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        19,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        20
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        21
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        22
      ],
      "mod_code": [
        "cout << a << \" \" << abs ( - x + ( y ) ) << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        15
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        16
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        18
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        19
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        20
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        16
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        18
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        19
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        20
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        18
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        18,
        19
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        18,
        20
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        18,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        18,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        19
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        19,
        20
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        19,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        19,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        20
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        20,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        20,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        21,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        16
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        18
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        19
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        20
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        18
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        19
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        20
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        18,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        19
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        20
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        20
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        20,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        20,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        21,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        15,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        16,
        18
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        16,
        18,
        19
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        16,
        18,
        20
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        16,
        18,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        16,
        18,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        16,
        19
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        20
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        16,
        20
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        16,
        20,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        16,
        20,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        16,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        16,
        21,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        16,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        18
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        18,
        19
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        18,
        19,
        20
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 20,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        19,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        18,
        19,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        18,
        20
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        18,
        20,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        18,
        20,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        18,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        18,
        21,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        18,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        19
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        19,
        20
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        19,
        20,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        19,
        20,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        19,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        19,
        21,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        19,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        20
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        20,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        20,
        21,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        20,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        21
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        21,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        22
      ],
      "mod_code": [
        "else if ( x > y && y < y )",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        18,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        18,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        18,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        18,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        18,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        18,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        19,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        19,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        15,
        16
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        18
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        18,
        19
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        18,
        20
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        18,
        21
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        18,
        22
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        19
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        19,
        20
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        19,
        21
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        19,
        22
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        20
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        21
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        22
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        21
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        21,
        22
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        22
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        18
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        18,
        19
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        18,
        19,
        20
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        18,
        19,
        21
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        18,
        19,
        22
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        18,
        20
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        18,
        20,
        21
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        18,
        20,
        22
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        18,
        21
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        18,
        21,
        22
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        18,
        22
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        19
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        19,
        20
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        19,
        20,
        21
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        19,
        21
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        19,
        21,
        22
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        19,
        22
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        20
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        20,
        21
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        20,
        22
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        21
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        21,
        22
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        22
      ],
      "mod_code": [
        "cout << a << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        18,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        18,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        18,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        18,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        18,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        18,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        18,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        18,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        18,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        18,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        19,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        19,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        18,
        19
      ],
      "mod_code": [
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        19,
        20
      ],
      "mod_code": [
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 20,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        20,
        21
      ],
      "mod_code": [
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 20,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        21
      ],
      "mod_code": [
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        19,
        21,
        22
      ],
      "mod_code": [
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        19,
        22
      ],
      "mod_code": [
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        20
      ],
      "mod_code": [
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        20,
        21
      ],
      "mod_code": [
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        20,
        22
      ],
      "mod_code": [
        "cout << x + y << \" \" ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        21
      ],
      "mod_code": [
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        21,
        22
      ],
      "mod_code": [
        "cout << x + y << \" \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        22
      ],
      "mod_code": [
        "cout << x + y << \" \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        19,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        19,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        19,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        20,
        21
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        20,
        22
      ],
      "mod_code": [
        "cout << a << \" \\n \" ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << a << \" \" << ( x + ( - y ) ) << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    }
  ]
}