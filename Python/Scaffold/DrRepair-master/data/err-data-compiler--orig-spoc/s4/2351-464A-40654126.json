{
  "meta": {
    "index": 2351,
    "hitid": "3SMIWMMK61ZEZHCFIIMHNUKD2X5WUC",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "464A",
    "subid": "40654126"
  },
  "lines": [
    {
      "line": 0,
      "text": "integers = n , p",
      "code": "int n , p ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "integers = safe ( char c , int i )",
      "code": "bool safe ( char c , int i )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "if is not equal to s [ i - 2 ] then do andand ( i - 1 < 0 or c",
      "code": "if ( ( i - 2 < 0 || c != s [ i - 2 ] ) && ( i - 1 < 0 || c != s [ i - 1 ] ) ) return 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "integers = calc ( int l )",
      "code": "bool calc ( int l )",
      "indent": 0
    },
    {
      "line": 7,
      "text": "for i = l + 1 to less than n do the following",
      "code": "for ( int i = l + 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for j = 0 to less than or equal to p do the following",
      "code": "for ( int j = 0 ; j <= p ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if j is p then do return",
      "code": "if ( j == p ) return 0 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set char c to a + j",
      "code": "char c = ' a ' + j ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if safe is true",
      "code": "if ( safe ( c , i ) )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "set s [ i ] to c",
      "code": "s [ i ] = c ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "return 1",
      "code": "return 1 ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 19,
      "text": "integers = ok ( int i )",
      "code": "bool ok ( int i )",
      "indent": 0
    },
    {
      "line": 20,
      "text": "for b = 1 to less than p do the following",
      "code": "for ( int b = 1 ; b < p ; b ++ )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "set char c to s [ i ] + b",
      "code": "char c = s [ i ] + b ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "if c is greater than or equal to a + p then do return 0",
      "code": "if ( c >= ' a ' + p ) return 0 ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "if is not equal to s [ i - 1 ] or i - 1 < 0 then do andand ( c",
      "code": "if ( ( c != s [ i - 1 ] || i - 1 < 0 ) && ( c != s [ i - 2 ] || i - 2 < 0 ) )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "set char tem to s [ i ]",
      "code": "char tem = s [ i ] ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "set s [ i ] to c",
      "code": "s [ i ] = c ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "if calc is true",
      "code": "if ( calc ( i ) )",
      "indent": 3
    },
    {
      "line": 27,
      "text": "return 1",
      "code": "return 1 ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 29,
      "text": "set s [ i ] to tem",
      "code": "s [ i ] = tem ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 34,
      "text": "create solve function",
      "code": "void solve ( )",
      "indent": 0
    },
    {
      "line": 35,
      "text": "for i = n - 1 to greater than or equal to 0 do the following",
      "code": "for ( int i = n - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 36,
      "text": "if ok is true",
      "code": "if ( ok ( i ) )",
      "indent": 2
    },
    {
      "line": 37,
      "text": "output s",
      "code": "cout << s << endl ;",
      "indent": 3
    },
    {
      "line": 38,
      "text": "exit function",
      "code": "exit ( 0 ) ;",
      "indent": 3
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 41,
      "text": "output NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 1
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 44,
      "text": "read n , p , s",
      "code": "cin >> n >> p >> s ;",
      "indent": 1
    },
    {
      "line": 45,
      "text": "execute solve",
      "code": "solve ( ) ;",
      "indent": 1
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 47,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( j == p ) return ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "char c = a + j ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "int ok ( int i ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "if ( c >= a + p ) return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 23,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        45
      ],
      "mod_code": [
        "while ( solve ( ) )"
      ],
      "err_line": 45,
      "err_msg": "could not convert ‘solve()’ from ‘void’ to ‘bool’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int safe ( char c , int i ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) andand ( i - 1 < 0 || c ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int calc ( int l ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j <= p ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( j == p ) { return ; }"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "char c = ( a + j ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( safe == true )"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "if ( c >= ( a + p ) ) return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "if ( i != s [ i - 1 ] || i != 0 ) { andand ( c [ i - 1 ] ) ; }"
      ],
      "err_line": 23,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "char tem [ i ] = s [ i ] ;"
      ],
      "err_line": 24,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "if ( calc == true )"
      ],
      "err_line": 26,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 28,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 35,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "if ( ok == true )"
      ],
      "err_line": 36,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        10
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "char c = a + j ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        10,
        19
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "int ok ( int i ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        10,
        22
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        10,
        23
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        10,
        26
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "if ( calc )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        10,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        10,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        19
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "int ok ( int i ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        19,
        22
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        19,
        23
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        19,
        26
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "int ok ( int i ) ;",
        "if ( calc )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        19,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "int ok ( int i ) ;",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        19,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "int ok ( int i ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        22
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "if ( c >= a + p ) return 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        22,
        23
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        22,
        26
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        22,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        22,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "if ( c >= a + p ) return 0 ;",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        23
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        23,
        26
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        23,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        23,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        26
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "if ( calc )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        26,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        26,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        36,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( j == p ) return ;",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        19
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "int ok ( int i ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        19,
        22
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        19,
        23
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        19,
        26
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( calc )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        19,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        19,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        22
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        22,
        23
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        22,
        26
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        22,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        22,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        23
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        23,
        26
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        23,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        23,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        26
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "if ( calc )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        26,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        26,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        36,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "char c = a + j ;",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "int ok ( int i ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19,
        22
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19,
        22,
        23
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19,
        22,
        26
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19,
        22,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19,
        22,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19,
        23
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19,
        23,
        26
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19,
        23,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19,
        23,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19,
        26
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "int ok ( int i ) ;",
        "if ( calc )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19,
        26,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "int ok ( int i ) ;",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19,
        26,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "int ok ( int i ) ;",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "int ok ( int i ) ;",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19,
        36,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "int ok ( int i ) ;",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "int ok ( int i ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        22
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( c >= a + p ) return 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        22,
        23
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        22,
        23,
        26
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        22,
        23,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        22,
        23,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        22,
        26
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        22,
        26,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        22,
        26,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        22,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( c >= a + p ) return 0 ;",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        22,
        36,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( c >= a + p ) return 0 ;",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        22,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( c >= a + p ) return 0 ;",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        23
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        23,
        26
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        23,
        26,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        23,
        26,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        23,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        23,
        36,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        23,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        26
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( calc )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        26,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        26,
        36,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( calc )",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        26,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        36
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( ok )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        36,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        45
      ],
      "mod_code": [
        "if ( ! s [ i - 2 ] ) { andand ( i - 1 < 0 || c ) ; }",
        "while ( solve ( ) )"
      ],
      "err_line": 3,
      "err_msg": "‘andand’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        19
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "int ok ( int i ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        19,
        22
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        19,
        23
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        19,
        26
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( calc )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        19,
        36
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( ok )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        19,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        22
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        22,
        23
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        22,
        26
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        22,
        36
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( ok )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        22,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        23
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        23,
        26
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        23,
        36
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        23,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        26
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "if ( calc )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        26,
        36
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        26,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        36
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "if ( ok )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        36,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "char c = a + j ;",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        19
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "int ok ( int i ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        19,
        22
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        19,
        22,
        23
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        19,
        22,
        26
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        19,
        22,
        36
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( ok )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        19,
        22,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        19,
        23
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        19,
        23,
        26
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        19,
        23,
        36
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        19,
        23,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        19,
        26
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "int ok ( int i ) ;",
        "if ( calc )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        19,
        26,
        36
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "int ok ( int i ) ;",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        19,
        26,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "int ok ( int i ) ;",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        19,
        36
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "int ok ( int i ) ;",
        "if ( ok )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        19,
        36,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "int ok ( int i ) ;",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        19,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "int ok ( int i ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        22
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( c >= a + p ) return 0 ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        22,
        23
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        22,
        23,
        26
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        22,
        23,
        36
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        22,
        23,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        22,
        26
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        22,
        26,
        36
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        22,
        26,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        22,
        36
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( ok )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        22,
        36,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        22,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( c >= a + p ) return 0 ;",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        23
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        23,
        26
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        23,
        26,
        36
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        23,
        26,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        23,
        36
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        23,
        36,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        23,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        26
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( calc )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        26,
        36
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        26,
        36,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( calc )",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        26,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        36
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( ok )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        36,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        45
      ],
      "mod_code": [
        "if ( j == p ) return ;",
        "while ( solve ( ) )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "char c = a + j ;",
        "int ok ( int i ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        22
      ],
      "mod_code": [
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        22,
        23
      ],
      "mod_code": [
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        22,
        26
      ],
      "mod_code": [
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        22,
        36
      ],
      "mod_code": [
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( ok )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        22,
        45
      ],
      "mod_code": [
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "while ( solve ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        23
      ],
      "mod_code": [
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        23,
        26
      ],
      "mod_code": [
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        23,
        36
      ],
      "mod_code": [
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        23,
        45
      ],
      "mod_code": [
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        26
      ],
      "mod_code": [
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( calc )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        26,
        36
      ],
      "mod_code": [
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        26,
        45
      ],
      "mod_code": [
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        36
      ],
      "mod_code": [
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( ok )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        36,
        45
      ],
      "mod_code": [
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        45
      ],
      "mod_code": [
        "char c = a + j ;",
        "int ok ( int i ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        22
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        22,
        23
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        22,
        23,
        26
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        22,
        23,
        36
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        22,
        23,
        45
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        22,
        26
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        22,
        26,
        36
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        22,
        26,
        45
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        22,
        36
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( ok )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        22,
        36,
        45
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        22,
        45
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( c >= a + p ) return 0 ;",
        "while ( solve ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        23
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        23,
        26
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        23,
        26,
        36
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        23,
        26,
        45
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        23,
        36
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        23,
        36,
        45
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        23,
        45
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        26
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( calc )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        26,
        36
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        26,
        36,
        45
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( calc )",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        26,
        45
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        36
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( ok )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        36,
        45
      ],
      "mod_code": [
        "char c = a + j ;",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        45
      ],
      "mod_code": [
        "char c = a + j ;",
        "while ( solve ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        22
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        22,
        23
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        22,
        23,
        26
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        22,
        23,
        36
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        22,
        23,
        45
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        22,
        26
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        22,
        26,
        36
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        22,
        26,
        45
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        22,
        36
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( ok )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        22,
        36,
        45
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        22,
        45
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( c >= a + p ) return 0 ;",
        "while ( solve ( ) )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        23
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        23,
        26
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        23,
        26,
        36
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        23,
        26,
        45
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        23,
        36
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        23,
        36,
        45
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        23,
        45
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        26
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( calc )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        26,
        36
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        26,
        36,
        45
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( calc )",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        26,
        45
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        36
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( ok )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        36,
        45
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        45
      ],
      "mod_code": [
        "int ok ( int i ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        23
      ],
      "mod_code": [
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        26
      ],
      "mod_code": [
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        26,
        36
      ],
      "mod_code": [
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        26,
        45
      ],
      "mod_code": [
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        36
      ],
      "mod_code": [
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        36,
        45
      ],
      "mod_code": [
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        45
      ],
      "mod_code": [
        "if ( c >= a + p ) return 0 ;",
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        26
      ],
      "mod_code": [
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        26,
        36
      ],
      "mod_code": [
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        26,
        36,
        45
      ],
      "mod_code": [
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        26,
        45
      ],
      "mod_code": [
        "if ( c >= a + p ) return 0 ;",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        36
      ],
      "mod_code": [
        "if ( c >= a + p ) return 0 ;",
        "if ( ok )"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        36,
        45
      ],
      "mod_code": [
        "if ( c >= a + p ) return 0 ;",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        45
      ],
      "mod_code": [
        "if ( c >= a + p ) return 0 ;",
        "while ( solve ( ) )"
      ],
      "err_line": 22,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        26
      ],
      "mod_code": [
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )"
      ],
      "err_line": 23,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        23,
        26,
        36
      ],
      "mod_code": [
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )",
        "if ( ok )"
      ],
      "err_line": 23,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        23,
        26,
        36,
        45
      ],
      "mod_code": [
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 23,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        23,
        26,
        45
      ],
      "mod_code": [
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 23,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        23,
        36
      ],
      "mod_code": [
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )"
      ],
      "err_line": 23,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        23,
        36,
        45
      ],
      "mod_code": [
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 23,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        23,
        45
      ],
      "mod_code": [
        "if ( i != s [ i - 1 ] || i != 0 ) andand ( c [ i - 1 ] ) ;",
        "while ( solve ( ) )"
      ],
      "err_line": 23,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        26,
        36,
        45
      ],
      "mod_code": [
        "if ( calc )",
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 45,
      "err_msg": "could not convert ‘solve()’ from ‘void’ to ‘bool’"
    },
    {
      "mod_line": [
        26,
        45
      ],
      "mod_code": [
        "if ( calc )",
        "while ( solve ( ) )"
      ],
      "err_line": 45,
      "err_msg": "could not convert ‘solve()’ from ‘void’ to ‘bool’"
    },
    {
      "mod_line": [
        36,
        45
      ],
      "mod_code": [
        "if ( ok )",
        "while ( solve ( ) )"
      ],
      "err_line": 45,
      "err_msg": "could not convert ‘solve()’ from ‘void’ to ‘bool’"
    }
  ]
}