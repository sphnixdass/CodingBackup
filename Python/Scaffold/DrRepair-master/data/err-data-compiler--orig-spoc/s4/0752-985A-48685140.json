{
  "meta": {
    "index": 752,
    "hitid": "3CO05SML7VZTBZJDLHYRBOOPUTP0RD",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "985A",
    "subid": "48685140"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , x = integer",
      "code": "int n , x ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "A = integer vector of size n / 2",
      "code": "vector < int > A ( n / 2 ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n / 2 exclusive , then read A [ i ]",
      "code": "for ( int i = 0 ; i < ( n / 2 ) ; i ++ ) { cin >> A [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "sort A in ascending order",
      "code": "sort ( A . begin ( ) , A . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "res1 = integer = 0 , res2 = integer = 0",
      "code": "int res1 = 0 , res2 = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n / 2 exclusive",
      "code": "for ( int i = 0 ; i < n / 2 ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "res1 = res1 + result of the absolute value of A [ i ] - ( i * 2 + 1 )",
      "code": "res1 += abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "res2 = res2 + result of the absolute value of A [ i ] - ( i * 2 + 1 )",
      "code": "res2 += abs ( A [ i ] - ( i * 2 + 2 ) ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print the lower number between res1 and res2",
      "code": "cout << min ( res1 , res2 ) << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "sort ( A , A + n ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << * max_element ( res1 , res2 ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << * res1 ( res1 , res2 ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘res1’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "sort ( A , A + n ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        5,
        8
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "sort ( A , A + n ) ;",
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        5,
        8,
        9
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "sort ( A , A + n ) ;",
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        5,
        8,
        11
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "sort ( A , A + n ) ;",
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        5,
        8,
        7
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "sort ( A , A + n ) ;",
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        5,
        9
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "sort ( A , A + n ) ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        5,
        9,
        11
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "sort ( A , A + n ) ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        5,
        9,
        7
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "sort ( A , A + n ) ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        5,
        11
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "sort ( A , A + n ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        5,
        11,
        7
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "sort ( A , A + n ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        5,
        7
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "sort ( A , A + n ) ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        8,
        9
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        8,
        9,
        11
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        8,
        9,
        7
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        8,
        11
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        8,
        11,
        7
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        8,
        7
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        9,
        11
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        9,
        11,
        7
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        9,
        7
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "cout << * max_element ( res1 , res2 ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        11,
        7
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "cout << * max_element ( res1 , res2 ) << endl ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "vector < int > A ( n ) / 2 ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘,’ or ‘;’ before ‘/’ token"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "sort ( A , A + n ) ;",
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        8,
        9
      ],
      "mod_code": [
        "sort ( A , A + n ) ;",
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        11
      ],
      "mod_code": [
        "sort ( A , A + n ) ;",
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        7
      ],
      "mod_code": [
        "sort ( A , A + n ) ;",
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        8,
        11
      ],
      "mod_code": [
        "sort ( A , A + n ) ;",
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        7
      ],
      "mod_code": [
        "sort ( A , A + n ) ;",
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        8,
        7
      ],
      "mod_code": [
        "sort ( A , A + n ) ;",
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "sort ( A , A + n ) ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        9,
        11
      ],
      "mod_code": [
        "sort ( A , A + n ) ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        7
      ],
      "mod_code": [
        "sort ( A , A + n ) ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        9,
        7
      ],
      "mod_code": [
        "sort ( A , A + n ) ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "sort ( A , A + n ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        11,
        7
      ],
      "mod_code": [
        "sort ( A , A + n ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "sort ( A , A + n ) ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11
      ],
      "mod_code": [
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        7
      ],
      "mod_code": [
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        9,
        7
      ],
      "mod_code": [
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        11,
        7
      ],
      "mod_code": [
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "res1 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9,
        11,
        7
      ],
      "mod_code": [
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "cout << * max_element ( res1 , res2 ) << endl ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "res2 += abs ( abs ( A [ i ] - ( i * 2 + 1 ) ) ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "cout << * max_element ( res1 , res2 ) << endl ;",
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}