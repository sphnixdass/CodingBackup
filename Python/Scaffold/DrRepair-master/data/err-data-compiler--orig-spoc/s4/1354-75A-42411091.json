{
  "meta": {
    "index": 1354,
    "hitid": "3JTPR5MTZS66J2SJS3V6R7Y2FMC5K5",
    "workerid": "AIWEXPJAU66D9",
    "probid": "75A",
    "subid": "42411091"
  },
  "lines": [
    {
      "line": 0,
      "text": "in the function remv with long long argument n that returns long long",
      "code": "long long remv ( long long n )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "temp , sum , div and mod are long longs where sum = 0 and temp = 1",
      "code": "long long temp = 1 , sum = 0 , div , mod ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while n is greater than 0",
      "code": "while ( n > 0 )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "mod = n % 10",
      "code": "mod = n % 10 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "n = n / 10",
      "code": "n = n / 10 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if mod is greater than 0",
      "code": "if ( mod > 0 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increase sum by temp * mod",
      "code": "sum = sum + ( temp * mod ) ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "multiply temp by 10",
      "code": "temp = temp * 10 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "return sum",
      "code": "return sum ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 13,
      "text": "declare long longs a , b , c , n , a1 , b1 and c1",
      "code": "long long a , b , c , n , a1 , b1 , c1 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "read b",
      "code": "cin >> b ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "set c to a + b",
      "code": "c = a + b ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "assign value of remv ( a ) to a1",
      "code": "a1 = remv ( a ) ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "assign value of remv ( b ) to b1",
      "code": "b1 = remv ( b ) ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "assign value of remv ( c ) to c1",
      "code": "c1 = remv ( c ) ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if a1 + b1 = c1",
      "code": "if ( a1 + b1 == c1 )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long remv ( long long n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "gets ( a ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "a1 = remv ;"
      ],
      "err_line": 17,
      "err_msg": "invalid conversion from ‘long long int (*)(long long int)’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "b1 = remv ;"
      ],
      "err_line": 18,
      "err_msg": "invalid conversion from ‘long long int (*)(long long int)’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "c1 = remv ;"
      ],
      "err_line": 19,
      "err_msg": "invalid conversion from ‘long long int (*)(long long int)’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        1,
        16,
        5,
        14
      ],
      "mod_code": [
        "long long temp , sum = 0 , div = 0 , mod ;",
        "c += b ;",
        "if ( mod >= 0 )",
        "gets ( a ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        16,
        5,
        22
      ],
      "mod_code": [
        "long long temp , sum = 0 , div = 0 , mod ;",
        "c += b ;",
        "if ( mod >= 0 )",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        1,
        16,
        14
      ],
      "mod_code": [
        "long long temp , sum = 0 , div = 0 , mod ;",
        "c += b ;",
        "gets ( a ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        16,
        14,
        22
      ],
      "mod_code": [
        "long long temp , sum = 0 , div = 0 , mod ;",
        "c += b ;",
        "gets ( a ) ;",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        16,
        14,
        3
      ],
      "mod_code": [
        "long long temp , sum = 0 , div = 0 , mod ;",
        "c += b ;",
        "gets ( a ) ;",
        "mod += 10 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        16,
        22
      ],
      "mod_code": [
        "long long temp , sum = 0 , div = 0 , mod ;",
        "c += b ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        1,
        16,
        22,
        3
      ],
      "mod_code": [
        "long long temp , sum = 0 , div = 0 , mod ;",
        "c += b ;",
        "else else",
        "mod += 10 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        1,
        5,
        14
      ],
      "mod_code": [
        "long long temp , sum = 0 , div = 0 , mod ;",
        "if ( mod >= 0 )",
        "gets ( a ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        5,
        14,
        22
      ],
      "mod_code": [
        "long long temp , sum = 0 , div = 0 , mod ;",
        "if ( mod >= 0 )",
        "gets ( a ) ;",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        5,
        14,
        3
      ],
      "mod_code": [
        "long long temp , sum = 0 , div = 0 , mod ;",
        "if ( mod >= 0 )",
        "gets ( a ) ;",
        "mod += 10 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        5,
        22
      ],
      "mod_code": [
        "long long temp , sum = 0 , div = 0 , mod ;",
        "if ( mod >= 0 )",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        1,
        5,
        22,
        3
      ],
      "mod_code": [
        "long long temp , sum = 0 , div = 0 , mod ;",
        "if ( mod >= 0 )",
        "else else",
        "mod += 10 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "long long temp , sum = 0 , div = 0 , mod ;",
        "gets ( a ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        14,
        22
      ],
      "mod_code": [
        "long long temp , sum = 0 , div = 0 , mod ;",
        "gets ( a ) ;",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        14,
        22,
        3
      ],
      "mod_code": [
        "long long temp , sum = 0 , div = 0 , mod ;",
        "gets ( a ) ;",
        "else else",
        "mod += 10 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        14,
        3
      ],
      "mod_code": [
        "long long temp , sum = 0 , div = 0 , mod ;",
        "gets ( a ) ;",
        "mod += 10 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        22
      ],
      "mod_code": [
        "long long temp , sum = 0 , div = 0 , mod ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        1,
        22,
        3
      ],
      "mod_code": [
        "long long temp , sum = 0 , div = 0 , mod ;",
        "else else",
        "mod += 10 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        5,
        14
      ],
      "mod_code": [
        "c += b ;",
        "if ( mod >= 0 )",
        "gets ( a ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        5,
        14,
        22
      ],
      "mod_code": [
        "c += b ;",
        "if ( mod >= 0 )",
        "gets ( a ) ;",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        5,
        14,
        3
      ],
      "mod_code": [
        "c += b ;",
        "if ( mod >= 0 )",
        "gets ( a ) ;",
        "mod += 10 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        5,
        22
      ],
      "mod_code": [
        "c += b ;",
        "if ( mod >= 0 )",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        5,
        22,
        3
      ],
      "mod_code": [
        "c += b ;",
        "if ( mod >= 0 )",
        "else else",
        "mod += 10 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        14
      ],
      "mod_code": [
        "c += b ;",
        "gets ( a ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        14,
        22
      ],
      "mod_code": [
        "c += b ;",
        "gets ( a ) ;",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        14,
        22,
        3
      ],
      "mod_code": [
        "c += b ;",
        "gets ( a ) ;",
        "else else",
        "mod += 10 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        14,
        3
      ],
      "mod_code": [
        "c += b ;",
        "gets ( a ) ;",
        "mod += 10 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        22
      ],
      "mod_code": [
        "c += b ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        22,
        3
      ],
      "mod_code": [
        "c += b ;",
        "else else",
        "mod += 10 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "if ( mod >= 0 )",
        "gets ( a ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        14,
        22
      ],
      "mod_code": [
        "if ( mod >= 0 )",
        "gets ( a ) ;",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        14,
        22,
        3
      ],
      "mod_code": [
        "if ( mod >= 0 )",
        "gets ( a ) ;",
        "else else",
        "mod += 10 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        14,
        3
      ],
      "mod_code": [
        "if ( mod >= 0 )",
        "gets ( a ) ;",
        "mod += 10 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        22
      ],
      "mod_code": [
        "if ( mod >= 0 )",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        22,
        3
      ],
      "mod_code": [
        "if ( mod >= 0 )",
        "else else",
        "mod += 10 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        22
      ],
      "mod_code": [
        "gets ( a ) ;",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        22,
        3
      ],
      "mod_code": [
        "gets ( a ) ;",
        "else else",
        "mod += 10 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "gets ( a ) ;",
        "mod += 10 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        3
      ],
      "mod_code": [
        "else else",
        "mod += 10 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}