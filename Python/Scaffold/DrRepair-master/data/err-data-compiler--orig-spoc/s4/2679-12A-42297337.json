{
  "meta": {
    "index": 2679,
    "hitid": "3IWA71V4TIA8M6R4W5K097K47BKX6Q",
    "workerid": "A1APYLD4DUK33J",
    "probid": "12A",
    "subid": "42297337"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers i , j , k , l , m , n , mark with mark = 0",
      "code": "int i , j , k , l , m , n , mark = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create character array a with size 17",
      "code": "char a [ 17 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to 9 inclusive , read a [ i ]",
      "code": "for ( i = 1 ; i <= 9 ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to 9 inclusive",
      "code": "for ( i = 1 ; i <= 9 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if a [ i ] is ' X '",
      "code": "if ( a [ i ] == ' X ' )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if a [ 2 * 5 - i ] is not ' X '",
      "code": "if ( a [ 2 * 5 - i ] != ' X ' )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "set mark to 1",
      "code": "mark = 1 ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if mark is 0 , print \" YES \" print newline",
      "code": "if ( mark == 0 ) cout << \" YES \" << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int i , j , k , l , m , n , mark , mark ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mark’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char arr [ 17 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "char arr [ 17 ] ;",
        "if ( a [ 2 * 5 - i ] == ' X ' )"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        9
      ],
      "mod_code": [
        "char arr [ 17 ] ;",
        "if ( a [ 2 * 5 - i ] == ' X ' )",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        9,
        1
      ],
      "mod_code": [
        "char arr [ 17 ] ;",
        "if ( a [ 2 * 5 - i ] == ' X ' )",
        "break break ;",
        "int i , j , k , l , m , n , mark , mark ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mark’"
    },
    {
      "mod_line": [
        2,
        6,
        1
      ],
      "mod_code": [
        "char arr [ 17 ] ;",
        "if ( a [ 2 * 5 - i ] == ' X ' )",
        "int i , j , k , l , m , n , mark , mark ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mark’"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "char arr [ 17 ] ;",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9,
        1
      ],
      "mod_code": [
        "char arr [ 17 ] ;",
        "break break ;",
        "int i , j , k , l , m , n , mark , mark ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mark’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "char arr [ 17 ] ;",
        "int i , j , k , l , m , n , mark , mark ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mark’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "if ( a [ 2 * 5 - i ] == ' X ' )",
        "break break ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        9,
        1
      ],
      "mod_code": [
        "if ( a [ 2 * 5 - i ] == ' X ' )",
        "break break ;",
        "int i , j , k , l , m , n , mark , mark ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mark’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "if ( a [ 2 * 5 - i ] == ' X ' )",
        "int i , j , k , l , m , n , mark , mark ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mark’"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "break break ;",
        "int i , j , k , l , m , n , mark , mark ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mark’"
    }
  ]
}