{
  "meta": {
    "index": 2642,
    "hitid": "3G5RUKN2ECXQSVFYS603VFK8VYIN97",
    "workerid": "AIWEXPJAU66D9",
    "probid": "12A",
    "subid": "44813597"
  },
  "lines": [
    {
      "line": 0,
      "text": "method choose which takes long long integers n and m and returns long long integer",
      "code": "long long int choose ( long long int n , long long int m )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "define long long integer ans = 0",
      "code": "long long int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "define long long integer num = 1",
      "code": "long long int num = 1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "define long long integer den = 1",
      "code": "long long int den = 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to m exclusive",
      "code": "for ( long long int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "multiply num by ( n - i )",
      "code": "num *= ( n - i ) ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "num = num / ( i + 1 )",
      "code": "num = num / ( i + 1 ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return num",
      "code": "return num ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "boolean function isPrime with integer argument n",
      "code": "bool isPrime ( int n )",
      "indent": 0
    },
    {
      "line": 11,
      "text": "return false if n < = 1",
      "code": "if ( n <= 1 ) return false ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "return true if n < = 3",
      "code": "if ( n <= 3 ) return true ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if n is even or n % 3 = 0 return false",
      "code": "if ( n % 2 == 0 || n % 3 == 0 ) return false ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for integer i = 5 to i * i < = n , increment i by 6",
      "code": "for ( int i = 5 ; i * i <= n ; i = i + 6 )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if n % i = 0 or n % ( i + 2 ) is equal to 0 return false",
      "code": "if ( n % i == 0 || n % ( i + 2 ) == 0 ) return false ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "return true",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 19,
      "text": "long long integer method numzero with long long integer argument p",
      "code": "long long int numzero ( long long int p )",
      "indent": 0
    },
    {
      "line": 20,
      "text": "let int i , sum and temp be long long ints with i and sum = 0",
      "code": "long long int i = 0 , sum = 0 , temp ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "while p is greater than 0",
      "code": "while ( p > 0 )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "set temp to the remainder of a division of p by 10",
      "code": "temp = p % 10 ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "if temp is equal to 0 increment sum",
      "code": "if ( temp == 0 ) { sum ++ ; }",
      "indent": 2
    },
    {
      "line": 24,
      "text": "p = p / 10",
      "code": "p = p / 10 ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "return p",
      "code": "return p ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 28,
      "text": "in method gcd with long long int arguments a and b",
      "code": "long long int gcd ( long long int a , long long int b )",
      "indent": 0
    },
    {
      "line": 29,
      "text": "if a is equal to 0",
      "code": "if ( a == 0 )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "return b",
      "code": "return b ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 32,
      "text": "return gcd of b % a and a",
      "code": "return gcd ( b % a , a ) ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 36,
      "text": "create long longs integers i , j , k , n and m",
      "code": "long long int i , j , k , n , m ;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "a = 2d array of characters with size 3 by 3",
      "code": "char a [ 3 ] [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 39,
      "text": "for j = 0 to 3 exclusive read a [ i ] [ j ]",
      "code": "for ( j = 0 ; j < 3 ; j ++ ) { cin >> a [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 41,
      "text": "if a [ 0 ] [ 0 ] ! = a [ 2 ] [ 2 ]",
      "code": "if ( a [ 0 ] [ 0 ] != a [ 2 ] [ 2 ] )",
      "indent": 1
    },
    {
      "line": 42,
      "text": "print \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 43,
      "text": "else if a [ 0 ] [ 1 ] ! = a [ 2 ] [ 1 ]",
      "code": "else if ( a [ 0 ] [ 1 ] != a [ 2 ] [ 1 ] )",
      "indent": 1
    },
    {
      "line": 44,
      "text": "print \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 45,
      "text": "else if a [ 0 ] [ 2 ] ! = a [ 2 ] [ 0 ]",
      "code": "else if ( a [ 0 ] [ 2 ] != a [ 2 ] [ 0 ] )",
      "indent": 1
    },
    {
      "line": 46,
      "text": "print \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 47,
      "text": "else if a [ 1 ] [ 0 ] ! = a [ 1 ] [ 2 ]",
      "code": "else if ( a [ 1 ] [ 0 ] != a [ 1 ] [ 2 ] )",
      "indent": 1
    },
    {
      "line": 48,
      "text": "print \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 49,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 50,
      "text": "print \" YES \\ n \"",
      "code": "cout << \" YES\\n \" ;",
      "indent": 2
    },
    {
      "line": 51,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 52,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 53,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "return gcd ( b % a % a ) ;"
      ],
      "err_line": 32,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "char a [ 3 ] ;"
      ],
      "err_line": 39,
      "err_msg": "invalid types ‘char[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "if ( a [ 0 ] [ 0 ] != a [ 2 ] )"
      ],
      "err_line": 41,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "else if ( a [ 0 ] [ 1 ] != a [ 2 ] )"
      ],
      "err_line": 43,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        50,
        4
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        50,
        4,
        45
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        50,
        4,
        45,
        32
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "return gcd ( b % a % a ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        50,
        4,
        45,
        10
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        50,
        4,
        45,
        37
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "char a [ 3 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        50,
        4,
        32
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "return gcd ( b % a % a ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        50,
        4,
        32,
        10
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "return gcd ( b % a % a ) ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        50,
        4,
        32,
        37
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "return gcd ( b % a % a ) ;",
        "char a [ 3 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        50,
        4,
        10
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        50,
        4,
        10,
        37
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "bool isPrime ( int n ) ;",
        "char a [ 3 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        50,
        4,
        37
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "char a [ 3 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        50,
        45,
        32
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "return gcd ( b % a % a ) ;"
      ],
      "err_line": 32,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        50,
        45,
        32,
        10
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "return gcd ( b % a % a ) ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        50,
        45,
        32,
        37
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "return gcd ( b % a % a ) ;",
        "char a [ 3 ] ;"
      ],
      "err_line": 32,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        50,
        45,
        10
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        50,
        45,
        10,
        37
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "bool isPrime ( int n ) ;",
        "char a [ 3 ] ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        50,
        45,
        37
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "char a [ 3 ] ;"
      ],
      "err_line": 39,
      "err_msg": "invalid types ‘char[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        50,
        32
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "return gcd ( b % a % a ) ;"
      ],
      "err_line": 32,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        50,
        32,
        10
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "return gcd ( b % a % a ) ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        50,
        32,
        10,
        37
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "return gcd ( b % a % a ) ;",
        "bool isPrime ( int n ) ;",
        "char a [ 3 ] ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        50,
        32,
        37
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "return gcd ( b % a % a ) ;",
        "char a [ 3 ] ;"
      ],
      "err_line": 32,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        50,
        10
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        50,
        10,
        37
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "bool isPrime ( int n ) ;",
        "char a [ 3 ] ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        50,
        37
      ],
      "mod_code": [
        "puts ( \" YES\\n \" ) ;",
        "char a [ 3 ] ;"
      ],
      "err_line": 39,
      "err_msg": "invalid types ‘char[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        45
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        45,
        32
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "return gcd ( b % a % a ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        45,
        32,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "return gcd ( b % a % a ) ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        45,
        32,
        37
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "return gcd ( b % a % a ) ;",
        "char a [ 3 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        45,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        45,
        10,
        37
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "bool isPrime ( int n ) ;",
        "char a [ 3 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        45,
        37
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "char a [ 3 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        32
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "return gcd ( b % a % a ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        32,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "return gcd ( b % a % a ) ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        32,
        10,
        37
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "return gcd ( b % a % a ) ;",
        "bool isPrime ( int n ) ;",
        "char a [ 3 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        32,
        37
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "return gcd ( b % a % a ) ;",
        "char a [ 3 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        37
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "bool isPrime ( int n ) ;",
        "char a [ 3 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        37
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "char a [ 3 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        32
      ],
      "mod_code": [
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "return gcd ( b % a % a ) ;"
      ],
      "err_line": 32,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        45,
        32,
        10
      ],
      "mod_code": [
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "return gcd ( b % a % a ) ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        45,
        32,
        10,
        37
      ],
      "mod_code": [
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "return gcd ( b % a % a ) ;",
        "bool isPrime ( int n ) ;",
        "char a [ 3 ] ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        45,
        32,
        37
      ],
      "mod_code": [
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "return gcd ( b % a % a ) ;",
        "char a [ 3 ] ;"
      ],
      "err_line": 32,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        45,
        10
      ],
      "mod_code": [
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        45,
        10,
        37
      ],
      "mod_code": [
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "bool isPrime ( int n ) ;",
        "char a [ 3 ] ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        45,
        37
      ],
      "mod_code": [
        "else if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] )",
        "char a [ 3 ] ;"
      ],
      "err_line": 39,
      "err_msg": "invalid types ‘char[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        32,
        10
      ],
      "mod_code": [
        "return gcd ( b % a % a ) ;",
        "bool isPrime ( int n ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        32,
        10,
        37
      ],
      "mod_code": [
        "return gcd ( b % a % a ) ;",
        "bool isPrime ( int n ) ;",
        "char a [ 3 ] ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        32,
        37
      ],
      "mod_code": [
        "return gcd ( b % a % a ) ;",
        "char a [ 3 ] ;"
      ],
      "err_line": 32,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        10,
        37
      ],
      "mod_code": [
        "bool isPrime ( int n ) ;",
        "char a [ 3 ] ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}