{
  "meta": {
    "index": 2603,
    "hitid": "3RWB1RTQDJHQHB813T7HZ8USC9DP8X",
    "workerid": "AIWEXPJAU66D9",
    "probid": "906A",
    "subid": "38988338"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare char array s with 100010 elements",
      "code": "char s [ 100010 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare bool flag and an arrays of bools ok and exist with 1010 elements",
      "code": "bool flag , ok [ 1010 ] , exist [ 1010 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create int ans",
      "code": "int ans ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare int variable n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set flag to false",
      "code": "flag = false ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "assign 0 to ans",
      "code": "ans = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for integer i = ' a ' to ' z ' inclusive , change ok [ i ] to 1",
      "code": "for ( int i = ' a ' ; i <= ' z ' ; i ++ ) ok [ i ] = 1 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create integer num = 26",
      "code": "int num = 26 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "declare char variable c",
      "code": "char c ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "read c and s",
      "code": "cin >> c >> s ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if flag is true",
      "code": "if ( flag )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if c ! = ' . ' and i ! = n - 1 , increment ans",
      "code": "if ( c != ' . ' && i != n - 1 ) { ans ++ ; }",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if c = ' ! '",
      "code": "if ( c == ' ! ' )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "declare int len = length of s",
      "code": "int len = strlen ( s ) ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "set sizeof ( exist ) bytes at the pointer exist to 0",
      "code": "memset ( exist , 0 , sizeof ( exist ) ) ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "for j = 0 to len exclusive , set exist [ s [ j ] ] to 1",
      "code": "for ( int j = 0 ; j < len ; j ++ ) exist [ s [ j ] ] = 1 ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "for j from ' a ' to ' z ' inclusive",
      "code": "for ( int j = ' a ' ; j <= ' z ' ; j ++ )",
      "indent": 4
    },
    {
      "line": 21,
      "text": "if ok [ j ] is true and exist [ j ] is false",
      "code": "if ( ok [ j ] && ! exist [ j ] )",
      "indent": 5
    },
    {
      "line": 22,
      "text": "decrement num",
      "code": "num -- ;",
      "indent": 6
    },
    {
      "line": 23,
      "text": "assign 0 to ok [ j ]",
      "code": "ok [ j ] = 0 ;",
      "indent": 6
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 26,
      "text": "if num is equal to 1 , assign true to flag",
      "code": "if ( num == 1 ) flag = true ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "else if c is equal to ' . '",
      "code": "else if ( c == ' . ' )",
      "indent": 3
    },
    {
      "line": 28,
      "text": "create int len = length of s",
      "code": "int len = strlen ( s ) ;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "set sizeof ( exist ) bytes at the pointer exist to 0",
      "code": "memset ( exist , 0 , sizeof ( exist ) ) ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "for j = 0 to len exclusive , set exist [ s [ j ] ] to 1",
      "code": "for ( int j = 0 ; j < len ; j ++ ) exist [ s [ j ] ] = 1 ;",
      "indent": 4
    },
    {
      "line": 31,
      "text": "for j = ' a ' to ' z ' inclusive",
      "code": "for ( int j = ' a ' ; j <= ' z ' ; j ++ )",
      "indent": 4
    },
    {
      "line": 32,
      "text": "if ok [ j ] and exist [ j ] are both true",
      "code": "if ( ok [ j ] && exist [ j ] )",
      "indent": 5
    },
    {
      "line": 33,
      "text": "decrement num",
      "code": "num -- ;",
      "indent": 6
    },
    {
      "line": 34,
      "text": "set ok [ j ] to 0",
      "code": "ok [ j ] = 0 ;",
      "indent": 6
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 37,
      "text": "if num = 1 , assign true to flag",
      "code": "if ( num == 1 ) flag = true ;",
      "indent": 4
    },
    {
      "line": 38,
      "text": "else if c is equal to ' ? '",
      "code": "else if ( c == ' ? ' )",
      "indent": 3
    },
    {
      "line": 39,
      "text": "if ok [ s [ 0 ] ] is true",
      "code": "if ( ok [ s [ 0 ] ] )",
      "indent": 4
    },
    {
      "line": 40,
      "text": "decrement num by one",
      "code": "num -- ;",
      "indent": 5
    },
    {
      "line": 41,
      "text": "set value of ok [ s [ 0 ] ] to 0",
      "code": "ok [ s [ 0 ] ] = 0 ;",
      "indent": 5
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 43,
      "text": "if num is equal to 1 , set flag to true",
      "code": "if ( num == 1 ) flag = true ;",
      "indent": 4
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 47,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 48,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 49,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "int len = s . length ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "int len = s . length ( ) ;"
      ],
      "err_line": 28,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool flag , exist [ 1010 ] , exist [ 1010 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘bool exist [1010]’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int ans ans ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int a ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "num = 26 ;"
      ],
      "err_line": 9,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "char c variable ;"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘variable’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "c >> c >> s ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘char [100010]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "int len = s . size ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "memset ( exist , 0 ) ;"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( j = ' a ' ; j <= ' z ' ; j ++ )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "int len = s . size ( ) ;"
      ],
      "err_line": 28,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "memset ( exist , 0 ) ;"
      ],
      "err_line": 29,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "for ( j = ' a ' ; j <= ' z ' ; j ++ )"
      ],
      "err_line": 31,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        38
      ],
      "mod_code": [
        "else if c == ' ? ' )"
      ],
      "err_line": 38,
      "err_msg": "expected ‘(’ before ‘c’"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "ok [ s [ 0 ] ] ] = 0 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        17,
        28
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "int len = s . length ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        17,
        28,
        27
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "int len = s . length ( ) ;",
        "else if ( c == ' \\n ' )"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        17,
        28,
        27,
        2
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "int len = s . length ( ) ;",
        "else if ( c == ' \\n ' )",
        "int ans ans ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        17,
        28,
        27,
        23
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "int len = s . length ( ) ;",
        "else if ( c == ' \\n ' )",
        "ok [ j ] = ' 0 ' ;"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        17,
        28,
        27,
        38
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "int len = s . length ( ) ;",
        "else if ( c == ' \\n ' )",
        "else if c == ' ? ' )"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        17,
        28,
        2
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "int len = s . length ( ) ;",
        "int ans ans ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        17,
        28,
        2,
        23
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "int len = s . length ( ) ;",
        "int ans ans ;",
        "ok [ j ] = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        17,
        28,
        2,
        38
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "int len = s . length ( ) ;",
        "int ans ans ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        17,
        28,
        23
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "int len = s . length ( ) ;",
        "ok [ j ] = ' 0 ' ;"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        17,
        28,
        23,
        38
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "int len = s . length ( ) ;",
        "ok [ j ] = ' 0 ' ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        17,
        28,
        38
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "int len = s . length ( ) ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        17,
        27
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "else if ( c == ' \\n ' )"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        17,
        27,
        2
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "else if ( c == ' \\n ' )",
        "int ans ans ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        17,
        27,
        2,
        23
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "else if ( c == ' \\n ' )",
        "int ans ans ;",
        "ok [ j ] = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        17,
        27,
        2,
        38
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "else if ( c == ' \\n ' )",
        "int ans ans ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        17,
        27,
        23
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "else if ( c == ' \\n ' )",
        "ok [ j ] = ' 0 ' ;"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        17,
        27,
        23,
        38
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "else if ( c == ' \\n ' )",
        "ok [ j ] = ' 0 ' ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        17,
        27,
        38
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "else if ( c == ' \\n ' )",
        "else if c == ' ? ' )"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        17,
        2
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "int ans ans ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        17,
        2,
        23
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "int ans ans ;",
        "ok [ j ] = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        17,
        2,
        23,
        38
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "int ans ans ;",
        "ok [ j ] = ' 0 ' ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        17,
        2,
        38
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "int ans ans ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        17,
        23
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "ok [ j ] = ' 0 ' ;"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        17,
        23,
        38
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "ok [ j ] = ' 0 ' ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        17,
        38
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        28,
        27
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "else if ( c == ' \\n ' )"
      ],
      "err_line": 28,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        28,
        27,
        2
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "else if ( c == ' \\n ' )",
        "int ans ans ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        28,
        27,
        2,
        23
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "else if ( c == ' \\n ' )",
        "int ans ans ;",
        "ok [ j ] = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        28,
        27,
        2,
        38
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "else if ( c == ' \\n ' )",
        "int ans ans ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        28,
        27,
        23
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "else if ( c == ' \\n ' )",
        "ok [ j ] = ' 0 ' ;"
      ],
      "err_line": 28,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        28,
        27,
        23,
        38
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "else if ( c == ' \\n ' )",
        "ok [ j ] = ' 0 ' ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 28,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        28,
        27,
        38
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "else if ( c == ' \\n ' )",
        "else if c == ' ? ' )"
      ],
      "err_line": 28,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        28,
        2
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "int ans ans ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        28,
        2,
        23
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "int ans ans ;",
        "ok [ j ] = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        28,
        2,
        23,
        38
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "int ans ans ;",
        "ok [ j ] = ' 0 ' ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        28,
        2,
        38
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "int ans ans ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        28,
        23
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "ok [ j ] = ' 0 ' ;"
      ],
      "err_line": 28,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        28,
        23,
        38
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "ok [ j ] = ' 0 ' ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 28,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        28,
        38
      ],
      "mod_code": [
        "int len = s . length ( ) ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 28,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [100010]’"
    },
    {
      "mod_line": [
        27,
        2
      ],
      "mod_code": [
        "else if ( c == ' \\n ' )",
        "int ans ans ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        27,
        2,
        23
      ],
      "mod_code": [
        "else if ( c == ' \\n ' )",
        "int ans ans ;",
        "ok [ j ] = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        27,
        2,
        23,
        38
      ],
      "mod_code": [
        "else if ( c == ' \\n ' )",
        "int ans ans ;",
        "ok [ j ] = ' 0 ' ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        27,
        2,
        38
      ],
      "mod_code": [
        "else if ( c == ' \\n ' )",
        "int ans ans ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        27,
        23,
        38
      ],
      "mod_code": [
        "else if ( c == ' \\n ' )",
        "ok [ j ] = ' 0 ' ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 38,
      "err_msg": "expected ‘(’ before ‘c’"
    },
    {
      "mod_line": [
        27,
        38
      ],
      "mod_code": [
        "else if ( c == ' \\n ' )",
        "else if c == ' ? ' )"
      ],
      "err_line": 38,
      "err_msg": "expected ‘(’ before ‘c’"
    },
    {
      "mod_line": [
        2,
        23
      ],
      "mod_code": [
        "int ans ans ;",
        "ok [ j ] = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        2,
        23,
        38
      ],
      "mod_code": [
        "int ans ans ;",
        "ok [ j ] = ' 0 ' ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        2,
        38
      ],
      "mod_code": [
        "int ans ans ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        23,
        38
      ],
      "mod_code": [
        "ok [ j ] = ' 0 ' ;",
        "else if c == ' ? ' )"
      ],
      "err_line": 38,
      "err_msg": "expected ‘(’ before ‘c’"
    }
  ]
}