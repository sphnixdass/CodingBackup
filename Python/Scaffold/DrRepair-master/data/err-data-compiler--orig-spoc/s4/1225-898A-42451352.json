{
  "meta": {
    "index": 1225,
    "hitid": "3OZ4VAIBEX9S6C1GG9D7UQSOE86JVU",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "898A",
    "subid": "42451352"
  },
  "lines": [
    {
      "line": 0,
      "text": "create long long n",
      "code": "long long n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long long x",
      "code": "long long x ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "x = n",
      "code": "x = n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if n mod 10 = 0",
      "code": "if ( n % 10 == 0 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print n",
      "code": "cout << n << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "while x greater than 10 , set x to x mod 10",
      "code": "while ( x > 10 ) { x %= 10 ; }",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if x < = 5",
      "code": "if ( x <= 5 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print n - x",
      "code": "cout << n - x << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print n + 10 - x and a newline",
      "code": "cout << n + ( 10 - x ) << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long x x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘x’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "else else",
        "long long x x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘x’"
    },
    {
      "mod_line": [
        12,
        1,
        10
      ],
      "mod_code": [
        "else else",
        "long long x x ;",
        "if ( x < 5 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘x’"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "else else",
        "if ( x < 5 )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "long long x x ;",
        "if ( x < 5 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘x’"
    }
  ]
}