{
  "meta": {
    "index": 2660,
    "hitid": "3NCN4N1H1GB9GOUVQQEZMLFYJYLNBH",
    "workerid": "A1APYLD4DUK33J",
    "probid": "12A",
    "subid": "46432695"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create strings a , b , c",
      "code": "string a , b , c ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read a read b read c",
      "code": "cin >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string str with str = a + b + c",
      "code": "string str = a + b + c ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create string rts with rts = str",
      "code": "string rts = str ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "reverse element order from beginning of str to end of str",
      "code": "reverse ( str . begin ( ) , str . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if str is rts",
      "code": "if ( str == rts )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print \" YES \" print newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( str == ' rts ' )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "a >> a >> b >> c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "char rts = str ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in initialization"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        8,
        4
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "else else",
        "char rts = str ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in initialization"
    },
    {
      "mod_line": [
        6,
        8,
        4,
        1
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "else else",
        "char rts = str ;",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        6,
        8,
        4,
        2
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "else else",
        "char rts = str ;",
        "a >> a >> b >> c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        8,
        4,
        3
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "else else",
        "char rts = str ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in initialization"
    },
    {
      "mod_line": [
        6,
        8,
        1
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "else else",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        6,
        8,
        1,
        2
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "else else",
        "string a , b , c , c ;",
        "a >> a >> b >> c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        6,
        8,
        1,
        3
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "else else",
        "string a , b , c , c ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        6,
        8,
        2
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "else else",
        "a >> a >> b >> c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        8,
        2,
        3
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "else else",
        "a >> a >> b >> c ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        8,
        3
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "else else",
        "string str = ' a ' + c ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "char rts = str ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in initialization"
    },
    {
      "mod_line": [
        6,
        4,
        1
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "char rts = str ;",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        6,
        4,
        1,
        2
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "char rts = str ;",
        "string a , b , c , c ;",
        "a >> a >> b >> c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        6,
        4,
        1,
        3
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "char rts = str ;",
        "string a , b , c , c ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        6,
        4,
        2
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "char rts = str ;",
        "a >> a >> b >> c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4,
        2,
        3
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "char rts = str ;",
        "a >> a >> b >> c ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4,
        3
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "char rts = str ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in initialization"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        6,
        1,
        2
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "string a , b , c , c ;",
        "a >> a >> b >> c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        6,
        1,
        2,
        3
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "string a , b , c , c ;",
        "a >> a >> b >> c ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        6,
        1,
        3
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "string a , b , c , c ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "a >> a >> b >> c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        2,
        3
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "a >> a >> b >> c ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "if ( str == ' rts ' )",
        "string str = ' a ' + c ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "else else",
        "char rts = str ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in initialization"
    },
    {
      "mod_line": [
        8,
        4,
        1
      ],
      "mod_code": [
        "else else",
        "char rts = str ;",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        8,
        4,
        1,
        2
      ],
      "mod_code": [
        "else else",
        "char rts = str ;",
        "string a , b , c , c ;",
        "a >> a >> b >> c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        8,
        4,
        1,
        3
      ],
      "mod_code": [
        "else else",
        "char rts = str ;",
        "string a , b , c , c ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        8,
        4,
        2
      ],
      "mod_code": [
        "else else",
        "char rts = str ;",
        "a >> a >> b >> c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        4,
        2,
        3
      ],
      "mod_code": [
        "else else",
        "char rts = str ;",
        "a >> a >> b >> c ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        4,
        3
      ],
      "mod_code": [
        "else else",
        "char rts = str ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in initialization"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "else else",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        8,
        1,
        2
      ],
      "mod_code": [
        "else else",
        "string a , b , c , c ;",
        "a >> a >> b >> c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        8,
        1,
        2,
        3
      ],
      "mod_code": [
        "else else",
        "string a , b , c , c ;",
        "a >> a >> b >> c ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        8,
        1,
        3
      ],
      "mod_code": [
        "else else",
        "string a , b , c , c ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "else else",
        "a >> a >> b >> c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        2,
        3
      ],
      "mod_code": [
        "else else",
        "a >> a >> b >> c ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "else else",
        "string str = ' a ' + c ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "char rts = str ;",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        4,
        1,
        2
      ],
      "mod_code": [
        "char rts = str ;",
        "string a , b , c , c ;",
        "a >> a >> b >> c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        4,
        1,
        2,
        3
      ],
      "mod_code": [
        "char rts = str ;",
        "string a , b , c , c ;",
        "a >> a >> b >> c ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        4,
        1,
        3
      ],
      "mod_code": [
        "char rts = str ;",
        "string a , b , c , c ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "char rts = str ;",
        "a >> a >> b >> c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        2,
        3
      ],
      "mod_code": [
        "char rts = str ;",
        "a >> a >> b >> c ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "char rts = str ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in initialization"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "string a , b , c , c ;",
        "a >> a >> b >> c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        1,
        2,
        3
      ],
      "mod_code": [
        "string a , b , c , c ;",
        "a >> a >> b >> c ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "string a , b , c , c ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "a >> a >> b >> c ;",
        "string str = ' a ' + c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}