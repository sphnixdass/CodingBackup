{
  "meta": {
    "index": 1227,
    "hitid": "3R0WOCG21M3FQBCO1NHRV6VSVH0UD2",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "898A",
    "subid": "43621216"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long long int n , m , k , l , j , p",
      "code": "long long int n , m , k , l , j , p ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n less than 10",
      "code": "if ( n < 10 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if n < = 5",
      "code": "if ( n <= 5 )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "print 0",
      "code": "cout << 0 << endl ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 7,
      "text": "p = n + ( 10 - n )",
      "code": "p = n + ( 10 - n ) ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "print p",
      "code": "cout << p << endl ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 11,
      "text": "assign n mod 10 to k",
      "code": "k = n % 10 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if k = 0",
      "code": "if ( k == 0 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print n",
      "code": "cout << n << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if k < = 5",
      "code": "if ( k <= 5 )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "set l to n - k",
      "code": "l = n - ( k ) ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "print l",
      "code": "cout << l << endl ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 19,
      "text": "j = n + ( 10 - k )",
      "code": "j = n + ( 10 - k ) ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "print j and a newline",
      "code": "cout << j << endl ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        6
      ],
      "mod_code": [
        "l -= k ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        6,
        18
      ],
      "mod_code": [
        "l -= k ;",
        "else else",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        6,
        18,
        4
      ],
      "mod_code": [
        "l -= k ;",
        "else else",
        "else else",
        "if ( n < 5 )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        6,
        18,
        10
      ],
      "mod_code": [
        "l -= k ;",
        "else else",
        "else else",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        6,
        18,
        19
      ],
      "mod_code": [
        "l -= k ;",
        "else else",
        "else else",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        6,
        4
      ],
      "mod_code": [
        "l -= k ;",
        "else else",
        "if ( n < 5 )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        6,
        4,
        10
      ],
      "mod_code": [
        "l -= k ;",
        "else else",
        "if ( n < 5 )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        6,
        4,
        19
      ],
      "mod_code": [
        "l -= k ;",
        "else else",
        "if ( n < 5 )",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        6,
        10
      ],
      "mod_code": [
        "l -= k ;",
        "else else",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        6,
        10,
        19
      ],
      "mod_code": [
        "l -= k ;",
        "else else",
        "else else",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        6,
        19
      ],
      "mod_code": [
        "l -= k ;",
        "else else",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "l -= k ;",
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        18,
        4
      ],
      "mod_code": [
        "l -= k ;",
        "else else",
        "if ( n < 5 )"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        18,
        4,
        10
      ],
      "mod_code": [
        "l -= k ;",
        "else else",
        "if ( n < 5 )",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        18,
        4,
        19
      ],
      "mod_code": [
        "l -= k ;",
        "else else",
        "if ( n < 5 )",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        18,
        10
      ],
      "mod_code": [
        "l -= k ;",
        "else else",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        18,
        10,
        19
      ],
      "mod_code": [
        "l -= k ;",
        "else else",
        "else else",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        18,
        19
      ],
      "mod_code": [
        "l -= k ;",
        "else else",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        4,
        10
      ],
      "mod_code": [
        "l -= k ;",
        "if ( n < 5 )",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        4,
        10,
        19
      ],
      "mod_code": [
        "l -= k ;",
        "if ( n < 5 )",
        "else else",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        10
      ],
      "mod_code": [
        "l -= k ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        10,
        19
      ],
      "mod_code": [
        "l -= k ;",
        "else else",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        18
      ],
      "mod_code": [
        "else else",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        18,
        4
      ],
      "mod_code": [
        "else else",
        "else else",
        "if ( n < 5 )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        18,
        4,
        10
      ],
      "mod_code": [
        "else else",
        "else else",
        "if ( n < 5 )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        18,
        4,
        19
      ],
      "mod_code": [
        "else else",
        "else else",
        "if ( n < 5 )",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        18,
        10
      ],
      "mod_code": [
        "else else",
        "else else",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        18,
        10,
        19
      ],
      "mod_code": [
        "else else",
        "else else",
        "else else",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        18,
        19
      ],
      "mod_code": [
        "else else",
        "else else",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "else else",
        "if ( n < 5 )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        4,
        10
      ],
      "mod_code": [
        "else else",
        "if ( n < 5 )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        4,
        10,
        19
      ],
      "mod_code": [
        "else else",
        "if ( n < 5 )",
        "else else",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        4,
        19
      ],
      "mod_code": [
        "else else",
        "if ( n < 5 )",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "else else",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        10,
        19
      ],
      "mod_code": [
        "else else",
        "else else",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        19
      ],
      "mod_code": [
        "else else",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        4
      ],
      "mod_code": [
        "else else",
        "if ( n < 5 )"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        4,
        10
      ],
      "mod_code": [
        "else else",
        "if ( n < 5 )",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        4,
        10,
        19
      ],
      "mod_code": [
        "else else",
        "if ( n < 5 )",
        "else else",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        4,
        19
      ],
      "mod_code": [
        "else else",
        "if ( n < 5 )",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        10
      ],
      "mod_code": [
        "else else",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        10,
        19
      ],
      "mod_code": [
        "else else",
        "else else",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        19
      ],
      "mod_code": [
        "else else",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "if ( n < 5 )",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        10,
        19
      ],
      "mod_code": [
        "if ( n < 5 )",
        "else else",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "else else",
        "j += ( 10 - k ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}