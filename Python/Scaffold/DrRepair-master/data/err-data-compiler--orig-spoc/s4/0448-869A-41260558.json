{
  "meta": {
    "index": 448,
    "hitid": "3GMLHYZ0LERIOM7FXJ458R5TD59UYD",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "869A",
    "subid": "41260558"
  },
  "lines": [
    {
      "line": 0,
      "text": "in long long function read",
      "code": "long long read ( )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "x = 0 = int , f = 1 = int",
      "code": "long long x = 0 , f = 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let ch be a char and read ch",
      "code": "char ch = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while ch < ' 0 ' or ch > ' 9 '",
      "code": "while ( ch < ' 0 ' || ch > ' 9 ' )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if ch = ' - ' then f = - 1",
      "code": "if ( ch == ' - ' ) f = - 1 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "ch = get char",
      "code": "ch = getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while ch > = ' 0 ' and ch < = ' 9 '",
      "code": "while ( ch >= ' 0 ' && ch <= ' 9 ' )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set x = x * 10 + ch - ' 0 '",
      "code": "x = x * 10 + ch - ' 0 ' ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "get char in ch",
      "code": "ch = getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "return x * f",
      "code": "return x * f ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 14,
      "text": "tmp = int = read",
      "code": "int tmp = read ( ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = 1 and lim = tmp bitwise left shit 1 , until i < = lim",
      "code": "for ( int i = 1 , lim = tmp << 1 ; i <= lim ; i ++ ) tmp = read ( ) ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print Karen",
      "code": "cout << \" Karen\\n \" ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( i = 1 , lim ; i <= 1 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cout << Karen << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Karen’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char ch , ch ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char ch’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "gets ( ch ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cout << Karen ;"
      ],
      "err_line": 16,
      "err_msg": "‘Karen’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        15
      ],
      "mod_code": [
        "char ch ;",
        "int tmp = getchar ( ) ;",
        "for ( i = 1 , lim ; i <= 1 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        16
      ],
      "mod_code": [
        "char ch ;",
        "int tmp = getchar ( ) ;",
        "for ( i = 1 , lim ; i <= 1 ; i ++ )",
        "cout << Karen << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        1
      ],
      "mod_code": [
        "char ch ;",
        "int tmp = getchar ( ) ;",
        "for ( i = 1 , lim ; i <= 1 ; i ++ )",
        "int x = 1 , f = 1 ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        16
      ],
      "mod_code": [
        "char ch ;",
        "int tmp = getchar ( ) ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Karen’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        16,
        1
      ],
      "mod_code": [
        "char ch ;",
        "int tmp = getchar ( ) ;",
        "cout << Karen << endl ;",
        "int x = 1 , f = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "‘Karen’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "char ch ;",
        "for ( i = 1 , lim ; i <= 1 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        16
      ],
      "mod_code": [
        "char ch ;",
        "for ( i = 1 , lim ; i <= 1 ; i ++ )",
        "cout << Karen << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        16,
        1
      ],
      "mod_code": [
        "char ch ;",
        "for ( i = 1 , lim ; i <= 1 ; i ++ )",
        "cout << Karen << endl ;",
        "int x = 1 , f = 1 ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        1
      ],
      "mod_code": [
        "char ch ;",
        "for ( i = 1 , lim ; i <= 1 ; i ++ )",
        "int x = 1 , f = 1 ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "char ch ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Karen’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        16,
        1
      ],
      "mod_code": [
        "char ch ;",
        "cout << Karen << endl ;",
        "int x = 1 , f = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "‘Karen’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "int tmp = getchar ( ) ;",
        "for ( i = 1 , lim ; i <= 1 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16
      ],
      "mod_code": [
        "int tmp = getchar ( ) ;",
        "for ( i = 1 , lim ; i <= 1 ; i ++ )",
        "cout << Karen << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        9
      ],
      "mod_code": [
        "int tmp = getchar ( ) ;",
        "for ( i = 1 , lim ; i <= 1 ; i ++ )",
        "cout << Karen << endl ;",
        "gets ( ch ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        1
      ],
      "mod_code": [
        "int tmp = getchar ( ) ;",
        "for ( i = 1 , lim ; i <= 1 ; i ++ )",
        "cout << Karen << endl ;",
        "int x = 1 , f = 1 ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        9
      ],
      "mod_code": [
        "int tmp = getchar ( ) ;",
        "for ( i = 1 , lim ; i <= 1 ; i ++ )",
        "gets ( ch ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        9,
        1
      ],
      "mod_code": [
        "int tmp = getchar ( ) ;",
        "for ( i = 1 , lim ; i <= 1 ; i ++ )",
        "gets ( ch ) ;",
        "int x = 1 , f = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        1
      ],
      "mod_code": [
        "int tmp = getchar ( ) ;",
        "for ( i = 1 , lim ; i <= 1 ; i ++ )",
        "int x = 1 , f = 1 ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16
      ],
      "mod_code": [
        "int tmp = getchar ( ) ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Karen’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        9
      ],
      "mod_code": [
        "int tmp = getchar ( ) ;",
        "cout << Karen << endl ;",
        "gets ( ch ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        16,
        9,
        1
      ],
      "mod_code": [
        "int tmp = getchar ( ) ;",
        "cout << Karen << endl ;",
        "gets ( ch ) ;",
        "int x = 1 , f = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        16,
        1
      ],
      "mod_code": [
        "int tmp = getchar ( ) ;",
        "cout << Karen << endl ;",
        "int x = 1 , f = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "‘Karen’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        9
      ],
      "mod_code": [
        "int tmp = getchar ( ) ;",
        "gets ( ch ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        9,
        1
      ],
      "mod_code": [
        "int tmp = getchar ( ) ;",
        "gets ( ch ) ;",
        "int x = 1 , f = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16
      ],
      "mod_code": [
        "for ( i = 1 , lim ; i <= 1 ; i ++ )",
        "cout << Karen << endl ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        9
      ],
      "mod_code": [
        "for ( i = 1 , lim ; i <= 1 ; i ++ )",
        "cout << Karen << endl ;",
        "gets ( ch ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        9,
        1
      ],
      "mod_code": [
        "for ( i = 1 , lim ; i <= 1 ; i ++ )",
        "cout << Karen << endl ;",
        "gets ( ch ) ;",
        "int x = 1 , f = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        1
      ],
      "mod_code": [
        "for ( i = 1 , lim ; i <= 1 ; i ++ )",
        "cout << Karen << endl ;",
        "int x = 1 , f = 1 ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        9
      ],
      "mod_code": [
        "for ( i = 1 , lim ; i <= 1 ; i ++ )",
        "gets ( ch ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        9,
        1
      ],
      "mod_code": [
        "for ( i = 1 , lim ; i <= 1 ; i ++ )",
        "gets ( ch ) ;",
        "int x = 1 , f = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        1
      ],
      "mod_code": [
        "for ( i = 1 , lim ; i <= 1 ; i ++ )",
        "int x = 1 , f = 1 ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        9
      ],
      "mod_code": [
        "cout << Karen << endl ;",
        "gets ( ch ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        9,
        1
      ],
      "mod_code": [
        "cout << Karen << endl ;",
        "gets ( ch ) ;",
        "int x = 1 , f = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        1
      ],
      "mod_code": [
        "cout << Karen << endl ;",
        "int x = 1 , f = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "‘Karen’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "gets ( ch ) ;",
        "int x = 1 , f = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    }
  ]
}