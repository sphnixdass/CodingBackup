{
  "meta": {
    "index": 1352,
    "hitid": "3I7KR83SNA7PKPUVVT8N3N341IVK9B",
    "workerid": "AIWEXPJAU66D9",
    "probid": "75A",
    "subid": "45473518"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers a and b",
      "code": "int a , b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read a and b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer sum = a + b",
      "code": "int sum = a + b ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer tempa = a",
      "code": "int tempa = a ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare integer variable tempb = b",
      "code": "int tempb = b ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create integer i = 1",
      "code": "int i = 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create integer val = tempa",
      "code": "int val = tempa ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create integer rem = 0",
      "code": "int rem = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "declare integer rem1 = 0",
      "code": "int rem1 = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "while val is greater than 0",
      "code": "while ( val > 0 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "rem = val modulo 10",
      "code": "rem = val % 10 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "divide val by 10",
      "code": "val = val / 10 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if rem > 0",
      "code": "if ( rem )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increase rem1 by rem * i",
      "code": "rem1 = rem1 + rem * i ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "multiply i by 10",
      "code": "i = i * 10 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "declare integer newa = rem1",
      "code": "int newa = rem1 ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "set val to tempb",
      "code": "val = tempb ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "set rem and rem1 to 0",
      "code": "rem1 = rem = 0 ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "i = 1",
      "code": "i = 1 ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "while val is greater than 0",
      "code": "while ( val > 0 )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "rem = val % 10",
      "code": "rem = val % 10 ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "divide val by 10",
      "code": "val = val / 10 ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "if rem",
      "code": "if ( rem )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "increase rem1 by rem * i",
      "code": "rem1 = rem1 + rem * i ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "multiply i by 10",
      "code": "i = i * 10 ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "declare integer variable newb = rem1",
      "code": "int newb = rem1 ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "create integer newsum = newa + newb",
      "code": "int newsum = newa + newb ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "set val to sum",
      "code": "val = sum ;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "rem and rem1 = 0",
      "code": "rem1 = rem = 0 ;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "set value of i to 1",
      "code": "i = 1 ;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "while val is greater than 0",
      "code": "while ( val > 0 )",
      "indent": 1
    },
    {
      "line": 36,
      "text": "rem = val % 10",
      "code": "rem = val % 10 ;",
      "indent": 2
    },
    {
      "line": 37,
      "text": "divide val by 10",
      "code": "val = val / 10 ;",
      "indent": 2
    },
    {
      "line": 38,
      "text": "if rem > 0",
      "code": "if ( rem )",
      "indent": 2
    },
    {
      "line": 39,
      "text": "increase rem1 by rem * i",
      "code": "rem1 = rem1 + rem * i ;",
      "indent": 3
    },
    {
      "line": 40,
      "text": "multiply i by 10",
      "code": "i = i * 10 ;",
      "indent": 3
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 43,
      "text": "if newsum = rem1",
      "code": "if ( newsum == rem1 )",
      "indent": 1
    },
    {
      "line": 44,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" ;",
      "indent": 2
    },
    {
      "line": 45,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 46,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" ;",
      "indent": 2
    },
    {
      "line": 47,
      "text": "invoke function putchar with arguments ' \\ n '",
      "code": "putchar ( ' \\n ' ) ;",
      "indent": 1
    },
    {
      "line": 48,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 49,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;"
      ],
      "err_line": 33,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int sum += b ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int tempa a ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘a’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "tempb = b ;"
      ],
      "err_line": 5,
      "err_msg": "‘tempb’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "rem = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘rem’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "rem1 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘rem1’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "newa = rem1 ;"
      ],
      "err_line": 18,
      "err_msg": "‘newa’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "int val = tempb ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int val’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "int i = 1 ;"
      ],
      "err_line": 21,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "newb = rem1 ;"
      ],
      "err_line": 30,
      "err_msg": "‘newb’ was not declared in this scope"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "int newsum += newb ;"
      ],
      "err_line": 31,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "int val = sum ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int val’"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "* i = 1 ;"
      ],
      "err_line": 34,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        45
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 45,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        47
      ],
      "mod_code": [
        "putchar ( ' ) ' ;"
      ],
      "err_line": 47,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        20,
        33
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "int rem = 0 , rem1 = 0 ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        33,
        44
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        33,
        44,
        46
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        33,
        44,
        45
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" YES \" << endl ;",
        "else else"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        33,
        44,
        30
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" YES \" << endl ;",
        "newb = rem1 ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        33,
        46
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        33,
        46,
        45
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" NO \" << endl ;",
        "else else"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        33,
        46,
        30
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" NO \" << endl ;",
        "newb = rem1 ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        33,
        45
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "int rem = 0 , rem1 = 0 ;",
        "else else"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        33,
        45,
        30
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "int rem = 0 , rem1 = 0 ;",
        "else else",
        "newb = rem1 ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        33,
        30
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "int rem = 0 , rem1 = 0 ;",
        "newb = rem1 ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        44
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        44,
        46
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        44,
        46,
        45
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        "else else"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        44,
        46,
        30
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        "newb = rem1 ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        44,
        45
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" YES \" << endl ;",
        "else else"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        44,
        45,
        30
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" YES \" << endl ;",
        "else else",
        "newb = rem1 ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        44,
        30
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" YES \" << endl ;",
        "newb = rem1 ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        46
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        46,
        45
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" NO \" << endl ;",
        "else else"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        46,
        45,
        30
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" NO \" << endl ;",
        "else else",
        "newb = rem1 ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        46,
        30
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" NO \" << endl ;",
        "newb = rem1 ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        45
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "else else"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        45,
        30
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "else else",
        "newb = rem1 ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        20,
        30
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "newb = rem1 ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        33,
        44
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 33,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        33,
        44,
        46
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 33,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        33,
        44,
        46,
        45
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        "else else"
      ],
      "err_line": 33,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        33,
        44,
        46,
        30
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        "newb = rem1 ;"
      ],
      "err_line": 30,
      "err_msg": "‘newb’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        44,
        45
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" YES \" << endl ;",
        "else else"
      ],
      "err_line": 33,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        33,
        44,
        45,
        30
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" YES \" << endl ;",
        "else else",
        "newb = rem1 ;"
      ],
      "err_line": 30,
      "err_msg": "‘newb’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        44,
        30
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" YES \" << endl ;",
        "newb = rem1 ;"
      ],
      "err_line": 30,
      "err_msg": "‘newb’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        46
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 33,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        33,
        46,
        45
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" NO \" << endl ;",
        "else else"
      ],
      "err_line": 33,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        33,
        46,
        45,
        30
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" NO \" << endl ;",
        "else else",
        "newb = rem1 ;"
      ],
      "err_line": 30,
      "err_msg": "‘newb’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        46,
        30
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "cout << \" NO \" << endl ;",
        "newb = rem1 ;"
      ],
      "err_line": 30,
      "err_msg": "‘newb’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        45
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "else else"
      ],
      "err_line": 33,
      "err_msg": "redeclaration of ‘int rem’"
    },
    {
      "mod_line": [
        33,
        45,
        30
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "else else",
        "newb = rem1 ;"
      ],
      "err_line": 30,
      "err_msg": "‘newb’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        30
      ],
      "mod_code": [
        "int rem = 0 , rem1 = 0 ;",
        "newb = rem1 ;"
      ],
      "err_line": 30,
      "err_msg": "‘newb’ was not declared in this scope"
    },
    {
      "mod_line": [
        44,
        46,
        45
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        "else else"
      ],
      "err_line": 45,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        44,
        46,
        45,
        30
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        "else else",
        "newb = rem1 ;"
      ],
      "err_line": 30,
      "err_msg": "‘newb’ was not declared in this scope"
    },
    {
      "mod_line": [
        44,
        46,
        30
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        "newb = rem1 ;"
      ],
      "err_line": 30,
      "err_msg": "‘newb’ was not declared in this scope"
    },
    {
      "mod_line": [
        44,
        45
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "else else"
      ],
      "err_line": 45,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        44,
        45,
        30
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "else else",
        "newb = rem1 ;"
      ],
      "err_line": 30,
      "err_msg": "‘newb’ was not declared in this scope"
    },
    {
      "mod_line": [
        44,
        30
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "newb = rem1 ;"
      ],
      "err_line": 30,
      "err_msg": "‘newb’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        45
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "else else"
      ],
      "err_line": 45,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        46,
        45,
        30
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "else else",
        "newb = rem1 ;"
      ],
      "err_line": 30,
      "err_msg": "‘newb’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        30
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "newb = rem1 ;"
      ],
      "err_line": 30,
      "err_msg": "‘newb’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        30
      ],
      "mod_code": [
        "else else",
        "newb = rem1 ;"
      ],
      "err_line": 30,
      "err_msg": "‘newb’ was not declared in this scope"
    }
  ]
}