{
  "meta": {
    "index": 2509,
    "hitid": "3VCK0Q0PO588W1RLSAHA24JFTW5N0H",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "94A",
    "subid": "44750853"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "n = array of 10 string",
      "code": "string n [ 10 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to 10 exclusive read n [ i ]",
      "code": "for ( int i = 0 ; i < 10 ; i ++ ) { cin >> n [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for sp = 0 to 80 exclusive by 10",
      "code": "for ( int sp = 0 ; sp < 80 ; sp += 10 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "c = substring of sp from 10",
      "code": "string c = s . substr ( sp , 10 ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for i = 0 to 10 exclusive",
      "code": "for ( int i = 0 ; i < 10 ; i ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if c is n [ i ]",
      "code": "if ( c == n [ i ] )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "print i",
      "code": "cout << i ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string n = new string [ 10 ] ;"
      ],
      "err_line": 2,
      "err_msg": "conversion from ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( sp = 0 ; sp < 80 ; sp += 10 )"
      ],
      "err_line": 5,
      "err_msg": "‘sp’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "c = sp . substr ( 10 , 10 ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 10 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "cout << i << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        3
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "cout << i << endl ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        9,
        3,
        5
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "cout << i << endl ;",
        "gets ( s ) ;",
        "for ( sp = 0 ; sp < 80 ; sp += 10 )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        9,
        3,
        8
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "cout << i << endl ;",
        "gets ( s ) ;",
        "if ( ! c [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        9,
        5
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "cout << i << endl ;",
        "for ( sp = 0 ; sp < 80 ; sp += 10 )"
      ],
      "err_line": 5,
      "err_msg": "‘sp’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        5,
        8
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "cout << i << endl ;",
        "for ( sp = 0 ; sp < 80 ; sp += 10 )",
        "if ( ! c [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘sp’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        8
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "cout << i << endl ;",
        "if ( ! c [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        3,
        9
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "gets ( s ) ;",
        "cout << i << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        3,
        9,
        5
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "gets ( s ) ;",
        "cout << i << \" \\n \" ;",
        "for ( sp = 0 ; sp < 80 ; sp += 10 )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        3,
        9,
        8
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "gets ( s ) ;",
        "cout << i << \" \\n \" ;",
        "if ( ! c [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        3,
        5
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "gets ( s ) ;",
        "for ( sp = 0 ; sp < 80 ; sp += 10 )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        3,
        5,
        8
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "gets ( s ) ;",
        "for ( sp = 0 ; sp < 80 ; sp += 10 )",
        "if ( ! c [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        3,
        8
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "gets ( s ) ;",
        "if ( ! c [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "cout << i << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        5
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "cout << i << \" \\n \" ;",
        "for ( sp = 0 ; sp < 80 ; sp += 10 )"
      ],
      "err_line": 5,
      "err_msg": "‘sp’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        5,
        8
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "cout << i << \" \\n \" ;",
        "for ( sp = 0 ; sp < 80 ; sp += 10 )",
        "if ( ! c [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘sp’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        8
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "cout << i << \" \\n \" ;",
        "if ( ! c [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "for ( sp = 0 ; sp < 80 ; sp += 10 )"
      ],
      "err_line": 5,
      "err_msg": "‘sp’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        8
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "for ( sp = 0 ; sp < 80 ; sp += 10 )",
        "if ( ! c [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘sp’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "c = sp . substr ( 10 ) ;",
        "if ( ! c [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "cout << i << endl ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        3,
        5
      ],
      "mod_code": [
        "cout << i << endl ;",
        "gets ( s ) ;",
        "for ( sp = 0 ; sp < 80 ; sp += 10 )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        3,
        5,
        8
      ],
      "mod_code": [
        "cout << i << endl ;",
        "gets ( s ) ;",
        "for ( sp = 0 ; sp < 80 ; sp += 10 )",
        "if ( ! c [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        3,
        8
      ],
      "mod_code": [
        "cout << i << endl ;",
        "gets ( s ) ;",
        "if ( ! c [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "cout << i << endl ;",
        "for ( sp = 0 ; sp < 80 ; sp += 10 )"
      ],
      "err_line": 5,
      "err_msg": "‘sp’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        8
      ],
      "mod_code": [
        "cout << i << endl ;",
        "for ( sp = 0 ; sp < 80 ; sp += 10 )",
        "if ( ! c [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘sp’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "gets ( s ) ;",
        "cout << i << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        9,
        5
      ],
      "mod_code": [
        "gets ( s ) ;",
        "cout << i << \" \\n \" ;",
        "for ( sp = 0 ; sp < 80 ; sp += 10 )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        9,
        5,
        8
      ],
      "mod_code": [
        "gets ( s ) ;",
        "cout << i << \" \\n \" ;",
        "for ( sp = 0 ; sp < 80 ; sp += 10 )",
        "if ( ! c [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        9,
        8
      ],
      "mod_code": [
        "gets ( s ) ;",
        "cout << i << \" \\n \" ;",
        "if ( ! c [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "gets ( s ) ;",
        "for ( sp = 0 ; sp < 80 ; sp += 10 )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        5,
        8
      ],
      "mod_code": [
        "gets ( s ) ;",
        "for ( sp = 0 ; sp < 80 ; sp += 10 )",
        "if ( ! c [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "gets ( s ) ;",
        "if ( ! c [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "cout << i << \" \\n \" ;",
        "for ( sp = 0 ; sp < 80 ; sp += 10 )"
      ],
      "err_line": 5,
      "err_msg": "‘sp’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        8
      ],
      "mod_code": [
        "cout << i << \" \\n \" ;",
        "for ( sp = 0 ; sp < 80 ; sp += 10 )",
        "if ( ! c [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘sp’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "for ( sp = 0 ; sp < 80 ; sp += 10 )",
        "if ( ! c [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘sp’ was not declared in this scope"
    }
  ]
}