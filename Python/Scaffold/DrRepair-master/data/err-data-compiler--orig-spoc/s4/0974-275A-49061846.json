{
  "meta": {
    "index": 974,
    "hitid": "3RWO3EJELH386BOG48Y2KY7KY37P1D",
    "workerid": "AIWEXPJAU66D9",
    "probid": "275A",
    "subid": "49061846"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare 2d boolean array ara with size 3 by 3",
      "code": "bool ara [ 3 ] [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare int variable x",
      "code": "int x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set first sizeof ( ara ) bytes at the pointer ara to 1",
      "code": "memset ( ara , 1 , sizeof ( ara ) ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integers w and q = 0",
      "code": "int w = 0 , q = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while w < 3",
      "code": "while ( w < 3 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set q to 0",
      "code": "q = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "while q < 3",
      "code": "while ( q < 3 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if x is odd",
      "code": "if ( x % 2 == 1 )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if ara [ w ] [ q ] is false",
      "code": "if ( ! ara [ w ] [ q ] )",
      "indent": 4
    },
    {
      "line": 11,
      "text": "set ara [ w ] [ q ] to 1",
      "code": "ara [ w ] [ q ] = 1 ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 13,
      "text": "set ara [ w ] [ q ] to 0",
      "code": "ara [ w ] [ q ] = 0 ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "if w + 1 is less than 3",
      "code": "if ( w + 1 < 3 )",
      "indent": 4
    },
    {
      "line": 15,
      "text": "if ara [ w + 1 ] [ q ] is false",
      "code": "if ( ! ara [ w + 1 ] [ q ] )",
      "indent": 5
    },
    {
      "line": 16,
      "text": "set ara [ w + 1 ] [ q ] to 1",
      "code": "ara [ w + 1 ] [ q ] = 1 ;",
      "indent": 6
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 5
    },
    {
      "line": 18,
      "text": "set ara [ w + 1 ] [ q ] to 0",
      "code": "ara [ w + 1 ] [ q ] = 0 ;",
      "indent": 6
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 20,
      "text": "if q + 1 is less than 3",
      "code": "if ( q + 1 < 3 )",
      "indent": 4
    },
    {
      "line": 21,
      "text": "if ara [ w ] [ q + 1 ] is false",
      "code": "if ( ! ara [ w ] [ q + 1 ] )",
      "indent": 5
    },
    {
      "line": 22,
      "text": "set ara [ w ] [ q + 1 ] to 1",
      "code": "ara [ w ] [ q + 1 ] = 1 ;",
      "indent": 6
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 5
    },
    {
      "line": 24,
      "text": "set ara [ w ] [ q + 1 ] to 0",
      "code": "ara [ w ] [ q + 1 ] = 0 ;",
      "indent": 6
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 26,
      "text": "if w - 1 > = 0",
      "code": "if ( w - 1 >= 0 )",
      "indent": 4
    },
    {
      "line": 27,
      "text": "if ara [ w - 1 ] [ q ] is false",
      "code": "if ( ! ara [ w - 1 ] [ q ] )",
      "indent": 5
    },
    {
      "line": 28,
      "text": "set ara [ w - 1 ] [ q ] to 1",
      "code": "ara [ w - 1 ] [ q ] = 1 ;",
      "indent": 6
    },
    {
      "line": 29,
      "text": "else",
      "code": "else",
      "indent": 5
    },
    {
      "line": 30,
      "text": "set ara [ w - 1 ] [ q ] to 0",
      "code": "ara [ w - 1 ] [ q ] = 0 ;",
      "indent": 6
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 32,
      "text": "if q - 1 > = 0",
      "code": "if ( q - 1 >= 0 )",
      "indent": 4
    },
    {
      "line": 33,
      "text": "if ara [ w ] [ q - 1 ] is false",
      "code": "if ( ! ara [ w ] [ q - 1 ] )",
      "indent": 5
    },
    {
      "line": 34,
      "text": "set ara [ w ] [ q - 1 ] to 1",
      "code": "ara [ w ] [ q - 1 ] = 1 ;",
      "indent": 6
    },
    {
      "line": 35,
      "text": "else",
      "code": "else",
      "indent": 5
    },
    {
      "line": 36,
      "text": "set ara [ w ] [ q - 1 ] to 0",
      "code": "ara [ w ] [ q - 1 ] = 0 ;",
      "indent": 6
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 39,
      "text": "increment q",
      "code": "q ++ ;",
      "indent": 3
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 41,
      "text": "increment w",
      "code": "w ++ ;",
      "indent": 2
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 43,
      "text": "change w to 0",
      "code": "w = 0 ;",
      "indent": 1
    },
    {
      "line": 44,
      "text": "set q to 0",
      "code": "q = 0 ;",
      "indent": 1
    },
    {
      "line": 45,
      "text": "for integer i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 46,
      "text": "for r from 0 to 3 exclusive , print ara [ i ] [ r ]",
      "code": "for ( int r = 0 ; r < 3 ; r ++ ) { cout << ara [ i ] [ r ] ; }",
      "indent": 2
    },
    {
      "line": 47,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 48,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 49,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 50,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int t ;"
      ],
      "err_line": 8,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "memset ( ara , 1 ( ara ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "ara [ ' w ' ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘bool [3]’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "ara [ w + 1 ] [ q ] ] = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "ara [ w ] [ q + 1 ] ] = 1 ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "ara [ w - 1 ] [ q ] ] = 1 ;"
      ],
      "err_line": 28,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 35,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "int w = 0 ;"
      ],
      "err_line": 43,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        44
      ],
      "mod_code": [
        "int q = 0 ;"
      ],
      "err_line": 44,
      "err_msg": "redeclaration of ‘int q’"
    },
    {
      "mod_line": [
        5,
        28
      ],
      "mod_code": [
        "while ( w -- )",
        "ara [ w - 1 ] [ q ] ] = 1 ;"
      ],
      "err_line": 28,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        28,
        44
      ],
      "mod_code": [
        "while ( w -- )",
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "int q = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        28,
        44,
        36
      ],
      "mod_code": [
        "while ( w -- )",
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "int q = 0 ;",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        28,
        44,
        3
      ],
      "mod_code": [
        "while ( w -- )",
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "int q = 0 ;",
        "memset ( ara , 1 ( ara ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        28,
        44,
        23
      ],
      "mod_code": [
        "while ( w -- )",
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "int q = 0 ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        28,
        36
      ],
      "mod_code": [
        "while ( w -- )",
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        28,
        36,
        3
      ],
      "mod_code": [
        "while ( w -- )",
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;",
        "memset ( ara , 1 ( ara ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        28,
        36,
        23
      ],
      "mod_code": [
        "while ( w -- )",
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        28,
        3
      ],
      "mod_code": [
        "while ( w -- )",
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "memset ( ara , 1 ( ara ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        28,
        3,
        23
      ],
      "mod_code": [
        "while ( w -- )",
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "memset ( ara , 1 ( ara ) ) ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        28,
        23
      ],
      "mod_code": [
        "while ( w -- )",
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        44
      ],
      "mod_code": [
        "while ( w -- )",
        "int q = 0 ;"
      ],
      "err_line": 44,
      "err_msg": "redeclaration of ‘int q’"
    },
    {
      "mod_line": [
        5,
        44,
        36
      ],
      "mod_code": [
        "while ( w -- )",
        "int q = 0 ;",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;"
      ],
      "err_line": 44,
      "err_msg": "redeclaration of ‘int q’"
    },
    {
      "mod_line": [
        5,
        44,
        36,
        3
      ],
      "mod_code": [
        "while ( w -- )",
        "int q = 0 ;",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;",
        "memset ( ara , 1 ( ara ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        44,
        36,
        23
      ],
      "mod_code": [
        "while ( w -- )",
        "int q = 0 ;",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        44,
        3
      ],
      "mod_code": [
        "while ( w -- )",
        "int q = 0 ;",
        "memset ( ara , 1 ( ara ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        44,
        3,
        23
      ],
      "mod_code": [
        "while ( w -- )",
        "int q = 0 ;",
        "memset ( ara , 1 ( ara ) ) ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        44,
        23
      ],
      "mod_code": [
        "while ( w -- )",
        "int q = 0 ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        36,
        3
      ],
      "mod_code": [
        "while ( w -- )",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;",
        "memset ( ara , 1 ( ara ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        36,
        3,
        23
      ],
      "mod_code": [
        "while ( w -- )",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;",
        "memset ( ara , 1 ( ara ) ) ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        36,
        23
      ],
      "mod_code": [
        "while ( w -- )",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "while ( w -- )",
        "memset ( ara , 1 ( ara ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        3,
        23
      ],
      "mod_code": [
        "while ( w -- )",
        "memset ( ara , 1 ( ara ) ) ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        23
      ],
      "mod_code": [
        "while ( w -- )",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        28,
        44
      ],
      "mod_code": [
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "int q = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        28,
        44,
        36
      ],
      "mod_code": [
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "int q = 0 ;",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        28,
        44,
        36,
        3
      ],
      "mod_code": [
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "int q = 0 ;",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;",
        "memset ( ara , 1 ( ara ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        28,
        44,
        36,
        23
      ],
      "mod_code": [
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "int q = 0 ;",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        28,
        44,
        3
      ],
      "mod_code": [
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "int q = 0 ;",
        "memset ( ara , 1 ( ara ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        28,
        44,
        3,
        23
      ],
      "mod_code": [
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "int q = 0 ;",
        "memset ( ara , 1 ( ara ) ) ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        28,
        44,
        23
      ],
      "mod_code": [
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "int q = 0 ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        28,
        36
      ],
      "mod_code": [
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        28,
        36,
        3
      ],
      "mod_code": [
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;",
        "memset ( ara , 1 ( ara ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        28,
        36,
        3,
        23
      ],
      "mod_code": [
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;",
        "memset ( ara , 1 ( ara ) ) ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        28,
        36,
        23
      ],
      "mod_code": [
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        28,
        3
      ],
      "mod_code": [
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "memset ( ara , 1 ( ara ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        28,
        3,
        23
      ],
      "mod_code": [
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "memset ( ara , 1 ( ara ) ) ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        28,
        23
      ],
      "mod_code": [
        "ara [ w - 1 ] [ q ] ] = 1 ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        44,
        36
      ],
      "mod_code": [
        "int q = 0 ;",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;"
      ],
      "err_line": 44,
      "err_msg": "redeclaration of ‘int q’"
    },
    {
      "mod_line": [
        44,
        36,
        3
      ],
      "mod_code": [
        "int q = 0 ;",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;",
        "memset ( ara , 1 ( ara ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        44,
        36,
        3,
        23
      ],
      "mod_code": [
        "int q = 0 ;",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;",
        "memset ( ara , 1 ( ara ) ) ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        44,
        36,
        23
      ],
      "mod_code": [
        "int q = 0 ;",
        "ara [ w ] [ q - ' 1 ' ] = 0 ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        44,
        3
      ],
      "mod_code": [
        "int q = 0 ;",
        "memset ( ara , 1 ( ara ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        44,
        3,
        23
      ],
      "mod_code": [
        "int q = 0 ;",
        "memset ( ara , 1 ( ara ) ) ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        44,
        23
      ],
      "mod_code": [
        "int q = 0 ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        36,
        3
      ],
      "mod_code": [
        "ara [ w ] [ q - ' 1 ' ] = 0 ;",
        "memset ( ara , 1 ( ara ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        36,
        3,
        23
      ],
      "mod_code": [
        "ara [ w ] [ q - ' 1 ' ] = 0 ;",
        "memset ( ara , 1 ( ara ) ) ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        36,
        23
      ],
      "mod_code": [
        "ara [ w ] [ q - ' 1 ' ] = 0 ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        23
      ],
      "mod_code": [
        "memset ( ara , 1 ( ara ) ) ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expression cannot be used as a function"
    }
  ]
}