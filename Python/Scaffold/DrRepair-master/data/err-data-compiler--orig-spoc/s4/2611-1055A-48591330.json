{
  "meta": {
    "index": 2611,
    "hitid": "3CVDZS288HUTBNLBJRLVSWHJU8MMFM",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1055A",
    "subid": "48591330"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare an arrays of ints a and b with 1005 elements",
      "code": "int a [ 1005 ] , b [ 1005 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare new int variables n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and m from the input",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n elements into array a from the input , starting from the index 1",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n elements into b , starting from the index 1",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> b [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if a [ 1 ] is equal to 0",
      "code": "if ( a [ 1 ] == 0 )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else if a [ 1 ] and a [ m ] are both equal to 1",
      "code": "else if ( a [ 1 ] == 1 && a [ m ] == 1 )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if b [ m ] = 0",
      "code": "if ( b [ m ] == 0 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print \" NO \" to the output stream",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "declare new integer variable bj with value 0",
      "code": "int bj = 0 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "in a for loop , change i from m + 1 to n inclusive",
      "code": "for ( int i = m + 1 ; i <= n ; i ++ )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "set the value of bj to 1 if a [ i ] and b [ i ] are both = 1",
      "code": "if ( a [ i ] == 1 && b [ i ] == 1 ) { bj = 1 ; }",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "if bj is not 0",
      "code": "if ( bj )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "print \" YES \" to the standard output",
      "code": "cout << \" YES \" << endl ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 21,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "bj [ i ] = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int b [ 1005 ] , b [ 1005 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b [1005]’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , m m ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "bj = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘bj’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( i = m + 1 ; i <= n ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "bj [ ' i ' ] = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[char]’ for array subscript"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        2
      ],
      "mod_code": [
        "bj [ i ] = 1 ;",
        "int n , m m ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        16,
        2,
        13
      ],
      "mod_code": [
        "bj [ i ] = 1 ;",
        "int n , m m ;",
        "else else"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        16,
        2,
        13,
        4
      ],
      "mod_code": [
        "bj [ i ] = 1 ;",
        "int n , m m ;",
        "else else",
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        16,
        2,
        13,
        6
      ],
      "mod_code": [
        "bj [ i ] = 1 ;",
        "int n , m m ;",
        "else else",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        16,
        2,
        4
      ],
      "mod_code": [
        "bj [ i ] = 1 ;",
        "int n , m m ;",
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        16,
        2,
        4,
        6
      ],
      "mod_code": [
        "bj [ i ] = 1 ;",
        "int n , m m ;",
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        16,
        2,
        6
      ],
      "mod_code": [
        "bj [ i ] = 1 ;",
        "int n , m m ;",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        16,
        13
      ],
      "mod_code": [
        "bj [ i ] = 1 ;",
        "else else"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        13,
        4
      ],
      "mod_code": [
        "bj [ i ] = 1 ;",
        "else else",
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        13,
        4,
        6
      ],
      "mod_code": [
        "bj [ i ] = 1 ;",
        "else else",
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        13,
        6
      ],
      "mod_code": [
        "bj [ i ] = 1 ;",
        "else else",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        4
      ],
      "mod_code": [
        "bj [ i ] = 1 ;",
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        4,
        6
      ],
      "mod_code": [
        "bj [ i ] = 1 ;",
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6
      ],
      "mod_code": [
        "bj [ i ] = 1 ;",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "int n , m m ;",
        "else else"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        2,
        13,
        16
      ],
      "mod_code": [
        "int n , m m ;",
        "else else",
        "bj [ ' i ' ] = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        2,
        13,
        16,
        4
      ],
      "mod_code": [
        "int n , m m ;",
        "else else",
        "bj [ ' i ' ] = 1 ;",
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        2,
        13,
        16,
        6
      ],
      "mod_code": [
        "int n , m m ;",
        "else else",
        "bj [ ' i ' ] = 1 ;",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        2,
        13,
        4
      ],
      "mod_code": [
        "int n , m m ;",
        "else else",
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        2,
        13,
        4,
        6
      ],
      "mod_code": [
        "int n , m m ;",
        "else else",
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        2,
        13,
        6
      ],
      "mod_code": [
        "int n , m m ;",
        "else else",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "int n , m m ;",
        "bj [ ' i ' ] = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        2,
        16,
        4
      ],
      "mod_code": [
        "int n , m m ;",
        "bj [ ' i ' ] = 1 ;",
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        2,
        16,
        4,
        6
      ],
      "mod_code": [
        "int n , m m ;",
        "bj [ ' i ' ] = 1 ;",
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        2,
        16,
        6
      ],
      "mod_code": [
        "int n , m m ;",
        "bj [ ' i ' ] = 1 ;",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "int n , m m ;",
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        2,
        4,
        6
      ],
      "mod_code": [
        "int n , m m ;",
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "int n , m m ;",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "else else",
        "bj [ ' i ' ] = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13,
        16,
        4
      ],
      "mod_code": [
        "else else",
        "bj [ ' i ' ] = 1 ;",
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        4,
        6
      ],
      "mod_code": [
        "else else",
        "bj [ ' i ' ] = 1 ;",
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        6
      ],
      "mod_code": [
        "else else",
        "bj [ ' i ' ] = 1 ;",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "else else",
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4,
        6
      ],
      "mod_code": [
        "else else",
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "else else",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        4
      ],
      "mod_code": [
        "bj [ ' i ' ] = 1 ;",
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        4,
        6
      ],
      "mod_code": [
        "bj [ ' i ' ] = 1 ;",
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6
      ],
      "mod_code": [
        "bj [ ' i ' ] = 1 ;",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[char]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "if ( a [ 1 ] == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}