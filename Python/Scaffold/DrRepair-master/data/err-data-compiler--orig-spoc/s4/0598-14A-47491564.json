{
  "meta": {
    "index": 598,
    "hitid": "3Z8UJEJOCZ7JORMOANGOM1M2QHS398",
    "workerid": "A1APYLD4DUK33J",
    "probid": "14A",
    "subid": "47491564"
  },
  "lines": [
    {
      "line": 0,
      "text": "create 2d character array a of size 55 by 55",
      "code": "char a [ 55 ] [ 55 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integers n , m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integers l1 , l2 , c1 , c2",
      "code": "int l1 , l2 , c1 , c2 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set l2 to c2 to 0",
      "code": "l2 = c2 = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set l1 to c1 to 100",
      "code": "l1 = c1 = 100 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create integer check with check = 0",
      "code": "int check = 0 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "read a [ i ] [ j ]",
      "code": "cin >> a [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if a [ i ] [ j ] is ' * '",
      "code": "if ( a [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "set check to 1",
      "code": "check = 1 ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "if j is less than c1 and c1 is j",
      "code": "if ( j < c1 ) c1 = j ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "if j is greater than c2 and c2 is j",
      "code": "if ( j > c2 ) c2 = j ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if check is true",
      "code": "if ( check )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if i is less than l1 , set l1 to i",
      "code": "if ( i < l1 ) l1 = i ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "if i is greater than l2 , set l2 to i",
      "code": "if ( i > l2 ) l2 = i ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for i = l1 , to l2 inclusive",
      "code": "for ( int i = l1 ; i <= l2 ; i ++ )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for j = c1 to c2 inclusive , print a [ i ] [ j ]",
      "code": "for ( int j = c1 ; j <= c2 ; j ++ ) cout << a [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( j > c2 && c2 == j )"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char a [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int l2 = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int l2’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int l1 = c1 = 100 ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int l1’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "check = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "check = l ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( j >= c2 && c2 == j )"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "for ( i = l1 ; i <= l2 ; i ++ )"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "if ( j < c1 && c1 == j )",
        "if ( j > c2 && c2 == j )"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        14,
        8
      ],
      "mod_code": [
        "if ( j < c1 && c1 == j )",
        "if ( j > c2 && c2 == j )",
        "check = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        8,
        7
      ],
      "mod_code": [
        "if ( j < c1 && c1 == j )",
        "if ( j > c2 && c2 == j )",
        "check = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        7
      ],
      "mod_code": [
        "if ( j < c1 && c1 == j )",
        "if ( j > c2 && c2 == j )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "if ( j < c1 && c1 == j )",
        "check = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        8,
        7
      ],
      "mod_code": [
        "if ( j < c1 && c1 == j )",
        "check = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        8,
        7,
        14
      ],
      "mod_code": [
        "if ( j < c1 && c1 == j )",
        "check = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( j >= c2 && c2 == j )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        8,
        14
      ],
      "mod_code": [
        "if ( j < c1 && c1 == j )",
        "check = 0 ;",
        "if ( j >= c2 && c2 == j )"
      ],
      "err_line": 8,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "if ( j < c1 && c1 == j )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7,
        14
      ],
      "mod_code": [
        "if ( j < c1 && c1 == j )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( j >= c2 && c2 == j )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "if ( j < c1 && c1 == j )",
        "if ( j >= c2 && c2 == j )"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        13
      ],
      "mod_code": [
        "if ( j > c2 && c2 == j )",
        "if ( j <= c1 && c1 == j )"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        13,
        8
      ],
      "mod_code": [
        "if ( j > c2 && c2 == j )",
        "if ( j <= c1 && c1 == j )",
        "check = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        13,
        8,
        7
      ],
      "mod_code": [
        "if ( j > c2 && c2 == j )",
        "if ( j <= c1 && c1 == j )",
        "check = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        13,
        7
      ],
      "mod_code": [
        "if ( j > c2 && c2 == j )",
        "if ( j <= c1 && c1 == j )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        8
      ],
      "mod_code": [
        "if ( j > c2 && c2 == j )",
        "check = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        8,
        7
      ],
      "mod_code": [
        "if ( j > c2 && c2 == j )",
        "check = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "if ( j > c2 && c2 == j )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "if ( j <= c1 && c1 == j )",
        "check = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        8,
        7
      ],
      "mod_code": [
        "if ( j <= c1 && c1 == j )",
        "check = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        8,
        7,
        14
      ],
      "mod_code": [
        "if ( j <= c1 && c1 == j )",
        "check = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( j >= c2 && c2 == j )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        8,
        14
      ],
      "mod_code": [
        "if ( j <= c1 && c1 == j )",
        "check = 0 ;",
        "if ( j >= c2 && c2 == j )"
      ],
      "err_line": 8,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "if ( j <= c1 && c1 == j )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7,
        14
      ],
      "mod_code": [
        "if ( j <= c1 && c1 == j )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( j >= c2 && c2 == j )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "if ( j <= c1 && c1 == j )",
        "if ( j >= c2 && c2 == j )"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "check = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7,
        14
      ],
      "mod_code": [
        "check = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( j >= c2 && c2 == j )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "check = 0 ;",
        "if ( j >= c2 && c2 == j )"
      ],
      "err_line": 8,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( j >= c2 && c2 == j )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}