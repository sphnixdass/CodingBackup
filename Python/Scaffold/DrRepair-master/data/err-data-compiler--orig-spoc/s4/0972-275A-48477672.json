{
  "meta": {
    "index": 972,
    "hitid": "3R0WOCG21M3FQBCO1NHRV6VSVH2UD4",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "275A",
    "subid": "48477672"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let grid be a 5x5 int matrix",
      "code": "int grid [ 5 ] [ 5 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let ans be a 5x5 int matrix",
      "code": "int ans [ 5 ] [ 5 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to 3 inclusive",
      "code": "for ( int i = 1 ; i <= 3 ; ++ i )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for j = 1 to 3 inclusive , increment j , read grid [ i ] [ j ] , set ans [ i ] [ j ] to 1",
      "code": "for ( int j = 1 ; j <= 3 ; ++ j ) cin >> grid [ i ] [ j ] , ans [ i ] [ j ] = 1 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for i = 1 to 3 inclusive , increment i",
      "code": "for ( int i = 1 ; i <= 3 ; ++ i )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 1 to 3 inclusive , increment j",
      "code": "for ( int j = 1 ; j <= 3 ; ++ j )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if grid [ i ] [ j ] is odd",
      "code": "if ( grid [ i ] [ j ] % 2 == 1 )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set ans [ i ] [ j ] to not ans [ i ] [ j ]",
      "code": "ans [ i ] [ j ] = ! ans [ i ] [ j ] ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "set ans [ i ] [ j + 1 ] to not ans [ i ] [ j + 1 ]",
      "code": "ans [ i ] [ j + 1 ] = ! ans [ i ] [ j + 1 ] ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "set ans [ i ] [ j - 1 ] to not ans [ i ] [ j - 1 ]",
      "code": "ans [ i ] [ j - 1 ] = ! ans [ i ] [ j - 1 ] ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "set ans [ i - 1 ] [ j ] to not ans [ i - 1 ] [ j ]",
      "code": "ans [ i - 1 ] [ j ] = ! ans [ i - 1 ] [ j ] ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "set ans [ i + 1 ] [ j ] to not ans [ i + 1 ] [ j ]",
      "code": "ans [ i + 1 ] [ j ] = ! ans [ i + 1 ] [ j ] ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i = 1 to 3 inclusive increment i",
      "code": "for ( int i = 1 ; i <= 3 ; ++ i )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for j = 1 to 3 inclusive , increment j , read ans [ i ] [ j ]",
      "code": "for ( int j = 1 ; j <= 3 ; ++ j ) cout << ans [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print new line",
      "code": "cout << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int ans [ 100 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int grid [ a ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int ans [ 101 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 1 ; j <= 3 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        7
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        7,
        8
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        7,
        9
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        7,
        10
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        7,
        11
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        7,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        7,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        8
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        9
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        10
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        11
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        9
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        9,
        10
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        9,
        11
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        9,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        9,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        10
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        10,
        11
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        10,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        10,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        11
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        11,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        11,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        12,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "int ans [ 100 ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        8
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        8,
        9
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        8,
        10
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        8,
        11
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        8,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        8,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        9
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        9,
        10
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        9,
        11
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        9,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        9,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        10
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        10,
        11
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        10,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        10,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        11
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        11,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        11,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        12,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        9
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        10
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        11
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        10
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        10,
        11
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        10,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        10,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        11
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        11,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        11,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        12,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        10
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        10,
        11
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        10,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        10,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        11
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        11,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        11,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        12,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        11
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        11,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        11,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        12,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        12,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        17
      ],
      "mod_code": [
        "int grid [ a ] [ 100 ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        8
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        9
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        10
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        11
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        12
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        9
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        9,
        10
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        9,
        11
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        9,
        12
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        9,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        10
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        10,
        11
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        10,
        12
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        10,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        11
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        11,
        12
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        11,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        12
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        12,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        7,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "if ( grid [ i ] [ j ] % 2 == 0 )",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        9
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        9,
        10
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        9,
        11
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        9,
        12
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        9,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        10
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        10,
        11
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        10,
        12
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        10,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        11
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        11,
        12
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        11,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        12
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        12,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j ] = ans [ i ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        10
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        10,
        11
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        10,
        12
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        10,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        11
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        11,
        12
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        11,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        12
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        12,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j + 1 ] = ans [ i ] [ j + 1 ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        10,
        11
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        10,
        11,
        12
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        10,
        11,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        10,
        12
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        10,
        12,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        10,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i ] [ j - 1 ] = ans [ i ] [ j - 1 ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        11,
        12
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        11,
        12,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        11,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i - 1 ] [ j ] = ans [ i - 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        12,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "ans [ i + 1 ] [ j ] = ans [ i + 1 ] [ j ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "int ans [ 100 ] ;",
        "for ( int j = 1 ; j <= 3 ; j ++ ) cin >> ans [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    }
  ]
}