{
  "meta": {
    "index": 507,
    "hitid": "3X878VYTIECAQKEOFLJ69EKTYWP7FJ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "408A",
    "subid": "47712388"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , obj , sum and min be integers with min = 1000000",
      "code": "int n , obj , sum , min = 1000000 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let arr be integer array with size n",
      "code": "int arr [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n elements into arr",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "sum = arr [ i ] * 15",
      "code": "sum = arr [ i ] * 15 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for j = 0 to arr [ i ] exclusive",
      "code": "for ( int j = 0 ; j < arr [ i ] ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read obj",
      "code": "cin >> obj ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "increase sum by obj * 5",
      "code": "sum += obj * 5 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if min is greater than sum , set min to sum",
      "code": "if ( min > sum ) { min = sum ; }",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print min and \" \\ n \"",
      "code": "cout << min << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , obj , sum = 1000000 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘<unresolved overloaded function type>’ and ‘int’ to binary ‘operator>’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < arr [ i ] ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "gets ( obj ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        7
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
        "for ( j = 0 ; j < arr [ i ] ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        7,
        8
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
        "for ( j = 0 ; j < arr [ i ] ; j ++ )",
        "gets ( obj ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        7,
        1
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
        "for ( j = 0 ; j < arr [ i ] ; j ++ )",
        "int n , obj , sum = 1000000 ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        8
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
        "gets ( obj ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        8,
        1
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
        "gets ( obj ) ;",
        "int n , obj , sum = 1000000 ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        1
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
        "int n , obj , sum = 1000000 ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( j = 0 ; j < arr [ i ] ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        8
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( j = 0 ; j < arr [ i ] ; j ++ )",
        "gets ( obj ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        1
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( j = 0 ; j < arr [ i ] ; j ++ )",
        "gets ( obj ) ;",
        "int n , obj , sum = 1000000 ;"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        1
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( j = 0 ; j < arr [ i ] ; j ++ )",
        "int n , obj , sum = 1000000 ;"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "while ( cin >> n )",
        "gets ( obj ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        1
      ],
      "mod_code": [
        "while ( cin >> n )",
        "gets ( obj ) ;",
        "int n , obj , sum = 1000000 ;"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "while ( cin >> n )",
        "int n , obj , sum = 1000000 ;"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
        "for ( j = 0 ; j < arr [ i ] ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
        "for ( j = 0 ; j < arr [ i ] ; j ++ )",
        "gets ( obj ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
        "for ( j = 0 ; j < arr [ i ] ; j ++ )",
        "gets ( obj ) ;",
        "int n , obj , sum = 1000000 ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
        "for ( j = 0 ; j < arr [ i ] ; j ++ )",
        "int n , obj , sum = 1000000 ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
        "gets ( obj ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
        "gets ( obj ) ;",
        "int n , obj , sum = 1000000 ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
        "int n , obj , sum = 1000000 ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < arr [ i ] ; j ++ )",
        "gets ( obj ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < arr [ i ] ; j ++ )",
        "gets ( obj ) ;",
        "int n , obj , sum = 1000000 ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < arr [ i ] ; j ++ )",
        "int n , obj , sum = 1000000 ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "gets ( obj ) ;",
        "int n , obj , sum = 1000000 ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}