{
  "meta": {
    "index": 1506,
    "hitid": "3VW0145YLY69GP772HCG7U9BNF3JMM",
    "workerid": "A1AYVATMT88U1W",
    "probid": "837A",
    "subid": "47253434"
  },
  "lines": [
    {
      "line": 0,
      "text": "let n , m , a , b , x , ff , l , r , cnt , ans be long integers with ff = 2e7 + 1",
      "code": "long long n , m , a , b , x , ff = 2e7 + 1 , l , r , cnt , ans ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create vector of long integer v , create vector of long integer f , create vector of long integer res",
      "code": "vector < long long > v , f , res ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let s1 , s2 be strings",
      "code": "string s1 , s2 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "used = array of long integers of length 1001",
      "code": "long long used [ 1001 ] ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "accept s1",
      "code": "getline ( cin , s1 ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "accept s2",
      "code": "getline ( cin , s1 ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to length of s1 exclusive",
      "code": "for ( int i = 0 ; i < s1 . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if s1 [ i ] equals ' '",
      "code": "if ( s1 [ i ] == ' ' )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "a is equal to maximum of cnt and a",
      "code": "a = max ( cnt , a ) ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "cnt is equal to 0",
      "code": "cnt = 0 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else if s1 [ i ] is greater than 64 and s1 [ i ] is less than 95",
      "code": "else if ( s1 [ i ] > 64 && s1 [ i ] < 95 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increment cnt by 1",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "a is equal to maximum of a and cnt",
      "code": "a = max ( a , cnt ) ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print a and newline",
      "code": "cout << a << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long n , m , a , b , x , ff , l , l , r , cnt , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long n , m , a , b , x , ff , l , l , cnt , cnt , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "vector < long long > v , f , f ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘std::vector<long long int> f’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string s1 , s2 , s2 ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘std::__cxx11::string s2’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "gets ( s1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "gets ( s2 ) ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "long long n , m , a , b , x , ff , l , l , r , cnt , ans ;",
        "cin >> s1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        0,
        6,
        7
      ],
      "mod_code": [
        "long long n , m , a , b , x , ff , l , l , r , cnt , ans ;",
        "cin >> s1 ;",
        "cin >> s2 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        0,
        6,
        7,
        9
      ],
      "mod_code": [
        "long long n , m , a , b , x , ff , l , l , r , cnt , ans ;",
        "cin >> s1 ;",
        "cin >> s2 ;",
        "if ( s1 [ i ] == ' ) ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        0,
        6,
        7,
        16
      ],
      "mod_code": [
        "long long n , m , a , b , x , ff , l , l , r , cnt , ans ;",
        "cin >> s1 ;",
        "cin >> s2 ;",
        "a += cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        0,
        6,
        9
      ],
      "mod_code": [
        "long long n , m , a , b , x , ff , l , l , r , cnt , ans ;",
        "cin >> s1 ;",
        "if ( s1 [ i ] == ' ) ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        0,
        6,
        9,
        16
      ],
      "mod_code": [
        "long long n , m , a , b , x , ff , l , l , r , cnt , ans ;",
        "cin >> s1 ;",
        "if ( s1 [ i ] == ' ) ' )",
        "a += cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        0,
        6,
        16
      ],
      "mod_code": [
        "long long n , m , a , b , x , ff , l , l , r , cnt , ans ;",
        "cin >> s1 ;",
        "a += cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "long long n , m , a , b , x , ff , l , l , r , cnt , ans ;",
        "cin >> s2 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        0,
        7,
        9
      ],
      "mod_code": [
        "long long n , m , a , b , x , ff , l , l , r , cnt , ans ;",
        "cin >> s2 ;",
        "if ( s1 [ i ] == ' ) ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        0,
        7,
        9,
        16
      ],
      "mod_code": [
        "long long n , m , a , b , x , ff , l , l , r , cnt , ans ;",
        "cin >> s2 ;",
        "if ( s1 [ i ] == ' ) ' )",
        "a += cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        0,
        7,
        16
      ],
      "mod_code": [
        "long long n , m , a , b , x , ff , l , l , r , cnt , ans ;",
        "cin >> s2 ;",
        "a += cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "long long n , m , a , b , x , ff , l , l , r , cnt , ans ;",
        "if ( s1 [ i ] == ' ) ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        0,
        9,
        16
      ],
      "mod_code": [
        "long long n , m , a , b , x , ff , l , l , r , cnt , ans ;",
        "if ( s1 [ i ] == ' ) ' )",
        "a += cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "long long n , m , a , b , x , ff , l , l , r , cnt , ans ;",
        "a += cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        6,
        7,
        0
      ],
      "mod_code": [
        "cin >> s1 ;",
        "cin >> s2 ;",
        "long long n , m , a , b , x , ff , l , l , cnt , cnt , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        6,
        7,
        0,
        9
      ],
      "mod_code": [
        "cin >> s1 ;",
        "cin >> s2 ;",
        "long long n , m , a , b , x , ff , l , l , cnt , cnt , ans ;",
        "if ( s1 [ i ] == ' ) ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        6,
        7,
        0,
        16
      ],
      "mod_code": [
        "cin >> s1 ;",
        "cin >> s2 ;",
        "long long n , m , a , b , x , ff , l , l , cnt , cnt , ans ;",
        "a += cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "cin >> s1 ;",
        "long long n , m , a , b , x , ff , l , l , cnt , cnt , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        6,
        0,
        9
      ],
      "mod_code": [
        "cin >> s1 ;",
        "long long n , m , a , b , x , ff , l , l , cnt , cnt , ans ;",
        "if ( s1 [ i ] == ' ) ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        6,
        0,
        9,
        16
      ],
      "mod_code": [
        "cin >> s1 ;",
        "long long n , m , a , b , x , ff , l , l , cnt , cnt , ans ;",
        "if ( s1 [ i ] == ' ) ' )",
        "a += cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        6,
        0,
        16
      ],
      "mod_code": [
        "cin >> s1 ;",
        "long long n , m , a , b , x , ff , l , l , cnt , cnt , ans ;",
        "a += cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "cin >> s2 ;",
        "long long n , m , a , b , x , ff , l , l , cnt , cnt , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        7,
        0,
        9
      ],
      "mod_code": [
        "cin >> s2 ;",
        "long long n , m , a , b , x , ff , l , l , cnt , cnt , ans ;",
        "if ( s1 [ i ] == ' ) ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        7,
        0,
        9,
        16
      ],
      "mod_code": [
        "cin >> s2 ;",
        "long long n , m , a , b , x , ff , l , l , cnt , cnt , ans ;",
        "if ( s1 [ i ] == ' ) ' )",
        "a += cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        7,
        0,
        16
      ],
      "mod_code": [
        "cin >> s2 ;",
        "long long n , m , a , b , x , ff , l , l , cnt , cnt , ans ;",
        "a += cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "long long n , m , a , b , x , ff , l , l , cnt , cnt , ans ;",
        "if ( s1 [ i ] == ' ) ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        0,
        9,
        16
      ],
      "mod_code": [
        "long long n , m , a , b , x , ff , l , l , cnt , cnt , ans ;",
        "if ( s1 [ i ] == ' ) ' )",
        "a += cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "long long n , m , a , b , x , ff , l , l , cnt , cnt , ans ;",
        "a += cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int l’"
    }
  ]
}