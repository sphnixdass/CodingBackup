{
  "meta": {
    "index": 1182,
    "hitid": "3QHITW7OYO3P0B2V046KV4QX663QAM",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "910A",
    "subid": "48463544"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , d = int",
      "code": "int n , d ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , d , s",
      "code": "cin >> n >> d >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "dp = array of n + 1 int",
      "code": "int dp [ n + 1 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "first element of dp = 0",
      "code": "dp [ 0 ] = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s [ i ] is ' 1 '",
      "code": "if ( s [ i ] == ' 1 ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "dp [ i ] = one billion",
      "code": "dp [ i ] = 1e9 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "for j = i - d to i exclusive",
      "code": "for ( int j = i - d ; j < i ; ++ j )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if j is negative continue",
      "code": "if ( j < 0 ) continue ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] )",
      "code": "dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "dp [ i ] = one billion",
      "code": "dp [ i ] = 1e9 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if dp [ n - 1 ] > = one billion",
      "code": "if ( dp [ n - 1 ] >= 1e9 )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print - 1",
      "code": "cout << \" -1\\n \" ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print dp [ n - 1 ]",
      "code": "cout << dp [ n - 1 ] << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "dp . first = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( j < continue )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘continue’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( j < continue ) { continue ; }"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘continue’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "for ( int j = i - d ; j > i ; j -- )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        5,
        9,
        10
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "for ( int j = i - d ; j > i ; j -- )",
        "if ( j < continue )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        17
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "for ( int j = i - d ; j > i ; j -- )",
        "if ( j < continue )",
        "if ( dp [ n - 1 ] >= 0 )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        8
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "for ( int j = i - d ; j > i ; j -- )",
        "if ( j < continue )",
        "dp [ i ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        5,
        9,
        17
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "for ( int j = i - d ; j > i ; j -- )",
        "if ( dp [ n - 1 ] >= 0 )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        5,
        9,
        17,
        8
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "for ( int j = i - d ; j > i ; j -- )",
        "if ( dp [ n - 1 ] >= 0 )",
        "dp [ i ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        5,
        9,
        8
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "for ( int j = i - d ; j > i ; j -- )",
        "dp [ i ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "if ( j < continue )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        5,
        10,
        17
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "if ( j < continue )",
        "if ( dp [ n - 1 ] >= 0 )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        5,
        10,
        17,
        9
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "if ( j < continue )",
        "if ( dp [ n - 1 ] >= 0 )",
        "for ( int j = i - d ; j >= i ; j -- )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        5,
        10,
        17,
        8
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "if ( j < continue )",
        "if ( dp [ n - 1 ] >= 0 )",
        "dp [ i ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        5,
        10,
        9
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "if ( j < continue )",
        "for ( int j = i - d ; j >= i ; j -- )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        5,
        10,
        9,
        8
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "if ( j < continue )",
        "for ( int j = i - d ; j >= i ; j -- )",
        "dp [ i ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        5,
        10,
        8
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "if ( j < continue )",
        "dp [ i ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "if ( dp [ n - 1 ] >= 0 )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        5,
        17,
        9
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "if ( dp [ n - 1 ] >= 0 )",
        "for ( int j = i - d ; j >= i ; j -- )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        5,
        17,
        9,
        8
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "if ( dp [ n - 1 ] >= 0 )",
        "for ( int j = i - d ; j >= i ; j -- )",
        "dp [ i ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        5,
        17,
        8
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "if ( dp [ n - 1 ] >= 0 )",
        "dp [ i ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "for ( int j = i - d ; j >= i ; j -- )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        5,
        9,
        8
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "for ( int j = i - d ; j >= i ; j -- )",
        "dp [ i ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "dp . first = 0 ;",
        "dp [ i ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘first’ in ‘dp’, which is of non-class type ‘int [(n + 1)]’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "for ( int j = i - d ; j > i ; j -- )",
        "if ( j < continue )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘continue’"
    },
    {
      "mod_line": [
        9,
        10,
        17
      ],
      "mod_code": [
        "for ( int j = i - d ; j > i ; j -- )",
        "if ( j < continue )",
        "if ( dp [ n - 1 ] >= 0 )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘continue’"
    },
    {
      "mod_line": [
        9,
        10,
        17,
        8
      ],
      "mod_code": [
        "for ( int j = i - d ; j > i ; j -- )",
        "if ( j < continue )",
        "if ( dp [ n - 1 ] >= 0 )",
        "dp [ i ] = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘continue’"
    },
    {
      "mod_line": [
        9,
        10,
        8
      ],
      "mod_code": [
        "for ( int j = i - d ; j > i ; j -- )",
        "if ( j < continue )",
        "dp [ i ] = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘continue’"
    },
    {
      "mod_line": [
        10,
        17
      ],
      "mod_code": [
        "if ( j < continue )",
        "if ( dp [ n - 1 ] >= 0 )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘continue’"
    },
    {
      "mod_line": [
        10,
        17,
        9
      ],
      "mod_code": [
        "if ( j < continue )",
        "if ( dp [ n - 1 ] >= 0 )",
        "for ( int j = i - d ; j >= i ; j -- )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘continue’"
    },
    {
      "mod_line": [
        10,
        17,
        9,
        8
      ],
      "mod_code": [
        "if ( j < continue )",
        "if ( dp [ n - 1 ] >= 0 )",
        "for ( int j = i - d ; j >= i ; j -- )",
        "dp [ i ] = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘continue’"
    },
    {
      "mod_line": [
        10,
        17,
        8
      ],
      "mod_code": [
        "if ( j < continue )",
        "if ( dp [ n - 1 ] >= 0 )",
        "dp [ i ] = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘continue’"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "if ( j < continue )",
        "for ( int j = i - d ; j >= i ; j -- )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘continue’"
    },
    {
      "mod_line": [
        10,
        9,
        8
      ],
      "mod_code": [
        "if ( j < continue )",
        "for ( int j = i - d ; j >= i ; j -- )",
        "dp [ i ] = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘continue’"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "if ( j < continue )",
        "dp [ i ] = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘continue’"
    }
  ]
}