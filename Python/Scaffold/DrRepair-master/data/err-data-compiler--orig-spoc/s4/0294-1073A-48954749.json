{
  "meta": {
    "index": 294,
    "hitid": "3APP19WN718X0KWE7VKWLLK95NY6GM",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "1073A",
    "subid": "48954749"
  },
  "lines": [
    {
      "line": 0,
      "text": "set maxn = 2e5 + 5",
      "code": "const int maxn = 2e5 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long long array a of length maxn",
      "code": "long long a [ maxn ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create long long b [ maxn ]",
      "code": "long long b [ maxn ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "let str be string",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create int n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set flag to true",
      "code": "bool flag = true ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 1 to length of str",
      "code": "for ( int i = 1 ; i < str . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if str [ i - 1 ] different from str [ i ]",
      "code": "if ( str [ i - 1 ] != str [ i ] )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "flag = false",
      "code": "flag = false ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "print str [ i - 1 ] and str [ i ]",
      "code": "cout << str [ i - 1 ] << str [ i ] << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "break the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if flaf different from 0 , print NO",
      "code": "if ( flag ) cout << \" NO \" << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "flag = true ;"
      ],
      "err_line": 8,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( flaf != 0 ) cout << \" NO \" << endl ;"
      ],
      "err_line": 17,
      "err_msg": "‘flaf’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "char str ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int a ;"
      ],
      "err_line": 6,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "gets ( str ) ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( flaf ) cout << \" NO \" << endl ;"
      ],
      "err_line": 17,
      "err_msg": "‘flaf’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "flag = true ;",
        "if ( flaf != 0 ) cout << \" NO \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17,
        4
      ],
      "mod_code": [
        "flag = true ;",
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "char str ;"
      ],
      "err_line": 8,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17,
        4,
        12
      ],
      "mod_code": [
        "flag = true ;",
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "char str ;",
        "bool flag = false ;"
      ],
      "err_line": 8,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17,
        4,
        7
      ],
      "mod_code": [
        "flag = true ;",
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "char str ;",
        "gets ( str ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        17,
        4,
        13
      ],
      "mod_code": [
        "flag = true ;",
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "char str ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17,
        12
      ],
      "mod_code": [
        "flag = true ;",
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "bool flag = false ;"
      ],
      "err_line": 8,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17,
        12,
        7
      ],
      "mod_code": [
        "flag = true ;",
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "bool flag = false ;",
        "gets ( str ) ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        17,
        12,
        13
      ],
      "mod_code": [
        "flag = true ;",
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "bool flag = false ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17,
        7
      ],
      "mod_code": [
        "flag = true ;",
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "gets ( str ) ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        17,
        7,
        13
      ],
      "mod_code": [
        "flag = true ;",
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "gets ( str ) ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        17,
        13
      ],
      "mod_code": [
        "flag = true ;",
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "flag = true ;",
        "char str ;"
      ],
      "err_line": 8,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4,
        12
      ],
      "mod_code": [
        "flag = true ;",
        "char str ;",
        "bool flag = false ;"
      ],
      "err_line": 8,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4,
        12,
        7
      ],
      "mod_code": [
        "flag = true ;",
        "char str ;",
        "bool flag = false ;",
        "gets ( str ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4,
        12,
        13
      ],
      "mod_code": [
        "flag = true ;",
        "char str ;",
        "bool flag = false ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4,
        7
      ],
      "mod_code": [
        "flag = true ;",
        "char str ;",
        "gets ( str ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4,
        7,
        13
      ],
      "mod_code": [
        "flag = true ;",
        "char str ;",
        "gets ( str ) ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4,
        13
      ],
      "mod_code": [
        "flag = true ;",
        "char str ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "flag = true ;",
        "bool flag = false ;"
      ],
      "err_line": 8,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        7
      ],
      "mod_code": [
        "flag = true ;",
        "bool flag = false ;",
        "gets ( str ) ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        12,
        7,
        13
      ],
      "mod_code": [
        "flag = true ;",
        "bool flag = false ;",
        "gets ( str ) ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        12,
        13
      ],
      "mod_code": [
        "flag = true ;",
        "bool flag = false ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "flag = true ;",
        "gets ( str ) ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        7,
        13
      ],
      "mod_code": [
        "flag = true ;",
        "gets ( str ) ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "flag = true ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        4
      ],
      "mod_code": [
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "char str ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        17,
        4,
        12
      ],
      "mod_code": [
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "char str ;",
        "bool flag = false ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        17,
        4,
        12,
        7
      ],
      "mod_code": [
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "char str ;",
        "bool flag = false ;",
        "gets ( str ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        4,
        12,
        13
      ],
      "mod_code": [
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "char str ;",
        "bool flag = false ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        17,
        4,
        7
      ],
      "mod_code": [
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "char str ;",
        "gets ( str ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        4,
        7,
        13
      ],
      "mod_code": [
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "char str ;",
        "gets ( str ) ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        4,
        13
      ],
      "mod_code": [
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "char str ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        17,
        12
      ],
      "mod_code": [
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "bool flag = false ;"
      ],
      "err_line": 17,
      "err_msg": "‘flaf’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        12,
        7
      ],
      "mod_code": [
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "bool flag = false ;",
        "gets ( str ) ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        17,
        12,
        7,
        13
      ],
      "mod_code": [
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "bool flag = false ;",
        "gets ( str ) ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        17,
        12,
        13
      ],
      "mod_code": [
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "bool flag = false ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘flaf’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        7
      ],
      "mod_code": [
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "gets ( str ) ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        17,
        7,
        13
      ],
      "mod_code": [
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "gets ( str ) ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        17,
        13
      ],
      "mod_code": [
        "if ( flaf != 0 ) cout << \" NO \" << endl ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘flaf’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "char str ;",
        "bool flag = false ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4,
        12,
        7
      ],
      "mod_code": [
        "char str ;",
        "bool flag = false ;",
        "gets ( str ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        12,
        7,
        13
      ],
      "mod_code": [
        "char str ;",
        "bool flag = false ;",
        "gets ( str ) ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        12,
        13
      ],
      "mod_code": [
        "char str ;",
        "bool flag = false ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "char str ;",
        "gets ( str ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        13
      ],
      "mod_code": [
        "char str ;",
        "gets ( str ) ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "char str ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "bool flag = false ;",
        "gets ( str ) ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        12,
        7,
        13
      ],
      "mod_code": [
        "bool flag = false ;",
        "gets ( str ) ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "gets ( str ) ;",
        "cout << str [ i - 1 ] << str [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    }
  ]
}