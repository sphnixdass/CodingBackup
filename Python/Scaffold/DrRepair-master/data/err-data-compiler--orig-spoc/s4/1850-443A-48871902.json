{
  "meta": {
    "index": 1850,
    "hitid": "3OYHVNTV5TSSRCY1XIR50DYTWHEKOM",
    "workerid": "A1APYLD4DUK33J",
    "probid": "443A",
    "subid": "48871902"
  },
  "lines": [
    {
      "line": 0,
      "text": "create character array a with size 1005",
      "code": "char a [ 1005 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create boolean array b with size 1005",
      "code": "bool b [ 1005 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integer i with i = 0",
      "code": "int i = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while 1 is true",
      "code": "while ( 1 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if a [ i ] is ' } ' , break loop",
      "code": "if ( a [ i ] == ' } ' ) { break ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create integer t with t = 0",
      "code": "int t = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "while a [ t ] is not ' } '",
      "code": "while ( a [ t ] != ' } ' )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if a [ t ] is greater than or equal to ' a ' , set b [ integer casted a [ t ] ] to 1",
      "code": "if ( a [ t ] >= ' a ' ) { b [ ( int ) a [ t ] ] = 1 ; }",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment t",
      "code": "t ++ ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "create integer sum with sum = 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = ' a ' to ' z ' inclusive",
      "code": "for ( int i = ' a ' ; i <= ' z ' ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if b [ i ] is 1 , increment sum",
      "code": "if ( b [ i ] == 1 ) { sum ++ ; }",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print sum print newline",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( a [ i ] == ' } break ) break ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "while ( a [ t ] != ' } ' }"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘}’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( a [ t ] >= ' a ' ) b [ int a [ t ] ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "i = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( l )"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "a >> a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘char [1005]’ and ‘char’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( a [ i ] == ' } } break ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( a [ t ] >= ' a ' ) b [ int ( a [ t ] ] = 1 ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "if ( a [ i ] == ' } break ) break ;",
        "while ( a [ t ] != ' } ' }"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        10,
        11
      ],
      "mod_code": [
        "if ( a [ i ] == ' } break ) break ;",
        "while ( a [ t ] != ' } ' }",
        "if ( a [ t ] >= ' a ' ) b [ int a [ t ] ] = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        18
      ],
      "mod_code": [
        "if ( a [ i ] == ' } break ) break ;",
        "while ( a [ t ] != ' } ' }",
        "if ( a [ t ] >= ' a ' ) b [ int a [ t ] ] = 1 ;",
        "cout << sum ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        10,
        18
      ],
      "mod_code": [
        "if ( a [ i ] == ' } break ) break ;",
        "while ( a [ t ] != ' } ' }",
        "cout << sum ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        10,
        18,
        11
      ],
      "mod_code": [
        "if ( a [ i ] == ' } break ) break ;",
        "while ( a [ t ] != ' } ' }",
        "cout << sum ;",
        "if ( a [ t ] >= ' a ' ) b [ int ( a [ t ] ] = 1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        10,
        11
      ],
      "mod_code": [
        "if ( a [ i ] == ' } break ) break ;",
        "while ( a [ t ] != ' } ' }",
        "if ( a [ t ] >= ' a ' ) b [ int ( a [ t ] ] = 1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "if ( a [ i ] == ' } break ) break ;",
        "if ( a [ t ] >= ' a ' ) b [ int a [ t ] ] = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        11,
        18
      ],
      "mod_code": [
        "if ( a [ i ] == ' } break ) break ;",
        "if ( a [ t ] >= ' a ' ) b [ int a [ t ] ] = 1 ;",
        "cout << sum ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        18
      ],
      "mod_code": [
        "if ( a [ i ] == ' } break ) break ;",
        "cout << sum ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        18,
        11
      ],
      "mod_code": [
        "if ( a [ i ] == ' } break ) break ;",
        "cout << sum ;",
        "if ( a [ t ] >= ' a ' ) b [ int ( a [ t ] ] = 1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "if ( a [ i ] == ' } break ) break ;",
        "if ( a [ t ] >= ' a ' ) b [ int ( a [ t ] ] = 1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "while ( a [ t ] != ' } ' }",
        "if ( a [ t ] >= ' a ' ) b [ int a [ t ] ] = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        11,
        18
      ],
      "mod_code": [
        "while ( a [ t ] != ' } ' }",
        "if ( a [ t ] >= ' a ' ) b [ int a [ t ] ] = 1 ;",
        "cout << sum ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        11,
        18,
        6
      ],
      "mod_code": [
        "while ( a [ t ] != ' } ' }",
        "if ( a [ t ] >= ' a ' ) b [ int a [ t ] ] = 1 ;",
        "cout << sum ;",
        "if ( a [ i ] == ' } } break ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        10,
        11,
        6
      ],
      "mod_code": [
        "while ( a [ t ] != ' } ' }",
        "if ( a [ t ] >= ' a ' ) b [ int a [ t ] ] = 1 ;",
        "if ( a [ i ] == ' } } break ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        10,
        18
      ],
      "mod_code": [
        "while ( a [ t ] != ' } ' }",
        "cout << sum ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        18,
        11
      ],
      "mod_code": [
        "while ( a [ t ] != ' } ' }",
        "cout << sum ;",
        "if ( a [ t ] >= ' a ' ) b [ int ( a [ t ] ] = 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        18,
        11,
        6
      ],
      "mod_code": [
        "while ( a [ t ] != ' } ' }",
        "cout << sum ;",
        "if ( a [ t ] >= ' a ' ) b [ int ( a [ t ] ] = 1 ) ;",
        "if ( a [ i ] == ' } } break ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        10,
        18,
        6
      ],
      "mod_code": [
        "while ( a [ t ] != ' } ' }",
        "cout << sum ;",
        "if ( a [ i ] == ' } } break ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "while ( a [ t ] != ' } ' }",
        "if ( a [ t ] >= ' a ' ) b [ int ( a [ t ] ] = 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        11,
        6
      ],
      "mod_code": [
        "while ( a [ t ] != ' } ' }",
        "if ( a [ t ] >= ' a ' ) b [ int ( a [ t ] ] = 1 ) ;",
        "if ( a [ i ] == ' } } break ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "while ( a [ t ] != ' } ' }",
        "if ( a [ i ] == ' } } break ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        11,
        18
      ],
      "mod_code": [
        "if ( a [ t ] >= ' a ' ) b [ int a [ t ] ] = 1 ;",
        "cout << sum ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        11,
        18,
        6
      ],
      "mod_code": [
        "if ( a [ t ] >= ' a ' ) b [ int a [ t ] ] = 1 ;",
        "cout << sum ;",
        "if ( a [ i ] == ' } } break ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "if ( a [ t ] >= ' a ' ) b [ int a [ t ] ] = 1 ;",
        "if ( a [ i ] == ' } } break ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        18,
        11
      ],
      "mod_code": [
        "cout << sum ;",
        "if ( a [ t ] >= ' a ' ) b [ int ( a [ t ] ] = 1 ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        18,
        11,
        6
      ],
      "mod_code": [
        "cout << sum ;",
        "if ( a [ t ] >= ' a ' ) b [ int ( a [ t ] ] = 1 ) ;",
        "if ( a [ i ] == ' } } break ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        18,
        6
      ],
      "mod_code": [
        "cout << sum ;",
        "if ( a [ i ] == ' } } break ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "if ( a [ t ] >= ' a ' ) b [ int ( a [ t ] ] = 1 ) ;",
        "if ( a [ i ] == ' } } break ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating ' character"
    }
  ]
}