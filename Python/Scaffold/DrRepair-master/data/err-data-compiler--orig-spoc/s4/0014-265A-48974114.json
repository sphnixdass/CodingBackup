{
  "meta": {
    "index": 14,
    "hitid": "385MDVINFC95L11L6JI3GSB2LH9JW5",
    "workerid": "AIWEXPJAU66D9",
    "probid": "265A",
    "subid": "48974114"
  },
  "lines": [
    {
      "line": 0,
      "text": "boolean function isl with char argument c",
      "code": "bool isl ( char c )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return c > = ' a ' & & c < = ' z '",
      "code": "return ( c >= ' a ' && c <= ' z ' ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "boolean function isu with char argument c",
      "code": "bool isu ( char c )",
      "indent": 0
    },
    {
      "line": 4,
      "text": "return c > = ' A ' & & c < = ' Z '",
      "code": "return ( c >= ' A ' && c <= ' Z ' ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "boolean function isa with char argument c",
      "code": "bool isa ( char c )",
      "indent": 0
    },
    {
      "line": 7,
      "text": "return isl ( c ) or isu ( c )",
      "code": "return ( isl ( c ) || isu ( c ) ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "boolean function isn with char argument c",
      "code": "bool isn ( char c )",
      "indent": 0
    },
    {
      "line": 10,
      "text": "return c > = ' 0 ' & & c < = ' 9 '",
      "code": "return ( c >= ' 0 ' && c <= ' 9 ' ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 12,
      "text": "boolean function isan with char argument c",
      "code": "bool isan ( char c )",
      "indent": 0
    },
    {
      "line": 13,
      "text": "return isa ( c ) or isn ( c )",
      "code": "return ( isa ( c ) || isn ( c ) ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 15,
      "text": "boolean function isv with char argument c",
      "code": "bool isv ( char c )",
      "indent": 0
    },
    {
      "line": 16,
      "text": "return c = ' a ' or c = ' e ' or c = ' i ' or c = ' o ' or c = ' u '",
      "code": "return ( c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 18,
      "text": "string function tolow with string argument s",
      "code": "string tolow ( string s )",
      "indent": 0
    },
    {
      "line": 19,
      "text": "for i from 0 to length of s exclusive",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if isu ( s [ i ] ) is true , change s [ i ] to s [ i ] - ' A ' + ' a '",
      "code": "if ( isu ( s [ i ] ) ) s [ i ] = s [ i ] - ' A ' + ' a ' ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "return s",
      "code": "return s ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 23,
      "text": "string function toup with string argument s",
      "code": "string toup ( string s )",
      "indent": 0
    },
    {
      "line": 24,
      "text": "for i from 0 to length of s exclusive",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "if isl ( s [ i ] ) is true , change s [ i ] to s [ i ] - ' a ' + ' A '",
      "code": "if ( isl ( s [ i ] ) ) s [ i ] = s [ i ] - ' a ' + ' A ' ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "return s",
      "code": "return s ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 29,
      "text": "create strings s1 and s2",
      "code": "string s1 , s2 ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "declare integer variable ans",
      "code": "int ans ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "read s1 and s2",
      "code": "cin >> s1 >> s2 ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "change ans to 0",
      "code": "ans = 0 ;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "for i = 0 to length of s2 exclusive",
      "code": "for ( int i = 0 ; i < s2 . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 34,
      "text": "if s1 [ ans ] = s2 [ i ] , increment ans",
      "code": "if ( s1 [ ans ] == s2 [ i ] ) ans ++ ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "print ans + 1",
      "code": "cout << ans + 1 << endl ;",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "bool isdigit ( char c )"
      ],
      "err_line": 13,
      "err_msg": "‘isn’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool isl ( char c ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "bool isu ( char c ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "return c >= ' A ' && c <= ' Z ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "bool isa ( char c ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "return isl ( c ) ? isu ( c ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "bool isan ( char c ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "bool isv ( char c ) ;"
      ],
      "err_line": 16,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "return c = ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "string tolow ( string s ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "return ' s ' ;"
      ],
      "err_line": 21,
      "err_msg": "could not convert ‘'s'’ from ‘char’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "string toup ( string s ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "return ' s ' ;"
      ],
      "err_line": 26,
      "err_msg": "could not convert ‘'s'’ from ‘char’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "string s1 , s2 create ;"
      ],
      "err_line": 29,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "s1 >> s1 >> s2 ;"
      ],
      "err_line": 31,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "int ans = 0 ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘isn’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        16,
        12
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "bool isan ( char c ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        16,
        12,
        18
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "bool isan ( char c ) ;",
        "string tolow ( string s ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        16,
        12,
        20
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "bool isan ( char c ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        16,
        12,
        21
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "bool isan ( char c ) ;",
        "return ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        16,
        18
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "string tolow ( string s ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘isn’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        16,
        18,
        20
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "string tolow ( string s ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }"
      ],
      "err_line": 13,
      "err_msg": "‘isn’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        16,
        18,
        21
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "string tolow ( string s ) ;",
        "return ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "‘isn’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        16,
        20
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }"
      ],
      "err_line": 13,
      "err_msg": "‘isn’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        16,
        20,
        21
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }",
        "return ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "‘isn’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        16,
        21
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "return ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "‘isn’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "bool isan ( char c ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        12,
        18
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "bool isan ( char c ) ;",
        "string tolow ( string s ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        12,
        18,
        20
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "bool isan ( char c ) ;",
        "string tolow ( string s ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        12,
        18,
        21
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "bool isan ( char c ) ;",
        "string tolow ( string s ) ;",
        "return ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        12,
        20
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "bool isan ( char c ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        12,
        20,
        21
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "bool isan ( char c ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }",
        "return ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        12,
        21
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "bool isan ( char c ) ;",
        "return ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        18
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "string tolow ( string s ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘isn’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        20
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "string tolow ( string s ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }"
      ],
      "err_line": 13,
      "err_msg": "‘isn’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        20,
        21
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "string tolow ( string s ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }",
        "return ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "‘isn’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        21
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "string tolow ( string s ) ;",
        "return ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "‘isn’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        20
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }"
      ],
      "err_line": 13,
      "err_msg": "‘isn’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        20,
        21
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }",
        "return ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "‘isn’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21
      ],
      "mod_code": [
        "bool isdigit ( char c )",
        "return ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "‘isn’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        12
      ],
      "mod_code": [
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "bool isan ( char c ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        12,
        18
      ],
      "mod_code": [
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "bool isan ( char c ) ;",
        "string tolow ( string s ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        12,
        18,
        20
      ],
      "mod_code": [
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "bool isan ( char c ) ;",
        "string tolow ( string s ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        12,
        18,
        21
      ],
      "mod_code": [
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "bool isan ( char c ) ;",
        "string tolow ( string s ) ;",
        "return ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        12,
        20
      ],
      "mod_code": [
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "bool isan ( char c ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        12,
        20,
        21
      ],
      "mod_code": [
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "bool isan ( char c ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }",
        "return ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        12,
        21
      ],
      "mod_code": [
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "bool isan ( char c ) ;",
        "return ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "string tolow ( string s ) ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        18,
        20
      ],
      "mod_code": [
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "string tolow ( string s ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        18,
        20,
        21
      ],
      "mod_code": [
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "string tolow ( string s ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }",
        "return ' s ' ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        18,
        21
      ],
      "mod_code": [
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "string tolow ( string s ) ;",
        "return ' s ' ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        20
      ],
      "mod_code": [
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        20,
        21
      ],
      "mod_code": [
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }",
        "return ' s ' ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        21
      ],
      "mod_code": [
        "return c == ' a ' || c == ' e ' || c == ' i ' || c == ' o ' || c == ' u ' ) ;",
        "return ' s ' ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        18
      ],
      "mod_code": [
        "bool isan ( char c ) ;",
        "string tolow ( string s ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        18,
        20
      ],
      "mod_code": [
        "bool isan ( char c ) ;",
        "string tolow ( string s ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        18,
        20,
        21
      ],
      "mod_code": [
        "bool isan ( char c ) ;",
        "string tolow ( string s ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }",
        "return ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        18,
        21
      ],
      "mod_code": [
        "bool isan ( char c ) ;",
        "string tolow ( string s ) ;",
        "return ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        20
      ],
      "mod_code": [
        "bool isan ( char c ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        20,
        21
      ],
      "mod_code": [
        "bool isan ( char c ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }",
        "return ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        21
      ],
      "mod_code": [
        "bool isan ( char c ) ;",
        "return ' s ' ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        20
      ],
      "mod_code": [
        "string tolow ( string s ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        20,
        21
      ],
      "mod_code": [
        "string tolow ( string s ) ;",
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }",
        "return ' s ' ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        21
      ],
      "mod_code": [
        "string tolow ( string s ) ;",
        "return ' s ' ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        21
      ],
      "mod_code": [
        "if ( isu ( s [ i ] ) ) { s [ i ] = s [ i ] - ' A ' + ' a ' } ; }",
        "return ' s ' ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘}’ token"
    }
  ]
}