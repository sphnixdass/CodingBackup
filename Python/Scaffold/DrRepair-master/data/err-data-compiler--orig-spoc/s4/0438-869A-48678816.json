{
  "meta": {
    "index": 438,
    "hitid": "368IUKXGA523DXPDAEAJFUY16EOP6C",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "869A",
    "subid": "48678816"
  },
  "lines": [
    {
      "line": 0,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a = integer array of size 2001",
      "code": "int a [ 2001 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "b = integer array of size 2001",
      "code": "int b [ 2001 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "ans = integer",
      "code": "int ans ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "s = integer set",
      "code": "set < int > s ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "insert at the end of s a new element of a [ i ]",
      "code": "s . insert ( a [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for j = 1 to n inclusive",
      "code": "for ( int j = 1 ; j <= n ; j ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read b [ j ]",
      "code": "cin >> b [ j ] ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "insert at the end of s a new element of b [ i ]",
      "code": "s . insert ( b [ j ] ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for j = 1 to n inclusive",
      "code": "for ( int j = 1 ; j <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if the result of a bitwise exclusive or on a [ i ] and b [ j ] is not an iterator that point to the last value of s , then increase ans by 1",
      "code": "if ( s . find ( a [ i ] ^ b [ j ] ) != s . end ( ) ) { ans ++ ; }",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if ans modulo 2 is possible",
      "code": "if ( ans % 2 )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print Koyomi",
      "code": "cout << \" Koyomi \" << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print Karen",
      "code": "cout << \" Karen \" << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "b [ i ] . insert ( b [ i ] ) ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "else"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "if ( ans % 2 == possible )"
      ],
      "err_line": 20,
      "err_msg": "‘possible’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "cout << Koyomi << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Koyomi’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "cout << Karen << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘Karen’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "a >> a [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int [2001]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "s [ i ] . insert ( a [ i ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "s [ i ] . insert ( b [ i ] ) ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( a -> find ( a [ i ] , b [ j ] ) != s . end ( ) ) ans ++ ;"
      ],
      "err_line": 17,
      "err_msg": "request for member ‘find’ in ‘*(int*)(& a)’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "cout << Koyomi ;"
      ],
      "err_line": 21,
      "err_msg": "‘Koyomi’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "cout << Karen ;"
      ],
      "err_line": 23,
      "err_msg": "‘Karen’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "b [ i ] . insert ( b [ i ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        13,
        17
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "b [ i ] . insert ( b [ i ] ) ;",
        "else"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        13,
        17,
        20
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "b [ i ] . insert ( b [ i ] ) ;",
        "else",
        "if ( ans % 2 == possible )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        13,
        17,
        21
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "b [ i ] . insert ( b [ i ] ) ;",
        "else",
        "cout << Koyomi << endl ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        13,
        17,
        23
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "b [ i ] . insert ( b [ i ] ) ;",
        "else",
        "cout << Karen << endl ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        13,
        20
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "b [ i ] . insert ( b [ i ] ) ;",
        "if ( ans % 2 == possible )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        13,
        20,
        21
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "b [ i ] . insert ( b [ i ] ) ;",
        "if ( ans % 2 == possible )",
        "cout << Koyomi << endl ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        13,
        20,
        23
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "b [ i ] . insert ( b [ i ] ) ;",
        "if ( ans % 2 == possible )",
        "cout << Karen << endl ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        13,
        21
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "b [ i ] . insert ( b [ i ] ) ;",
        "cout << Koyomi << endl ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        13,
        21,
        23
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "b [ i ] . insert ( b [ i ] ) ;",
        "cout << Koyomi << endl ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        13,
        23
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "b [ i ] . insert ( b [ i ] ) ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "else"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        17,
        20
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "else",
        "if ( ans % 2 == possible )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        17,
        20,
        21
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "else",
        "if ( ans % 2 == possible )",
        "cout << Koyomi << endl ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        17,
        20,
        23
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "else",
        "if ( ans % 2 == possible )",
        "cout << Karen << endl ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        17,
        21
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "else",
        "cout << Koyomi << endl ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        17,
        21,
        23
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "else",
        "cout << Koyomi << endl ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        17,
        23
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "else",
        "cout << Karen << endl ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        20
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "if ( ans % 2 == possible )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        20,
        21
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "if ( ans % 2 == possible )",
        "cout << Koyomi << endl ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        20,
        21,
        23
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "if ( ans % 2 == possible )",
        "cout << Koyomi << endl ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        20,
        23
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "if ( ans % 2 == possible )",
        "cout << Karen << endl ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        21
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "cout << Koyomi << endl ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        21,
        23
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "cout << Koyomi << endl ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        9,
        23
      ],
      "mod_code": [
        "a [ i ] . insert ( a [ i ] ) ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘insert’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "b [ i ] . insert ( b [ i ] ) ;",
        "else"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17,
        20
      ],
      "mod_code": [
        "b [ i ] . insert ( b [ i ] ) ;",
        "else",
        "if ( ans % 2 == possible )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17,
        20,
        21
      ],
      "mod_code": [
        "b [ i ] . insert ( b [ i ] ) ;",
        "else",
        "if ( ans % 2 == possible )",
        "cout << Koyomi << endl ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17,
        20,
        23
      ],
      "mod_code": [
        "b [ i ] . insert ( b [ i ] ) ;",
        "else",
        "if ( ans % 2 == possible )",
        "cout << Karen << endl ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17,
        21
      ],
      "mod_code": [
        "b [ i ] . insert ( b [ i ] ) ;",
        "else",
        "cout << Koyomi << endl ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17,
        21,
        23
      ],
      "mod_code": [
        "b [ i ] . insert ( b [ i ] ) ;",
        "else",
        "cout << Koyomi << endl ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17,
        23
      ],
      "mod_code": [
        "b [ i ] . insert ( b [ i ] ) ;",
        "else",
        "cout << Karen << endl ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        20
      ],
      "mod_code": [
        "b [ i ] . insert ( b [ i ] ) ;",
        "if ( ans % 2 == possible )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        20,
        21
      ],
      "mod_code": [
        "b [ i ] . insert ( b [ i ] ) ;",
        "if ( ans % 2 == possible )",
        "cout << Koyomi << endl ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        20,
        21,
        23
      ],
      "mod_code": [
        "b [ i ] . insert ( b [ i ] ) ;",
        "if ( ans % 2 == possible )",
        "cout << Koyomi << endl ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        20,
        23
      ],
      "mod_code": [
        "b [ i ] . insert ( b [ i ] ) ;",
        "if ( ans % 2 == possible )",
        "cout << Karen << endl ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        21
      ],
      "mod_code": [
        "b [ i ] . insert ( b [ i ] ) ;",
        "cout << Koyomi << endl ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        21,
        23
      ],
      "mod_code": [
        "b [ i ] . insert ( b [ i ] ) ;",
        "cout << Koyomi << endl ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        23
      ],
      "mod_code": [
        "b [ i ] . insert ( b [ i ] ) ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        20
      ],
      "mod_code": [
        "else",
        "if ( ans % 2 == possible )"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        20,
        21
      ],
      "mod_code": [
        "else",
        "if ( ans % 2 == possible )",
        "cout << Koyomi << endl ;"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        20,
        21,
        23
      ],
      "mod_code": [
        "else",
        "if ( ans % 2 == possible )",
        "cout << Koyomi << endl ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        20,
        23
      ],
      "mod_code": [
        "else",
        "if ( ans % 2 == possible )",
        "cout << Karen << endl ;"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        21
      ],
      "mod_code": [
        "else",
        "cout << Koyomi << endl ;"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        21,
        23
      ],
      "mod_code": [
        "else",
        "cout << Koyomi << endl ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        23
      ],
      "mod_code": [
        "else",
        "cout << Karen << endl ;"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        20,
        21
      ],
      "mod_code": [
        "if ( ans % 2 == possible )",
        "cout << Koyomi << endl ;"
      ],
      "err_line": 20,
      "err_msg": "‘possible’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        21,
        23
      ],
      "mod_code": [
        "if ( ans % 2 == possible )",
        "cout << Koyomi << endl ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 20,
      "err_msg": "‘possible’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23
      ],
      "mod_code": [
        "if ( ans % 2 == possible )",
        "cout << Karen << endl ;"
      ],
      "err_line": 20,
      "err_msg": "‘possible’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23
      ],
      "mod_code": [
        "cout << Koyomi << endl ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘Koyomi’ was not declared in this scope"
    }
  ]
}