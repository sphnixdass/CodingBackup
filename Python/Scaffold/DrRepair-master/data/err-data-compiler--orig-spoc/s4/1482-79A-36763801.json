{
  "meta": {
    "index": 1482,
    "hitid": "3VQTAXTYN3FMBEE4NRQL0G7SR9TUBP",
    "workerid": "A1APYLD4DUK33J",
    "probid": "79A",
    "subid": "36763801"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers x , y",
      "code": "int x , y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read x read y",
      "code": "cin >> x >> y ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer step with step = 1",
      "code": "int step = 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while true",
      "code": "while ( true )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if step is 1",
      "code": "if ( step == 1 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "create integer remaining with remaining = 220",
      "code": "int remaining = 220 ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if x is greater than or equal to 2",
      "code": "if ( x >= 2 )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set remaining to 20",
      "code": "remaining = 20 ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "decrement x by 2",
      "code": "x -= 2 ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "else if x is 1",
      "code": "else if ( x == 1 )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "set remaining to 120",
      "code": "remaining = 120 ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "decrement x",
      "code": "x -- ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "create integer two with two = remaining / 10",
      "code": "int two = remaining / 10 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if two is greater than y",
      "code": "if ( two > y )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "print \" Hanako \" print newline",
      "code": "cout << \" Hanako \" << endl ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 19,
      "text": "decrement y by two",
      "code": "y -= two ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "set step to 2",
      "code": "step = 2 ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 23,
      "text": "create integer remaining with remaining with 220",
      "code": "int remaining = 220 ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "if y is greater than or equal to 22",
      "code": "if ( y >= 22 )",
      "indent": 3
    },
    {
      "line": 25,
      "text": "set remaining to 0",
      "code": "remaining = 0 ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "decrement y by 22",
      "code": "y -= 22 ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "set step to 1",
      "code": "step = 1 ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "break current loop iteration",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "else if y is greater than or equal to 12 and x is greater than or equal to 1",
      "code": "else if ( y >= 12 && x >= 1 )",
      "indent": 3
    },
    {
      "line": 30,
      "text": "decrement y by 12",
      "code": "y -= 12 ;",
      "indent": 4
    },
    {
      "line": 31,
      "text": "decrement x",
      "code": "x -- ;",
      "indent": 4
    },
    {
      "line": 32,
      "text": "set step to 1",
      "code": "step = 1 ;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "break current loop iteration",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 34,
      "text": "else if y is greater than or equal to 2 and x is greater than or equal to 2",
      "code": "else if ( y >= 2 && x >= 2 )",
      "indent": 3
    },
    {
      "line": 35,
      "text": "decrement y",
      "code": "y -= 2 ;",
      "indent": 4
    },
    {
      "line": 36,
      "text": "decrement x",
      "code": "x -= 2 ;",
      "indent": 4
    },
    {
      "line": 37,
      "text": "set step to 1",
      "code": "step = 1 ;",
      "indent": 4
    },
    {
      "line": 38,
      "text": "break current loop iteration",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 39,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 40,
      "text": "print \" Ciel \" print newline",
      "code": "cout << \" Ciel \" << endl ;",
      "indent": 4
    },
    {
      "line": 41,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 43,
      "text": "set step to 1",
      "code": "step = 1 ;",
      "indent": 3
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "int remaining ( int ) ;"
      ],
      "err_line": 25,
      "err_msg": "assignment of function ‘int remaining(int)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> x >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "step = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘step’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else if ( x == l )"
      ],
      "err_line": 10,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "if ( y >= n )"
      ],
      "err_line": 24,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 39,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        8,
        23
      ],
      "mod_code": [
        "int remaining = 1 ;",
        "const int remaining = 20 ;",
        "int remaining ( int ) ;"
      ],
      "err_line": 25,
      "err_msg": "assignment of function ‘int remaining(int)’"
    },
    {
      "mod_line": [
        6,
        8,
        23,
        40
      ],
      "mod_code": [
        "int remaining = 1 ;",
        "const int remaining = 20 ;",
        "int remaining ( int ) ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 25,
      "err_msg": "assignment of function ‘int remaining(int)’"
    },
    {
      "mod_line": [
        6,
        8,
        23,
        21
      ],
      "mod_code": [
        "int remaining = 1 ;",
        "const int remaining = 20 ;",
        "int remaining ( int ) ;",
        "int step = 2 ;"
      ],
      "err_line": 25,
      "err_msg": "assignment of function ‘int remaining(int)’"
    },
    {
      "mod_line": [
        6,
        8,
        23,
        17
      ],
      "mod_code": [
        "int remaining = 1 ;",
        "const int remaining = 20 ;",
        "int remaining ( int ) ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        8,
        40,
        17
      ],
      "mod_code": [
        "int remaining = 1 ;",
        "const int remaining = 20 ;",
        "cout << \" -1 \" << endl ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        8,
        21,
        17
      ],
      "mod_code": [
        "int remaining = 1 ;",
        "const int remaining = 20 ;",
        "int step = 2 ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        8,
        17
      ],
      "mod_code": [
        "int remaining = 1 ;",
        "const int remaining = 20 ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        23
      ],
      "mod_code": [
        "int remaining = 1 ;",
        "int remaining ( int ) ;"
      ],
      "err_line": 25,
      "err_msg": "assignment of function ‘int remaining(int)’"
    },
    {
      "mod_line": [
        6,
        23,
        40
      ],
      "mod_code": [
        "int remaining = 1 ;",
        "int remaining ( int ) ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 25,
      "err_msg": "assignment of function ‘int remaining(int)’"
    },
    {
      "mod_line": [
        6,
        23,
        40,
        21
      ],
      "mod_code": [
        "int remaining = 1 ;",
        "int remaining ( int ) ;",
        "cout << \" -1 \" << endl ;",
        "int step = 2 ;"
      ],
      "err_line": 25,
      "err_msg": "assignment of function ‘int remaining(int)’"
    },
    {
      "mod_line": [
        6,
        23,
        40,
        17
      ],
      "mod_code": [
        "int remaining = 1 ;",
        "int remaining ( int ) ;",
        "cout << \" -1 \" << endl ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        23,
        21
      ],
      "mod_code": [
        "int remaining = 1 ;",
        "int remaining ( int ) ;",
        "int step = 2 ;"
      ],
      "err_line": 25,
      "err_msg": "assignment of function ‘int remaining(int)’"
    },
    {
      "mod_line": [
        6,
        23,
        21,
        17
      ],
      "mod_code": [
        "int remaining = 1 ;",
        "int remaining ( int ) ;",
        "int step = 2 ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        23,
        17
      ],
      "mod_code": [
        "int remaining = 1 ;",
        "int remaining ( int ) ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        40,
        21,
        17
      ],
      "mod_code": [
        "int remaining = 1 ;",
        "cout << \" -1 \" << endl ;",
        "int step = 2 ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        40,
        17
      ],
      "mod_code": [
        "int remaining = 1 ;",
        "cout << \" -1 \" << endl ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        21,
        17
      ],
      "mod_code": [
        "int remaining = 1 ;",
        "int step = 2 ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "int remaining = 1 ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        23
      ],
      "mod_code": [
        "const int remaining = 20 ;",
        "int remaining ( int ) ;"
      ],
      "err_line": 25,
      "err_msg": "assignment of function ‘int remaining(int)’"
    },
    {
      "mod_line": [
        8,
        23,
        40
      ],
      "mod_code": [
        "const int remaining = 20 ;",
        "int remaining ( int ) ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 25,
      "err_msg": "assignment of function ‘int remaining(int)’"
    },
    {
      "mod_line": [
        8,
        23,
        40,
        21
      ],
      "mod_code": [
        "const int remaining = 20 ;",
        "int remaining ( int ) ;",
        "cout << \" -1 \" << endl ;",
        "int step = 2 ;"
      ],
      "err_line": 25,
      "err_msg": "assignment of function ‘int remaining(int)’"
    },
    {
      "mod_line": [
        8,
        23,
        40,
        17
      ],
      "mod_code": [
        "const int remaining = 20 ;",
        "int remaining ( int ) ;",
        "cout << \" -1 \" << endl ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        23,
        21
      ],
      "mod_code": [
        "const int remaining = 20 ;",
        "int remaining ( int ) ;",
        "int step = 2 ;"
      ],
      "err_line": 25,
      "err_msg": "assignment of function ‘int remaining(int)’"
    },
    {
      "mod_line": [
        8,
        23,
        21,
        17
      ],
      "mod_code": [
        "const int remaining = 20 ;",
        "int remaining ( int ) ;",
        "int step = 2 ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        23,
        17
      ],
      "mod_code": [
        "const int remaining = 20 ;",
        "int remaining ( int ) ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        40,
        21,
        17
      ],
      "mod_code": [
        "const int remaining = 20 ;",
        "cout << \" -1 \" << endl ;",
        "int step = 2 ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        40,
        17
      ],
      "mod_code": [
        "const int remaining = 20 ;",
        "cout << \" -1 \" << endl ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        21,
        17
      ],
      "mod_code": [
        "const int remaining = 20 ;",
        "int step = 2 ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "const int remaining = 20 ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        23,
        40
      ],
      "mod_code": [
        "int remaining ( int ) ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 25,
      "err_msg": "assignment of function ‘int remaining(int)’"
    },
    {
      "mod_line": [
        23,
        40,
        21
      ],
      "mod_code": [
        "int remaining ( int ) ;",
        "cout << \" -1 \" << endl ;",
        "int step = 2 ;"
      ],
      "err_line": 25,
      "err_msg": "assignment of function ‘int remaining(int)’"
    },
    {
      "mod_line": [
        23,
        40,
        21,
        17
      ],
      "mod_code": [
        "int remaining ( int ) ;",
        "cout << \" -1 \" << endl ;",
        "int step = 2 ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        23,
        40,
        17
      ],
      "mod_code": [
        "int remaining ( int ) ;",
        "cout << \" -1 \" << endl ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        23,
        21
      ],
      "mod_code": [
        "int remaining ( int ) ;",
        "int step = 2 ;"
      ],
      "err_line": 25,
      "err_msg": "assignment of function ‘int remaining(int)’"
    },
    {
      "mod_line": [
        23,
        21,
        17
      ],
      "mod_code": [
        "int remaining ( int ) ;",
        "int step = 2 ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        23,
        17
      ],
      "mod_code": [
        "int remaining ( int ) ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        40,
        21,
        17
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "int step = 2 ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        40,
        17
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        21,
        17
      ],
      "mod_code": [
        "int step = 2 ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    }
  ]
}