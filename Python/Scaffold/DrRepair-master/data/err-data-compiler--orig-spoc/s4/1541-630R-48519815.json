{
  "meta": {
    "index": 1541,
    "hitid": "3UUSLRKAULXDS00SOFOGLEH8N65D7L",
    "workerid": "A1APYLD4DUK33J",
    "probid": "630R",
    "subid": "48519815"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant integer maxn = 1e5 + 5",
      "code": "const int maxn = 1e5 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare long long n as argument",
      "code": "long long n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if n % 2",
      "code": "if ( n % 2 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print \" 1 \" , newline",
      "code": "cout << \" 1 \" << endl ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print \" 2 \" , newline",
      "code": "cout << \" 2 \" << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin read n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "else else",
        "cin read n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        3,
        7
      ],
      "mod_code": [
        "else else",
        "cin read n ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        3,
        7,
        5
      ],
      "mod_code": [
        "else else",
        "cin read n ;",
        "cout << \" -1 \" << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        3,
        7,
        4
      ],
      "mod_code": [
        "else else",
        "cin read n ;",
        "cout << \" -1 \" << endl ;",
        "if ( n % 2 == 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        3,
        7,
        0
      ],
      "mod_code": [
        "else else",
        "cin read n ;",
        "cout << \" -1 \" << endl ;",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        6,
        3,
        5
      ],
      "mod_code": [
        "else else",
        "cin read n ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        3,
        5,
        4
      ],
      "mod_code": [
        "else else",
        "cin read n ;",
        "cout << \" -1 \" << endl ;",
        "if ( n % 2 == 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        3,
        5,
        0
      ],
      "mod_code": [
        "else else",
        "cin read n ;",
        "cout << \" -1 \" << endl ;",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        6,
        3,
        4
      ],
      "mod_code": [
        "else else",
        "cin read n ;",
        "if ( n % 2 == 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        3,
        4,
        0
      ],
      "mod_code": [
        "else else",
        "cin read n ;",
        "if ( n % 2 == 0 )",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        6,
        3,
        0
      ],
      "mod_code": [
        "else else",
        "cin read n ;",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "else else",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        7,
        5
      ],
      "mod_code": [
        "else else",
        "cout << \" -1 \" << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        7,
        5,
        4
      ],
      "mod_code": [
        "else else",
        "cout << \" -1 \" << endl ;",
        "cout << \" -1 \" << endl ;",
        "if ( n % 2 == 0 )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        7,
        5,
        0
      ],
      "mod_code": [
        "else else",
        "cout << \" -1 \" << endl ;",
        "cout << \" -1 \" << endl ;",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        6,
        7,
        4
      ],
      "mod_code": [
        "else else",
        "cout << \" -1 \" << endl ;",
        "if ( n % 2 == 0 )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        7,
        4,
        0
      ],
      "mod_code": [
        "else else",
        "cout << \" -1 \" << endl ;",
        "if ( n % 2 == 0 )",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        6,
        7,
        0
      ],
      "mod_code": [
        "else else",
        "cout << \" -1 \" << endl ;",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "else else",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5,
        4
      ],
      "mod_code": [
        "else else",
        "cout << \" -1 \" << endl ;",
        "if ( n % 2 == 0 )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5,
        4,
        0
      ],
      "mod_code": [
        "else else",
        "cout << \" -1 \" << endl ;",
        "if ( n % 2 == 0 )",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        6,
        5,
        0
      ],
      "mod_code": [
        "else else",
        "cout << \" -1 \" << endl ;",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "else else",
        "if ( n % 2 == 0 )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        4,
        0
      ],
      "mod_code": [
        "else else",
        "if ( n % 2 == 0 )",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "else else",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "cin read n ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        3,
        7,
        5
      ],
      "mod_code": [
        "cin read n ;",
        "cout << \" -1 \" << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        3,
        7,
        5,
        4
      ],
      "mod_code": [
        "cin read n ;",
        "cout << \" -1 \" << endl ;",
        "cout << \" -1 \" << endl ;",
        "if ( n % 2 == 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        3,
        7,
        5,
        0
      ],
      "mod_code": [
        "cin read n ;",
        "cout << \" -1 \" << endl ;",
        "cout << \" -1 \" << endl ;",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        3,
        7,
        4
      ],
      "mod_code": [
        "cin read n ;",
        "cout << \" -1 \" << endl ;",
        "if ( n % 2 == 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        3,
        7,
        4,
        0
      ],
      "mod_code": [
        "cin read n ;",
        "cout << \" -1 \" << endl ;",
        "if ( n % 2 == 0 )",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        3,
        7,
        0
      ],
      "mod_code": [
        "cin read n ;",
        "cout << \" -1 \" << endl ;",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "cin read n ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        3,
        5,
        4
      ],
      "mod_code": [
        "cin read n ;",
        "cout << \" -1 \" << endl ;",
        "if ( n % 2 == 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        3,
        5,
        4,
        0
      ],
      "mod_code": [
        "cin read n ;",
        "cout << \" -1 \" << endl ;",
        "if ( n % 2 == 0 )",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        3,
        5,
        0
      ],
      "mod_code": [
        "cin read n ;",
        "cout << \" -1 \" << endl ;",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "cin read n ;",
        "if ( n % 2 == 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        3,
        4,
        0
      ],
      "mod_code": [
        "cin read n ;",
        "if ( n % 2 == 0 )",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "cin read n ;",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        7,
        5,
        4,
        0
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "cout << \" -1 \" << endl ;",
        "if ( n % 2 == 0 )",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        7,
        5,
        0
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "cout << \" -1 \" << endl ;",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        7,
        4,
        0
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "if ( n % 2 == 0 )",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        5,
        4,
        0
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "if ( n % 2 == 0 )",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "if ( n % 2 == 0 )",
        "const maxn = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    }
  ]
}