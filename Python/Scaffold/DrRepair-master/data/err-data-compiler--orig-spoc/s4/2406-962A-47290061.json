{
  "meta": {
    "index": 2406,
    "hitid": "35U0MRQMUJ167NSDWM5C2M9AD2OVOX",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "962A",
    "subid": "47290061"
  },
  "lines": [
    {
      "line": 0,
      "text": "n , k , sum = int , a = array of 1000000 int",
      "code": "int n , k , sum , a [ 1000000 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "add a [ i ] to sum",
      "code": "sum += a [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "add a [ i ] to k",
      "code": "k += a [ i ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if k > = ceil ( sum / 2 )",
      "code": "if ( k >= ceil ( double ( sum / 2.0 ) ) )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print i",
      "code": "cout << i << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "a >> a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [1000000]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( k >= ceil ( ) / 2 )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘ceil()’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "break break ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3,
        4
      ],
      "mod_code": [
        "break break ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "a >> a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3,
        4,
        9
      ],
      "mod_code": [
        "break break ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "a >> a [ i ] ;",
        "if ( k >= ceil ( ) / 2 )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3,
        4,
        7
      ],
      "mod_code": [
        "break break ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "a >> a [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3,
        9
      ],
      "mod_code": [
        "break break ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( k >= ceil ( ) / 2 )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3,
        9,
        7
      ],
      "mod_code": [
        "break break ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( k >= ceil ( ) / 2 )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3,
        7
      ],
      "mod_code": [
        "break break ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "break break ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [1000000]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        11,
        4,
        9
      ],
      "mod_code": [
        "break break ;",
        "a >> a [ i ] ;",
        "if ( k >= ceil ( ) / 2 )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [1000000]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        11,
        4,
        9,
        7
      ],
      "mod_code": [
        "break break ;",
        "a >> a [ i ] ;",
        "if ( k >= ceil ( ) / 2 )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [1000000]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        11,
        4,
        7
      ],
      "mod_code": [
        "break break ;",
        "a >> a [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [1000000]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "break break ;",
        "if ( k >= ceil ( ) / 2 )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘ceil()’"
    },
    {
      "mod_line": [
        11,
        9,
        7
      ],
      "mod_code": [
        "break break ;",
        "if ( k >= ceil ( ) / 2 )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "break break ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "a >> a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        9
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "a >> a [ i ] ;",
        "if ( k >= ceil ( ) / 2 )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "a >> a [ i ] ;",
        "if ( k >= ceil ( ) / 2 )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "a >> a [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( k >= ceil ( ) / 2 )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( k >= ceil ( ) / 2 )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "if ( k >= ceil ( ) / 2 )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [1000000]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        9,
        7
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "if ( k >= ceil ( ) / 2 )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [1000000]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [1000000]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "if ( k >= ceil ( ) / 2 )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}