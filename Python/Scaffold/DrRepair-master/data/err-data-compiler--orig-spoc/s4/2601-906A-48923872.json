{
  "meta": {
    "index": 2601,
    "hitid": "3K3IX1W4S6L40Z1G0RRVVZ0N2XDPA1",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "906A",
    "subid": "48923872"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integers mark [ 100 ] , cnt , ans , set cnt to z - a + 1",
      "code": "int mark [ 100 ] , cnt = ' z ' - ' a ' + 1 , ans ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create int n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create char t",
      "code": "char t ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "let s be string",
      "code": "string s ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read t ans s",
      "code": "cin >> t >> s ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if t equal to ? or t = !",
      "code": "if ( t == ' ? ' || t == ' ! ' )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if cnt = 1 and i different from n",
      "code": "if ( cnt == 1 && i != n )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "continue",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if t equal to !",
      "code": "if ( t == ' ! ' )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "cnt = 0",
      "code": "cnt = 0 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "for i = 0 to size of s exclusive",
      "code": "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if mark [ s [ i ] - a ] = 0 , mark [ s [ i ] - a ] = 1",
      "code": "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = - 1 ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "for i = 0 to z - a inclusive",
      "code": "for ( int i = 0 ; i <= ' z ' - ' a ' ; i ++ )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "if mark [ i ] = - 1",
      "code": "if ( mark [ i ] == - 1 )",
      "indent": 4
    },
    {
      "line": 19,
      "text": "assign 0 to mark [ i ] , increment cnt",
      "code": "mark [ i ] = 0 , cnt ++ ;",
      "indent": 5
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 21,
      "text": "set mark [ i ] equal to 1",
      "code": "mark [ i ] = 1 ;",
      "indent": 5
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 23,
      "text": "set cnt to 0",
      "code": "cnt = 0 ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "for i = 0 to size of s exclusive , set mark [ s [ i ] - a ] = 1",
      "code": "for ( int i = 0 ; i < s . size ( ) ; i ++ ) mark [ s [ i ] - ' a ' ] = 1 ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "for i = = to z - a inclusive",
      "code": "for ( int i = 0 ; i <= ' z ' - ' a ' ; i ++ )",
      "indent": 3
    },
    {
      "line": 26,
      "text": "if mark [ i ] equal to 0 , add 1 to cnt",
      "code": "if ( mark [ i ] == 0 ) cnt ++ ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= z - a ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }"
      ],
      "err_line": 24,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "for ( int i = z - a ; i <= z - a ; i ++ )"
      ],
      "err_line": 25,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - ' a ' + 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int a ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char t t ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - a ] = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i <= z - a ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "for ( i = z - a ; i <= z - a ; i ++ )"
      ],
      "err_line": 25,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        16,
        17
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;",
        "for ( int i = 0 ; i <= z - a ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        16,
        17,
        24
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;",
        "for ( int i = 0 ; i <= z - a ; i ++ )",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        16,
        17,
        25
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;",
        "for ( int i = 0 ; i <= z - a ; i ++ )",
        "for ( int i = z - a ; i <= z - a ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        16,
        24
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        16,
        24,
        25
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }",
        "for ( int i = z - a ; i <= z - a ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        16,
        24,
        17
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }",
        "for ( i = 0 ; i <= z - a ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        16,
        25
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;",
        "for ( int i = z - a ; i <= z - a ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        16,
        25,
        17
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;",
        "for ( int i = z - a ; i <= z - a ; i ++ )",
        "for ( i = 0 ; i <= z - a ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        16,
        17
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;",
        "for ( i = 0 ; i <= z - a ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "for ( int i = 0 ; i <= z - a ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        17,
        24
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "for ( int i = 0 ; i <= z - a ; i ++ )",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        17,
        24,
        25
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "for ( int i = 0 ; i <= z - a ; i ++ )",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }",
        "for ( int i = z - a ; i <= z - a ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        17,
        25
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "for ( int i = 0 ; i <= z - a ; i ++ )",
        "for ( int i = z - a ; i <= z - a ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        24
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        24,
        25
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }",
        "for ( int i = z - a ; i <= z - a ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        24,
        25,
        17
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }",
        "for ( int i = z - a ; i <= z - a ; i ++ )",
        "for ( i = 0 ; i <= z - a ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        24,
        17
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }",
        "for ( i = 0 ; i <= z - a ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        25
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "for ( int i = z - a ; i <= z - a ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        25,
        17
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "for ( int i = z - a ; i <= z - a ; i ++ )",
        "for ( i = 0 ; i <= z - a ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "int mark [ 100 ] , cnt , ans = z - a + 1 ;",
        "for ( i = 0 ; i <= z - a ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17
      ],
      "mod_code": [
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;",
        "for ( int i = 0 ; i <= z - a ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        24
      ],
      "mod_code": [
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;",
        "for ( int i = 0 ; i <= z - a ; i ++ )",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }"
      ],
      "err_line": 17,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        24,
        25
      ],
      "mod_code": [
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;",
        "for ( int i = 0 ; i <= z - a ; i ++ )",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }",
        "for ( int i = z - a ; i <= z - a ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        25
      ],
      "mod_code": [
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;",
        "for ( int i = 0 ; i <= z - a ; i ++ )",
        "for ( int i = z - a ; i <= z - a ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24
      ],
      "mod_code": [
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }"
      ],
      "err_line": 24,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        25
      ],
      "mod_code": [
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }",
        "for ( int i = z - a ; i <= z - a ; i ++ )"
      ],
      "err_line": 24,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        25,
        17
      ],
      "mod_code": [
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }",
        "for ( int i = z - a ; i <= z - a ; i ++ )",
        "for ( i = 0 ; i <= z - a ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        17
      ],
      "mod_code": [
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }",
        "for ( i = 0 ; i <= z - a ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25
      ],
      "mod_code": [
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;",
        "for ( int i = z - a ; i <= z - a ; i ++ )"
      ],
      "err_line": 25,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        25,
        17
      ],
      "mod_code": [
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;",
        "for ( int i = z - a ; i <= z - a ; i ++ )",
        "for ( i = 0 ; i <= z - a ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17
      ],
      "mod_code": [
        "if ( mark [ s [ i ] - ' a ' ] == 0 ) mark [ s [ i ] - ' a ' ] = 1 ;",
        "for ( i = 0 ; i <= z - a ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= z - a ; i ++ )",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }"
      ],
      "err_line": 17,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        24,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= z - a ; i ++ )",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }",
        "for ( int i = z - a ; i <= z - a ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= z - a ; i ++ )",
        "for ( int i = z - a ; i <= z - a ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }",
        "for ( int i = z - a ; i <= z - a ; i ++ )"
      ],
      "err_line": 24,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }",
        "for ( int i = z - a ; i <= z - a ; i ++ )",
        "for ( i = 0 ; i <= z - a ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ ) { mark [ s [ i ] - a ] = 1 ; }",
        "for ( i = 0 ; i <= z - a ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        17
      ],
      "mod_code": [
        "for ( int i = z - a ; i <= z - a ; i ++ )",
        "for ( i = 0 ; i <= z - a ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘z’ was not declared in this scope"
    }
  ]
}