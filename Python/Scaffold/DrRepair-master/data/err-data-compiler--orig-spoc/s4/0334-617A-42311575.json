{
  "meta": {
    "index": 334,
    "hitid": "363A7XIFV4GH5JYCM30U1RP5OLDAV6",
    "workerid": "AIWEXPJAU66D9",
    "probid": "617A",
    "subid": "42311575"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare int variable n",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "read is an inlined integer function",
      "code": "inline int read ( )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare integers x = 0 and y = 1",
      "code": "int x = 0 , y = 1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create char ch and read it from the input",
      "code": "char ch = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while ch < ' 0 ' or ch > ' 9 '",
      "code": "while ( ch < ' 0 ' || ch > ' 9 ' )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if ch = ' - ' change y to - 1",
      "code": "if ( ch == ' - ' ) { y = - 1 ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read ch from the input",
      "code": "ch = getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while ch > = ' 0 ' and ch < = ' 9 '",
      "code": "while ( ch >= ' 0 ' && ch <= ' 9 ' )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set x to x * 10 + ch - ' 0 '",
      "code": "x = x * 10 + ch - ' 0 ' ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "read ch from the input",
      "code": "ch = getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "return x * y",
      "code": "return x * y ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 15,
      "text": "set n to the result of read ( )",
      "code": "n = read ( ) ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print n / 5 . 0 rounded up",
      "code": "cout << ceil ( n / 5.0 ) << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n n ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "inline int read ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        16,
        1
      ],
      "mod_code": [
        "cin >> ch ;",
        "cout << ( n / 5 ) << endl ;",
        "inline int read ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        16,
        1,
        0
      ],
      "mod_code": [
        "cin >> ch ;",
        "cout << ( n / 5 ) << endl ;",
        "inline int read ( ) ;",
        "int n n ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        10,
        16,
        1,
        2
      ],
      "mod_code": [
        "cin >> ch ;",
        "cout << ( n / 5 ) << endl ;",
        "inline int read ( ) ;",
        "int x = 1 , y = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        16,
        1,
        9
      ],
      "mod_code": [
        "cin >> ch ;",
        "cout << ( n / 5 ) << endl ;",
        "inline int read ( ) ;",
        "x -= 10 + ch - ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        16,
        0
      ],
      "mod_code": [
        "cin >> ch ;",
        "cout << ( n / 5 ) << endl ;",
        "int n n ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        10,
        16,
        0,
        2
      ],
      "mod_code": [
        "cin >> ch ;",
        "cout << ( n / 5 ) << endl ;",
        "int n n ;",
        "int x = 1 , y = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        10,
        16,
        0,
        9
      ],
      "mod_code": [
        "cin >> ch ;",
        "cout << ( n / 5 ) << endl ;",
        "int n n ;",
        "x -= 10 + ch - ' 0 ' ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "cin >> ch ;",
        "inline int read ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        1,
        0
      ],
      "mod_code": [
        "cin >> ch ;",
        "inline int read ( ) ;",
        "int n n ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        10,
        1,
        0,
        2
      ],
      "mod_code": [
        "cin >> ch ;",
        "inline int read ( ) ;",
        "int n n ;",
        "int x = 1 , y = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        10,
        1,
        0,
        9
      ],
      "mod_code": [
        "cin >> ch ;",
        "inline int read ( ) ;",
        "int n n ;",
        "x -= 10 + ch - ' 0 ' ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        10,
        1,
        2
      ],
      "mod_code": [
        "cin >> ch ;",
        "inline int read ( ) ;",
        "int x = 1 , y = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        1,
        2,
        9
      ],
      "mod_code": [
        "cin >> ch ;",
        "inline int read ( ) ;",
        "int x = 1 , y = 1 ;",
        "x -= 10 + ch - ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        1,
        9
      ],
      "mod_code": [
        "cin >> ch ;",
        "inline int read ( ) ;",
        "x -= 10 + ch - ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "cin >> ch ;",
        "int n n ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        10,
        0,
        2
      ],
      "mod_code": [
        "cin >> ch ;",
        "int n n ;",
        "int x = 1 , y = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        10,
        0,
        2,
        9
      ],
      "mod_code": [
        "cin >> ch ;",
        "int n n ;",
        "int x = 1 , y = 1 ;",
        "x -= 10 + ch - ' 0 ' ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        10,
        0,
        9
      ],
      "mod_code": [
        "cin >> ch ;",
        "int n n ;",
        "x -= 10 + ch - ' 0 ' ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        16,
        1
      ],
      "mod_code": [
        "cout << ( n / 5 ) << endl ;",
        "inline int read ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        1,
        0
      ],
      "mod_code": [
        "cout << ( n / 5 ) << endl ;",
        "inline int read ( ) ;",
        "int n n ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        16,
        1,
        0,
        2
      ],
      "mod_code": [
        "cout << ( n / 5 ) << endl ;",
        "inline int read ( ) ;",
        "int n n ;",
        "int x = 1 , y = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        16,
        1,
        0,
        9
      ],
      "mod_code": [
        "cout << ( n / 5 ) << endl ;",
        "inline int read ( ) ;",
        "int n n ;",
        "x -= 10 + ch - ' 0 ' ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        16,
        1,
        2
      ],
      "mod_code": [
        "cout << ( n / 5 ) << endl ;",
        "inline int read ( ) ;",
        "int x = 1 , y = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        1,
        2,
        9
      ],
      "mod_code": [
        "cout << ( n / 5 ) << endl ;",
        "inline int read ( ) ;",
        "int x = 1 , y = 1 ;",
        "x -= 10 + ch - ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        1,
        9
      ],
      "mod_code": [
        "cout << ( n / 5 ) << endl ;",
        "inline int read ( ) ;",
        "x -= 10 + ch - ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        0
      ],
      "mod_code": [
        "cout << ( n / 5 ) << endl ;",
        "int n n ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        16,
        0,
        2
      ],
      "mod_code": [
        "cout << ( n / 5 ) << endl ;",
        "int n n ;",
        "int x = 1 , y = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        16,
        0,
        2,
        9
      ],
      "mod_code": [
        "cout << ( n / 5 ) << endl ;",
        "int n n ;",
        "int x = 1 , y = 1 ;",
        "x -= 10 + ch - ' 0 ' ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        16,
        0,
        9
      ],
      "mod_code": [
        "cout << ( n / 5 ) << endl ;",
        "int n n ;",
        "x -= 10 + ch - ' 0 ' ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "int n n ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        1,
        0,
        2
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "int n n ;",
        "int x = 1 , y = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        1,
        0,
        2,
        9
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "int n n ;",
        "int x = 1 , y = 1 ;",
        "x -= 10 + ch - ' 0 ' ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        1,
        0,
        9
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "int n n ;",
        "x -= 10 + ch - ' 0 ' ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "int x = 1 , y = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        9
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "int x = 1 , y = 1 ;",
        "x -= 10 + ch - ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "x -= 10 + ch - ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "int n n ;",
        "int x = 1 , y = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        0,
        2,
        9
      ],
      "mod_code": [
        "int n n ;",
        "int x = 1 , y = 1 ;",
        "x -= 10 + ch - ' 0 ' ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int n n ;",
        "x -= 10 + ch - ' 0 ' ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘n’"
    }
  ]
}