{
  "meta": {
    "index": 2097,
    "hitid": "3MQKOF1EE2ISIF1TWNWSDUGPGXKDWT",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "50A",
    "subid": "48986003"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "MaxDominoesNumber = int with MaxDominoesNumber = 0",
      "code": "int MaxDominoesNumber = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "M , N = int with N = 0",
      "code": "int M , N = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read M then N",
      "code": "cin >> M >> N ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "board = pointer to pointer to bool with board = new pointer to bool of size M",
      "code": "bool * * board = new bool * [ M ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to M set board [ i ] to new bool of size N",
      "code": "for ( int i = 0 ; i < M ; i ++ ) { board [ i ] = new bool [ N ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if M > N swap M and N",
      "code": "if ( M > N ) swap ( M , N ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to M increment i by 2",
      "code": "for ( int i = 0 ; i < M ; i += 2 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "check = int with check = M - i",
      "code": "int check = M - i ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if check is 1",
      "code": "if ( check == 1 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "remain_domino = int with remain_domino is 0",
      "code": "int remain_domino = 0 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if N is even",
      "code": "if ( N % 2 == 0 )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "set remain_domino to N / 2",
      "code": "remain_domino = N / 2 ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 14,
      "text": "set remain_domino to ( N - 1 ) / 2",
      "code": "remain_domino = ( N - 1 ) / 2 ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "increment MaxDominoesNumber by remain_domino",
      "code": "MaxDominoesNumber += remain_domino ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "for j = 0 to N",
      "code": "for ( int j = 0 ; j < N ; j ++ )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "set board [ i ] [ j ] to true",
      "code": "board [ i ] [ j ] = true ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "set board [ i + 1 ] [ j ] to true",
      "code": "board [ i + 1 ] [ j ] = true ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "increment MaxDominoesNumber",
      "code": "MaxDominoesNumber ++ ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print MaxDominoesNumber",
      "code": "cout << MaxDominoesNumber << endl ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> M >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "bool * * board = new bool [ M ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘bool*’ to ‘bool**’ in initialization"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < M ; i += 2 )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < N ; j ++ )"
      ],
      "err_line": 18,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "board [ i ] [ j ] ] = true ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "board [ i + 1 ] [ j ] ] = true ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "remain_domino /= 2 ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        12,
        19
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "remain_domino /= 2 ;",
        "board [ i ] [ j ] ] = true ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        12,
        19,
        7
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "remain_domino /= 2 ;",
        "board [ i ] [ j ] ] = true ;",
        "for ( i = 0 ; i < M ; i += 2 )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        12,
        19,
        20
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "remain_domino /= 2 ;",
        "board [ i ] [ j ] ] = true ;",
        "board [ i + 1 ] [ j ] ] = true ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        12,
        19,
        14
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "remain_domino /= 2 ;",
        "board [ i ] [ j ] ] = true ;",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        12,
        7
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "remain_domino /= 2 ;",
        "for ( i = 0 ; i < M ; i += 2 )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        12,
        7,
        20
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "remain_domino /= 2 ;",
        "for ( i = 0 ; i < M ; i += 2 )",
        "board [ i + 1 ] [ j ] ] = true ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        12,
        7,
        14
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "remain_domino /= 2 ;",
        "for ( i = 0 ; i < M ; i += 2 )",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        12,
        20
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "remain_domino /= 2 ;",
        "board [ i + 1 ] [ j ] ] = true ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        12,
        20,
        14
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "remain_domino /= 2 ;",
        "board [ i + 1 ] [ j ] ] = true ;",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        12,
        14
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "remain_domino /= 2 ;",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        19
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "board [ i ] [ j ] ] = true ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        19,
        7
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "board [ i ] [ j ] ] = true ;",
        "for ( i = 0 ; i < M ; i += 2 )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        19,
        7,
        20
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "board [ i ] [ j ] ] = true ;",
        "for ( i = 0 ; i < M ; i += 2 )",
        "board [ i + 1 ] [ j ] ] = true ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        19,
        7,
        14
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "board [ i ] [ j ] ] = true ;",
        "for ( i = 0 ; i < M ; i += 2 )",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        19,
        20
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "board [ i ] [ j ] ] = true ;",
        "board [ i + 1 ] [ j ] ] = true ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        19,
        20,
        14
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "board [ i ] [ j ] ] = true ;",
        "board [ i + 1 ] [ j ] ] = true ;",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        19,
        14
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "board [ i ] [ j ] ] = true ;",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "for ( i = 0 ; i < M ; i += 2 )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        20
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "for ( i = 0 ; i < M ; i += 2 )",
        "board [ i + 1 ] [ j ] ] = true ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        20,
        14
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "for ( i = 0 ; i < M ; i += 2 )",
        "board [ i + 1 ] [ j ] ] = true ;",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        14
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "for ( i = 0 ; i < M ; i += 2 )",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        20
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "board [ i + 1 ] [ j ] ] = true ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        20,
        14
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "board [ i + 1 ] [ j ] ] = true ;",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "bool * board = new bool [ M ] ;",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        19
      ],
      "mod_code": [
        "remain_domino /= 2 ;",
        "board [ i ] [ j ] ] = true ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        19,
        7
      ],
      "mod_code": [
        "remain_domino /= 2 ;",
        "board [ i ] [ j ] ] = true ;",
        "for ( i = 0 ; i < M ; i += 2 )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        19,
        7,
        20
      ],
      "mod_code": [
        "remain_domino /= 2 ;",
        "board [ i ] [ j ] ] = true ;",
        "for ( i = 0 ; i < M ; i += 2 )",
        "board [ i + 1 ] [ j ] ] = true ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        19,
        7,
        14
      ],
      "mod_code": [
        "remain_domino /= 2 ;",
        "board [ i ] [ j ] ] = true ;",
        "for ( i = 0 ; i < M ; i += 2 )",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        19,
        20
      ],
      "mod_code": [
        "remain_domino /= 2 ;",
        "board [ i ] [ j ] ] = true ;",
        "board [ i + 1 ] [ j ] ] = true ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        19,
        20,
        14
      ],
      "mod_code": [
        "remain_domino /= 2 ;",
        "board [ i ] [ j ] ] = true ;",
        "board [ i + 1 ] [ j ] ] = true ;",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        19,
        14
      ],
      "mod_code": [
        "remain_domino /= 2 ;",
        "board [ i ] [ j ] ] = true ;",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "remain_domino /= 2 ;",
        "for ( i = 0 ; i < M ; i += 2 )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        7,
        20
      ],
      "mod_code": [
        "remain_domino /= 2 ;",
        "for ( i = 0 ; i < M ; i += 2 )",
        "board [ i + 1 ] [ j ] ] = true ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        7,
        20,
        14
      ],
      "mod_code": [
        "remain_domino /= 2 ;",
        "for ( i = 0 ; i < M ; i += 2 )",
        "board [ i + 1 ] [ j ] ] = true ;",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        7,
        14
      ],
      "mod_code": [
        "remain_domino /= 2 ;",
        "for ( i = 0 ; i < M ; i += 2 )",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        20
      ],
      "mod_code": [
        "remain_domino /= 2 ;",
        "board [ i + 1 ] [ j ] ] = true ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        20,
        14
      ],
      "mod_code": [
        "remain_domino /= 2 ;",
        "board [ i + 1 ] [ j ] ] = true ;",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        19,
        7
      ],
      "mod_code": [
        "board [ i ] [ j ] ] = true ;",
        "for ( i = 0 ; i < M ; i += 2 )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        7,
        20
      ],
      "mod_code": [
        "board [ i ] [ j ] ] = true ;",
        "for ( i = 0 ; i < M ; i += 2 )",
        "board [ i + 1 ] [ j ] ] = true ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        7,
        20,
        14
      ],
      "mod_code": [
        "board [ i ] [ j ] ] = true ;",
        "for ( i = 0 ; i < M ; i += 2 )",
        "board [ i + 1 ] [ j ] ] = true ;",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        7,
        14
      ],
      "mod_code": [
        "board [ i ] [ j ] ] = true ;",
        "for ( i = 0 ; i < M ; i += 2 )",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        20
      ],
      "mod_code": [
        "board [ i ] [ j ] ] = true ;",
        "board [ i + 1 ] [ j ] ] = true ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        19,
        20,
        14
      ],
      "mod_code": [
        "board [ i ] [ j ] ] = true ;",
        "board [ i + 1 ] [ j ] ] = true ;",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        19,
        14
      ],
      "mod_code": [
        "board [ i ] [ j ] ] = true ;",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        20
      ],
      "mod_code": [
        "for ( i = 0 ; i < M ; i += 2 )",
        "board [ i + 1 ] [ j ] ] = true ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        20,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < M ; i += 2 )",
        "board [ i + 1 ] [ j ] ] = true ;",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < M ; i += 2 )",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        14
      ],
      "mod_code": [
        "board [ i + 1 ] [ j ] ] = true ;",
        "int remain_domino = ( N - 1 ) / 2 ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘]’ token"
    }
  ]
}