{
  "meta": {
    "index": 111,
    "hitid": "3UL5XDRDNCDMO1QIJEY312PBK7185E",
    "workerid": "A1APYLD4DUK33J",
    "probid": "3A",
    "subid": "48169826"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer vectors VI , VI2 , VI3 , VI4",
      "code": "vector < int > VI , VI2 , VI3 , VI4 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , f , t with f = 0",
      "code": "int n , f = 0 , t ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create string s",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "create string t",
      "code": "string t ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read s read t",
      "code": "cin >> s >> t ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create integers a , b , with a = s [ 0 ] - t [ 0 ] , b = s [ 1 ] - t [ 1 ]",
      "code": "int a = s [ 0 ] - t [ 0 ] , b = s [ 1 ] - t [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print maximum of absolute value of a and absolute value of b , print newline",
      "code": "cout << max ( abs ( a ) , abs ( b ) ) << endl ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while a or b",
      "code": "while ( a || b )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if a is greater than 0",
      "code": "if ( a > 0 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print \" L \"",
      "code": "cout << \" L \" ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "decrement a",
      "code": "a -- ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else if a is less than 0",
      "code": "else if ( a < 0 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print \" R \"",
      "code": "cout << \" R \" ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "increment a",
      "code": "a ++ ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if b is greater than 0",
      "code": "if ( b > 0 )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print \" D \"",
      "code": "cout << \" D \" ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "decrement b",
      "code": "b -- ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "else if b is less than 0",
      "code": "else if ( b < 0 )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print \" U \"",
      "code": "cout << \" U \" ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "increment b",
      "code": "b ++ ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "string t t ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "s >> s >> t ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int a = s [ 0 ] - t [ 0 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout << max ( abs ( a , abs ( b ) ) ) << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘abs(int&, int)’"
    },
    {
      "mod_line": [
        10,
        13,
        20,
        0
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        10,
        13,
        20,
        4
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "string t t ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        10,
        13,
        0
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        10,
        13,
        0,
        4
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;",
        "string t t ;"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        10,
        13,
        0,
        19
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;",
        "else if ( b <= 0 )"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        10,
        13,
        4
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;",
        "string t t ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        10,
        13,
        4,
        19
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;",
        "string t t ;",
        "else if ( b <= 0 )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        10,
        20,
        0
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "cout << \" U \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        10,
        20,
        0,
        4
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "cout << \" U \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;",
        "string t t ;"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        10,
        20,
        0,
        19
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "cout << \" U \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;",
        "else if ( b <= 0 )"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        10,
        20,
        4
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "cout << \" U \" << endl ;",
        "string t t ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        10,
        20,
        4,
        19
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "cout << \" U \" << endl ;",
        "string t t ;",
        "else if ( b <= 0 )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        10,
        0,
        4
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;",
        "string t t ;"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        10,
        0,
        4,
        19
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;",
        "string t t ;",
        "else if ( b <= 0 )"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        10,
        0,
        19
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;",
        "else if ( b <= 0 )"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "string t t ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        10,
        4,
        19
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "string t t ;",
        "else if ( b <= 0 )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        13,
        20,
        0
      ],
      "mod_code": [
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        13,
        20,
        0,
        4
      ],
      "mod_code": [
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;",
        "string t t ;"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        13,
        20,
        0,
        19
      ],
      "mod_code": [
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;",
        "else if ( b <= 0 )"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        13,
        20,
        4
      ],
      "mod_code": [
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "string t t ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        13,
        20,
        4,
        19
      ],
      "mod_code": [
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "string t t ;",
        "else if ( b <= 0 )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        13,
        0
      ],
      "mod_code": [
        "cout << \" R \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        4
      ],
      "mod_code": [
        "cout << \" R \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;",
        "string t t ;"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        4,
        19
      ],
      "mod_code": [
        "cout << \" R \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;",
        "string t t ;",
        "else if ( b <= 0 )"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0,
        19
      ],
      "mod_code": [
        "cout << \" R \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;",
        "else if ( b <= 0 )"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "cout << \" R \" << endl ;",
        "string t t ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        13,
        4,
        19
      ],
      "mod_code": [
        "cout << \" R \" << endl ;",
        "string t t ;",
        "else if ( b <= 0 )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        20,
        0
      ],
      "mod_code": [
        "cout << \" U \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        20,
        0,
        4
      ],
      "mod_code": [
        "cout << \" U \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;",
        "string t t ;"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        20,
        0,
        4,
        19
      ],
      "mod_code": [
        "cout << \" U \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;",
        "string t t ;",
        "else if ( b <= 0 )"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        20,
        0,
        19
      ],
      "mod_code": [
        "cout << \" U \" << endl ;",
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;",
        "else if ( b <= 0 )"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        20,
        4
      ],
      "mod_code": [
        "cout << \" U \" << endl ;",
        "string t t ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        20,
        4,
        19
      ],
      "mod_code": [
        "cout << \" U \" << endl ;",
        "string t t ;",
        "else if ( b <= 0 )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;",
        "string t t ;"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        0,
        4,
        19
      ],
      "mod_code": [
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;",
        "string t t ;",
        "else if ( b <= 0 )"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        0,
        19
      ],
      "mod_code": [
        "vectors < int , int > VI , VI2 , VI3 , VI4 ;",
        "else if ( b <= 0 )"
      ],
      "err_line": 0,
      "err_msg": "‘vectors’ does not name a type"
    },
    {
      "mod_line": [
        4,
        19
      ],
      "mod_code": [
        "string t t ;",
        "else if ( b <= 0 )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘t’"
    }
  ]
}