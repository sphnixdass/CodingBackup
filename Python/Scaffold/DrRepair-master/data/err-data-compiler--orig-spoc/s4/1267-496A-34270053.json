{
  "meta": {
    "index": 1267,
    "hitid": "3VZYA8PITOS46CLFOALO8NJT2B1505",
    "workerid": "A1APYLD4DUK33J",
    "probid": "496A",
    "subid": "34270053"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n , t , z , integer arrays a size 105 , b size 105 , c size 105",
      "code": "int n , a [ 105 ] , b [ 105 ] , c [ 105 ] , t , z ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while read n is true",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let t be 0",
      "code": "t = 0 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "let z be 0",
      "code": "z = 0 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive , read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "let b [ z ] be a [ i ] - a [ i - 1 ]",
      "code": "b [ z ] = a [ i ] - a [ i - 1 ] ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "increment z",
      "code": "z ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "sort elements from address of b [ 0 ] to address of b [ z ]",
      "code": "sort ( & b [ 0 ] , & b [ z ] ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for i = 0 to n - 2 exclusive",
      "code": "for ( int i = 0 ; i < n - 2 ; i ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "let c [ t ] be a [ i + 2 ] - a [ i ]",
      "code": "c [ t ] = a [ i + 2 ] - a [ i ] ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "increment t",
      "code": "t ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "sort elements from address of c [ 0 ] to address of c [ t ]",
      "code": "sort ( & c [ 0 ] , & c [ t ] ) ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if c [ 0 ] is less than or equal to b [ z - 1 ]",
      "code": "if ( c [ 0 ] <= b [ z - 1 ] )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print b [ z - 1 ] , newline",
      "code": "cout << b [ z - 1 ] << endl ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print c [ 0 ] , newline",
      "code": "cout << c [ 0 ] << endl ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , b [ 105 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b [105]’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "sort ( & c [ 0 ] , & n [ t ] ) ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        10
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "sort ( & b [ z ] , & b [ z ] ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        10,
        12
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "sort ( & b [ z ] , & b [ z ] ) ;",
        "c [ t ] = a [ i + 2 ] - ' a ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        10,
        16
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "sort ( & b [ z ] , & b [ z ] ) ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        10,
        11
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "sort ( & b [ z ] , & b [ z ] ) ;",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        12
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "c [ t ] = a [ i + 2 ] - ' a ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        12,
        16
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "c [ t ] = a [ i + 2 ] - ' a ' ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        12,
        11
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "c [ t ] = a [ i + 2 ] - ' a ' ;",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        16
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        16,
        11
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        11
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "sort ( & b [ z ] , & b [ z ] ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        12
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "sort ( & b [ z ] , & b [ z ] ) ;",
        "c [ t ] = a [ i + 2 ] - ' a ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        12,
        16
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "sort ( & b [ z ] , & b [ z ] ) ;",
        "c [ t ] = a [ i + 2 ] - ' a ' ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        12,
        11
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "sort ( & b [ z ] , & b [ z ] ) ;",
        "c [ t ] = a [ i + 2 ] - ' a ' ;",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        16
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "sort ( & b [ z ] , & b [ z ] ) ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        16,
        11
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "sort ( & b [ z ] , & b [ z ] ) ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        11
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "sort ( & b [ z ] , & b [ z ] ) ;",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "c [ t ] = a [ i + 2 ] - ' a ' ;"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        16
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "c [ t ] = a [ i + 2 ] - ' a ' ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        16,
        11
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "c [ t ] = a [ i + 2 ] - ' a ' ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        11
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "c [ t ] = a [ i + 2 ] - ' a ' ;",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16,
        11
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int n , t , a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "sort ( & b [ z ] , & b [ z ] ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        10,
        12
      ],
      "mod_code": [
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "sort ( & b [ z ] , & b [ z ] ) ;",
        "c [ t ] = a [ i + 2 ] - ' a ' ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        10,
        12,
        16
      ],
      "mod_code": [
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "sort ( & b [ z ] , & b [ z ] ) ;",
        "c [ t ] = a [ i + 2 ] - ' a ' ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        10,
        12,
        11
      ],
      "mod_code": [
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "sort ( & b [ z ] , & b [ z ] ) ;",
        "c [ t ] = a [ i + 2 ] - ' a ' ;",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        10,
        16
      ],
      "mod_code": [
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "sort ( & b [ z ] , & b [ z ] ) ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        10,
        16,
        11
      ],
      "mod_code": [
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "sort ( & b [ z ] , & b [ z ] ) ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        10,
        11
      ],
      "mod_code": [
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "sort ( & b [ z ] , & b [ z ] ) ;",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "c [ t ] = a [ i + 2 ] - ' a ' ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        12,
        16
      ],
      "mod_code": [
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "c [ t ] = a [ i + 2 ] - ' a ' ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        12,
        16,
        11
      ],
      "mod_code": [
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "c [ t ] = a [ i + 2 ] - ' a ' ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        12,
        11
      ],
      "mod_code": [
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "c [ t ] = a [ i + 2 ] - ' a ' ;",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        16,
        11
      ],
      "mod_code": [
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "b [ z ] = a [ i ] - ' a ' - 1 ] ;",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        10,
        12,
        16,
        11
      ],
      "mod_code": [
        "sort ( & b [ z ] , & b [ z ] ) ;",
        "c [ t ] = a [ i + 2 ] - ' a ' ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        12,
        11
      ],
      "mod_code": [
        "sort ( & b [ z ] , & b [ z ] ) ;",
        "c [ t ] = a [ i + 2 ] - ' a ' ;",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        16,
        11
      ],
      "mod_code": [
        "sort ( & b [ z ] , & b [ z ] ) ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "sort ( & b [ z ] , & b [ z ] ) ;",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        16,
        11
      ],
      "mod_code": [
        "c [ t ] = a [ i + 2 ] - ' a ' ;",
        "if ( c [ 0 ] >= b [ z - 1 ] )",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "c [ t ] = a [ i + 2 ] - ' a ' ;",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        11
      ],
      "mod_code": [
        "if ( c [ 0 ] >= b [ z - 1 ] )",
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}