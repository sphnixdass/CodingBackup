{
  "meta": {
    "index": 1681,
    "hitid": "3K3G488TR22SU5QE58F3NTABFF45Q8",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "992A",
    "subid": "41889283"
  },
  "lines": [
    {
      "line": 0,
      "text": "add = const int = 100000",
      "code": "const int add = 100000 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a , f be ints with f an array of length 200005",
      "code": "int a , f [ 200005 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "n , ans = 0 be ints",
      "code": "int n , ans = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "reset f to 0",
      "code": "memset ( f , 0 , sizeof ( f ) ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment f at a + add",
      "code": "f [ a + add ] ++ ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if f [ a + add ] = 1 and a isn ' t 0 then increment ans",
      "code": "if ( f [ a + add ] == 1 && a ) ans ++ ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200005]’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "f = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200005]’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "f += a + add ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200005]’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 100 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200005]’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "f *= 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [200005]’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "gets ( a ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( f [ a + add ] == 1 && a [ a + add ] ) ans ++ ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "f = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200005]’"
    },
    {
      "mod_line": [
        1,
        4,
        8
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "f = 0 ;",
        "f += a + add ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200005]’"
    },
    {
      "mod_line": [
        1,
        4,
        8,
        9
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "f = 0 ;",
        "f += a + add ;",
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200005]’"
    },
    {
      "mod_line": [
        1,
        4,
        8,
        6
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "f = 0 ;",
        "f += a + add ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200005]’"
    },
    {
      "mod_line": [
        1,
        4,
        9
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "f = 0 ;",
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200005]’"
    },
    {
      "mod_line": [
        1,
        4,
        9,
        6
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "f = 0 ;",
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200005]’"
    },
    {
      "mod_line": [
        1,
        4,
        6
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "f = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200005]’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "f += a + add ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200005]’)"
    },
    {
      "mod_line": [
        1,
        8,
        9
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "f += a + add ;",
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200005]’)"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        6
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "f += a + add ;",
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        4
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "f += a + add ;",
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;",
        "f *= 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [200005]’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        1,
        8,
        6
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "f += a + add ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        6,
        4
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "f += a + add ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "f *= 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [200005]’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        1,
        8,
        4
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "f += a + add ;",
        "f *= 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [200005]’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [200005]’)"
    },
    {
      "mod_line": [
        1,
        9,
        6
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        6,
        4
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "f *= 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [200005]’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        1,
        9,
        4
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;",
        "f *= 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [200005]’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        4
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "f *= 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [200005]’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int a [ 200005 ] , f [ 200005 ] ;",
        "f *= 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [200005]’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "f = 0 ;",
        "f += a + add ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200005]’"
    },
    {
      "mod_line": [
        4,
        8,
        9
      ],
      "mod_code": [
        "f = 0 ;",
        "f += a + add ;",
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200005]’"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        6
      ],
      "mod_code": [
        "f = 0 ;",
        "f += a + add ;",
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200005]’"
    },
    {
      "mod_line": [
        4,
        8,
        6
      ],
      "mod_code": [
        "f = 0 ;",
        "f += a + add ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200005]’"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "f = 0 ;",
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200005]’"
    },
    {
      "mod_line": [
        4,
        9,
        6
      ],
      "mod_code": [
        "f = 0 ;",
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200005]’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "f = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200005]’"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "f += a + add ;",
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;"
      ],
      "err_line": 8,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200005]’"
    },
    {
      "mod_line": [
        8,
        9,
        6
      ],
      "mod_code": [
        "f += a + add ;",
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        6,
        4
      ],
      "mod_code": [
        "f += a + add ;",
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "f *= 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [200005]’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        8,
        9,
        4
      ],
      "mod_code": [
        "f += a + add ;",
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;",
        "f *= 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [200005]’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "f += a + add ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        4
      ],
      "mod_code": [
        "f += a + add ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "f *= 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [200005]’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "f += a + add ;",
        "f *= 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [200005]’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6,
        4
      ],
      "mod_code": [
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "f *= 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [200005]’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "if ( f [ a + add ] == 1 && a [ a + a ] ) ans ++ ;",
        "f *= 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [200005]’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "f *= 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int [200005]’ and ‘int’ to binary ‘operator*’"
    }
  ]
}