{
  "meta": {
    "index": 1781,
    "hitid": "3MQY1YVHS3EDR25247GFUXC09582BO",
    "workerid": "A1APYLD4DUK33J",
    "probid": "313A",
    "subid": "48935536"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare string inp",
      "code": "string inp ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read inp",
      "code": "cin >> inp ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integers n = length of inp , flag = 0",
      "code": "int n = inp . length ( ) , flag = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if character at 0 in inp is not ' - '",
      "code": "if ( inp . at ( 0 ) != ' - ' )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print inp and newline",
      "code": "cout << inp << endl ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if n is 3",
      "code": "if ( n == 3 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if character at 2 in inp is ' 0 ' or character at 1 in inp is ' 0 '",
      "code": "if ( inp . at ( 2 ) == ' 0 ' || inp . at ( 1 ) == ' 0 ' )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "let flag be 1",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "print ' 0 ' and newline",
      "code": "cout << ' 0 ' << endl ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if flag is 0",
      "code": "if ( flag == 0 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "declare idx as integer",
      "code": "int idx ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if character at n - 1 in inp is greater than character at n - 2 in inp",
      "code": "if ( inp . at ( n - 1 ) > inp . at ( n - 2 ) )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "let idx be n - 1",
      "code": "idx = n - 1 ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 18,
      "text": "let idx be n - 2",
      "code": "idx = n - 2 ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 3
    },
    {
      "line": 20,
      "text": "if i is not idx , print character at i in inp",
      "code": "if ( i != idx ) cout << inp . at ( i ) ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string inp inp ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘inp’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "{ inp ;"
      ],
      "err_line": 25,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        7,
        19
      ],
      "mod_code": [
        "if ( i != idx ) cout << inp [ i ] << endl ;",
        "if ( ! n )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        7,
        19,
        6
      ],
      "mod_code": [
        "if ( i != idx ) cout << inp [ i ] << endl ;",
        "if ( ! n )",
        "for ( i = 0 ; i < n ; i ++ )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        7,
        19,
        17
      ],
      "mod_code": [
        "if ( i != idx ) cout << inp [ i ] << endl ;",
        "if ( ! n )",
        "for ( i = 0 ; i < n ; i ++ )",
        "else else"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        7,
        6
      ],
      "mod_code": [
        "if ( i != idx ) cout << inp [ i ] << endl ;",
        "if ( ! n )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        7,
        6,
        17
      ],
      "mod_code": [
        "if ( i != idx ) cout << inp [ i ] << endl ;",
        "if ( ! n )",
        "else else",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        7,
        17
      ],
      "mod_code": [
        "if ( i != idx ) cout << inp [ i ] << endl ;",
        "if ( ! n )",
        "else else"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        19
      ],
      "mod_code": [
        "if ( i != idx ) cout << inp [ i ] << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        19,
        6
      ],
      "mod_code": [
        "if ( i != idx ) cout << inp [ i ] << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        19,
        6,
        17
      ],
      "mod_code": [
        "if ( i != idx ) cout << inp [ i ] << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else else",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        19,
        17
      ],
      "mod_code": [
        "if ( i != idx ) cout << inp [ i ] << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else else"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        6
      ],
      "mod_code": [
        "if ( i != idx ) cout << inp [ i ] << endl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        6,
        17
      ],
      "mod_code": [
        "if ( i != idx ) cout << inp [ i ] << endl ;",
        "else else",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        17
      ],
      "mod_code": [
        "if ( i != idx ) cout << inp [ i ] << endl ;",
        "else else"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        19
      ],
      "mod_code": [
        "if ( ! n )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        19,
        6
      ],
      "mod_code": [
        "if ( ! n )",
        "for ( i = 0 ; i < n ; i ++ )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        19,
        6,
        20
      ],
      "mod_code": [
        "if ( ! n )",
        "for ( i = 0 ; i < n ; i ++ )",
        "else else",
        "if ( i != idx ) cout << inp . at ( i ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        19,
        6,
        17
      ],
      "mod_code": [
        "if ( ! n )",
        "for ( i = 0 ; i < n ; i ++ )",
        "else else",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        19,
        20
      ],
      "mod_code": [
        "if ( ! n )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( i != idx ) cout << inp . at ( i ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        19,
        20,
        17
      ],
      "mod_code": [
        "if ( ! n )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( i != idx ) cout << inp . at ( i ) << endl ;",
        "else else"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        19,
        17
      ],
      "mod_code": [
        "if ( ! n )",
        "for ( i = 0 ; i < n ; i ++ )",
        "else else"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "if ( ! n )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        6,
        20
      ],
      "mod_code": [
        "if ( ! n )",
        "else else",
        "if ( i != idx ) cout << inp . at ( i ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        6,
        20,
        17
      ],
      "mod_code": [
        "if ( ! n )",
        "else else",
        "if ( i != idx ) cout << inp . at ( i ) << endl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        6,
        17
      ],
      "mod_code": [
        "if ( ! n )",
        "else else",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        20,
        17
      ],
      "mod_code": [
        "if ( ! n )",
        "if ( i != idx ) cout << inp . at ( i ) << endl ;",
        "else else"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        17
      ],
      "mod_code": [
        "if ( ! n )",
        "else else"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        6,
        20
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else else",
        "if ( i != idx ) cout << inp . at ( i ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        6,
        20,
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else else",
        "if ( i != idx ) cout << inp . at ( i ) << endl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        6,
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else else",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        20
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( i != idx ) cout << inp . at ( i ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( i != idx ) cout << inp . at ( i ) << endl ;",
        "else else"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else else"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        20
      ],
      "mod_code": [
        "else else",
        "if ( i != idx ) cout << inp . at ( i ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        20,
        17
      ],
      "mod_code": [
        "else else",
        "if ( i != idx ) cout << inp . at ( i ) << endl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "else else",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        17
      ],
      "mod_code": [
        "if ( i != idx ) cout << inp . at ( i ) << endl ;",
        "else else"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}