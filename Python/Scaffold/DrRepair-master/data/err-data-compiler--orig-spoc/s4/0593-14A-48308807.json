{
  "meta": {
    "index": 593,
    "hitid": "3D1UCPY6GG3JAM3E5VAAM5RR6BA38J",
    "workerid": "AIWEXPJAU66D9",
    "probid": "14A",
    "subid": "48308807"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers m and n",
      "code": "int m , n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "2d characters array ar n by m",
      "code": "char ar [ n ] [ m ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "uper , lowar , left and right = integers",
      "code": "int uper , lowar , left , right ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set integer ck to 0",
      "code": "int ck = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set value of left to m",
      "code": "left = m ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set value of right to 0",
      "code": "right = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create integer con with value 0",
      "code": "int con = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for integer j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "read ar [ i ] [ j ]",
      "code": "cin >> ar [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if ck = 0 and ar [ i ] [ j ] is ' * '",
      "code": "if ( ck == 0 && ar [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "set uper to i",
      "code": "uper = i ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "ck = 1",
      "code": "ck = 1 ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "else if ar [ i ] [ j ] is ' * '",
      "code": "else if ( ar [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "lowar = i",
      "code": "lowar = i ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "if ar [ i ] [ j ] is ' * '",
      "code": "if ( ar [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "increase con",
      "code": "con ++ ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "if j is less than left , set left to j",
      "code": "if ( j < left ) { left = j ; }",
      "indent": 4
    },
    {
      "line": 21,
      "text": "if right is less than j , set right to j",
      "code": "if ( right < j ) { right = j ; }",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "if con is equal to 1 , print ' * ' and a new line",
      "code": "if ( con == 1 ) { cout << \" * \" << endl ; }",
      "indent": 1
    },
    {
      "line": 26,
      "text": "if con is greater than 1",
      "code": "if ( con > 1 )",
      "indent": 1
    },
    {
      "line": 27,
      "text": "for i = uper to lowar inclusive",
      "code": "for ( int i = uper ; i <= lowar ; i ++ )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "for integer j = left to right inclusive print ar [ i ] [ j ]",
      "code": "for ( int j = left ; j <= right ; j ++ ) { cout << ar [ i ] [ j ] ; }",
      "indent": 3
    },
    {
      "line": 29,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char ar [ n ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "ck = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘ck’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "* left = m ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "* right = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int con create ;"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "uper to ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 18,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "for ( i = uper ; i <= lowar ; i ++ )"
      ],
      "err_line": 27,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        14
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "int ck = 1 ;"
      ],
      "err_line": 18,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        14,
        27
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "int ck = 1 ;",
        "for ( i = uper ; i <= lowar ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        14,
        27,
        2
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "int ck = 1 ;",
        "for ( i = uper ; i <= lowar ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        14,
        27,
        13
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "int ck = 1 ;",
        "for ( i = uper ; i <= lowar ; i ++ )",
        "uper to ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        18,
        14,
        27,
        6
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "int ck = 1 ;",
        "for ( i = uper ; i <= lowar ; i ++ )",
        "* left = m ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        18,
        14,
        2
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "int ck = 1 ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        14,
        2,
        13
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "int ck = 1 ;",
        "cin >> n >> k ;",
        "uper to ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        14,
        2,
        6
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "int ck = 1 ;",
        "cin >> n >> k ;",
        "* left = m ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        14,
        13
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "int ck = 1 ;",
        "uper to ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        18,
        14,
        13,
        6
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "int ck = 1 ;",
        "uper to ;",
        "* left = m ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        18,
        14,
        6
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "int ck = 1 ;",
        "* left = m ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        18,
        27
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "for ( i = uper ; i <= lowar ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        2
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "for ( i = uper ; i <= lowar ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        2,
        13
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "for ( i = uper ; i <= lowar ; i ++ )",
        "cin >> n >> k ;",
        "uper to ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        2,
        6
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "for ( i = uper ; i <= lowar ; i ++ )",
        "cin >> n >> k ;",
        "* left = m ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        27,
        13
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "for ( i = uper ; i <= lowar ; i ++ )",
        "uper to ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        18,
        27,
        13,
        6
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "for ( i = uper ; i <= lowar ; i ++ )",
        "uper to ;",
        "* left = m ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        18,
        27,
        6
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "for ( i = uper ; i <= lowar ; i ++ )",
        "* left = m ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        18,
        2
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        2,
        13
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "cin >> n >> k ;",
        "uper to ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        2,
        13,
        6
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "cin >> n >> k ;",
        "uper to ;",
        "* left = m ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        2,
        6
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "cin >> n >> k ;",
        "* left = m ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        13
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "uper to ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        18,
        13,
        6
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "uper to ;",
        "* left = m ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        18,
        6
      ],
      "mod_code": [
        "if ( s [ i ] [ j ] == ' * ' )",
        "* left = m ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        14,
        27
      ],
      "mod_code": [
        "int ck = 1 ;",
        "for ( i = uper ; i <= lowar ; i ++ )"
      ],
      "err_line": 27,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        27,
        2
      ],
      "mod_code": [
        "int ck = 1 ;",
        "for ( i = uper ; i <= lowar ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        2,
        13
      ],
      "mod_code": [
        "int ck = 1 ;",
        "for ( i = uper ; i <= lowar ; i ++ )",
        "cin >> n >> k ;",
        "uper to ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        2,
        6
      ],
      "mod_code": [
        "int ck = 1 ;",
        "for ( i = uper ; i <= lowar ; i ++ )",
        "cin >> n >> k ;",
        "* left = m ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        27,
        13
      ],
      "mod_code": [
        "int ck = 1 ;",
        "for ( i = uper ; i <= lowar ; i ++ )",
        "uper to ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        14,
        27,
        13,
        6
      ],
      "mod_code": [
        "int ck = 1 ;",
        "for ( i = uper ; i <= lowar ; i ++ )",
        "uper to ;",
        "* left = m ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        14,
        27,
        6
      ],
      "mod_code": [
        "int ck = 1 ;",
        "for ( i = uper ; i <= lowar ; i ++ )",
        "* left = m ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "int ck = 1 ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        13
      ],
      "mod_code": [
        "int ck = 1 ;",
        "cin >> n >> k ;",
        "uper to ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        13,
        6
      ],
      "mod_code": [
        "int ck = 1 ;",
        "cin >> n >> k ;",
        "uper to ;",
        "* left = m ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        6
      ],
      "mod_code": [
        "int ck = 1 ;",
        "cin >> n >> k ;",
        "* left = m ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        13
      ],
      "mod_code": [
        "int ck = 1 ;",
        "uper to ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        14,
        13,
        6
      ],
      "mod_code": [
        "int ck = 1 ;",
        "uper to ;",
        "* left = m ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "int ck = 1 ;",
        "* left = m ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        27,
        2
      ],
      "mod_code": [
        "for ( i = uper ; i <= lowar ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        2,
        13
      ],
      "mod_code": [
        "for ( i = uper ; i <= lowar ; i ++ )",
        "cin >> n >> k ;",
        "uper to ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        2,
        13,
        6
      ],
      "mod_code": [
        "for ( i = uper ; i <= lowar ; i ++ )",
        "cin >> n >> k ;",
        "uper to ;",
        "* left = m ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        2,
        6
      ],
      "mod_code": [
        "for ( i = uper ; i <= lowar ; i ++ )",
        "cin >> n >> k ;",
        "* left = m ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        13
      ],
      "mod_code": [
        "for ( i = uper ; i <= lowar ; i ++ )",
        "uper to ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        27,
        13,
        6
      ],
      "mod_code": [
        "for ( i = uper ; i <= lowar ; i ++ )",
        "uper to ;",
        "* left = m ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        27,
        6
      ],
      "mod_code": [
        "for ( i = uper ; i <= lowar ; i ++ )",
        "* left = m ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "uper to ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        6
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "uper to ;",
        "* left = m ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "* left = m ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "uper to ;",
        "* left = m ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    }
  ]
}