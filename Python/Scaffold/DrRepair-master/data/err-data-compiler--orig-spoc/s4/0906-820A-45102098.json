{
  "meta": {
    "index": 906,
    "hitid": "3TL87MO8CMJ9553QJFKGSJ2UTGSFLY",
    "workerid": "AIWEXPJAU66D9",
    "probid": "820A",
    "subid": "45102098"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long long cnt = 0",
      "code": "long long cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare long long c , v0 , v1 , a and l",
      "code": "long long c , v0 , v1 , a , l ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read c , v0 , v1 , a and l",
      "code": "cin >> c >> v0 >> v1 >> a >> l ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "infinite loop",
      "code": "while ( true )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "increase cnt",
      "code": "cnt ++ ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "decrease c by v0",
      "code": "c -= v0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if v0 is less than v1 , increase v0 by a",
      "code": "if ( v0 < v1 ) v0 += a ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if v0 is greater than v1 , v0 = v1",
      "code": "if ( v0 > v1 ) v0 = v1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "break if c < = 0",
      "code": "if ( c <= 0 ) break ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increase c by l",
      "code": "c += l ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print cnt and \" \\ n \"",
      "code": "cout << cnt << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long c , v0 , v1 , a [ l ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        2
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "c += ' l ' ;",
        "long long c , v0 , v1 , a [ l ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        2,
        6
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "c += ' l ' ;",
        "long long c , v0 , v1 , a [ l ] ;",
        "c -= ' v0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "long long c , v0 , v1 , a [ l ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        6
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "long long c , v0 , v1 , a [ l ] ;",
        "c -= ' v0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "c += ' l ' ;",
        "long long c , v0 , v1 , a [ l ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        6
      ],
      "mod_code": [
        "c += ' l ' ;",
        "long long c , v0 , v1 , a [ l ] ;",
        "c -= ' v0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "long long c , v0 , v1 , a [ l ] ;",
        "c -= ' v0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "‘l’ was not declared in this scope"
    }
  ]
}