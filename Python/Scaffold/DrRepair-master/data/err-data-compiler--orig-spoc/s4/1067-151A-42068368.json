{
  "meta": {
    "index": 1067,
    "hitid": "3URJ6VVYUPH7DA9YCQ4PTW9X0IL4OO",
    "workerid": "A1APYLD4DUK33J",
    "probid": "151A",
    "subid": "42068368"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , k , l , c , d , p , nl , np",
      "code": "int n , k , l , c , d , p , nl , np ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n read k read l read c read d read p read nl read np",
      "code": "cin >> n >> k >> l >> c >> d >> p >> nl >> np ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integers resultado , mltotal , lemoes , sal , resultadofinal",
      "code": "int resultado , mltotal , lemoes , sal , resultadofinal ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set mltotal to ( k * l ) / nl",
      "code": "mltotal = ( k * l ) / nl ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set lemoes to c * d",
      "code": "lemoes = c * d ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set sal to p / np",
      "code": "sal = p / np ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set resultado to minimum of ( minimum of ( mltotal and lemoes ) and sal )",
      "code": "resultado = min ( min ( mltotal , lemoes ) , sal ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set resultadofinal to resultado / n",
      "code": "resultadofinal = resultado / n ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print resultadofinal print newline",
      "code": "cout << resultadofinal << endl ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int mltotal = ( k * l ) / nl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "resultado = min ( min ( mltotal , lemoes ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(const int&)’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int mltotal = ( k * l ) / nl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        2,
        4,
        5
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int mltotal = ( k * l ) / nl ;",
        "lemoes *= d ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        2,
        4,
        5,
        7
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int mltotal = ( k * l ) / nl ;",
        "lemoes *= d ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        2,
        4,
        5,
        6
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int mltotal = ( k * l ) / nl ;",
        "lemoes *= d ;",
        "sal /= np ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        2,
        4,
        5,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int mltotal = ( k * l ) / nl ;",
        "lemoes *= d ;",
        "resultadofinal /= n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        2,
        4,
        7
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int mltotal = ( k * l ) / nl ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        2,
        4,
        7,
        6
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int mltotal = ( k * l ) / nl ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;",
        "sal /= np ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        2,
        4,
        7,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int mltotal = ( k * l ) / nl ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;",
        "resultadofinal /= n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        2,
        4,
        6
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int mltotal = ( k * l ) / nl ;",
        "sal /= np ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        2,
        4,
        6,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int mltotal = ( k * l ) / nl ;",
        "sal /= np ;",
        "resultadofinal /= n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        2,
        4,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int mltotal = ( k * l ) / nl ;",
        "resultadofinal /= n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        2,
        5,
        7
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "lemoes *= d ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(const int&)’"
    },
    {
      "mod_line": [
        2,
        5,
        7,
        6
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "lemoes *= d ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;",
        "sal /= np ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(const int&)’"
    },
    {
      "mod_line": [
        2,
        5,
        7,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "lemoes *= d ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;",
        "resultadofinal /= n ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(const int&)’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(const int&)’"
    },
    {
      "mod_line": [
        2,
        7,
        6
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;",
        "sal /= np ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(const int&)’"
    },
    {
      "mod_line": [
        2,
        7,
        6,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;",
        "sal /= np ;",
        "resultadofinal /= n ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(const int&)’"
    },
    {
      "mod_line": [
        2,
        7,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;",
        "resultadofinal /= n ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(const int&)’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "int mltotal = ( k * l ) / nl ;",
        "lemoes *= d ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        4,
        5,
        7
      ],
      "mod_code": [
        "int mltotal = ( k * l ) / nl ;",
        "lemoes *= d ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        6
      ],
      "mod_code": [
        "int mltotal = ( k * l ) / nl ;",
        "lemoes *= d ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;",
        "sal /= np ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        8
      ],
      "mod_code": [
        "int mltotal = ( k * l ) / nl ;",
        "lemoes *= d ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;",
        "resultadofinal /= n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "int mltotal = ( k * l ) / nl ;",
        "lemoes *= d ;",
        "sal /= np ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        8
      ],
      "mod_code": [
        "int mltotal = ( k * l ) / nl ;",
        "lemoes *= d ;",
        "sal /= np ;",
        "resultadofinal /= n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        4,
        5,
        8
      ],
      "mod_code": [
        "int mltotal = ( k * l ) / nl ;",
        "lemoes *= d ;",
        "resultadofinal /= n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "int mltotal = ( k * l ) / nl ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        4,
        7,
        6
      ],
      "mod_code": [
        "int mltotal = ( k * l ) / nl ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;",
        "sal /= np ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        4,
        7,
        6,
        8
      ],
      "mod_code": [
        "int mltotal = ( k * l ) / nl ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;",
        "sal /= np ;",
        "resultadofinal /= n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "int mltotal = ( k * l ) / nl ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;",
        "resultadofinal /= n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "int mltotal = ( k * l ) / nl ;",
        "sal /= np ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        4,
        6,
        8
      ],
      "mod_code": [
        "int mltotal = ( k * l ) / nl ;",
        "sal /= np ;",
        "resultadofinal /= n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "int mltotal = ( k * l ) / nl ;",
        "resultadofinal /= n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int mltotal’"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "lemoes *= d ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(const int&)’"
    },
    {
      "mod_line": [
        5,
        7,
        6
      ],
      "mod_code": [
        "lemoes *= d ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;",
        "sal /= np ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(const int&)’"
    },
    {
      "mod_line": [
        5,
        7,
        6,
        8
      ],
      "mod_code": [
        "lemoes *= d ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;",
        "sal /= np ;",
        "resultadofinal /= n ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(const int&)’"
    },
    {
      "mod_line": [
        5,
        7,
        8
      ],
      "mod_code": [
        "lemoes *= d ;",
        "resultado = min ( min ( mltotal , lemoes ) ) ;",
        "resultadofinal /= n ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(const int&)’"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "resultado = min ( min ( mltotal , lemoes ) ) ;",
        "sal /= np ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(const int&)’"
    },
    {
      "mod_line": [
        7,
        6,
        8
      ],
      "mod_code": [
        "resultado = min ( min ( mltotal , lemoes ) ) ;",
        "sal /= np ;",
        "resultadofinal /= n ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(const int&)’"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "resultado = min ( min ( mltotal , lemoes ) ) ;",
        "resultadofinal /= n ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(const int&)’"
    }
  ]
}