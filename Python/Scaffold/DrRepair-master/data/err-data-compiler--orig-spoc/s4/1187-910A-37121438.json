{
  "meta": {
    "index": 1187,
    "hitid": "3X878VYTIECAQKEOFLJ69EKTYWOF7Q",
    "workerid": "A1AYVATMT88U1W",
    "probid": "910A",
    "subid": "37121438"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , d be integers",
      "code": "int n , d ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and d",
      "code": "cin >> n >> d ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let s be a string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "dp = array of integers of length 110",
      "code": "int dp [ 110 ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to d inclusive",
      "code": "for ( int i = 0 ; i <= d ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if ith element of s is equal to 1",
      "code": "if ( s [ i ] == ' 1 ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "ith element of dp is equal to 1",
      "code": "dp [ i ] = 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else , do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "ith element of dp is equal to 10000",
      "code": "dp [ i ] = 10000 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = d + 1 to n exclusive",
      "code": "for ( int i = d + 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "ith element of dp is equal to 10000",
      "code": "dp [ i ] = 10000 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if ( ith element of s is equal to 1 )",
      "code": "if ( s [ i ] == ' 1 ' )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "for j equal to d till j i greater than i , input the minimum value of dp [ i ] , dp [ i - j ] + 1 into i th term of dp array",
      "code": "for ( int j = d ; j >= 1 ; j -- ) { dp [ i ] = min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if n - 1 th term of dp is equal to 10000",
      "code": "if ( dp [ n - 1 ] == 10000 )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print - 1 and a new line",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else do this",
      "code": "else",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print n - 1 th term of array dp and a new line",
      "code": "cout << dp [ n - 1 ] << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "if ( dp [ n ] == 10000 [ 10000 ] )"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "dp [ j ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else ,"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "dp [ j ] = 10000 ;"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = d + 1 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "dp [ j ] = 10000 ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( int j = d ; j > i ; j -- ) cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "if ( dp [ n ] == 10000 ) dp [ n - 1 ] = 10000 ;"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        7,
        15
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        7,
        15,
        18
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "if ( dp [ n ] == 10000 [ 10000 ] )"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        7,
        15,
        18,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "cout << dp [ 1 ] << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        7,
        15,
        18,
        20
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "else do"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        7,
        15,
        18,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "cout << dp [ 1 ] << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        7,
        15,
        21,
        20
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "cout << dp [ 1 ] << \" \\n \" ;",
        "else do"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        7,
        15,
        21,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "cout << dp [ 1 ] << \" \\n \" ;",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15,
        20
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "else do"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        7,
        15,
        20,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "else do",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        18
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "if ( dp [ n ] == 10000 [ 10000 ] )"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        18,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "cout << dp [ 1 ] << \" \\n \" ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        18,
        21,
        20
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "cout << dp [ 1 ] << \" \\n \" ;",
        "else do"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        18,
        21,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "cout << dp [ 1 ] << \" \\n \" ;",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        18,
        20
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "else do"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        18,
        20,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "else do",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        18,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        21,
        20
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "cout << dp [ 1 ] << \" \\n \" ;",
        "else do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        7,
        21,
        20,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "cout << dp [ 1 ] << \" \\n \" ;",
        "else do",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        21,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "cout << dp [ 1 ] << \" \\n \" ;",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        20
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "else do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        7,
        20,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "else do",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == 1 )",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18
      ],
      "mod_code": [
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "if ( dp [ n ] == 10000 [ 10000 ] )"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        15,
        18,
        21
      ],
      "mod_code": [
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "cout << dp [ 1 ] << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        15,
        18,
        21,
        20
      ],
      "mod_code": [
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "cout << dp [ 1 ] << \" \\n \" ;",
        "else do"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        15,
        18,
        21,
        6
      ],
      "mod_code": [
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "cout << dp [ 1 ] << \" \\n \" ;",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        20
      ],
      "mod_code": [
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "else do"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        15,
        18,
        20,
        6
      ],
      "mod_code": [
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "else do",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        6
      ],
      "mod_code": [
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        21
      ],
      "mod_code": [
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "cout << dp [ 1 ] << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        15,
        21,
        20
      ],
      "mod_code": [
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "cout << dp [ 1 ] << \" \\n \" ;",
        "else do"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        15,
        21,
        20,
        6
      ],
      "mod_code": [
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "cout << dp [ 1 ] << \" \\n \" ;",
        "else do",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        21,
        6
      ],
      "mod_code": [
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "cout << dp [ 1 ] << \" \\n \" ;",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20
      ],
      "mod_code": [
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "else do"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        15,
        20,
        6
      ],
      "mod_code": [
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "else do",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        6
      ],
      "mod_code": [
        "for ( int j = d ; j > i ; j -- ) { cin >> min ( dp [ i ] , dp [ i - j ] + 1 ) ; }",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        21
      ],
      "mod_code": [
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "cout << dp [ 1 ] << \" \\n \" ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        21,
        20
      ],
      "mod_code": [
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "cout << dp [ 1 ] << \" \\n \" ;",
        "else do"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        21,
        20,
        6
      ],
      "mod_code": [
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "cout << dp [ 1 ] << \" \\n \" ;",
        "else do",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        21,
        6
      ],
      "mod_code": [
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "cout << dp [ 1 ] << \" \\n \" ;",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20
      ],
      "mod_code": [
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "else do"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        20,
        6
      ],
      "mod_code": [
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "else do",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        6
      ],
      "mod_code": [
        "if ( dp [ n ] == 10000 [ 10000 ] )",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        20
      ],
      "mod_code": [
        "cout << dp [ 1 ] << \" \\n \" ;",
        "else do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        21,
        20,
        6
      ],
      "mod_code": [
        "cout << dp [ 1 ] << \" \\n \" ;",
        "else do",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        6
      ],
      "mod_code": [
        "cout << dp [ 1 ] << \" \\n \" ;",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        6
      ],
      "mod_code": [
        "else do",
        "for ( i = 0 ; i <= d ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}