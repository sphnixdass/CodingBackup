{
  "meta": {
    "index": 167,
    "hitid": "322ZSN9Z5GENQ2E687QON6FKYOQT4I",
    "workerid": "A1APYLD4DUK33J",
    "probid": "3A",
    "subid": "41651215"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare inline read with no arguments , returning integer",
      "code": "inline int read ( )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create character ch with ch = ' '",
      "code": "char ch = ' ' ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integers f , x , with f = 1 , x = 0",
      "code": "int f = 1 , x = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while ch is not digit",
      "code": "while ( ! isdigit ( ch ) )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set ch to read character",
      "code": "ch = getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if ch is ' - ' , set f to f * - 1",
      "code": "if ( ch == ' - ' ) f *= - 1 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while ch is digit",
      "code": "while ( isdigit ( ch ) )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set x to ( x bitshift left 3 ) + ( x bitshift left 1 ) + ch - ' 0 '",
      "code": "x = ( x << 3 ) + ( x << 1 ) + ch - ' 0 ' ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set ch to read character",
      "code": "ch = getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "return f * x from function",
      "code": "return f * x ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 13,
      "text": "create character array c with size 2",
      "code": "char c [ 2 ] ;",
      "indent": 0
    },
    {
      "line": 14,
      "text": "create integers x , y , fx , fy , ans",
      "code": "int x , y , fx , fy , ans ;",
      "indent": 0
    },
    {
      "line": 15,
      "text": "create string array an with size 1000",
      "code": "string an [ 1000 ] ;",
      "indent": 0
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 17,
      "text": "read c",
      "code": "cin >> c ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "set x to c [ 0 ] - ' a '",
      "code": "x = c [ 0 ] - ' a ' ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "set y to c [ 1 ] - ' 0 '",
      "code": "y = c [ 1 ] - ' 0 ' ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "read c",
      "code": "cin >> c ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "set fx to c [ 0 ] - ' a '",
      "code": "fx = c [ 0 ] - ' a ' ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "set fy to c [ 1 ] - ' 0 '",
      "code": "fy = c [ 1 ] - ' 0 ' ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "while x is less than fx and y is less than fy , increment x , increment y , set an [ incremented ans ] to \" RU \"",
      "code": "while ( x < fx && y < fy ) x ++ , y ++ , an [ ++ ans ] = \" RU \" ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "while x is less than fx and y is greater than fy , increment x , decrement y , set an [ incremented ans ] to \" RD \"",
      "code": "while ( x < fx && y > fy ) x ++ , y -- , an [ ++ ans ] = \" RD \" ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "while x is greater than fx and y is greater than fy , decrement x , decrement y , set an [ incremented ans ] to \" LD \"",
      "code": "while ( x > fx && y > fy ) x -- , y -- , an [ ++ ans ] = \" LD \" ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "while x is greater than fx and y is less than fy , decrement x , increment y , set an [ incremented ans ] to \" LU \"",
      "code": "while ( x > fx && y < fy ) x -- , y ++ , an [ ++ ans ] = \" LU \" ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "while x is greater than fx and y is fy , decrement x , set an [ incremented ans ] to \" L \"",
      "code": "while ( x > fx && y == fy ) x -- , an [ ++ ans ] = \" L \" ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "while x is less than fx and y is fy , set an [ incremented ans ] to \" R \"",
      "code": "while ( x < fx && y == fy ) x ++ , an [ ++ ans ] = \" R \" ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "while x is fx and y is less than fy , increment y , set an [ incremented ans ] to \" U \"",
      "code": "while ( x == fx && y < fy ) y ++ , an [ ++ ans ] = \" U \" ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "while x is fx and y is greater than fy , decrement y , set an [ incremented ans ] to \" D \"",
      "code": "while ( x == fx && y > fy ) y -- , an [ ++ ans ] = \" D \" ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print ans print newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "for i = 1 to ans inclusive , print an [ i ] print newline",
      "code": "for ( int i = 1 ; i <= ans ; i ++ ) cout << an [ i ] << endl ;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;"
      ],
      "err_line": 28,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 30,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "inline int read ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "ch = ' ' ;"
      ],
      "err_line": 1,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int f = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "char a [ 2 ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "char an [ 1000 ] ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "c = getchar ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [2]’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "c = getchar ( ) ;"
      ],
      "err_line": 20,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [2]’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ incremented ++ ] = \" RD \" , y -- ;"
      ],
      "err_line": 24,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" , y -- ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "while ( x > fx && y < fy ) an [ incremented ++ ] = \" LU \" ;"
      ],
      "err_line": 26,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "while ( x == fx && y < fy ) an [ incremented ++ ] = \" U \" ;"
      ],
      "err_line": 29,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25,
        26
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25,
        26,
        27
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25,
        26,
        28
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25,
        26,
        29
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25,
        26,
        30
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25,
        27
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25,
        27,
        28
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25,
        27,
        29
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25,
        27,
        30
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25,
        28
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25,
        28,
        29
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25,
        28,
        30
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25,
        29
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25,
        29,
        30
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25,
        30
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        27
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        27,
        28
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        27,
        29
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        27,
        30
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        28
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;"
      ],
      "err_line": 28,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        28,
        29
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 28,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        28,
        30
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 28,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        29,
        30
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 30,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        30
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 30,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        27
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        27,
        28
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        27,
        28,
        29
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        27,
        28,
        30
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        27,
        29
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        27,
        29,
        30
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        27,
        30
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;"
      ],
      "err_line": 28,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        29
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 28,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        29,
        30
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 28,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        30
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 28,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        30
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 30,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30
      ],
      "mod_code": [
        "while ( x < fx && y > fy ) an [ ans ++ ] = \" RD \" , y -- ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 30,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        27
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        27,
        28
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        27,
        29
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        27,
        30
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        28
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        28,
        29
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        28,
        30
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        29
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        29,
        30
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        26,
        30
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        28
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        28,
        29
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        28,
        30
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        29
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        29,
        30
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        27,
        30
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        29
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        29,
        30
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        30
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        29
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        29,
        30
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        30
      ],
      "mod_code": [
        "while ( x > fx && y > fy ) x [ incremented ++ ] = \" LD \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 25,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27
      ],
      "mod_code": [
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        28
      ],
      "mod_code": [
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        28,
        29
      ],
      "mod_code": [
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        28,
        30
      ],
      "mod_code": [
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        29
      ],
      "mod_code": [
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        29,
        30
      ],
      "mod_code": [
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        27,
        30
      ],
      "mod_code": [
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28
      ],
      "mod_code": [
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;"
      ],
      "err_line": 28,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28,
        29
      ],
      "mod_code": [
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 28,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28,
        29,
        30
      ],
      "mod_code": [
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 28,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28,
        30
      ],
      "mod_code": [
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 28,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        29,
        30
      ],
      "mod_code": [
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 30,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        30
      ],
      "mod_code": [
        "while ( x > fx && y < fy ) an [ ans ++ ] = \" LU \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 30,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        28
      ],
      "mod_code": [
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        28,
        29
      ],
      "mod_code": [
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        28,
        29,
        30
      ],
      "mod_code": [
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        28,
        30
      ],
      "mod_code": [
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        29
      ],
      "mod_code": [
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        29,
        30
      ],
      "mod_code": [
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        30
      ],
      "mod_code": [
        "while ( x > fx && y == fy ) an [ incremented ++ ] = \" L \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 27,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29
      ],
      "mod_code": [
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;"
      ],
      "err_line": 28,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        30
      ],
      "mod_code": [
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 28,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        30
      ],
      "mod_code": [
        "while ( x < fx && y == fy ) an [ incremented ++ ] = \" R \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 28,
      "err_msg": "‘incremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        30
      ],
      "mod_code": [
        "while ( x == fx && y < fy ) an [ ans ++ ] = \" U \" ;",
        "while ( x == fx && y > fy ) an [ incremented ++ ] = \" D \" ;"
      ],
      "err_line": 30,
      "err_msg": "‘incremented’ was not declared in this scope"
    }
  ]
}