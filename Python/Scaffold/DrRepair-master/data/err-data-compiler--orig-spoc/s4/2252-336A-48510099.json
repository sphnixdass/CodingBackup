{
  "meta": {
    "index": 2252,
    "hitid": "3NCN4N1H1GB9GOUVQQEZMLFYK0VNBW",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "336A",
    "subid": "48510099"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "x , y = long long",
      "code": "long long x , y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read x and y",
      "code": "cin >> x >> y ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if x > 0 and y > 0",
      "code": "if ( x > 0 && y > 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print 0",
      "code": "cout << \" 0 \"",
      "indent": 2
    },
    {
      "line": 5,
      "text": "x + y , \" \" , x + y",
      "code": "<< \" \" << x + y << \" \" << x + y << \" \"",
      "indent": 3
    },
    {
      "line": 6,
      "text": "0",
      "code": "<< \" 0 \" << endl ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else if x > 0 and y < 0",
      "code": "else if ( x > 0 && y < 0 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print 0",
      "code": "cout << \" 0 \"",
      "indent": 2
    },
    {
      "line": 9,
      "text": "character \" \"",
      "code": "<< \" \"",
      "indent": 3
    },
    {
      "line": 10,
      "text": "- , x - y , \" \" , x - y",
      "code": "<< \" - \" << x - y << \" \" << x - y << \" \"",
      "indent": 3
    },
    {
      "line": 11,
      "text": "0",
      "code": "<< \" 0 \" << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else if x < 0 and y > 0",
      "code": "else if ( x < 0 && y > 0 )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print - , - x + y",
      "code": "cout << \" - \" << - x + y << \" \"",
      "indent": 2
    },
    {
      "line": 14,
      "text": "0",
      "code": "<< \" 0 \"",
      "indent": 3
    },
    {
      "line": 15,
      "text": "character \" \"",
      "code": "<< \" \"",
      "indent": 3
    },
    {
      "line": 16,
      "text": "0",
      "code": "<< \" 0 \"",
      "indent": 3
    },
    {
      "line": 17,
      "text": "- x + y",
      "code": "<< \" \" << - x + y << endl ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print - , - x - y",
      "code": "cout << \" - \" << - x - y << \" \"",
      "indent": 2
    },
    {
      "line": 20,
      "text": "0",
      "code": "<< \" 0 \"",
      "indent": 3
    },
    {
      "line": 21,
      "text": "character \" \"",
      "code": "<< \" \"",
      "indent": 3
    },
    {
      "line": 22,
      "text": "0",
      "code": "<< \" 0 \"",
      "indent": 3
    },
    {
      "line": 23,
      "text": "character \" \"",
      "code": "<< \" \"",
      "indent": 3
    },
    {
      "line": 24,
      "text": "- , - x - y",
      "code": "<< \" - \" << - x - y << endl ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "x + y , x + y , x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "- - x , x - y , x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "0 ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "cout << \" \" ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "cout << \" \" ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "-= - x - y ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::basic_ostream<char>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> x >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cout << 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "x + y , \" \" , x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "exit ( 0 ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘exit’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cout << 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout . \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "- - x ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "exit ( 0 ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘exit’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cout << \" +------------------------+ - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "exit ( 0 ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘exit’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cout . \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "exit ( 0 ) ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘exit’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "exit ( 0 ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘exit’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "cout . \" \" ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "exit ( 0 ) ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘exit’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "cout . \" \" ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "-- - x - y ;"
      ],
      "err_line": 24,
      "err_msg": "decrement of read-only location ‘(const char*)\" \"’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        8
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::basic_ostream<char>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        4,
        5,
        8
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        14,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        14,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        14,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        15,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        15,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        15,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        16,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        16,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        16,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        17,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        17,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        17,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        17,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        17,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        17,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "x + y , x + y , x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << 0 << endl ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << 0 << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        14,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        14,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        14,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        15,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        15,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        15,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        16,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        16,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        16,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        17,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        17,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        17,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        17,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        17,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        17,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        14,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        14,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        14,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        15,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        15,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        15,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        17,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        17,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        17,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        17,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        17,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        17,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << 0 << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        15,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        16,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        16,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        16,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        17,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        17,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        17,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        17,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        17,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        17,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        14,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        14,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        14,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        15,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        15,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        15,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        17,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        17,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        17,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        17,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        17,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        17,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        10,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        17,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        17,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        17,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        17,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        17,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        17,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        13,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        15,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        14,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        15,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        15,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        16,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        14,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        16,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        16,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        17,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        14,
        17,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        17,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        17,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        17,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        17,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        14,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        14,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        14,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        14,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        14,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        14,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        16,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        15,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        16,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        16,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        17,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        15,
        17,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        17,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        17,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        17,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        17,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        15,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        15,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        15,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        15,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        15,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        15,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        17,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        16,
        17,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        17,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        17,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        17,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        17,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        16,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        16,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        16,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        16,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        16,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        17,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        17,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        17,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        17,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        17,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        17,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        17,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        17,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        17,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        17,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        17,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        17,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        17,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        17,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        17,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        17,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        17,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        17,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        17,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        17,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        17,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        19,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        19,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        19,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        19,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        19,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        19,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        19,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        19,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        19,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        20,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        20,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        20,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        20,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        20,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        21,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        21,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        21,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        22,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        8
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        9
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        10
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        11
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        13
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << 0 << endl ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << 0 << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        10
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        11
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        13
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        10
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        11
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        13
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- - x , x - y , x - y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        11
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        13
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        13
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        14,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        14,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        14,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        14,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        14,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        14,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        14,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        14,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        14,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        15,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        15,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        15,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        15,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        15,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        15,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        15,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        15,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        16,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        16,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        16,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        16,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        16,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        16,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        16,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        17,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        17,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        17,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        17,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        17,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        17,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        19,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        19,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        19,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        19,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        19,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        20,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        20,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        20,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        20,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        21,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        21,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        21,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        22,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        22,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        23,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        6,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        9
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        10
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        11
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        13
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        10
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        11
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        13
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        11
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        13
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        13
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        14,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        14,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        14,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        14,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        14,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        14,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        14,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        14,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        14,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        15,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        15,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        15,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        15,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        15,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        15,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        15,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        15,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        16,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        16,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        16,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        16,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        16,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        16,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        16,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        17,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        17,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        17,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        17,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        17,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        17,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        19,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        19,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        19,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        19,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        19,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        8,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        20,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        20,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        20,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        20,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        21,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        21,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        21,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        22,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        22,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        23,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        8,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << 0 << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        10
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        11
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        13
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        11
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        13
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        13
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        14,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        14,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        14,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        14,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        14,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        14,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        14,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        14,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        14,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        15,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        15,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        15,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        15,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        15,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        15,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        15,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        15,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        16,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        16,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        16,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        16,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        16,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        16,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        16,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        17,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        17,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        17,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        17,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        17,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        17,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        19,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        19,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        19,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        19,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        19,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        20,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        20,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        20,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        20,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        21,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        21,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        21,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        22,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        22,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        23,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        9,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        11
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        13
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        13
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        14,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        14,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        14,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        14,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        14,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        14,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        14,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        14,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        14,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        15,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        15,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        15,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        15,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        15,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        15,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        15,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        15,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        16,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        16,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        16,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        16,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        16,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        16,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        16,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        17,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        17,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        17,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        17,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        17,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        17,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        19,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        19,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        19,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        19,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        19,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        10,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        20,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        20,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        20,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        20,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        21,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        21,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        21,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        22,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        22,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        23,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        10,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- - x , x - y , x - y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        13
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        14,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        14,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        14,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        14,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        14,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        14,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        14,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        14,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        14,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        15,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        15,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        15,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        15,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        15,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        15,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        15,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        15,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        16,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        16,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        16,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        16,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        16,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        16,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        16,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        17,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        17,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        17,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        17,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        17,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        17,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        19,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        19,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        19,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        19,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        19,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        11,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        20,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        20,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        20,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        20,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        21,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        21,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        21,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        22,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        22,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        23,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        11,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        14,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        14,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        14,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        14,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        14,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        14,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        14,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        14,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        14,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        15,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        15,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        15,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        15,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        15,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        15,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        15,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        15,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        16,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        16,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        16,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        16,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        16,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        16,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        16,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        17,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        17,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        17,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        17,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        17,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        17,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        19,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        19,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        19,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        19,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        19,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        20,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        20,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        20,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        20,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        21,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        21,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        21,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        22,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        22,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        23,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        13,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        15,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        15,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        15,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        14,
        15,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        15,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        15,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        15,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        15,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        16,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        16,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        14,
        16,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        16,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        16,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        16,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        16,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        17,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        14,
        17,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        17,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        17,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        17,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        17,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        14,
        19,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        14,
        19,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        14,
        19,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        14,
        19,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        14,
        19,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        14,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        20,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        20,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        20,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        20,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        21,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        21,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        21,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        22,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        22,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        23,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        14,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        16,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        16,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        15,
        16,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        16,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        16,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        16,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        16,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        17,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        15,
        17,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        17,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        17,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        17,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        17,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        15,
        19,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        15,
        19,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        15,
        19,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        15,
        19,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        15,
        19,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        15,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        20,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        20,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        20,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        20,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        21,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        21,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        21,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        22,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        22,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        23,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        15,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        17,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        16,
        17,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        17,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        17,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        17,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        17,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        16,
        19,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        16,
        19,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        16,
        19,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        16,
        19,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        16,
        19,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        16,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        20,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        20,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        20,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        20,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        21,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        21,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        21,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        22,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        22,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        23,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        16,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        17,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        17,
        19,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        17,
        19,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        17,
        19,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        17,
        19,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        17,
        19,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        17,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        17,
        20,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        17,
        20,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        17,
        20,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        17,
        20,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        17,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        17,
        21,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        17,
        21,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        17,
        21,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        17,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        17,
        22,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        17,
        22,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        17,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        17,
        23,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        17,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        19
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        19,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        19,
        20,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        19,
        20,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        19,
        20,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        19,
        20,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        19,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        19,
        21,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        19,
        21,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        19,
        21,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        19,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        19,
        22,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        19,
        22,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        19,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        19,
        23,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        19,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        20
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        20,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        20,
        21,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        20,
        21,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        20,
        21,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        20,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        20,
        22,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        20,
        22,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        20,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        20,
        23,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        20,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        21
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        21,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        21,
        22,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        21,
        22,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        21,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        21,
        23,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        21,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        22
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        22,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        22,
        23,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        22,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        23
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        23,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        5,
        24
      ],
      "mod_code": [
        "x + y , x + y , x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘x’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        9
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        10
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        11
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        13
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        14
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        15
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        10
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        11
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        13
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        14
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        15
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        11
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        13
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        14
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        15
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        13
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        14
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        15
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        14
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        15
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        15
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        15,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        15,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        15,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        15,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        15,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        15,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        15,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        15,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        16,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        16,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        16,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        16,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        16,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        16,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        16,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        17,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        17,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        17,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        17,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        17,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        17,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        8,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << 0 << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        10
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        11
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        13
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        14
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        15
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        11
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        13
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        14
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        15
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        13
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        14
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        15
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        14
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        15
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        15
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        15,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        15,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        15,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        15,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        15,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        15,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        15,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        15,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        16,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        16,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        16,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        16,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        16,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        16,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        16,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        17,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        17,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        17,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        17,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        17,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        17,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        9,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        11
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        13
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        14
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        15
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        16
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        17
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        19
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        20
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        21
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        22
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        23
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        24
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        13
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        14
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        15
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        16
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        17
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        19
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        20
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        21
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        22
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        23
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        24
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        14
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        14,
        15
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        14,
        16
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        14,
        17
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        14,
        19
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        14,
        20
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        14,
        21
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        14,
        22
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        14,
        23
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        14,
        24
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        15
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        15,
        16
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        15,
        17
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        15,
        19
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        15,
        20
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        15,
        21
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        15,
        22
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        15,
        23
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        15,
        24
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        16
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        16,
        17
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        16,
        19
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        16,
        20
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        16,
        21
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        16,
        22
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        16,
        23
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        16,
        24
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        17
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        17,
        19
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        17,
        20
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        17,
        21
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        17,
        22
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        17,
        23
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        17,
        24
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        19
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        10,
        20
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        21
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        22
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        23
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        10,
        24
      ],
      "mod_code": [
        "0 ;",
        "- - x , x - y , x - y ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        13
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        14
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        15
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        16
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        17
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        19
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        14
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        14,
        15
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        14,
        16
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        14,
        17
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        14,
        19
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        14,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        14,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        14,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        14,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        14,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        15
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        15,
        16
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        15,
        17
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        15,
        19
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        15,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        15,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        15,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        15,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        15,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        16
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        16,
        17
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        16,
        19
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        16,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        16,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        16,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        16,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        16,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        17
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        17,
        19
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        17,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        17,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        17,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        17,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        17,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        19
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        11,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        11,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        14
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        15
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        15
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        15,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        15,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        15,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        15,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        15,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        15,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        15,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        15,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        16,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        16,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        16,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        16,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        16,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        16,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        16,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        17,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        17,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        17,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        17,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        17,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        17,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        13,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        15
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        15,
        16
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        15,
        17
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        15,
        19
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        14,
        15,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        15,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        15,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        15,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        15,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        16
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        16,
        17
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        16,
        19
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        14,
        16,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        16,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        16,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        16,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        16,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        17
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        17,
        19
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        14,
        17,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        17,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        17,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        17,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        17,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        19
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        14,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        14,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        14,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        14,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        14,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        14,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        16,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        16,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        15,
        16,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        16,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        16,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        16,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        16,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        17,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        15,
        17,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        17,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        17,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        17,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        17,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        15,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        15,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        15,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        15,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        15,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        15,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        15,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        17
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        17,
        19
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        16,
        17,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        17,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        17,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        17,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        17,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        19
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        16,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        16,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        16,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        16,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        16,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        16,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        16,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        17,
        19
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        17,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        17,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        17,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        17,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        17,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        17,
        20
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        17,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        17,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        17,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        17,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        17,
        21
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        17,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        17,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        17,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        17,
        22
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        17,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        17,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        17,
        23
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        17,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        17,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        19,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        19,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        19,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        19,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        19,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        19,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        19,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        19,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        19,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        19,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        20,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        20,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        20,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        20,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        20,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        20,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        21,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        21,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        21,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        22,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        24
      ],
      "mod_code": [
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "- x + y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        14,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        14,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        14,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        15,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        15,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        15,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        17,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        17,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        17,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        17,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        17,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        17,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        9,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        14,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        14,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        14,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        15,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        15,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        15,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        16,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        16,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        16,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        17,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        17,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        17,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        17,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        17,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        17,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- - x , x - y , x - y ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        14,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        15,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        15,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        15,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        17,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        17,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        17,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        17,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        17,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        17,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        16,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        13,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        14,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        14,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        14,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        14,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        14,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        14,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        14,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        17,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        15,
        17,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        17,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        17,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        17,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        17,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        15,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        15,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        15,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        15,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        15,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        15,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        15,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        16,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        17,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        17,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        17,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        17,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        17,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        17,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        17,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        17,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        17,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        17,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        17,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        17,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        17,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        17,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        17,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        17,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        17,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        17,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        17,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        17,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        17,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        19,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        19,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        19,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        19,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        19,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        19,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        19,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        19,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        19,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        19,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        19,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        19,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        19,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        19,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        20
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        20,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        20,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        20,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        20,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        20,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        20,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        20,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        20,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        20,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        21
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        21,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        21,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        21,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        21,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        21,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        21,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        22
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        22,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        22,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        22,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        23
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        23,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        24
      ],
      "mod_code": [
        "cout << 0 << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        13
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        14
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        15
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        16
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        13
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        14
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        15
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        16
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        14
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        14,
        15
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        14,
        16
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        14,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        14,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        14,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        14,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        14,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        14,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        14,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        15
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        16
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        16
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        17,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        17,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        17,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        17,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        17,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        17,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        19,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        19,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        19,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        10,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        20,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        20,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        20,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        21,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        21,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        21,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        22,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        22,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- - x , x - y , x - y ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        13
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        14
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        15
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        16
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        14
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        15
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        16
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        15
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        16
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        16
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        19,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        19,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        19,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        11,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        20,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        20,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        20,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        21,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        21,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        21,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        22,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        22,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        11,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        14
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        15
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        16
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        15
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        16
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        16
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        16,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        16,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        16,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        16,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        16,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        16,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        16,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        17,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        17,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        17,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        17,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        17,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        17,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        19,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        19,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        19,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        20,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        20,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        20,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        21,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        21,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        21,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        22,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        22,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        13,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        15
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        16
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        15,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        16
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        16,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        16,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        14,
        16,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        16,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        16,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        16,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        16,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        17,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        14,
        17,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        17,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        17,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        17,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        17,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        14,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        14,
        19,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        14,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        14,
        19,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        14,
        19,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        14,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        20,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        20,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        20,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        21,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        21,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        21,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        22,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        22,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        14,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        16
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        16,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        16,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        15,
        16,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        16,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        16,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        16,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        16,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        17,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        15,
        17,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        17,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        17,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        17,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        17,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        15,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        15,
        19,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        15,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        15,
        19,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        15,
        19,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        15,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        20,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        20,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        20,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        21,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        21,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        21,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        22,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        22,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        15,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        17,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        16,
        17,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        17,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        17,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        17,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        17,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        16,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        16,
        19,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        16,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        16,
        19,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        16,
        19,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        16,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        20,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        20,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        20,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        21,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        21,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        21,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        22,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        22,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        16,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        17,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        17,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        17,
        19,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        17,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        17,
        19,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        17,
        19,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        17,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        17,
        20,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        17,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        17,
        20,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        17,
        20,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        17,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        17,
        21,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        17,
        21,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        17,
        21,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        17,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        17,
        22,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        17,
        22,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        17,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        17,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        17,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        19,
        20,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        19,
        20,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        19,
        20,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        19,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        19,
        21,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        19,
        21,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        19,
        21,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        19,
        22,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        19,
        22,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        19,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        19,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        19,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        20,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        20,
        21,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        20,
        21,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        20,
        22,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        20,
        22,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        20,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        20,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        20,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        21,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        21,
        22,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        21,
        22,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        21,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        21,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        21,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        22,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        22,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        22,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        13
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        14
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        15
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        16
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        17
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        14
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        15
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        16
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        17
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        15
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        15,
        16
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        15,
        17
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        15,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        15,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        15,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        15,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        15,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        15,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        16
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        16,
        17
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        16,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        16,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        16,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        16,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        16,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        16,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        17,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        17,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        17,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        17,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        17,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        17,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::basic_ostream<char>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        10,
        11,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        19,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        19,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        19,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        19,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        19,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        20,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        20,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        20,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        20,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        21,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        21,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        21,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        22,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        22,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        11,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        23,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::basic_ostream<char>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        14
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        14,
        15
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        14,
        16
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        14,
        17
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        14,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        14,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        14,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        14,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        14,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        14,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        15
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        15,
        16
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        15,
        17
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        15,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        15,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        15,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        15,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        15,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        15,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        16
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        17
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        17
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        19,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        19,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        19,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        19,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        19,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        20,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        20,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        20,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        20,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        21,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        21,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        21,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        22,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        22,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        23,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        13,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        15
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        15,
        16
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        15,
        17
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        15,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        14,
        15,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        15,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        15,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        15,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        15,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        16
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        16,
        17
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        16,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        14,
        16,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        16,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        16,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        16,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        16,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        17
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        17,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        14,
        17,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        17,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        17,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        17,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        17,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        14,
        19,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        14,
        19,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        14,
        19,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        14,
        19,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        14,
        19,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        14,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        20,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        20,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        20,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        20,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        21,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        21,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        21,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        22,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        22,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        23,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        16
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        16,
        17
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        16,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        15,
        16,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        16,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        16,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        16,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        16,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        17
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        17,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        15,
        17,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        17,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        17,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        17,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        17,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        15,
        19,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        15,
        19,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        15,
        19,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        15,
        19,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        15,
        19,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        15,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        20,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        20,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        20,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        20,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        21,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        21,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        21,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        22,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        22,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        23,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        17
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        17,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        16,
        17,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        17,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        17,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        17,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        17,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        16,
        19,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        16,
        19,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        16,
        19,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        16,
        19,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        16,
        19,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        16,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        20,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        20,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        20,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        20,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        21,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        21,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        21,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        22,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        22,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        23,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        16,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        17,
        19,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        17,
        19,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        17,
        19,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        17,
        19,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        17,
        19,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        17,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        20,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        20,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        20,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        20,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        21,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        21,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        21,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        22,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        22,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        23,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        19,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        19,
        20,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        19,
        20,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        19,
        20,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        19,
        20,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        19,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        19,
        21,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        19,
        21,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        19,
        21,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        19,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        19,
        22,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        19,
        22,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        19,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        19,
        23,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        19,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        20
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        20,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        20,
        21,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        20,
        21,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        20,
        21,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        20,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        20,
        22,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        20,
        22,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        20,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        20,
        23,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        20,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        21
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        21,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        21,
        22,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        21,
        22,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        21,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        21,
        23,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        21,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        22
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        22,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        22,
        23,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        22,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        23
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        23,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        24
      ],
      "mod_code": [
        "- - x , x - y , x - y ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        14
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        14,
        15
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        14,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        14,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        14,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        14,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        14,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        14,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        14,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        14,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        15
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        16,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        16,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        16,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        16,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        16,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        16,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        16,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        13,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        15
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        15,
        16
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        15,
        17
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        15,
        19
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        14,
        15,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        15,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        15,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        15,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        15,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        16
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        16,
        17
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        16,
        19
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        14,
        16,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        16,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        16,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        16,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        16,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        17
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        17,
        19
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        14,
        17,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        17,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        17,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        17,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        17,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        19
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        14,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        14,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        14,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        14,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        14,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        14,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        14,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        16,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        16,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        15,
        16,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        16,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        16,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        16,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        16,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        17,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        15,
        17,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        17,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        17,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        17,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        17,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        15,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        15,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        15,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        15,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        15,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        15,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        15,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16
      ],
      "mod_code": [
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        17
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        17,
        19
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        16,
        17,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        17,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        17,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        17,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        17,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        19
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        16,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        16,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        16,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        16,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        16,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        16,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        16,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        17,
        19
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        17,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        17,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        17,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        17,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        17,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        17,
        20
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        17,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        17,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        17,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        17,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        17,
        21
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        17,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        17,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        17,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        17,
        22
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        17,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        17,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        17,
        23
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        17,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        17,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        19,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        19,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        19,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        19,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        19,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        19,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        19,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        19,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        19,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        19,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        20,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        20,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        20,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        20,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        20,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        20,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        21,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        21,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        21,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        22,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        24
      ],
      "mod_code": [
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        15
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        16
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        17
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        19
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        20
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        16
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        17
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        19
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        20
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        16,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        17
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        19
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        20
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        17,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        19
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        19,
        20
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        19,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        19,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        19,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        19,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        20
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        20,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        20,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        20,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        20,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        21,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        21,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        21,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        22,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        22,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        23,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        14,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        16
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        17
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        19
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        20
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        16,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        17
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        19
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        20
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        19
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        20
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        20
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        20,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        20,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        20,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        20,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        21,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        21,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        21,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        22,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        22,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        23,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        15,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        17
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        19
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        20
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        19
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        20
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        19,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        20
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        20,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        20,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        20,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        20,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        21,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        21,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        21,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        22,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        22,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        23,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        16,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        19
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        20
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        20
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        20,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        20,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        20,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        20,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        21,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        21,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        21,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        22,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        22,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        23,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        17,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        19
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        19,
        20
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        19,
        20,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        19,
        20,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        19,
        20,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        19,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        19,
        21,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        19,
        21,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        19,
        21,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        19,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        19,
        22,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        19,
        22,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        19,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        19,
        23,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        19,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        20
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        20,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        20,
        21,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        20,
        21,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        20,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        20,
        22,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        20,
        22,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        20,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        20,
        23,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        20,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        21,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        21,
        22,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        21,
        22,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        21,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        21,
        23,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        21,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        22,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        22,
        23,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        22,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        23,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        13,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x + y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 13,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        16
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        17
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        17,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        15,
        17,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        17,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        17,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        17,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        17,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        15,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        15,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        15,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        15,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        15,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        15,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        15,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16
      ],
      "mod_code": [
        "0 ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        17
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        17,
        19
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        16,
        17,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        17,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        17,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        17,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        17,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        19
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        16,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        16,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        17
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        17,
        19
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        17,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        17,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        17,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        17,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        17,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        17,
        20
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        17,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        17,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        17,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        17,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        17,
        21
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        17,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        17,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        17,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        17,
        22
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        17,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        17,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        17,
        23
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        17,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        17,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        19,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        19,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        19,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        19,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        19,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        19,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        19,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        19,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        19,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        19,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        14,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        20,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        20,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        20,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        20,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        20,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        20,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        21,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        21,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        21,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        22,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        24
      ],
      "mod_code": [
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        15,
        16
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        16,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        16,
        19,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        16,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        16,
        19,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        16,
        19,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        16,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        21,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        21,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        21,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        22,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        22,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        16,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        17
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        17,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        17,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        17,
        20,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        17,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        17,
        20,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        17,
        20,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        17,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        17,
        21,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        17,
        21,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        17,
        21,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        17,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        17,
        22,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        17,
        22,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        17,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        17,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        17,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        19
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        19,
        20,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        19,
        20,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        19,
        20,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        19,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        19,
        21,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        19,
        21,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        19,
        21,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        19,
        22,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        19,
        22,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        19,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        19,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        19,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        15,
        20
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        20,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        20,
        21,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        20,
        21,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        20,
        22,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        20,
        22,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        20,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        20,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        20,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        21
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        21,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        21,
        22,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        21,
        22,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        21,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        21,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        21,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        22,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        22,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        22,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        16,
        17
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        17,
        19
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        17,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        17,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        17,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        17,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        17,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        17,
        20
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        17,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        17,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        17,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        17,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        17,
        21
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        17,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        17,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        17,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        17,
        22
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        17,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        17,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        17,
        23
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        17,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        17,
        24
      ],
      "mod_code": [
        "0 ;",
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        19
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        19,
        20
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        19,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        19,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        19,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        19,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        19,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        19,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        19,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        19,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        19,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        19,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        19,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        19,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        19,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        19,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        20
      ],
      "mod_code": [
        "0 ;",
        "0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        20,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        20,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        20,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        20,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        20,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        20,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        21,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        21,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        21,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        22,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        24
      ],
      "mod_code": [
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        19
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17,
        19,
        20
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17,
        19,
        20,
        21
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17,
        19,
        20,
        22
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17,
        19,
        20,
        23
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17,
        19,
        20,
        24
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17,
        19,
        21
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17,
        19,
        21,
        22
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17,
        19,
        21,
        23
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17,
        19,
        21,
        24
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17,
        19,
        22
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17,
        19,
        22,
        23
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17,
        19,
        22,
        24
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17,
        19,
        23
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17,
        19,
        23,
        24
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17,
        19,
        24
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17,
        20
      ],
      "mod_code": [
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        20,
        21
      ],
      "mod_code": [
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        20,
        21,
        22
      ],
      "mod_code": [
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        20,
        21,
        23
      ],
      "mod_code": [
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        20,
        21,
        24
      ],
      "mod_code": [
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        20,
        22
      ],
      "mod_code": [
        "- x + y ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        20,
        22,
        23
      ],
      "mod_code": [
        "- x + y ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        20,
        22,
        24
      ],
      "mod_code": [
        "- x + y ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        20,
        23
      ],
      "mod_code": [
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        20,
        23,
        24
      ],
      "mod_code": [
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        20,
        24
      ],
      "mod_code": [
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        21
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        17,
        21,
        22
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        17,
        21,
        22,
        23
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        17,
        21,
        22,
        24
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        17,
        21,
        23
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        17,
        21,
        23,
        24
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        17,
        21,
        24
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        17,
        22
      ],
      "mod_code": [
        "- x + y ;",
        "0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        22,
        23
      ],
      "mod_code": [
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        22,
        23,
        24
      ],
      "mod_code": [
        "- x + y ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        22,
        24
      ],
      "mod_code": [
        "- x + y ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        17,
        23
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" \" ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        17,
        23,
        24
      ],
      "mod_code": [
        "- x + y ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        17,
        24
      ],
      "mod_code": [
        "- x + y ;",
        "-= - x - y ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::basic_ostream<char>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        19,
        20
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        20,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        20,
        21,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        20,
        21,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        20,
        22,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        20,
        22,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        20,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        20,
        23,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        20,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        21
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        21,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        21,
        22,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        21,
        22,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        21,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        21,
        23,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        21,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        22
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "0 ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        22,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        22,
        23,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        22,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        23
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        23,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        19,
        24
      ],
      "mod_code": [
        "cout << \" -1 - x - y << endl ;",
        "-= - x - y ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        20,
        21
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        20,
        21,
        22
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        20,
        21,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        20,
        21,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        20,
        21,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        20,
        21,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        20,
        21,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        20,
        22
      ],
      "mod_code": [
        "0 ;",
        "0 ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        20,
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        20,
        22,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        20,
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        20,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        20,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        20,
        24
      ],
      "mod_code": [
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        21,
        22
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        21,
        22,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        21,
        22,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        21,
        22,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        21,
        23
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        21,
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        21,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        22,
        23
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        22,
        23,
        24
      ],
      "mod_code": [
        "0 ;",
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        22,
        24
      ],
      "mod_code": [
        "0 ;",
        "-= - x - y ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before numeric constant"
    },
    {
      "mod_line": [
        23,
        24
      ],
      "mod_code": [
        "cout << \" \" ;",
        "-= - x - y ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘cout’"
    }
  ]
}