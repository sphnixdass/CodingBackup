{
  "meta": {
    "index": 700,
    "hitid": "302U8RURJZVOP2S1V75ZNX95NSENV5",
    "workerid": "AIWEXPJAU66D9",
    "probid": "157A",
    "subid": "41952433"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "x is a new array of integers with 31 element",
      "code": "int x [ 31 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create new array of integers y with 31 element",
      "code": "int y [ 31 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "z is a new 2d array of integers with size 31 by 31",
      "code": "int z [ 31 ] [ 31 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integer variables n , m , i , j and k",
      "code": "int n , m , i , j , k ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n and loop further",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "change first sizeof ( x ) bytes at the pointer x to 0",
      "code": "memset ( x , 0 , sizeof ( x ) ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set the values of sizeof ( y ) bytes at the pointer y to 0",
      "code": "memset ( y , 0 , sizeof ( y ) ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for i from 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for j = 0 to n exclusive , read from the input to z [ i ] [ j ]",
      "code": "for ( j = 0 ; j < n ; j ++ ) { cin >> z [ i ] [ j ] ; }",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "start for loop from i = 0 to n exclusive incrementing i",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "in a for loop , change j from 0 to n exclusive",
      "code": "for ( j = 0 ; j < n ; j ++ )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "increase x [ i ] by z [ i ] [ j ]",
      "code": "x [ i ] += z [ i ] [ j ] ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "change y [ i ] to the sum of y [ i ] and z [ j ] [ i ]",
      "code": "y [ i ] += z [ j ] [ i ] ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "assign 0 to k",
      "code": "k = 0 ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "in a for loop , change i from 0 to n exclusive incrementing i",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "start for loop from j = 0 to n exclusive incrementing j",
      "code": "for ( j = 0 ; j < n ; j ++ )",
      "indent": 3
    },
    {
      "line": 20,
      "text": "if y [ j ] is greater than x [ i ] , increment k",
      "code": "if ( y [ j ] > x [ i ] ) k ++ ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "print k",
      "code": "cout << k << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int y = new int [ 31 ] ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int z [ 31 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "further >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘further’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "memset ( x + 0 , sizeof ( x ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "memset ( y = 0 , sizeof ( y ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [31]’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "y [ i ] = y * y * z [ j ] [ i ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘int [31]’ and ‘int [31]’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        14,
        13,
        2
      ],
      "mod_code": [
        "y [ i ] = y [ i ] , z [ j ] [ i ] ;",
        "x [ i ] += z [ i ] [ i ] ;",
        "int y = new int [ 31 ] ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        13,
        2,
        6
      ],
      "mod_code": [
        "y [ i ] = y [ i ] , z [ j ] [ i ] ;",
        "x [ i ] += z [ i ] [ i ] ;",
        "int y = new int [ 31 ] ;",
        "memset ( x + 0 , sizeof ( x ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        13,
        2,
        5
      ],
      "mod_code": [
        "y [ i ] = y [ i ] , z [ j ] [ i ] ;",
        "x [ i ] += z [ i ] [ i ] ;",
        "int y = new int [ 31 ] ;",
        "further >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        13,
        6
      ],
      "mod_code": [
        "y [ i ] = y [ i ] , z [ j ] [ i ] ;",
        "x [ i ] += z [ i ] [ i ] ;",
        "memset ( x + 0 , sizeof ( x ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        14,
        13,
        6,
        5
      ],
      "mod_code": [
        "y [ i ] = y [ i ] , z [ j ] [ i ] ;",
        "x [ i ] += z [ i ] [ i ] ;",
        "memset ( x + 0 , sizeof ( x ) ) ;",
        "further >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘further’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        13,
        5
      ],
      "mod_code": [
        "y [ i ] = y [ i ] , z [ j ] [ i ] ;",
        "x [ i ] += z [ i ] [ i ] ;",
        "further >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘further’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "y [ i ] = y [ i ] , z [ j ] [ i ] ;",
        "int y = new int [ 31 ] ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        2,
        6
      ],
      "mod_code": [
        "y [ i ] = y [ i ] , z [ j ] [ i ] ;",
        "int y = new int [ 31 ] ;",
        "memset ( x + 0 , sizeof ( x ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        2,
        6,
        5
      ],
      "mod_code": [
        "y [ i ] = y [ i ] , z [ j ] [ i ] ;",
        "int y = new int [ 31 ] ;",
        "memset ( x + 0 , sizeof ( x ) ) ;",
        "further >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        2,
        5
      ],
      "mod_code": [
        "y [ i ] = y [ i ] , z [ j ] [ i ] ;",
        "int y = new int [ 31 ] ;",
        "further >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "y [ i ] = y [ i ] , z [ j ] [ i ] ;",
        "memset ( x + 0 , sizeof ( x ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        14,
        6,
        5
      ],
      "mod_code": [
        "y [ i ] = y [ i ] , z [ j ] [ i ] ;",
        "memset ( x + 0 , sizeof ( x ) ) ;",
        "further >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘further’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        5
      ],
      "mod_code": [
        "y [ i ] = y [ i ] , z [ j ] [ i ] ;",
        "further >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘further’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "x [ i ] += z [ i ] [ i ] ;",
        "y [ i ] = y * y * z [ j ] [ i ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘int [31]’ and ‘int [31]’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        13,
        14,
        2
      ],
      "mod_code": [
        "x [ i ] += z [ i ] [ i ] ;",
        "y [ i ] = y * y * z [ j ] [ i ] ;",
        "int y = new int [ 31 ] ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        14,
        2,
        6
      ],
      "mod_code": [
        "x [ i ] += z [ i ] [ i ] ;",
        "y [ i ] = y * y * z [ j ] [ i ] ;",
        "int y = new int [ 31 ] ;",
        "memset ( x + 0 , sizeof ( x ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        14,
        2,
        5
      ],
      "mod_code": [
        "x [ i ] += z [ i ] [ i ] ;",
        "y [ i ] = y * y * z [ j ] [ i ] ;",
        "int y = new int [ 31 ] ;",
        "further >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        14,
        6
      ],
      "mod_code": [
        "x [ i ] += z [ i ] [ i ] ;",
        "y [ i ] = y * y * z [ j ] [ i ] ;",
        "memset ( x + 0 , sizeof ( x ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        13,
        14,
        6,
        5
      ],
      "mod_code": [
        "x [ i ] += z [ i ] [ i ] ;",
        "y [ i ] = y * y * z [ j ] [ i ] ;",
        "memset ( x + 0 , sizeof ( x ) ) ;",
        "further >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘further’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        5
      ],
      "mod_code": [
        "x [ i ] += z [ i ] [ i ] ;",
        "y [ i ] = y * y * z [ j ] [ i ] ;",
        "further >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘further’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "x [ i ] += z [ i ] [ i ] ;",
        "int y = new int [ 31 ] ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        2,
        6
      ],
      "mod_code": [
        "x [ i ] += z [ i ] [ i ] ;",
        "int y = new int [ 31 ] ;",
        "memset ( x + 0 , sizeof ( x ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        2,
        6,
        5
      ],
      "mod_code": [
        "x [ i ] += z [ i ] [ i ] ;",
        "int y = new int [ 31 ] ;",
        "memset ( x + 0 , sizeof ( x ) ) ;",
        "further >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        2,
        5
      ],
      "mod_code": [
        "x [ i ] += z [ i ] [ i ] ;",
        "int y = new int [ 31 ] ;",
        "further >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "x [ i ] += z [ i ] [ i ] ;",
        "memset ( x + 0 , sizeof ( x ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        13,
        6,
        5
      ],
      "mod_code": [
        "x [ i ] += z [ i ] [ i ] ;",
        "memset ( x + 0 , sizeof ( x ) ) ;",
        "further >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘further’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "x [ i ] += z [ i ] [ i ] ;",
        "further >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘further’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "y [ i ] = y * y * z [ j ] [ i ] ;",
        "int y = new int [ 31 ] ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        2,
        6
      ],
      "mod_code": [
        "y [ i ] = y * y * z [ j ] [ i ] ;",
        "int y = new int [ 31 ] ;",
        "memset ( x + 0 , sizeof ( x ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        2,
        6,
        5
      ],
      "mod_code": [
        "y [ i ] = y * y * z [ j ] [ i ] ;",
        "int y = new int [ 31 ] ;",
        "memset ( x + 0 , sizeof ( x ) ) ;",
        "further >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        2,
        5
      ],
      "mod_code": [
        "y [ i ] = y * y * z [ j ] [ i ] ;",
        "int y = new int [ 31 ] ;",
        "further >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "y [ i ] = y * y * z [ j ] [ i ] ;",
        "memset ( x + 0 , sizeof ( x ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        14,
        6,
        5
      ],
      "mod_code": [
        "y [ i ] = y * y * z [ j ] [ i ] ;",
        "memset ( x + 0 , sizeof ( x ) ) ;",
        "further >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘further’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        5
      ],
      "mod_code": [
        "y [ i ] = y * y * z [ j ] [ i ] ;",
        "further >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘further’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "int y = new int [ 31 ] ;",
        "memset ( x + 0 , sizeof ( x ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        5
      ],
      "mod_code": [
        "int y = new int [ 31 ] ;",
        "memset ( x + 0 , sizeof ( x ) ) ;",
        "further >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "int y = new int [ 31 ] ;",
        "further >> n ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "memset ( x + 0 , sizeof ( x ) ) ;",
        "further >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘further’ was not declared in this scope"
    }
  ]
}