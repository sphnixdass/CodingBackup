{
  "meta": {
    "index": 673,
    "hitid": "3E24UO25QZKLSXDCVEX4QUTBV7G6OV",
    "workerid": "AIWEXPJAU66D9",
    "probid": "14A",
    "subid": "41670202"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n and m be integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let ch be a 2d array of characters with size n + 9 by m + 9",
      "code": "char ch [ n + 9 ] [ m + 9 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "Min_X and Min_Y are integers , with Min_X = n and Min_Y = m",
      "code": "int Min_X = n , Min_Y = m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integers Max_X and Max_Y , with Max_X and Max_Y = 0",
      "code": "int Max_X = 0 , Max_Y = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read ch [ i ]",
      "code": "cin >> ch [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if ch [ i ] [ j ] = ' * '",
      "code": "if ( ch [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "Min_X = min of i and Min_X",
      "code": "Min_X = min ( i , Min_X ) ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "Min_Y = min of j and Min_Y",
      "code": "Min_Y = min ( j , Min_Y ) ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "Max_X = max of i and Max_X",
      "code": "Max_X = max ( i , Max_X ) ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "Max_Y = max of j and Max_Y",
      "code": "Max_Y = max ( j , Max_Y ) ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i = Min_X to Max_X inclusive",
      "code": "for ( int i = Min_X ; i <= Max_X ; i ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for integer j = Min_Y to Max_Y inclusive print ch [ i ] [ j ]",
      "code": "for ( int j = Min_Y ; j <= Max_Y ; j ++ ) cout << ch [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "long long int Min_X = n , Min_Y = m ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "ch >> ch [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = Min_X ; i <= Max_X ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "ch >> ch [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        7,
        8
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "ch >> ch [ i ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        13
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "ch >> ch [ i ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int Max_Y = max ( j , Max_Y ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        4
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "ch >> ch [ i ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "long long int Min_X = n , Min_Y = m ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        9
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "ch >> ch [ i ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        7,
        13
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "ch >> ch [ i ] ;",
        "int Max_Y = max ( j , Max_Y ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        7,
        13,
        4
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "ch >> ch [ i ] ;",
        "int Max_Y = max ( j , Max_Y ) ;",
        "long long int Min_X = n , Min_Y = m ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        7,
        13,
        9
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "ch >> ch [ i ] ;",
        "int Max_Y = max ( j , Max_Y ) ;",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        7,
        4
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "ch >> ch [ i ] ;",
        "long long int Min_X = n , Min_Y = m ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        7,
        4,
        9
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "ch >> ch [ i ] ;",
        "long long int Min_X = n , Min_Y = m ;",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "ch >> ch [ i ] ;",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        13
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int Max_Y = max ( j , Max_Y ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        4
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int Max_Y = max ( j , Max_Y ) ;",
        "long long int Min_X = n , Min_Y = m ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        9
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int Max_Y = max ( j , Max_Y ) ;",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        4
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "long long int Min_X = n , Min_Y = m ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        4,
        9
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "long long int Min_X = n , Min_Y = m ;",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        9
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13,
        4
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "int Max_Y = max ( j , Max_Y ) ;",
        "long long int Min_X = n , Min_Y = m ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        5,
        13,
        4,
        9
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "int Max_Y = max ( j , Max_Y ) ;",
        "long long int Min_X = n , Min_Y = m ;",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "long long int Min_X = n , Min_Y = m ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        5,
        4,
        9
      ],
      "mod_code": [
        "int Max_X , Max_Y = 0 ;",
        "long long int Min_X = n , Min_Y = m ;",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "ch >> ch [ i ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7,
        8,
        13
      ],
      "mod_code": [
        "ch >> ch [ i ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int Max_Y = max ( j , Max_Y ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7,
        8,
        13,
        4
      ],
      "mod_code": [
        "ch >> ch [ i ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int Max_Y = max ( j , Max_Y ) ;",
        "long long int Min_X = n , Min_Y = m ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7,
        8,
        13,
        9
      ],
      "mod_code": [
        "ch >> ch [ i ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int Max_Y = max ( j , Max_Y ) ;",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7,
        8,
        4
      ],
      "mod_code": [
        "ch >> ch [ i ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "long long int Min_X = n , Min_Y = m ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7,
        8,
        4,
        9
      ],
      "mod_code": [
        "ch >> ch [ i ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "long long int Min_X = n , Min_Y = m ;",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7,
        8,
        9
      ],
      "mod_code": [
        "ch >> ch [ i ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "ch >> ch [ i ] ;",
        "int Max_Y = max ( j , Max_Y ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7,
        13,
        4
      ],
      "mod_code": [
        "ch >> ch [ i ] ;",
        "int Max_Y = max ( j , Max_Y ) ;",
        "long long int Min_X = n , Min_Y = m ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7,
        13,
        4,
        9
      ],
      "mod_code": [
        "ch >> ch [ i ] ;",
        "int Max_Y = max ( j , Max_Y ) ;",
        "long long int Min_X = n , Min_Y = m ;",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7,
        13,
        9
      ],
      "mod_code": [
        "ch >> ch [ i ] ;",
        "int Max_Y = max ( j , Max_Y ) ;",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "ch >> ch [ i ] ;",
        "long long int Min_X = n , Min_Y = m ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7,
        4,
        9
      ],
      "mod_code": [
        "ch >> ch [ i ] ;",
        "long long int Min_X = n , Min_Y = m ;",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "ch >> ch [ i ] ;",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [(n + 9)][(m + 9)]’ and ‘char [(m + 9)]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "int Max_Y = max ( j , Max_Y ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "int Max_Y = max ( j , Max_Y ) ;",
        "long long int Min_X = n , Min_Y = m ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        4,
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "int Max_Y = max ( j , Max_Y ) ;",
        "long long int Min_X = n , Min_Y = m ;",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "int Max_Y = max ( j , Max_Y ) ;",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "long long int Min_X = n , Min_Y = m ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4,
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "long long int Min_X = n , Min_Y = m ;",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "int Max_Y = max ( j , Max_Y ) ;",
        "long long int Min_X = n , Min_Y = m ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        13,
        4,
        9
      ],
      "mod_code": [
        "int Max_Y = max ( j , Max_Y ) ;",
        "long long int Min_X = n , Min_Y = m ;",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "long long int Min_X = n , Min_Y = m ;",
        "if ( ch [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    }
  ]
}