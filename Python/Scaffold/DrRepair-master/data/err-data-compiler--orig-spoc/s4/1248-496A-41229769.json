{
  "meta": {
    "index": 1248,
    "hitid": "3EKTG13IZUXFBFV752OTN9M3R42MLL",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "496A",
    "subid": "41229769"
  },
  "lines": [
    {
      "line": 0,
      "text": "a = 1",
      "code": "int a = 1 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "function recorrer ( get array of int v , int n , array of int m , return nothing )",
      "code": "void recorrer ( int v [ ] , int n , int m [ ] )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "j = 0",
      "code": "int j = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if i is not a",
      "code": "if ( i != a )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "m [ j ] = v [ i ]",
      "code": "m [ j ] = v [ i ] ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "increment j",
      "code": "j ++ ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "increment a",
      "code": "a ++ ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 11,
      "text": "function mostrar ( get array of int m , int n , return nothing )",
      "code": "void mostrar ( int m [ ] , int n )",
      "indent": 0
    },
    {
      "line": 12,
      "text": "for i = 0 to n - 1 exclusive print m [ i ] , space",
      "code": "for ( int i = 0 ; i < n - 1 ; i ++ ) cout << m [ i ] << \" \" ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 15,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "v = array of n int",
      "code": "int v [ n ] ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "m = array of n - 1 int",
      "code": "int m [ n - 1 ] ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for i = 0 to n exclusive read v [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> v [ i ] ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "may = 0 , mini = 100000",
      "code": "int may = 0 , mini = 100000 ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for i = 0 to n - 2 exclusive",
      "code": "for ( int i = 0 ; i < n - 2 ; i ++ )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "recorrer ( v , n , m )",
      "code": "recorrer ( v , n , m ) ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "for j = 0 to n - 2 exclusive",
      "code": "for ( int j = 0 ; j < n - 2 ; j ++ )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "if m [ j + 1 ] - m [ j ] > may may = m [ j + 1 ] - m [ j ]",
      "code": "if ( m [ j + 1 ] - m [ j ] > may ) may = m [ j + 1 ] - m [ j ] ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "if mini > may mini = may",
      "code": "if ( mini > may ) mini = may ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "may = 0",
      "code": "may = 0 ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "print mini",
      "code": "cout << mini << endl ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "a = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int recorrer ( int v [ ] , int n , int m ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "j = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int mostrar ( int m , int n )"
      ],
      "err_line": 12,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int recorrer ( int v [ ] , int n , int m )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char m [ j ] = v [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int mostrar ( int m , int n ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 19,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int m = new int [ n - 1 ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i < n - 2 ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "int recorrer ( v , n , m ) ;"
      ],
      "err_line": 22,
      "err_msg": "expression list treated as compound expression in initializer [-fpermissive]"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "for ( j = 0 ; j < n - 2 ; j ++ )"
      ],
      "err_line": 23,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "a = 1 ;",
        "int recorrer ( int v [ ] , int n , int m ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        2
      ],
      "mod_code": [
        "a = 1 ;",
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "j = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        2,
        11
      ],
      "mod_code": [
        "a = 1 ;",
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "j = 0 ;",
        "int mostrar ( int m , int n )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        2,
        4
      ],
      "mod_code": [
        "a = 1 ;",
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "j = 0 ;",
        "if ( i == a )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        2,
        16
      ],
      "mod_code": [
        "a = 1 ;",
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "j = 0 ;",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        11
      ],
      "mod_code": [
        "a = 1 ;",
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "int mostrar ( int m , int n )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        11,
        4
      ],
      "mod_code": [
        "a = 1 ;",
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "int mostrar ( int m , int n )",
        "if ( i == a )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        11,
        16
      ],
      "mod_code": [
        "a = 1 ;",
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "int mostrar ( int m , int n )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        4
      ],
      "mod_code": [
        "a = 1 ;",
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "if ( i == a )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        4,
        16
      ],
      "mod_code": [
        "a = 1 ;",
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "if ( i == a )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        16
      ],
      "mod_code": [
        "a = 1 ;",
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "a = 1 ;",
        "j = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        11
      ],
      "mod_code": [
        "a = 1 ;",
        "j = 0 ;",
        "int mostrar ( int m , int n )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        11,
        4
      ],
      "mod_code": [
        "a = 1 ;",
        "j = 0 ;",
        "int mostrar ( int m , int n )",
        "if ( i == a )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        11,
        16
      ],
      "mod_code": [
        "a = 1 ;",
        "j = 0 ;",
        "int mostrar ( int m , int n )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        4
      ],
      "mod_code": [
        "a = 1 ;",
        "j = 0 ;",
        "if ( i == a )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        4,
        16
      ],
      "mod_code": [
        "a = 1 ;",
        "j = 0 ;",
        "if ( i == a )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        16
      ],
      "mod_code": [
        "a = 1 ;",
        "j = 0 ;",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "a = 1 ;",
        "int mostrar ( int m , int n )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        4
      ],
      "mod_code": [
        "a = 1 ;",
        "int mostrar ( int m , int n )",
        "if ( i == a )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        4,
        16
      ],
      "mod_code": [
        "a = 1 ;",
        "int mostrar ( int m , int n )",
        "if ( i == a )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        16
      ],
      "mod_code": [
        "a = 1 ;",
        "int mostrar ( int m , int n )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "a = 1 ;",
        "if ( i == a )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        4,
        16
      ],
      "mod_code": [
        "a = 1 ;",
        "if ( i == a )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "a = 1 ;",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "j = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        11
      ],
      "mod_code": [
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "j = 0 ;",
        "int mostrar ( int m , int n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        11,
        4
      ],
      "mod_code": [
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "j = 0 ;",
        "int mostrar ( int m , int n )",
        "if ( i == a )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        11,
        16
      ],
      "mod_code": [
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "j = 0 ;",
        "int mostrar ( int m , int n )",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        4
      ],
      "mod_code": [
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "j = 0 ;",
        "if ( i == a )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        4,
        16
      ],
      "mod_code": [
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "j = 0 ;",
        "if ( i == a )",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        16
      ],
      "mod_code": [
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "j = 0 ;",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "int mostrar ( int m , int n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        4
      ],
      "mod_code": [
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "int mostrar ( int m , int n )",
        "if ( i == a )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        4,
        16
      ],
      "mod_code": [
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "int mostrar ( int m , int n )",
        "if ( i == a )",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        16
      ],
      "mod_code": [
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "int mostrar ( int m , int n )",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "if ( i == a )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        4,
        16
      ],
      "mod_code": [
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "if ( i == a )",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "int recorrer ( int v [ ] , int n , int m ) ;",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "j = 0 ;",
        "int mostrar ( int m , int n )"
      ],
      "err_line": 2,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        4
      ],
      "mod_code": [
        "j = 0 ;",
        "int mostrar ( int m , int n )",
        "if ( i == a )"
      ],
      "err_line": 2,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        4,
        16
      ],
      "mod_code": [
        "j = 0 ;",
        "int mostrar ( int m , int n )",
        "if ( i == a )",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        16
      ],
      "mod_code": [
        "j = 0 ;",
        "int mostrar ( int m , int n )",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "j = 0 ;",
        "if ( i == a )"
      ],
      "err_line": 2,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        16
      ],
      "mod_code": [
        "j = 0 ;",
        "if ( i == a )",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "j = 0 ;",
        "while ( cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "int mostrar ( int m , int n )",
        "if ( i == a )"
      ],
      "err_line": 12,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        4,
        16
      ],
      "mod_code": [
        "int mostrar ( int m , int n )",
        "if ( i == a )",
        "while ( cin >> n )"
      ],
      "err_line": 12,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        16
      ],
      "mod_code": [
        "int mostrar ( int m , int n )",
        "while ( cin >> n )"
      ],
      "err_line": 12,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "if ( i == a )",
        "while ( cin >> n )"
      ],
      "err_line": 19,
      "err_msg": "‘v’ was not declared in this scope"
    }
  ]
}