{
  "meta": {
    "index": 1118,
    "hitid": "3MVY4USGB6HGJ9064WN272TH12TSIH",
    "workerid": "A1AYVATMT88U1W",
    "probid": "1085A",
    "subid": "48877570"
  },
  "lines": [
    {
      "line": 0,
      "text": "let s = array of characters of length 50",
      "code": "char s [ 50 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let void init ( ) be a function",
      "code": "void init ( )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "let init ( ) be a function",
      "code": "init ( ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "let res be a string",
      "code": "string res ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "initialize integer n value as strlen ( s )",
      "code": "int n = strlen ( s ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "assign the integer value start is equal to ( n - 1 ) / 2",
      "code": "int start = ( n - 1 ) / 2 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "res is equal to s [ start ]",
      "code": "res = s [ start ] ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "let integer l is equal to start , r is equal to start",
      "code": "int l = start , r = start ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "while ( ( l is greater than or equal to 0 ) or ( r is less than n ) )",
      "code": "while ( ( l >= 0 ) || ( r < n ) )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "decrease l value by 1",
      "code": "l -- ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increase r value by 1",
      "code": "r ++ ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if ( r is less than n ) , res is equal to res + rth element of s",
      "code": "if ( r < n ) res = res + s [ r ] ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if ( l is greater than or equal to 0 ) , res is equal to res + lth element of s",
      "code": "if ( l >= 0 ) res = res + s [ l ] ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print res and endline",
      "code": "cout << res << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void init ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( r < n ) res = res + rth * s ;"
      ],
      "err_line": 14,
      "err_msg": "‘rth’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( l >= 0 ) res = res + lth * s ;"
      ],
      "err_line": 15,
      "err_msg": "‘lth’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char s [ 50 ] [ 50 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [50][50]’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘char [50]’ and ‘char [50]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int n ( s ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "‘start’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int l = start ;"
      ],
      "err_line": 11,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "while ( l >= 0 ) || ( r < n ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘||’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( r < n ) res += rth ( s . begin ( ) ) ;"
      ],
      "err_line": 14,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [50]’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( l >= 0 ) res += lth ( s . begin ( ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char [50]’"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "void init ( ) ;",
        "if ( r < n ) res = res + rth * s ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        14,
        15
      ],
      "mod_code": [
        "void init ( ) ;",
        "if ( r < n ) res = res + rth * s ;",
        "if ( l >= 0 ) res = res + lth * s ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        14,
        15,
        0
      ],
      "mod_code": [
        "void init ( ) ;",
        "if ( r < n ) res = res + rth * s ;",
        "if ( l >= 0 ) res = res + lth * s ;",
        "char s [ 50 ] [ 50 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        14,
        15,
        8
      ],
      "mod_code": [
        "void init ( ) ;",
        "if ( r < n ) res = res + rth * s ;",
        "if ( l >= 0 ) res = res + lth * s ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        14,
        15
      ],
      "mod_code": [
        "void init ( ) ;",
        "if ( r < n ) res = res + rth * s ;",
        "if ( l >= 0 ) res += lth ( s . begin ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        14,
        15,
        0
      ],
      "mod_code": [
        "void init ( ) ;",
        "if ( r < n ) res = res + rth * s ;",
        "if ( l >= 0 ) res += lth ( s . begin ( ) ) ;",
        "char s [ 50 ] [ 50 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        14,
        15,
        8
      ],
      "mod_code": [
        "void init ( ) ;",
        "if ( r < n ) res = res + rth * s ;",
        "if ( l >= 0 ) res += lth ( s . begin ( ) ) ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        14,
        0
      ],
      "mod_code": [
        "void init ( ) ;",
        "if ( r < n ) res = res + rth * s ;",
        "char s [ 50 ] [ 50 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        14,
        0,
        8
      ],
      "mod_code": [
        "void init ( ) ;",
        "if ( r < n ) res = res + rth * s ;",
        "char s [ 50 ] [ 50 ] ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        14,
        8
      ],
      "mod_code": [
        "void init ( ) ;",
        "if ( r < n ) res = res + rth * s ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "void init ( ) ;",
        "if ( l >= 0 ) res = res + lth * s ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        15,
        0
      ],
      "mod_code": [
        "void init ( ) ;",
        "if ( l >= 0 ) res = res + lth * s ;",
        "char s [ 50 ] [ 50 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        15,
        0,
        8
      ],
      "mod_code": [
        "void init ( ) ;",
        "if ( l >= 0 ) res = res + lth * s ;",
        "char s [ 50 ] [ 50 ] ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        15,
        8
      ],
      "mod_code": [
        "void init ( ) ;",
        "if ( l >= 0 ) res = res + lth * s ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "void init ( ) ;",
        "if ( l >= 0 ) res += lth ( s . begin ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        15,
        0
      ],
      "mod_code": [
        "void init ( ) ;",
        "if ( l >= 0 ) res += lth ( s . begin ( ) ) ;",
        "char s [ 50 ] [ 50 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        15,
        0,
        8
      ],
      "mod_code": [
        "void init ( ) ;",
        "if ( l >= 0 ) res += lth ( s . begin ( ) ) ;",
        "char s [ 50 ] [ 50 ] ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        15,
        8
      ],
      "mod_code": [
        "void init ( ) ;",
        "if ( l >= 0 ) res += lth ( s . begin ( ) ) ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "void init ( ) ;",
        "char s [ 50 ] [ 50 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        0,
        8
      ],
      "mod_code": [
        "void init ( ) ;",
        "char s [ 50 ] [ 50 ] ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "void init ( ) ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "if ( r < n ) res = res + rth * s ;",
        "if ( l >= 0 ) res = res + lth * s ;"
      ],
      "err_line": 14,
      "err_msg": "‘rth’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        0
      ],
      "mod_code": [
        "if ( r < n ) res = res + rth * s ;",
        "if ( l >= 0 ) res = res + lth * s ;",
        "char s [ 50 ] [ 50 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [50][50]’)"
    },
    {
      "mod_line": [
        14,
        15,
        0,
        8
      ],
      "mod_code": [
        "if ( r < n ) res = res + rth * s ;",
        "if ( l >= 0 ) res = res + lth * s ;",
        "char s [ 50 ] [ 50 ] ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [50][50]’)"
    },
    {
      "mod_line": [
        14,
        15,
        8
      ],
      "mod_code": [
        "if ( r < n ) res = res + rth * s ;",
        "if ( l >= 0 ) res = res + lth * s ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "‘start’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "if ( r < n ) res = res + rth * s ;",
        "if ( l >= 0 ) res += lth ( s . begin ( ) ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘rth’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15,
        0
      ],
      "mod_code": [
        "if ( r < n ) res = res + rth * s ;",
        "if ( l >= 0 ) res += lth ( s . begin ( ) ) ;",
        "char s [ 50 ] [ 50 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [50][50]’)"
    },
    {
      "mod_line": [
        14,
        15,
        0,
        8
      ],
      "mod_code": [
        "if ( r < n ) res = res + rth * s ;",
        "if ( l >= 0 ) res += lth ( s . begin ( ) ) ;",
        "char s [ 50 ] [ 50 ] ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [50][50]’)"
    },
    {
      "mod_line": [
        14,
        15,
        8
      ],
      "mod_code": [
        "if ( r < n ) res = res + rth * s ;",
        "if ( l >= 0 ) res += lth ( s . begin ( ) ) ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "‘start’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        0
      ],
      "mod_code": [
        "if ( r < n ) res = res + rth * s ;",
        "char s [ 50 ] [ 50 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [50][50]’)"
    },
    {
      "mod_line": [
        14,
        0,
        8
      ],
      "mod_code": [
        "if ( r < n ) res = res + rth * s ;",
        "char s [ 50 ] [ 50 ] ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [50][50]’)"
    },
    {
      "mod_line": [
        14,
        8
      ],
      "mod_code": [
        "if ( r < n ) res = res + rth * s ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "‘start’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        0
      ],
      "mod_code": [
        "if ( l >= 0 ) res = res + lth * s ;",
        "char s [ 50 ] [ 50 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [50][50]’)"
    },
    {
      "mod_line": [
        15,
        0,
        8
      ],
      "mod_code": [
        "if ( l >= 0 ) res = res + lth * s ;",
        "char s [ 50 ] [ 50 ] ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [50][50]’)"
    },
    {
      "mod_line": [
        15,
        8
      ],
      "mod_code": [
        "if ( l >= 0 ) res = res + lth * s ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "‘start’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        0
      ],
      "mod_code": [
        "if ( l >= 0 ) res += lth ( s . begin ( ) ) ;",
        "char s [ 50 ] [ 50 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [50][50]’)"
    },
    {
      "mod_line": [
        15,
        0,
        8
      ],
      "mod_code": [
        "if ( l >= 0 ) res += lth ( s . begin ( ) ) ;",
        "char s [ 50 ] [ 50 ] ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [50][50]’)"
    },
    {
      "mod_line": [
        15,
        8
      ],
      "mod_code": [
        "if ( l >= 0 ) res += lth ( s . begin ( ) ) ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "‘start’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "char s [ 50 ] [ 50 ] ;",
        "start = ( n - 1 ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [50][50]’)"
    }
  ]
}