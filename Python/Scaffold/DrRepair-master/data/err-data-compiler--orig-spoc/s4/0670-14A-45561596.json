{
  "meta": {
    "index": 670,
    "hitid": "39AYGO6AFFE3ACD0UZXRB5T65XB6NG",
    "workerid": "A1APYLD4DUK33J",
    "probid": "14A",
    "subid": "45561596"
  },
  "lines": [
    {
      "line": 0,
      "text": "create 2d character array a with size 51 by 51",
      "code": "char a [ 51 ] [ 51 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , m , i , j",
      "code": "int n , m , i , j ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare read with no arguments , returning void",
      "code": "void read ( )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer n1 with n1 = 0",
      "code": "int n1 = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "craete integer m1 with m1 = 0",
      "code": "int m1 = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create integer n2 with n2 = m + 1",
      "code": "int n2 = m + 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create integer m2 with m2 = n + 1",
      "code": "int m2 = n + 1 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 1 to n inclusive",
      "code": "for ( i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for j = 1 to m inclusive",
      "code": "for ( j = 1 ; j <= m ; j ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "read a [ i ] [ j ]",
      "code": "cin >> a [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if a [ i ] [ j ] is ' * '",
      "code": "if ( a [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "set n1 to maximum of n1 and j",
      "code": "n1 = max ( n1 , j ) ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "set n2 to minimum of n2 and j",
      "code": "n2 = min ( n2 , j ) ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "set m1 to maximum of m1 and i",
      "code": "m1 = max ( m1 , i ) ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "set m2 to minimum of m2 and i",
      "code": "m2 = min ( m2 , i ) ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for i = m2 to m1 inclusive",
      "code": "for ( i = m2 ; i <= m1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for j = n2 to n1 inclusive , print a [ i ] [ j ]",
      "code": "for ( j = n2 ; j <= n1 ; j ++ ) cout << a [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print \" \\ n \"",
      "code": "cout << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 25,
      "text": "run read",
      "code": "read ( ) ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "<< \" \\n \" ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long int n , m , i , j ;"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘max(int&, long int&)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "void read ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "long int n1 = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘max(long int&, int&)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "m1 = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘m1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "n2 = m + 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘n2’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int m2 += 1 ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "m2 = m2 ( m2 , i ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘m2’ cannot be used as a function"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "read read ;"
      ],
      "err_line": 25,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        21,
        12
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "n1 = n1 % j ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        21,
        12,
        15
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "n1 = n1 % j ;",
        "m2 = m2 ( m2 , i ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘m2’ cannot be used as a function"
    },
    {
      "mod_line": [
        21,
        12,
        15,
        25
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "n1 = n1 % j ;",
        "m2 = m2 ( m2 , i ) ;",
        "read read ;"
      ],
      "err_line": 15,
      "err_msg": "‘m2’ cannot be used as a function"
    },
    {
      "mod_line": [
        21,
        12,
        15,
        2
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "n1 = n1 % j ;",
        "m2 = m2 ( m2 , i ) ;",
        "void read ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        12,
        15,
        10
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "n1 = n1 % j ;",
        "m2 = m2 ( m2 , i ) ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘m2’ cannot be used as a function"
    },
    {
      "mod_line": [
        21,
        12,
        25
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "n1 = n1 % j ;",
        "read read ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        21,
        12,
        25,
        2
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "n1 = n1 % j ;",
        "read read ;",
        "void read ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        12,
        25,
        10
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "n1 = n1 % j ;",
        "read read ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        21,
        12,
        2
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "n1 = n1 % j ;",
        "void read ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        12,
        2,
        10
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "n1 = n1 % j ;",
        "void read ( ) ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        12,
        10
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "n1 = n1 % j ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        21,
        15
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "m2 = m2 ( m2 , i ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘m2’ cannot be used as a function"
    },
    {
      "mod_line": [
        21,
        15,
        25
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "m2 = m2 ( m2 , i ) ;",
        "read read ;"
      ],
      "err_line": 15,
      "err_msg": "‘m2’ cannot be used as a function"
    },
    {
      "mod_line": [
        21,
        15,
        25,
        2
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "m2 = m2 ( m2 , i ) ;",
        "read read ;",
        "void read ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        15,
        25,
        10
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "m2 = m2 ( m2 , i ) ;",
        "read read ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘m2’ cannot be used as a function"
    },
    {
      "mod_line": [
        21,
        15,
        2
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "m2 = m2 ( m2 , i ) ;",
        "void read ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        15,
        2,
        10
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "m2 = m2 ( m2 , i ) ;",
        "void read ( ) ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        15,
        10
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "m2 = m2 ( m2 , i ) ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘m2’ cannot be used as a function"
    },
    {
      "mod_line": [
        21,
        25
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "read read ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        21,
        25,
        2
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "read read ;",
        "void read ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        25,
        2,
        10
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "read read ;",
        "void read ( ) ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        25,
        10
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "read read ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        21,
        2
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "void read ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        2,
        10
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "void read ( ) ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        10
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "n1 = n1 % j ;",
        "m2 = m2 ( m2 , i ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘m2’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        15,
        25
      ],
      "mod_code": [
        "n1 = n1 % j ;",
        "m2 = m2 ( m2 , i ) ;",
        "read read ;"
      ],
      "err_line": 15,
      "err_msg": "‘m2’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        15,
        25,
        2
      ],
      "mod_code": [
        "n1 = n1 % j ;",
        "m2 = m2 ( m2 , i ) ;",
        "read read ;",
        "void read ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        15,
        25,
        10
      ],
      "mod_code": [
        "n1 = n1 % j ;",
        "m2 = m2 ( m2 , i ) ;",
        "read read ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘m2’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        15,
        2
      ],
      "mod_code": [
        "n1 = n1 % j ;",
        "m2 = m2 ( m2 , i ) ;",
        "void read ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        15,
        2,
        10
      ],
      "mod_code": [
        "n1 = n1 % j ;",
        "m2 = m2 ( m2 , i ) ;",
        "void read ( ) ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        15,
        10
      ],
      "mod_code": [
        "n1 = n1 % j ;",
        "m2 = m2 ( m2 , i ) ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘m2’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        25
      ],
      "mod_code": [
        "n1 = n1 % j ;",
        "read read ;"
      ],
      "err_line": 25,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        12,
        25,
        2
      ],
      "mod_code": [
        "n1 = n1 % j ;",
        "read read ;",
        "void read ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        25,
        2,
        10
      ],
      "mod_code": [
        "n1 = n1 % j ;",
        "read read ;",
        "void read ( ) ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        25,
        10
      ],
      "mod_code": [
        "n1 = n1 % j ;",
        "read read ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 25,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "n1 = n1 % j ;",
        "void read ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        2,
        10
      ],
      "mod_code": [
        "n1 = n1 % j ;",
        "void read ( ) ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        25
      ],
      "mod_code": [
        "m2 = m2 ( m2 , i ) ;",
        "read read ;"
      ],
      "err_line": 15,
      "err_msg": "‘m2’ cannot be used as a function"
    },
    {
      "mod_line": [
        15,
        25,
        2
      ],
      "mod_code": [
        "m2 = m2 ( m2 , i ) ;",
        "read read ;",
        "void read ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        25,
        2,
        10
      ],
      "mod_code": [
        "m2 = m2 ( m2 , i ) ;",
        "read read ;",
        "void read ( ) ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        25,
        10
      ],
      "mod_code": [
        "m2 = m2 ( m2 , i ) ;",
        "read read ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘m2’ cannot be used as a function"
    },
    {
      "mod_line": [
        15,
        2
      ],
      "mod_code": [
        "m2 = m2 ( m2 , i ) ;",
        "void read ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        2,
        10
      ],
      "mod_code": [
        "m2 = m2 ( m2 , i ) ;",
        "void read ( ) ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        10
      ],
      "mod_code": [
        "m2 = m2 ( m2 , i ) ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘m2’ cannot be used as a function"
    },
    {
      "mod_line": [
        25,
        2
      ],
      "mod_code": [
        "read read ;",
        "void read ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        25,
        2,
        10
      ],
      "mod_code": [
        "read read ;",
        "void read ( ) ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        25,
        10
      ],
      "mod_code": [
        "read read ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 25,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "void read ( ) ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}