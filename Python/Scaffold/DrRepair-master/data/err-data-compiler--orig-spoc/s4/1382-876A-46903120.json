{
  "meta": {
    "index": 1382,
    "hitid": "378G7J1SJLSXALFTSI7CJCYAG9JEWL",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "876A",
    "subid": "46903120"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , a , b , c , x , p , ans = integers with ans = 0",
      "code": "int n , a , b , c , x , p , ans = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , a , b , c",
      "code": "cin >> n >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "k = integer with k = 1",
      "code": "int k = 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "i = integer",
      "code": "int i ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 2 to n",
      "code": "for ( i = 2 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if ( k is 1 )",
      "code": "if ( k == 1 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if ( a < b )",
      "code": "if ( a < b )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "x = a , p = 2",
      "code": "x = a , p = 2 ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 10,
      "text": "x = b , p = 3",
      "code": "x = b , p = 3 ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if ( k is 2 )",
      "code": "if ( k == 2 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if ( a < c )",
      "code": "if ( a < c )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "x = a , p = 1",
      "code": "x = a , p = 1 ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 16,
      "text": "x = c , p = 3",
      "code": "x = c , p = 3 ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if ( k is 3 )",
      "code": "if ( k == 3 )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if ( b < c )",
      "code": "if ( b < c )",
      "indent": 3
    },
    {
      "line": 20,
      "text": "x = b , p = 1",
      "code": "x = b , p = 1 ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 22,
      "text": "x = c , p = 2",
      "code": "x = c , p = 2 ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "ans = ans + x",
      "code": "ans = ans + x ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "k = p",
      "code": "k = p ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a , b , c , x , p , p , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( a < b ) )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( k == 2 ) )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( a < c ) )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( b < c ) )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        22,
        7
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "x = c = 2 , p = 2 ;",
        "if ( a < b ) )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        22,
        7,
        2
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "x = c = 2 , p = 2 ;",
        "if ( a < b ) )",
        "cin >> n >> a , b >> c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        22,
        7,
        21
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "x = c = 2 , p = 2 ;",
        "if ( a < b ) )",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        22,
        7,
        13
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "x = c = 2 , p = 2 ;",
        "if ( a < b ) )",
        "if ( a < c ) )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        22,
        2,
        21
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "x = c = 2 , p = 2 ;",
        "cin >> n >> a , b >> c ;",
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        22,
        2,
        13
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "x = c = 2 , p = 2 ;",
        "cin >> n >> a , b >> c ;",
        "if ( a < c ) )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        22,
        21
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "x = c = 2 , p = 2 ;",
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        22,
        21,
        13
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "x = c = 2 , p = 2 ;",
        "else else",
        "if ( a < c ) )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        22,
        13
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "x = c = 2 , p = 2 ;",
        "if ( a < c ) )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        7
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "if ( a < b ) )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        7,
        2
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "if ( a < b ) )",
        "cin >> n >> a , b >> c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        7,
        2,
        21
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "if ( a < b ) )",
        "cin >> n >> a , b >> c ;",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        7,
        2,
        13
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "if ( a < b ) )",
        "cin >> n >> a , b >> c ;",
        "if ( a < c ) )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        7,
        21
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "if ( a < b ) )",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        7,
        21,
        13
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "if ( a < b ) )",
        "else else",
        "if ( a < c ) )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        7,
        13
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "if ( a < b ) )",
        "if ( a < c ) )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        2,
        21
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "cin >> n >> a , b >> c ;",
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        2,
        21,
        13
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "cin >> n >> a , b >> c ;",
        "else else",
        "if ( a < c ) )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        2,
        13
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "cin >> n >> a , b >> c ;",
        "if ( a < c ) )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        21
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        21,
        13
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "else else",
        "if ( a < c ) )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        13
      ],
      "mod_code": [
        "x = c = 3 , p = 3 ;",
        "if ( a < c ) )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        22,
        7
      ],
      "mod_code": [
        "x = c = 2 , p = 2 ;",
        "if ( a < b ) )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        22,
        7,
        2
      ],
      "mod_code": [
        "x = c = 2 , p = 2 ;",
        "if ( a < b ) )",
        "cin >> n >> a , b >> c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        22,
        7,
        2,
        21
      ],
      "mod_code": [
        "x = c = 2 , p = 2 ;",
        "if ( a < b ) )",
        "cin >> n >> a , b >> c ;",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        22,
        7,
        2,
        13
      ],
      "mod_code": [
        "x = c = 2 , p = 2 ;",
        "if ( a < b ) )",
        "cin >> n >> a , b >> c ;",
        "if ( a < c ) )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        22,
        7,
        21
      ],
      "mod_code": [
        "x = c = 2 , p = 2 ;",
        "if ( a < b ) )",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        22,
        7,
        21,
        13
      ],
      "mod_code": [
        "x = c = 2 , p = 2 ;",
        "if ( a < b ) )",
        "else else",
        "if ( a < c ) )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        22,
        7,
        13
      ],
      "mod_code": [
        "x = c = 2 , p = 2 ;",
        "if ( a < b ) )",
        "if ( a < c ) )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        22,
        2,
        21
      ],
      "mod_code": [
        "x = c = 2 , p = 2 ;",
        "cin >> n >> a , b >> c ;",
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22,
        2,
        21,
        13
      ],
      "mod_code": [
        "x = c = 2 , p = 2 ;",
        "cin >> n >> a , b >> c ;",
        "else else",
        "if ( a < c ) )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        22,
        2,
        13
      ],
      "mod_code": [
        "x = c = 2 , p = 2 ;",
        "cin >> n >> a , b >> c ;",
        "if ( a < c ) )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        22,
        21
      ],
      "mod_code": [
        "x = c = 2 , p = 2 ;",
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22,
        21,
        13
      ],
      "mod_code": [
        "x = c = 2 , p = 2 ;",
        "else else",
        "if ( a < c ) )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        22,
        13
      ],
      "mod_code": [
        "x = c = 2 , p = 2 ;",
        "if ( a < c ) )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "if ( a < b ) )",
        "cin >> n >> a , b >> c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        2,
        21
      ],
      "mod_code": [
        "if ( a < b ) )",
        "cin >> n >> a , b >> c ;",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        2,
        21,
        13
      ],
      "mod_code": [
        "if ( a < b ) )",
        "cin >> n >> a , b >> c ;",
        "else else",
        "if ( a < c ) )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        2,
        13
      ],
      "mod_code": [
        "if ( a < b ) )",
        "cin >> n >> a , b >> c ;",
        "if ( a < c ) )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        21
      ],
      "mod_code": [
        "if ( a < b ) )",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        21,
        13
      ],
      "mod_code": [
        "if ( a < b ) )",
        "else else",
        "if ( a < c ) )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "if ( a < b ) )",
        "if ( a < c ) )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        21
      ],
      "mod_code": [
        "cin >> n >> a , b >> c ;",
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        21,
        13
      ],
      "mod_code": [
        "cin >> n >> a , b >> c ;",
        "else else",
        "if ( a < c ) )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "cin >> n >> a , b >> c ;",
        "if ( a < c ) )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        21,
        13
      ],
      "mod_code": [
        "else else",
        "if ( a < c ) )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘)’ token"
    }
  ]
}