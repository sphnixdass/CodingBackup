{
  "meta": {
    "index": 101,
    "hitid": "3ZFRE2BDQ98AAGBFYAHB65DZCFHXZH",
    "workerid": "A1APYLD4DUK33J",
    "probid": "3A",
    "subid": "46307704"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , m , l , with n = 0 , m = 0 , l = 0",
      "code": "int n = 0 , m = 0 , l = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create characters x , y , with x = ' ' , y = ' '",
      "code": "char x = ' ' , y = ' ' ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string s with s = \" \\ n \"",
      "code": "string s = \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read x read n read y read m",
      "code": "cin >> x >> n >> y >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while x is not y or n is not m",
      "code": "while ( x != y || n != m )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if x is less than y",
      "code": "if ( x < y )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment s by ' R '",
      "code": "s += ' R ' ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "increment x",
      "code": "x ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if x is greater than y",
      "code": "if ( x > y )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increment s by ' L '",
      "code": "s += ' L ' ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "decrement x",
      "code": "x -- ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if n is less than m",
      "code": "if ( n < m )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increment s by ' U '",
      "code": "s += ' U ' ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "increment n",
      "code": "n ++ ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if n is greater than m",
      "code": "if ( n > m )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "increment s by ' D '",
      "code": "s += ' D ' ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "decrement n",
      "code": "n -- ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "increment s by ' \\ n '",
      "code": "s += ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "increment l",
      "code": "l ++ ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print l print s",
      "code": "cout << l << s ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , l = 0 , l = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char x , y = ' ' , y = ' ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string s = 360.0 ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        25,
        4,
        5,
        3
      ],
      "mod_code": [
        "cout << l << \" \" << s << endl ;",
        "cin >> x >> n >> y >> n ;",
        "while ( x != y || x != m )",
        "string s = 360.0 ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        25,
        4,
        5,
        2
      ],
      "mod_code": [
        "cout << l << \" \" << s << endl ;",
        "cin >> x >> n >> y >> n ;",
        "while ( x != y || x != m )",
        "char x , y = ' ' , y = ' ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        25,
        4,
        3
      ],
      "mod_code": [
        "cout << l << \" \" << s << endl ;",
        "cin >> x >> n >> y >> n ;",
        "string s = 360.0 ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        25,
        4,
        3,
        2
      ],
      "mod_code": [
        "cout << l << \" \" << s << endl ;",
        "cin >> x >> n >> y >> n ;",
        "string s = 360.0 ;",
        "char x , y = ' ' , y = ' ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        25,
        4,
        3,
        14
      ],
      "mod_code": [
        "cout << l << \" \" << s << endl ;",
        "cin >> x >> n >> y >> n ;",
        "string s = 360.0 ;",
        "if ( n <= m )"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        25,
        4,
        2
      ],
      "mod_code": [
        "cout << l << \" \" << s << endl ;",
        "cin >> x >> n >> y >> n ;",
        "char x , y = ' ' , y = ' ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        25,
        4,
        2,
        14
      ],
      "mod_code": [
        "cout << l << \" \" << s << endl ;",
        "cin >> x >> n >> y >> n ;",
        "char x , y = ' ' , y = ' ' ;",
        "if ( n <= m )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        25,
        5,
        3
      ],
      "mod_code": [
        "cout << l << \" \" << s << endl ;",
        "while ( x != y || x != m )",
        "string s = 360.0 ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        25,
        5,
        3,
        2
      ],
      "mod_code": [
        "cout << l << \" \" << s << endl ;",
        "while ( x != y || x != m )",
        "string s = 360.0 ;",
        "char x , y = ' ' , y = ' ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        25,
        5,
        3,
        14
      ],
      "mod_code": [
        "cout << l << \" \" << s << endl ;",
        "while ( x != y || x != m )",
        "string s = 360.0 ;",
        "if ( n <= m )"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        25,
        5,
        2
      ],
      "mod_code": [
        "cout << l << \" \" << s << endl ;",
        "while ( x != y || x != m )",
        "char x , y = ' ' , y = ' ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        25,
        5,
        2,
        14
      ],
      "mod_code": [
        "cout << l << \" \" << s << endl ;",
        "while ( x != y || x != m )",
        "char x , y = ' ' , y = ' ' ;",
        "if ( n <= m )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        25,
        3
      ],
      "mod_code": [
        "cout << l << \" \" << s << endl ;",
        "string s = 360.0 ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        25,
        3,
        2
      ],
      "mod_code": [
        "cout << l << \" \" << s << endl ;",
        "string s = 360.0 ;",
        "char x , y = ' ' , y = ' ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        25,
        3,
        2,
        14
      ],
      "mod_code": [
        "cout << l << \" \" << s << endl ;",
        "string s = 360.0 ;",
        "char x , y = ' ' , y = ' ' ;",
        "if ( n <= m )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        25,
        3,
        14
      ],
      "mod_code": [
        "cout << l << \" \" << s << endl ;",
        "string s = 360.0 ;",
        "if ( n <= m )"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        25,
        2
      ],
      "mod_code": [
        "cout << l << \" \" << s << endl ;",
        "char x , y = ' ' , y = ' ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        25,
        2,
        14
      ],
      "mod_code": [
        "cout << l << \" \" << s << endl ;",
        "char x , y = ' ' , y = ' ' ;",
        "if ( n <= m )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        4,
        5,
        3
      ],
      "mod_code": [
        "cin >> x >> n >> y >> n ;",
        "while ( x != y || x != m )",
        "string s = 360.0 ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        4,
        5,
        3,
        2
      ],
      "mod_code": [
        "cin >> x >> n >> y >> n ;",
        "while ( x != y || x != m )",
        "string s = 360.0 ;",
        "char x , y = ' ' , y = ' ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        4,
        5,
        3,
        14
      ],
      "mod_code": [
        "cin >> x >> n >> y >> n ;",
        "while ( x != y || x != m )",
        "string s = 360.0 ;",
        "if ( n <= m )"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        4,
        5,
        2
      ],
      "mod_code": [
        "cin >> x >> n >> y >> n ;",
        "while ( x != y || x != m )",
        "char x , y = ' ' , y = ' ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        4,
        5,
        2,
        14
      ],
      "mod_code": [
        "cin >> x >> n >> y >> n ;",
        "while ( x != y || x != m )",
        "char x , y = ' ' , y = ' ' ;",
        "if ( n <= m )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "cin >> x >> n >> y >> n ;",
        "string s = 360.0 ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        4,
        3,
        2
      ],
      "mod_code": [
        "cin >> x >> n >> y >> n ;",
        "string s = 360.0 ;",
        "char x , y = ' ' , y = ' ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        4,
        3,
        2,
        14
      ],
      "mod_code": [
        "cin >> x >> n >> y >> n ;",
        "string s = 360.0 ;",
        "char x , y = ' ' , y = ' ' ;",
        "if ( n <= m )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        4,
        3,
        14
      ],
      "mod_code": [
        "cin >> x >> n >> y >> n ;",
        "string s = 360.0 ;",
        "if ( n <= m )"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "cin >> x >> n >> y >> n ;",
        "char x , y = ' ' , y = ' ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        4,
        2,
        14
      ],
      "mod_code": [
        "cin >> x >> n >> y >> n ;",
        "char x , y = ' ' , y = ' ' ;",
        "if ( n <= m )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "while ( x != y || x != m )",
        "string s = 360.0 ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        5,
        3,
        2
      ],
      "mod_code": [
        "while ( x != y || x != m )",
        "string s = 360.0 ;",
        "char x , y = ' ' , y = ' ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        5,
        3,
        2,
        14
      ],
      "mod_code": [
        "while ( x != y || x != m )",
        "string s = 360.0 ;",
        "char x , y = ' ' , y = ' ' ;",
        "if ( n <= m )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        5,
        3,
        14
      ],
      "mod_code": [
        "while ( x != y || x != m )",
        "string s = 360.0 ;",
        "if ( n <= m )"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "while ( x != y || x != m )",
        "char x , y = ' ' , y = ' ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        5,
        2,
        14
      ],
      "mod_code": [
        "while ( x != y || x != m )",
        "char x , y = ' ' , y = ' ' ;",
        "if ( n <= m )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "string s = 360.0 ;",
        "char x , y = ' ' , y = ' ' ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        3,
        2,
        14
      ],
      "mod_code": [
        "string s = 360.0 ;",
        "char x , y = ' ' , y = ' ' ;",
        "if ( n <= m )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "string s = 360.0 ;",
        "if ( n <= m )"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘double’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "char x , y = ' ' , y = ' ' ;",
        "if ( n <= m )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char y’"
    }
  ]
}