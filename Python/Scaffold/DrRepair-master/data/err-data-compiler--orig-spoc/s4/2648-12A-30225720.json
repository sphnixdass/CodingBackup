{
  "meta": {
    "index": 2648,
    "hitid": "3VLL1PIENQING7XNXJUFNSM60BCOZ3",
    "workerid": "A3MFK5UEUG95M3",
    "probid": "12A",
    "subid": "30225720"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare an array of 3 strings called s",
      "code": "string s [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare a boolean value flag and set it to true",
      "code": "bool flag = true ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read three values into each value of s",
      "code": "for ( int i = 0 ; i < 3 ; i ++ ) cin >> s [ i ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "do the following 3 times , using the variable i",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "do the following 3 times using the variable j",
      "code": "for ( int j = 0 ; j < 3 ; j ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if the jth character of the i ' th string in s is not equal to the 2 minus j ' th character of the 2 minutes i ' th string then set flag equal to false .",
      "code": "if ( s [ i ] [ j ] != s [ 2 - i ] [ 2 - j ] ) flag = false ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "If after all that the flag is true :",
      "code": "if ( flag )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "output YES and a new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "Otherwise . . .",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "output NO and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> 3 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> j ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( s [ i ] != ' j ' ) flag = false ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "If = true ;"
      ],
      "err_line": 7,
      "err_msg": "‘If’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool flag and true ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> i >> i ;"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> j >> j ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( s [ i ] != ' i ' ) flag = false ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "cin >> 3 ;"
      ],
      "err_line": 3,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "cin >> 3 ;",
        "cin >> j ;"
      ],
      "err_line": 3,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "cin >> 3 ;",
        "cin >> j ;",
        "if ( s [ i ] != ' j ' ) flag = false ;"
      ],
      "err_line": 3,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "cin >> 3 ;",
        "cin >> j ;",
        "If = true ;"
      ],
      "err_line": 3,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "cin >> 3 ;",
        "cin >> j ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "cin >> 3 ;",
        "if ( s [ i ] != ' j ' ) flag = false ;"
      ],
      "err_line": 3,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "cin >> 3 ;",
        "if ( s [ i ] != ' j ' ) flag = false ;",
        "If = true ;"
      ],
      "err_line": 3,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "cin >> 3 ;",
        "if ( s [ i ] != ' j ' ) flag = false ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        3,
        4,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "cin >> 3 ;",
        "If = true ;"
      ],
      "err_line": 3,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "cin >> 3 ;",
        "If = true ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        3,
        4,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "cin >> 3 ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "cin >> j ;"
      ],
      "err_line": 3,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "cin >> j ;",
        "if ( s [ i ] != ' j ' ) flag = false ;"
      ],
      "err_line": 3,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "cin >> j ;",
        "if ( s [ i ] != ' j ' ) flag = false ;",
        "If = true ;"
      ],
      "err_line": 3,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "cin >> j ;",
        "if ( s [ i ] != ' j ' ) flag = false ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        3,
        5,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "cin >> j ;",
        "If = true ;"
      ],
      "err_line": 3,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5,
        7,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "cin >> j ;",
        "If = true ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        3,
        5,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "cin >> j ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "if ( s [ i ] != ' j ' ) flag = false ;"
      ],
      "err_line": 3,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        6,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "if ( s [ i ] != ' j ' ) flag = false ;",
        "If = true ;"
      ],
      "err_line": 3,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "if ( s [ i ] != ' j ' ) flag = false ;",
        "If = true ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        3,
        6,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "if ( s [ i ] != ' j ' ) flag = false ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "If = true ;"
      ],
      "err_line": 3,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        7,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "If = true ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i ++ ) cin >> s [ i ] ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cin >> j ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cin >> j ;",
        "if ( s [ i ] != ' j ' ) flag = false ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        7
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cin >> j ;",
        "if ( s [ i ] != ' j ' ) flag = false ;",
        "If = true ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        1
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cin >> j ;",
        "if ( s [ i ] != ' j ' ) flag = false ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        4,
        5,
        7
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cin >> j ;",
        "If = true ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        1
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cin >> j ;",
        "If = true ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        4,
        5,
        1
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cin >> j ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "cin >> 3 ;",
        "if ( s [ i ] != ' j ' ) flag = false ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        6,
        7
      ],
      "mod_code": [
        "cin >> 3 ;",
        "if ( s [ i ] != ' j ' ) flag = false ;",
        "If = true ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        1
      ],
      "mod_code": [
        "cin >> 3 ;",
        "if ( s [ i ] != ' j ' ) flag = false ;",
        "If = true ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        4,
        6,
        1
      ],
      "mod_code": [
        "cin >> 3 ;",
        "if ( s [ i ] != ' j ' ) flag = false ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "cin >> 3 ;",
        "If = true ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7,
        1
      ],
      "mod_code": [
        "cin >> 3 ;",
        "If = true ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "cin >> 3 ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "cin >> j ;",
        "if ( s [ i ] != ' j ' ) flag = false ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        7
      ],
      "mod_code": [
        "cin >> j ;",
        "if ( s [ i ] != ' j ' ) flag = false ;",
        "If = true ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        1
      ],
      "mod_code": [
        "cin >> j ;",
        "if ( s [ i ] != ' j ' ) flag = false ;",
        "If = true ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        6,
        1
      ],
      "mod_code": [
        "cin >> j ;",
        "if ( s [ i ] != ' j ' ) flag = false ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "cin >> j ;",
        "If = true ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        1
      ],
      "mod_code": [
        "cin >> j ;",
        "If = true ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "cin >> j ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "if ( s [ i ] != ' j ' ) flag = false ;",
        "If = true ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        7,
        1
      ],
      "mod_code": [
        "if ( s [ i ] != ' j ' ) flag = false ;",
        "If = true ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "if ( s [ i ] != ' j ' ) flag = false ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "If = true ;",
        "string 3 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    }
  ]
}