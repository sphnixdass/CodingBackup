{
  "meta": {
    "index": 185,
    "hitid": "3XEDXEGFX3I7OV6IVXPUAC2BYZK0K4",
    "workerid": "AIWEXPJAU66D9",
    "probid": "3A",
    "subid": "47913308"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare string variable s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let t be string",
      "code": "string t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read s and t",
      "code": "cin >> s >> t ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print max of abs ( s [ 0 ] - t [ 0 ] ) and abs ( s [ 1 ] - t [ 1 ] )",
      "code": "cout << max ( abs ( s [ 0 ] - t [ 0 ] ) , abs ( s [ 1 ] - t [ 1 ] ) ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while s ! = t",
      "code": "while ( s != t )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s [ 0 ] is less than t [ 0 ]",
      "code": "if ( s [ 0 ] < t [ 0 ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print \" R \"",
      "code": "cout << \" R \" ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "increase s [ 0 ] by 1",
      "code": "s [ 0 ] += 1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if s [ 0 ] is greater than t [ 0 ]",
      "code": "else if ( s [ 0 ] > t [ 0 ] )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print \" L \"",
      "code": "cout << \" L \" ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "decrease s [ 0 ] by 1",
      "code": "s [ 0 ] -= 1 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if s [ 1 ] is less than t [ 1 ]",
      "code": "if ( s [ 1 ] < t [ 1 ] )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print \" U \"",
      "code": "cout << \" U \" ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "increase s [ 1 ] by 1",
      "code": "s [ 1 ] += 1 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else if s [ 1 ] is greater than t [ 1 ]",
      "code": "else if ( s [ 1 ] > t [ 1 ] )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print \" D \"",
      "code": "cout << \" D \" ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "decrease s [ 1 ] by 1",
      "code": "s [ 1 ] -= 1 ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char t ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "s >> s >> t ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "while ( s )"
      ],
      "err_line": 6,
      "err_msg": "could not convert ‘s’ from ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘bool’"
    }
  ]
}