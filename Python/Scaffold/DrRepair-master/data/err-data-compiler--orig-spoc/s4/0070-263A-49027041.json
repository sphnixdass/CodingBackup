{
  "meta": {
    "index": 70,
    "hitid": "3NQUW096N6204VCDGTKOINGJR5V9L9",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "263A",
    "subid": "49027041"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "x , n , t , diff1 , diff2 = integers",
      "code": "int x , n , t , diff1 , diff2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "array = integer array of size [ 5 ] [ 5 ]",
      "code": "int array [ 5 ] [ 5 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to 4",
      "code": "for ( int i = 0 ; i < 5 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for j = 0 to 4",
      "code": "for ( int j = 0 ; j < 5 ; j ++ )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "if x is 1",
      "code": "if ( x == 1 )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "n = i",
      "code": "n = i ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "t = j",
      "code": "t = j ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "array [ i ] [ j ] = x",
      "code": "array [ i ] [ j ] = x ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 11,
      "text": "array [ i ] [ j ] = x",
      "code": "array [ i ] [ j ] = x ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if ( 2 - n ) < 0",
      "code": "if ( ( 2 - n ) < 0 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "diff1 = 0 - ( 2 - n )",
      "code": "diff1 = 0 - ( 2 - n ) ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "diff1 = 2 - n",
      "code": "diff1 = 2 - n ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if ( 2 - t ) < 0",
      "code": "if ( ( 2 - t ) < 0 )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "diff2 = 0 - ( 2 - t )",
      "code": "diff2 = 0 - ( 2 - t ) ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 23,
      "text": "diff2 = 2 - t",
      "code": "diff2 = 2 - t ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print diff1 + diff2",
      "code": "cout << diff1 + diff2 << endl ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;"
      ],
      "err_line": 9,
      "err_msg": "‘array’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < 4 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "for ( int i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘array’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        4
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "for ( int j = 0 ; j < 4 ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘array’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        9
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        11
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 9,
      "err_msg": "‘array’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        6
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        9
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        9,
        11
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "i [ i ] [ j ] = x ;",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        9,
        6
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "i [ i ] [ j ] = x ;",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        11
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 9,
      "err_msg": "‘array’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        11,
        6
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "i [ i ] [ j ] = x ;",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        6
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "for ( int j = 0 ; j < 4 ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘array’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        9
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        9,
        11
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "i [ i ] [ j ] = x ;",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4,
        9,
        6
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "i [ i ] [ j ] = x ;",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        11
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 9,
      "err_msg": "‘array’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        11,
        6
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "i [ i ] [ j ] = x ;",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        6
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        11
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "i [ i ] [ j ] = x ;",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        11,
        6
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "i [ i ] [ j ] = x ;",
        "i [ i ] [ j ] = x ;",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9,
        6
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "i [ i ] [ j ] = x ;",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 9,
      "err_msg": "‘array’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        6
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "i [ i ] [ j ] = x ;",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "int size [ 5 ] [ 5 ] ;",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "i [ i ] [ j ] = x ;",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "i [ i ] [ j ] = x ;",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        4,
        11,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "i [ i ] [ j ] = x ;",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "i [ i ] [ j ] = x ;",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        11,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "i [ i ] [ j ] = x ;",
        "i [ i ] [ j ] = x ;",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "i [ i ] [ j ] = x ;",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "i [ i ] [ j ] = x ;",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 4 ; i ++ )",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        9,
        11
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "i [ i ] [ j ] = x ;",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        6
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "i [ i ] [ j ] = x ;",
        "i [ i ] [ j ] = x ;",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        6
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "i [ i ] [ j ] = x ;",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        11,
        6
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "i [ i ] [ j ] = x ;",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 4 ; j ++ )",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "i [ i ] [ j ] = x ;",
        "i [ i ] [ j ] = x ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        6
      ],
      "mod_code": [
        "i [ i ] [ j ] = x ;",
        "i [ i ] [ j ] = x ;",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "i [ i ] [ j ] = x ;",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "i [ i ] [ j ] = x ;",
        "if ( x == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    }
  ]
}