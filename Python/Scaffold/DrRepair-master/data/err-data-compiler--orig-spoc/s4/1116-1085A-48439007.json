{
  "meta": {
    "index": 1116,
    "hitid": "3LXX8KJXPW38AGFATL0GA4KDLN39OI",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1085A",
    "subid": "48439007"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create character arrays str and ori with 60 elements filled with ' \\ 0 '",
      "code": "char str [ 60 ] , ori [ 60 ] = { ' \\0 ' } ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare integer variables i , j and len",
      "code": "int i , j , len ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read input into str",
      "code": "gets ( str ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "len = length of str",
      "code": "len = strlen ( str ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if len is even",
      "code": "if ( len % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "ori [ 0 ] = str [ len / 2 - 1 ]",
      "code": "ori [ 0 ] = str [ len / 2 - 1 ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for i = 1 while str [ len / 2 + i ] is not ' \\ 0 '",
      "code": "for ( i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "ori [ 2 * i - 1 ] = str [ len / 2 - 1 + i ]",
      "code": "ori [ 2 * i - 1 ] = str [ len / 2 - 1 + i ] ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "ori [ 2 * i ] = str [ len / 2 - 1 - i ]",
      "code": "ori [ 2 * i ] = str [ len / 2 - 1 - i ] ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "ori [ 2 * i - 1 ] = str [ len / 2 - 1 + i ]",
      "code": "ori [ 2 * i - 1 ] = str [ len / 2 - 1 + i ] ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "ori [ 0 ] = str [ len / 2 ]",
      "code": "ori [ 0 ] = str [ len / 2 ] ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "for i = 1 while str [ len / 2 + i ] is not ' \\ 0 '",
      "code": "for ( i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "ori [ 2 * i - 1 ] = str [ len / 2 + i ]",
      "code": "ori [ 2 * i - 1 ] = str [ len / 2 + i ] ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "ori [ 2 * i ] = str [ len / 2 - i ]",
      "code": "ori [ 2 * i ] = str [ len / 2 - i ] ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print ori",
      "code": "puts ( ori ) ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;"
      ],
      "err_line": 6,
      "err_msg": "‘ori’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int len = str . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\n ' } ;"
      ],
      "err_line": 6,
      "err_msg": "‘ori’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "getline ( cin , str ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [60])’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "len = str . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [60]’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "int len = str . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        1,
        4,
        7
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "int len = str . length ( ) ;",
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        1,
        4,
        7,
        13
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "int len = str . length ( ) ;",
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
        "ori [ 0 ] += str [ len ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        1,
        4,
        7,
        6
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "int len = str . length ( ) ;",
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
        "ori [ 0 ] += str [ len ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        1,
        4,
        7,
        2
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "int len = str . length ( ) ;",
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        1,
        4,
        13
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "int len = str . length ( ) ;",
        "ori [ 0 ] += str [ len ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        1,
        4,
        13,
        6
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "int len = str . length ( ) ;",
        "ori [ 0 ] += str [ len ] ;",
        "ori [ 0 ] += str [ len ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        1,
        4,
        13,
        2
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "int len = str . length ( ) ;",
        "ori [ 0 ] += str [ len ] ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        1,
        4,
        6
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "int len = str . length ( ) ;",
        "ori [ 0 ] += str [ len ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        1,
        4,
        6,
        2
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "int len = str . length ( ) ;",
        "ori [ 0 ] += str [ len ] ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        1,
        4,
        2
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "int len = str . length ( ) ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘ori’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        13
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
        "ori [ 0 ] += str [ len ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘ori’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        13,
        6
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
        "ori [ 0 ] += str [ len ] ;",
        "ori [ 0 ] += str [ len ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘ori’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        13,
        2
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
        "ori [ 0 ] += str [ len ] ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        1,
        7,
        6
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
        "ori [ 0 ] += str [ len ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘ori’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        6,
        2
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
        "ori [ 0 ] += str [ len ] ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        1,
        7,
        2
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "ori [ 0 ] += str [ len ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘ori’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        6
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "ori [ 0 ] += str [ len ] ;",
        "ori [ 0 ] += str [ len ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘ori’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        6,
        2
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "ori [ 0 ] += str [ len ] ;",
        "ori [ 0 ] += str [ len ] ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        1,
        13,
        2
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "ori [ 0 ] += str [ len ] ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "ori [ 0 ] += str [ len ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘ori’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        2
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "ori [ 0 ] += str [ len ] ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "char str [ 60 ] = { ' \\0 ' } ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "int len = str . length ( ) ;",
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        4,
        7,
        13
      ],
      "mod_code": [
        "int len = str . length ( ) ;",
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
        "ori [ 0 ] += str [ len ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        6
      ],
      "mod_code": [
        "int len = str . length ( ) ;",
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
        "ori [ 0 ] += str [ len ] ;",
        "ori [ 0 ] += str [ len ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        4,
        7,
        13,
        2
      ],
      "mod_code": [
        "int len = str . length ( ) ;",
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
        "ori [ 0 ] += str [ len ] ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        4,
        7,
        6
      ],
      "mod_code": [
        "int len = str . length ( ) ;",
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
        "ori [ 0 ] += str [ len ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        4,
        7,
        6,
        2
      ],
      "mod_code": [
        "int len = str . length ( ) ;",
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
        "ori [ 0 ] += str [ len ] ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        4,
        7,
        2
      ],
      "mod_code": [
        "int len = str . length ( ) ;",
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "int len = str . length ( ) ;",
        "ori [ 0 ] += str [ len ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        4,
        13,
        6
      ],
      "mod_code": [
        "int len = str . length ( ) ;",
        "ori [ 0 ] += str [ len ] ;",
        "ori [ 0 ] += str [ len ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        4,
        13,
        6,
        2
      ],
      "mod_code": [
        "int len = str . length ( ) ;",
        "ori [ 0 ] += str [ len ] ;",
        "ori [ 0 ] += str [ len ] ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        4,
        13,
        2
      ],
      "mod_code": [
        "int len = str . length ( ) ;",
        "ori [ 0 ] += str [ len ] ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "int len = str . length ( ) ;",
        "ori [ 0 ] += str [ len ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        4,
        6,
        2
      ],
      "mod_code": [
        "int len = str . length ( ) ;",
        "ori [ 0 ] += str [ len ] ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "int len = str . length ( ) ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        7,
        13,
        6,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
        "ori [ 0 ] += str [ len ] ;",
        "ori [ 0 ] += str [ len ] ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        7,
        13,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
        "ori [ 0 ] += str [ len ] ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        7,
        6,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
        "ori [ 0 ] += str [ len ] ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; str [ len / 2 + i ] != ' \\0 ' ; i ++ )",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        13,
        6,
        2
      ],
      "mod_code": [
        "ori [ 0 ] += str [ len ] ;",
        "ori [ 0 ] += str [ len ] ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "ori [ 0 ] += str [ len ] ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "ori [ 0 ] += str [ len ] ;",
        "int i , j , len , len ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int len’"
    }
  ]
}