{
  "meta": {
    "index": 561,
    "hitid": "3FSEU3P2NRUHBT3CFUH6VKPC2WURRX",
    "workerid": "A23MCHRW2IBC6K",
    "probid": "281A",
    "subid": "49099785"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a be an array of char of length 1100",
      "code": "char a [ 1100 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "execute gets wich takes a as an argument",
      "code": "gets ( a ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if a [ 0 ] > = ' A ' and a [ 0 ] < = ' Z ' then execute puts with a as an argument",
      "code": "if ( a [ 0 ] >= ' A ' && a [ 0 ] <= ' Z ' ) { puts ( a ) ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if a [ 0 ] > = ' a ' and a [ 0 ] < = ' z ' then",
      "code": "if ( a [ 0 ] >= ' a ' && a [ 0 ] <= ' z ' )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let a [ 0 ] = a [ 0 ] - 32",
      "code": "a [ 0 ] = a [ 0 ] - 32 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "execute puts with a as an argument",
      "code": "puts ( a ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a [ 1100 ] ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "if ( a [ 0 ] >= ' A ' && a [ 0 ] <= ' Z ' ) { puts ( ) ; }"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘int puts(const char*)’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "puts ( ' a ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "bool gets ( a ) ;",
        "int a [ 1100 ] ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘int*’ to ‘const char*’ for argument ‘1’ to ‘int puts(const char*)’"
    },
    {
      "mod_line": [
        2,
        1,
        5
      ],
      "mod_code": [
        "bool gets ( a ) ;",
        "int a [ 1100 ] ;",
        "a [ 0 ] += 32 ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘int*’ to ‘const char*’ for argument ‘1’ to ‘int puts(const char*)’"
    },
    {
      "mod_line": [
        2,
        1,
        5,
        6
      ],
      "mod_code": [
        "bool gets ( a ) ;",
        "int a [ 1100 ] ;",
        "a [ 0 ] += 32 ;",
        "puts ( ' a ' ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘int*’ to ‘const char*’ for argument ‘1’ to ‘int puts(const char*)’"
    },
    {
      "mod_line": [
        2,
        1,
        5,
        3
      ],
      "mod_code": [
        "bool gets ( a ) ;",
        "int a [ 1100 ] ;",
        "a [ 0 ] += 32 ;",
        "if ( a [ 0 ] >= ' A ' && a [ 0 ] <= ' Z ' ) { puts ( ) ; }"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘int puts(const char*)’"
    },
    {
      "mod_line": [
        2,
        1,
        6
      ],
      "mod_code": [
        "bool gets ( a ) ;",
        "int a [ 1100 ] ;",
        "puts ( ' a ' ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘int*’ to ‘const char*’ for argument ‘1’ to ‘int puts(const char*)’"
    },
    {
      "mod_line": [
        2,
        1,
        6,
        3
      ],
      "mod_code": [
        "bool gets ( a ) ;",
        "int a [ 1100 ] ;",
        "puts ( ' a ' ) ;",
        "if ( a [ 0 ] >= ' A ' && a [ 0 ] <= ' Z ' ) { puts ( ) ; }"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘int puts(const char*)’"
    },
    {
      "mod_line": [
        2,
        1,
        3
      ],
      "mod_code": [
        "bool gets ( a ) ;",
        "int a [ 1100 ] ;",
        "if ( a [ 0 ] >= ' A ' && a [ 0 ] <= ' Z ' ) { puts ( ) ; }"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘int puts(const char*)’"
    },
    {
      "mod_line": [
        2,
        5,
        6
      ],
      "mod_code": [
        "bool gets ( a ) ;",
        "a [ 0 ] += 32 ;",
        "puts ( ' a ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        6,
        3
      ],
      "mod_code": [
        "bool gets ( a ) ;",
        "a [ 0 ] += 32 ;",
        "puts ( ' a ' ) ;",
        "if ( a [ 0 ] >= ' A ' && a [ 0 ] <= ' Z ' ) { puts ( ) ; }"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘int puts(const char*)’"
    },
    {
      "mod_line": [
        2,
        5,
        3
      ],
      "mod_code": [
        "bool gets ( a ) ;",
        "a [ 0 ] += 32 ;",
        "if ( a [ 0 ] >= ' A ' && a [ 0 ] <= ' Z ' ) { puts ( ) ; }"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘int puts(const char*)’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "bool gets ( a ) ;",
        "puts ( ' a ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        3
      ],
      "mod_code": [
        "bool gets ( a ) ;",
        "puts ( ' a ' ) ;",
        "if ( a [ 0 ] >= ' A ' && a [ 0 ] <= ' Z ' ) { puts ( ) ; }"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘int puts(const char*)’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "bool gets ( a ) ;",
        "if ( a [ 0 ] >= ' A ' && a [ 0 ] <= ' Z ' ) { puts ( ) ; }"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘int puts(const char*)’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int a [ 1100 ] ;",
        "a [ 0 ] += 32 ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        5,
        6
      ],
      "mod_code": [
        "int a [ 1100 ] ;",
        "a [ 0 ] += 32 ;",
        "puts ( ' a ' ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        5,
        6,
        3
      ],
      "mod_code": [
        "int a [ 1100 ] ;",
        "a [ 0 ] += 32 ;",
        "puts ( ' a ' ) ;",
        "if ( a [ 0 ] >= ' A ' && a [ 0 ] <= ' Z ' ) { puts ( ) ; }"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        5,
        3
      ],
      "mod_code": [
        "int a [ 1100 ] ;",
        "a [ 0 ] += 32 ;",
        "if ( a [ 0 ] >= ' A ' && a [ 0 ] <= ' Z ' ) { puts ( ) ; }"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int a [ 1100 ] ;",
        "puts ( ' a ' ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        6,
        3
      ],
      "mod_code": [
        "int a [ 1100 ] ;",
        "puts ( ' a ' ) ;",
        "if ( a [ 0 ] >= ' A ' && a [ 0 ] <= ' Z ' ) { puts ( ) ; }"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int a [ 1100 ] ;",
        "if ( a [ 0 ] >= ' A ' && a [ 0 ] <= ' Z ' ) { puts ( ) ; }"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "a [ 0 ] += 32 ;",
        "puts ( ' a ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "a [ 0 ] += 32 ;",
        "puts ( ' a ' ) ;",
        "if ( a [ 0 ] >= ' A ' && a [ 0 ] <= ' Z ' ) { puts ( ) ; }"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘int puts(const char*)’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "a [ 0 ] += 32 ;",
        "if ( a [ 0 ] >= ' A ' && a [ 0 ] <= ' Z ' ) { puts ( ) ; }"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘int puts(const char*)’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "puts ( ' a ' ) ;",
        "if ( a [ 0 ] >= ' A ' && a [ 0 ] <= ' Z ' ) { puts ( ) ; }"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘int puts(const char*)’"
    }
  ]
}