{
  "meta": {
    "index": 762,
    "hitid": "3SD15I2WD2OW68KQCGDC2RV01IV63G",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "985A",
    "subid": "45196874"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n be an integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let b be a vector of int",
      "code": "vector < int > b ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let w be an int vector",
      "code": "vector < int > w ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let s be a set of ints",
      "code": "set < int > s ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive , insert i + 1 in s",
      "code": "for ( int i = 0 ; i < n ; i ++ ) s . insert ( i + 1 ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n / 2 ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "let x be an int",
      "code": "int x ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if x modulo 2 is 0",
      "code": "if ( x % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "tail insert x in w",
      "code": "w . push_back ( x ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "add x at the end of b",
      "code": "b . push_back ( x ) ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "erase x from s",
      "code": "s . erase ( x ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "sort b",
      "code": "sort ( b . begin ( ) , b . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "sort w",
      "code": "sort ( w . begin ( ) , w . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "let ansb = 0 an int",
      "code": "int ansb = 0 ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "answ = int = 0",
      "code": "int answ = 0 ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "jb = int = 0",
      "code": "int jb = 0 ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "jw = 0 = int",
      "code": "int jw = 0 ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for set iterator i = first element of b to i is not end of s",
      "code": "for ( set < int > :: iterator i = s . begin ( ) ; i != s . end ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if pointer i modulo 2 is 0 and jb < size of b",
      "code": "if ( * i % 2 == 0 && jb < b . size ( ) )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "increment answ by the abs of pointer i - b at jb",
      "code": "answ += abs ( * i - b [ jb ] ) ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "increment jb",
      "code": "jb ++ ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "else if jw < size of w",
      "code": "else if ( jw < w . size ( ) )",
      "indent": 2
    },
    {
      "line": 27,
      "text": "increment ansb to the abs of pointer i - w [ jw ]",
      "code": "ansb += abs ( * i - w [ jw ] ) ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "increment jw + +",
      "code": "jw ++ ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print the minimum between ansb and answ",
      "code": "cout << min ( ansb , answ ) << endl ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "for ( i = b . first ; i < s . first ; i ++ )"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator%’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "answ += abs ( abs ( i - b ) ) ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "ansb = abs ( i - w ) - w [ jw ] ;"
      ],
      "err_line": 27,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 13,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "pair < int , int > b ;"
      ],
      "err_line": 13,
      "err_msg": "‘struct std::pair<int, int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "set < long > s ;"
      ],
      "err_line": 22,
      "err_msg": "conversion from ‘std::set<long int>::iterator {aka std::_Rb_tree_const_iterator<long int>}’ to non-scalar type ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ requested"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int * x ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "w . push ( x ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "b . push ( x ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "s . erase ( s ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘std::set<int>::erase(std::set<int>&)’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "sort ( b , b + n ) ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "sort ( w , w + n ) ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "for ( string i = b . first ; i < s . first ; i ++ )"
      ],
      "err_line": 22,
      "err_msg": "‘class std::vector<int>’ has no member named ‘first’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "answ += abs ( i - b [ b ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "else if ( jw < w . length ( ) )"
      ],
      "err_line": 26,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "ansb = abs ( i ) - w [ jw ] ;"
      ],
      "err_line": 27,
      "err_msg": "no matching function for call to ‘abs(std::set<int>::iterator&)’"
    },
    {
      "mod_line": [
        7,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = b . first ; i < s . first ; i ++ )"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        22,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = b . first ; i < s . first ; i ++ )",
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        22,
        23,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = b . first ; i < s . first ; i ++ )",
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "answ += abs ( abs ( i - b ) ) ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        22,
        23,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = b . first ; i < s . first ; i ++ )",
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "ansb = abs ( i - w ) - w [ jw ] ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        22,
        23,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = b . first ; i < s . first ; i ++ )",
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "int ansb ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        22,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = b . first ; i < s . first ; i ++ )",
        "answ += abs ( abs ( i - b ) ) ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        22,
        24,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = b . first ; i < s . first ; i ++ )",
        "answ += abs ( abs ( i - b ) ) ;",
        "ansb = abs ( i - w ) - w [ jw ] ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        22,
        24,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = b . first ; i < s . first ; i ++ )",
        "answ += abs ( abs ( i - b ) ) ;",
        "int ansb ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        22,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = b . first ; i < s . first ; i ++ )",
        "ansb = abs ( i - w ) - w [ jw ] ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        22,
        27,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = b . first ; i < s . first ; i ++ )",
        "ansb = abs ( i - w ) - w [ jw ] ;",
        "int ansb ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        22,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = b . first ; i < s . first ; i ++ )",
        "int ansb ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator%’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        23,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "answ += abs ( abs ( i - b ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator%’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        23,
        24,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "answ += abs ( abs ( i - b ) ) ;",
        "ansb = abs ( i - w ) - w [ jw ] ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator%’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        23,
        24,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "answ += abs ( abs ( i - b ) ) ;",
        "int ansb ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator%’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        23,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "ansb = abs ( i - w ) - w [ jw ] ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator%’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        23,
        27,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "ansb = abs ( i - w ) - w [ jw ] ;",
        "int ansb ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator%’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        23,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "int ansb ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator%’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "answ += abs ( abs ( i - b ) ) ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        24,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "answ += abs ( abs ( i - b ) ) ;",
        "ansb = abs ( i - w ) - w [ jw ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        24,
        27,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "answ += abs ( abs ( i - b ) ) ;",
        "ansb = abs ( i - w ) - w [ jw ] ;",
        "int ansb ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        24,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "answ += abs ( abs ( i - b ) ) ;",
        "int ansb ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        27
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "ansb = abs ( i - w ) - w [ jw ] ;"
      ],
      "err_line": 27,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        27,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "ansb = abs ( i - w ) - w [ jw ] ;",
        "int ansb ;"
      ],
      "err_line": 27,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        22,
        23
      ],
      "mod_code": [
        "for ( i = b . first ; i < s . first ; i ++ )",
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        23,
        24
      ],
      "mod_code": [
        "for ( i = b . first ; i < s . first ; i ++ )",
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "answ += abs ( abs ( i - b ) ) ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        23,
        24,
        27
      ],
      "mod_code": [
        "for ( i = b . first ; i < s . first ; i ++ )",
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "answ += abs ( abs ( i - b ) ) ;",
        "ansb = abs ( i - w ) - w [ jw ] ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        23,
        24,
        18
      ],
      "mod_code": [
        "for ( i = b . first ; i < s . first ; i ++ )",
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "answ += abs ( abs ( i - b ) ) ;",
        "int ansb ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        23,
        27
      ],
      "mod_code": [
        "for ( i = b . first ; i < s . first ; i ++ )",
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "ansb = abs ( i - w ) - w [ jw ] ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        23,
        27,
        18
      ],
      "mod_code": [
        "for ( i = b . first ; i < s . first ; i ++ )",
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "ansb = abs ( i - w ) - w [ jw ] ;",
        "int ansb ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        23,
        18
      ],
      "mod_code": [
        "for ( i = b . first ; i < s . first ; i ++ )",
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "int ansb ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        24
      ],
      "mod_code": [
        "for ( i = b . first ; i < s . first ; i ++ )",
        "answ += abs ( abs ( i - b ) ) ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        24,
        27
      ],
      "mod_code": [
        "for ( i = b . first ; i < s . first ; i ++ )",
        "answ += abs ( abs ( i - b ) ) ;",
        "ansb = abs ( i - w ) - w [ jw ] ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        24,
        27,
        18
      ],
      "mod_code": [
        "for ( i = b . first ; i < s . first ; i ++ )",
        "answ += abs ( abs ( i - b ) ) ;",
        "ansb = abs ( i - w ) - w [ jw ] ;",
        "int ansb ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        24,
        18
      ],
      "mod_code": [
        "for ( i = b . first ; i < s . first ; i ++ )",
        "answ += abs ( abs ( i - b ) ) ;",
        "int ansb ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        27
      ],
      "mod_code": [
        "for ( i = b . first ; i < s . first ; i ++ )",
        "ansb = abs ( i - w ) - w [ jw ] ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        27,
        18
      ],
      "mod_code": [
        "for ( i = b . first ; i < s . first ; i ++ )",
        "ansb = abs ( i - w ) - w [ jw ] ;",
        "int ansb ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        18
      ],
      "mod_code": [
        "for ( i = b . first ; i < s . first ; i ++ )",
        "int ansb ;"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        24
      ],
      "mod_code": [
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "answ += abs ( abs ( i - b ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator%’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        23,
        24,
        27
      ],
      "mod_code": [
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "answ += abs ( abs ( i - b ) ) ;",
        "ansb = abs ( i - w ) - w [ jw ] ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator%’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        23,
        24,
        27,
        18
      ],
      "mod_code": [
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "answ += abs ( abs ( i - b ) ) ;",
        "ansb = abs ( i - w ) - w [ jw ] ;",
        "int ansb ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator%’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        23,
        24,
        18
      ],
      "mod_code": [
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "answ += abs ( abs ( i - b ) ) ;",
        "int ansb ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator%’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        23,
        27
      ],
      "mod_code": [
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "ansb = abs ( i - w ) - w [ jw ] ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator%’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        23,
        27,
        18
      ],
      "mod_code": [
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "ansb = abs ( i - w ) - w [ jw ] ;",
        "int ansb ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator%’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        23,
        18
      ],
      "mod_code": [
        "if ( ( i % 2 == 0 ) && ( jb < b . size ( ) ) )",
        "int ansb ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator%’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        24,
        27
      ],
      "mod_code": [
        "answ += abs ( abs ( i - b ) ) ;",
        "ansb = abs ( i - w ) - w [ jw ] ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        24,
        27,
        18
      ],
      "mod_code": [
        "answ += abs ( abs ( i - b ) ) ;",
        "ansb = abs ( i - w ) - w [ jw ] ;",
        "int ansb ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        24,
        18
      ],
      "mod_code": [
        "answ += abs ( abs ( i - b ) ) ;",
        "int ansb ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        27,
        18
      ],
      "mod_code": [
        "ansb = abs ( i - w ) - w [ jw ] ;",
        "int ansb ;"
      ],
      "err_line": 27,
      "err_msg": "no match for ‘operator-’ (operand types are ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ and ‘std::vector<int>’)"
    }
  ]
}