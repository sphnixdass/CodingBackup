{
  "meta": {
    "index": 1335,
    "hitid": "3RKHNXPHGWQN4HIYT43EZJQIEONKUQ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "47A",
    "subid": "47621776"
  },
  "lines": [
    {
      "line": 0,
      "text": "integer mxn = 1 . e3",
      "code": "const int mxn = 1.e3 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "integer array a of size mxn",
      "code": "int a [ mxn ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "function tri with argument n",
      "code": "bool tri ( int n )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integer sum with value 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; sum < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "sum = ( i * ( i + 1 ) ) / 2",
      "code": "sum = ( i * ( i + 1 ) ) / 2 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if sum is equal to n return true",
      "code": "if ( sum == n ) return true ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return false",
      "code": "return false ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 11,
      "text": "let n be integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "{",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print \" YES \" if tri ( n ) is true , otherwise print \" NO \" , then print \" \\ n \"",
      "code": "cout << ( ( tri ( n ) ? \" YES \" : \" NO \" ) ) << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "invoke function exit ( 0 )",
      "code": "exit ( 0 ) ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": ";",
      "code": ";",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int mxn = integer ;"
      ],
      "err_line": 0,
      "err_msg": "‘integer’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        ";"
      ],
      "err_line": 17,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int mxn = 0.0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool tri ( n ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int sum create ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "; ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "int mxn = integer ;",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘integer’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        4,
        16
      ],
      "mod_code": [
        "int mxn = integer ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        ";"
      ],
      "err_line": 0,
      "err_msg": "‘integer’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        4,
        16,
        3
      ],
      "mod_code": [
        "int mxn = integer ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        ";",
        "int sum create ;"
      ],
      "err_line": 0,
      "err_msg": "‘integer’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        4,
        16,
        6
      ],
      "mod_code": [
        "int mxn = integer ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        ";",
        "if ( sum == true ) return true ;"
      ],
      "err_line": 0,
      "err_msg": "‘integer’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        4,
        3
      ],
      "mod_code": [
        "int mxn = integer ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "int sum create ;"
      ],
      "err_line": 0,
      "err_msg": "‘integer’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        4,
        3,
        6
      ],
      "mod_code": [
        "int mxn = integer ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "int sum create ;",
        "if ( sum == true ) return true ;"
      ],
      "err_line": 0,
      "err_msg": "‘integer’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        4,
        6
      ],
      "mod_code": [
        "int mxn = integer ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( sum == true ) return true ;"
      ],
      "err_line": 0,
      "err_msg": "‘integer’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "int mxn = integer ;",
        ";"
      ],
      "err_line": 0,
      "err_msg": "‘integer’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        16,
        3
      ],
      "mod_code": [
        "int mxn = integer ;",
        ";",
        "int sum create ;"
      ],
      "err_line": 0,
      "err_msg": "‘integer’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        16,
        3,
        6
      ],
      "mod_code": [
        "int mxn = integer ;",
        ";",
        "int sum create ;",
        "if ( sum == true ) return true ;"
      ],
      "err_line": 0,
      "err_msg": "‘integer’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        16,
        6
      ],
      "mod_code": [
        "int mxn = integer ;",
        ";",
        "if ( sum == true ) return true ;"
      ],
      "err_line": 0,
      "err_msg": "‘integer’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int mxn = integer ;",
        "int sum create ;"
      ],
      "err_line": 0,
      "err_msg": "‘integer’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        6
      ],
      "mod_code": [
        "int mxn = integer ;",
        "int sum create ;",
        "if ( sum == true ) return true ;"
      ],
      "err_line": 0,
      "err_msg": "‘integer’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "int mxn = integer ;",
        "if ( sum == true ) return true ;"
      ],
      "err_line": 0,
      "err_msg": "‘integer’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        ";"
      ],
      "err_line": 17,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4,
        16,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        ";",
        "int sum create ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        4,
        16,
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        ";",
        "int sum create ;",
        "if ( sum == true ) return true ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        4,
        16,
        3,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        ";",
        "int sum create ;",
        "int mxn = 0.0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        16,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        ";",
        "if ( sum == true ) return true ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4,
        16,
        6,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        ";",
        "if ( sum == true ) return true ;",
        "int mxn = 0.0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        16,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        ";",
        "int mxn = 0.0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "int sum create ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        4,
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "int sum create ;",
        "if ( sum == true ) return true ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        4,
        3,
        6,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "int sum create ;",
        "if ( sum == true ) return true ;",
        "int mxn = 0.0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        3,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "int sum create ;",
        "int mxn = 0.0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        6,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( sum == true ) return true ;",
        "int mxn = 0.0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "int mxn = 0.0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        16,
        3
      ],
      "mod_code": [
        ";",
        "int sum create ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        16,
        3,
        6
      ],
      "mod_code": [
        ";",
        "int sum create ;",
        "if ( sum == true ) return true ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        16,
        3,
        6,
        0
      ],
      "mod_code": [
        ";",
        "int sum create ;",
        "if ( sum == true ) return true ;",
        "int mxn = 0.0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        16,
        3,
        0
      ],
      "mod_code": [
        ";",
        "int sum create ;",
        "int mxn = 0.0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        16,
        6
      ],
      "mod_code": [
        ";",
        "if ( sum == true ) return true ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        16,
        6,
        0
      ],
      "mod_code": [
        ";",
        "if ( sum == true ) return true ;",
        "int mxn = 0.0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        16,
        0
      ],
      "mod_code": [
        ";",
        "int mxn = 0.0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int sum create ;",
        "if ( sum == true ) return true ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        3,
        6,
        0
      ],
      "mod_code": [
        "int sum create ;",
        "if ( sum == true ) return true ;",
        "int mxn = 0.0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "int sum create ;",
        "int mxn = 0.0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "if ( sum == true ) return true ;",
        "int mxn = 0.0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    }
  ]
}