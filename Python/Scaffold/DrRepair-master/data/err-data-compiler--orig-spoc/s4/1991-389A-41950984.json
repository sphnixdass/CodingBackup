{
  "meta": {
    "index": 1991,
    "hitid": "32XN26MTXZDI81O0GX1VPCFQO11L09",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "389A",
    "subid": "41950984"
  },
  "lines": [
    {
      "line": 0,
      "text": "a = integer array of size 105",
      "code": "int a [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in function gcd with arguments of integer a and integer b",
      "code": "int gcd ( int a , int b )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "rerurn a if b is 0 else return the result of calling gcd with arguments b and a modulo a",
      "code": "return b == 0 ? a : gcd ( b , a % b ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive , then read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "ans1 = integer = the result of calling gcd with arguments of a [ 0 ] and a [ 1 ]",
      "code": "int ans1 = gcd ( a [ 0 ] , a [ 1 ] ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "ans2 = integer = the result of calling gcd with arguments of a [ n / 2 ] and a [ n / 2 + 1 ]",
      "code": "int ans2 = gcd ( a [ n / 2 ] , a [ n / 2 + 1 ] ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 2 to n / 2 exclusive",
      "code": "for ( int i = 2 ; i < n / 2 ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "ans1 = the result of calling gcd with arguments of ans1 and a [ i ]",
      "code": "ans1 = gcd ( ans1 , a [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if ans1 is 1 , then exit the for loop",
      "code": "if ( ans1 == 1 ) break ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = n / 2 + 2 to n exclusive",
      "code": "for ( int i = n / 2 + 2 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if ans1 is 1 , then exit the for loop",
      "code": "if ( ans1 == 1 ) break ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "ans2 = the result of calling gcd with arguments of ans2 and a [ i ]",
      "code": "ans2 = gcd ( ans2 , a [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if ans2 is 1 , then exit the for loop",
      "code": "if ( ans2 == 1 ) break ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if ans1 is 1 or ans2 is 1",
      "code": "if ( ans1 == 1 || ans2 == 1 )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print n",
      "code": "cout << n << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print the result of calling gcd with arguments ans1 and ans2",
      "code": "cout << gcd ( ans1 , ans2 ) * n << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "return b == 0 ? gcd ( b , a % a ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        1,
        2,
        22,
        8
      ],
      "mod_code": [
        "bool gcd ( int a , int b )",
        "return b == 0 ? a : gcd ( b , a % a ) ;",
        "cout << gcd ( ans1 , ans2 ) << endl ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘bool gcd(int, int)’"
    },
    {
      "mod_line": [
        1,
        2,
        22,
        9
      ],
      "mod_code": [
        "bool gcd ( int a , int b )",
        "return b == 0 ? a : gcd ( b , a % a ) ;",
        "cout << gcd ( ans1 , ans2 ) << endl ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "too few arguments to function ‘bool gcd(int, int)’"
    },
    {
      "mod_line": [
        1,
        2,
        21,
        8
      ],
      "mod_code": [
        "bool gcd ( int a , int b )",
        "return b == 0 ? a : gcd ( b , a % a ) ;",
        "else ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘bool gcd(int, int)’"
    },
    {
      "mod_line": [
        1,
        2,
        21,
        9
      ],
      "mod_code": [
        "bool gcd ( int a , int b )",
        "return b == 0 ? a : gcd ( b , a % a ) ;",
        "else ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "too few arguments to function ‘bool gcd(int, int)’"
    },
    {
      "mod_line": [
        1,
        2,
        8
      ],
      "mod_code": [
        "bool gcd ( int a , int b )",
        "return b == 0 ? a : gcd ( b , a % a ) ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘bool gcd(int, int)’"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        9
      ],
      "mod_code": [
        "bool gcd ( int a , int b )",
        "return b == 0 ? a : gcd ( b , a % a ) ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘bool gcd(int, int)’"
    },
    {
      "mod_line": [
        1,
        2,
        9
      ],
      "mod_code": [
        "bool gcd ( int a , int b )",
        "return b == 0 ? a : gcd ( b , a % a ) ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "too few arguments to function ‘bool gcd(int, int)’"
    },
    {
      "mod_line": [
        1,
        22,
        21,
        8
      ],
      "mod_code": [
        "bool gcd ( int a , int b )",
        "cout << gcd ( ans1 , ans2 ) << endl ;",
        "else ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘bool gcd(int, int)’"
    },
    {
      "mod_line": [
        1,
        22,
        21,
        9
      ],
      "mod_code": [
        "bool gcd ( int a , int b )",
        "cout << gcd ( ans1 , ans2 ) << endl ;",
        "else ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "too few arguments to function ‘bool gcd(int, int)’"
    },
    {
      "mod_line": [
        1,
        22,
        8
      ],
      "mod_code": [
        "bool gcd ( int a , int b )",
        "cout << gcd ( ans1 , ans2 ) << endl ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘bool gcd(int, int)’"
    },
    {
      "mod_line": [
        1,
        22,
        8,
        9
      ],
      "mod_code": [
        "bool gcd ( int a , int b )",
        "cout << gcd ( ans1 , ans2 ) << endl ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘bool gcd(int, int)’"
    },
    {
      "mod_line": [
        1,
        22,
        9
      ],
      "mod_code": [
        "bool gcd ( int a , int b )",
        "cout << gcd ( ans1 , ans2 ) << endl ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "too few arguments to function ‘bool gcd(int, int)’"
    },
    {
      "mod_line": [
        1,
        21,
        8
      ],
      "mod_code": [
        "bool gcd ( int a , int b )",
        "else ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘bool gcd(int, int)’"
    },
    {
      "mod_line": [
        1,
        21,
        8,
        9
      ],
      "mod_code": [
        "bool gcd ( int a , int b )",
        "else ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘bool gcd(int, int)’"
    },
    {
      "mod_line": [
        1,
        21,
        9
      ],
      "mod_code": [
        "bool gcd ( int a , int b )",
        "else ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "too few arguments to function ‘bool gcd(int, int)’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "bool gcd ( int a , int b )",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘bool gcd(int, int)’"
    },
    {
      "mod_line": [
        1,
        8,
        9
      ],
      "mod_code": [
        "bool gcd ( int a , int b )",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘bool gcd(int, int)’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "bool gcd ( int a , int b )",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "too few arguments to function ‘bool gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        22,
        21,
        8
      ],
      "mod_code": [
        "return b == 0 ? a : gcd ( b , a % a ) ;",
        "cout << gcd ( ans1 , ans2 ) << endl ;",
        "else ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        22,
        21,
        9
      ],
      "mod_code": [
        "return b == 0 ? a : gcd ( b , a % a ) ;",
        "cout << gcd ( ans1 , ans2 ) << endl ;",
        "else ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        22,
        8
      ],
      "mod_code": [
        "return b == 0 ? a : gcd ( b , a % a ) ;",
        "cout << gcd ( ans1 , ans2 ) << endl ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        22,
        8,
        9
      ],
      "mod_code": [
        "return b == 0 ? a : gcd ( b , a % a ) ;",
        "cout << gcd ( ans1 , ans2 ) << endl ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        22,
        9
      ],
      "mod_code": [
        "return b == 0 ? a : gcd ( b , a % a ) ;",
        "cout << gcd ( ans1 , ans2 ) << endl ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        21,
        8
      ],
      "mod_code": [
        "return b == 0 ? a : gcd ( b , a % a ) ;",
        "else ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        21,
        8,
        9
      ],
      "mod_code": [
        "return b == 0 ? a : gcd ( b , a % a ) ;",
        "else ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        21,
        9
      ],
      "mod_code": [
        "return b == 0 ? a : gcd ( b , a % a ) ;",
        "else ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "return b == 0 ? a : gcd ( b , a % a ) ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        8,
        9
      ],
      "mod_code": [
        "return b == 0 ? a : gcd ( b , a % a ) ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "return b == 0 ? a : gcd ( b , a % a ) ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        22,
        21,
        8
      ],
      "mod_code": [
        "cout << gcd ( ans1 , ans2 ) << endl ;",
        "else ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        22,
        21,
        8,
        9
      ],
      "mod_code": [
        "cout << gcd ( ans1 , ans2 ) << endl ;",
        "else ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        22,
        21,
        9
      ],
      "mod_code": [
        "cout << gcd ( ans1 , ans2 ) << endl ;",
        "else ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        22,
        8
      ],
      "mod_code": [
        "cout << gcd ( ans1 , ans2 ) << endl ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        22,
        8,
        9
      ],
      "mod_code": [
        "cout << gcd ( ans1 , ans2 ) << endl ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        22,
        9
      ],
      "mod_code": [
        "cout << gcd ( ans1 , ans2 ) << endl ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        21,
        8
      ],
      "mod_code": [
        "else ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        21,
        8,
        9
      ],
      "mod_code": [
        "else ;",
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        21,
        9
      ],
      "mod_code": [
        "else ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "int ans1 = gcd ( a [ 0 ] = a [ 1 ] ) ;",
        "int ans2 = gcd ( a [ n / 2 ] = a [ n / 2 + 1 ] ) ;"
      ],
      "err_line": 8,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    }
  ]
}