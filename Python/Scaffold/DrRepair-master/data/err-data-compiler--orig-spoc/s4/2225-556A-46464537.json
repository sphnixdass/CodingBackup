{
  "meta": {
    "index": 2225,
    "hitid": "3U74KRR67MF9CAOCQC5KMFLKQ7WNTN",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "556A",
    "subid": "46464537"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , len_s = integers",
      "code": "int n , len_s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "a , b = integers",
      "code": "int a , b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "s = character array of size 200005",
      "code": "char s [ 200005 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while n is read with a valid integer",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set all values of s to 0",
      "code": "memset ( s , 0 , 20005 ) ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "a = 0",
      "code": "a = 0 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "b = 0",
      "code": "b = 0 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "len_s = length of s string",
      "code": "len_s = strlen ( s ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "for i = 0 to len_s exclusive",
      "code": "for ( int i = 0 ; i < len_s ; i ++ )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if s [ i ] - 0 is 0",
      "code": "if ( s [ i ] - ' 0 ' == 0 )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "increase a by 1",
      "code": "a ++ ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 14,
      "text": "increase b by 1",
      "code": "b ++ ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print the result of the absolute value of ( a - b )",
      "code": "cout << abs ( a - b ) << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "string len_s = s . length ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [200005]’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "string len_s = s . size ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [200005]’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < len_s ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "string len_s = s . length ( ) ;",
        "if ( s [ i ] - 0 == 0 )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [200005]’"
    },
    {
      "mod_line": [
        9,
        11,
        6
      ],
      "mod_code": [
        "string len_s = s . length ( ) ;",
        "if ( s [ i ] - 0 == 0 )",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        9,
        11,
        6,
        10
      ],
      "mod_code": [
        "string len_s = s . length ( ) ;",
        "if ( s [ i ] - 0 == 0 )",
        "s >> s ;",
        "for ( i = 0 ; i < len_s ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        9,
        11,
        6,
        16
      ],
      "mod_code": [
        "string len_s = s . length ( ) ;",
        "if ( s [ i ] - 0 == 0 )",
        "s >> s ;",
        "cout << abs ( a - b ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        9,
        11,
        10
      ],
      "mod_code": [
        "string len_s = s . length ( ) ;",
        "if ( s [ i ] - 0 == 0 )",
        "for ( i = 0 ; i < len_s ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [200005]’"
    },
    {
      "mod_line": [
        9,
        11,
        10,
        16
      ],
      "mod_code": [
        "string len_s = s . length ( ) ;",
        "if ( s [ i ] - 0 == 0 )",
        "for ( i = 0 ; i < len_s ; i ++ )",
        "cout << abs ( a - b ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [200005]’"
    },
    {
      "mod_line": [
        9,
        11,
        16
      ],
      "mod_code": [
        "string len_s = s . length ( ) ;",
        "if ( s [ i ] - 0 == 0 )",
        "cout << abs ( a - b ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [200005]’"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "string len_s = s . length ( ) ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        9,
        6,
        10
      ],
      "mod_code": [
        "string len_s = s . length ( ) ;",
        "s >> s ;",
        "for ( i = 0 ; i < len_s ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        9,
        6,
        10,
        16
      ],
      "mod_code": [
        "string len_s = s . length ( ) ;",
        "s >> s ;",
        "for ( i = 0 ; i < len_s ; i ++ )",
        "cout << abs ( a - b ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        9,
        6,
        16
      ],
      "mod_code": [
        "string len_s = s . length ( ) ;",
        "s >> s ;",
        "cout << abs ( a - b ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "string len_s = s . length ( ) ;",
        "for ( i = 0 ; i < len_s ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [200005]’"
    },
    {
      "mod_line": [
        9,
        10,
        16
      ],
      "mod_code": [
        "string len_s = s . length ( ) ;",
        "for ( i = 0 ; i < len_s ; i ++ )",
        "cout << abs ( a - b ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [200005]’"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "string len_s = s . length ( ) ;",
        "cout << abs ( a - b ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [200005]’"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "if ( s [ i ] - 0 == 0 )",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        11,
        6,
        9
      ],
      "mod_code": [
        "if ( s [ i ] - 0 == 0 )",
        "s >> s ;",
        "string len_s = s . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        11,
        6,
        9,
        10
      ],
      "mod_code": [
        "if ( s [ i ] - 0 == 0 )",
        "s >> s ;",
        "string len_s = s . size ( ) ;",
        "for ( i = 0 ; i < len_s ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        11,
        6,
        9,
        16
      ],
      "mod_code": [
        "if ( s [ i ] - 0 == 0 )",
        "s >> s ;",
        "string len_s = s . size ( ) ;",
        "cout << abs ( a - b ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        11,
        6,
        10
      ],
      "mod_code": [
        "if ( s [ i ] - 0 == 0 )",
        "s >> s ;",
        "for ( i = 0 ; i < len_s ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        11,
        6,
        10,
        16
      ],
      "mod_code": [
        "if ( s [ i ] - 0 == 0 )",
        "s >> s ;",
        "for ( i = 0 ; i < len_s ; i ++ )",
        "cout << abs ( a - b ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        11,
        6,
        16
      ],
      "mod_code": [
        "if ( s [ i ] - 0 == 0 )",
        "s >> s ;",
        "cout << abs ( a - b ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "if ( s [ i ] - 0 == 0 )",
        "string len_s = s . size ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [200005]’"
    },
    {
      "mod_line": [
        11,
        9,
        10
      ],
      "mod_code": [
        "if ( s [ i ] - 0 == 0 )",
        "string len_s = s . size ( ) ;",
        "for ( i = 0 ; i < len_s ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [200005]’"
    },
    {
      "mod_line": [
        11,
        9,
        10,
        16
      ],
      "mod_code": [
        "if ( s [ i ] - 0 == 0 )",
        "string len_s = s . size ( ) ;",
        "for ( i = 0 ; i < len_s ; i ++ )",
        "cout << abs ( a - b ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [200005]’"
    },
    {
      "mod_line": [
        11,
        9,
        16
      ],
      "mod_code": [
        "if ( s [ i ] - 0 == 0 )",
        "string len_s = s . size ( ) ;",
        "cout << abs ( a - b ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [200005]’"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "if ( s [ i ] - 0 == 0 )",
        "for ( i = 0 ; i < len_s ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        10,
        16
      ],
      "mod_code": [
        "if ( s [ i ] - 0 == 0 )",
        "for ( i = 0 ; i < len_s ; i ++ )",
        "cout << abs ( a - b ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "s >> s ;",
        "string len_s = s . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        6,
        9,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "string len_s = s . size ( ) ;",
        "for ( i = 0 ; i < len_s ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        16
      ],
      "mod_code": [
        "s >> s ;",
        "string len_s = s . size ( ) ;",
        "for ( i = 0 ; i < len_s ; i ++ )",
        "cout << abs ( a - b ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        6,
        9,
        16
      ],
      "mod_code": [
        "s >> s ;",
        "string len_s = s . size ( ) ;",
        "cout << abs ( a - b ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "for ( i = 0 ; i < len_s ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        6,
        10,
        16
      ],
      "mod_code": [
        "s >> s ;",
        "for ( i = 0 ; i < len_s ; i ++ )",
        "cout << abs ( a - b ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "s >> s ;",
        "cout << abs ( a - b ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘char [200005]’ and ‘char [200005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "string len_s = s . size ( ) ;",
        "for ( i = 0 ; i < len_s ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [200005]’"
    },
    {
      "mod_line": [
        9,
        10,
        16
      ],
      "mod_code": [
        "string len_s = s . size ( ) ;",
        "for ( i = 0 ; i < len_s ; i ++ )",
        "cout << abs ( a - b ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [200005]’"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "string len_s = s . size ( ) ;",
        "cout << abs ( a - b ) ;"
      ],
      "err_line": 9,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [200005]’"
    },
    {
      "mod_line": [
        10,
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < len_s ; i ++ )",
        "cout << abs ( a - b ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}