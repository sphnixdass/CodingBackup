{
  "meta": {
    "index": 114,
    "hitid": "3XAOZ9UYRZLT6NPV4LDRK3XU2XHQ1O",
    "workerid": "AIWEXPJAU66D9",
    "probid": "3A",
    "subid": "48760500"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integers called a and b",
      "code": "int a , b ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let c and d be characters",
      "code": "char c , d ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read c , a , d and b",
      "code": "cin >> c >> a >> d >> b ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print maximum of absolute values of int ( c ) - int ( d ) and ( a - b ) and ' \\ n '",
      "code": "cout << max ( abs ( int ( c ) - int ( d ) ) , abs ( a - b ) ) << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while c is not equal to d or a is not equal to b",
      "code": "while ( c != d or a != b )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if c < d and a is less than b",
      "code": "if ( c < d and a < b )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increase a and c",
      "code": "a ++ , c ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "print \" RU \\ n \"",
      "code": "cout << \" RU\\n \" ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else if c < d and a is greater than b",
      "code": "else if ( c < d and a > b )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "decrease c , increase a by one",
      "code": "c ++ , a -- ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "print \" RD \\ n \"",
      "code": "cout << \" RD\\n \" ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else if c > d and a is less than b",
      "code": "else if ( c > d and a < b )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "decrease c , increase a",
      "code": "c -- , a ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "print \" LU \\ n \"",
      "code": "cout << \" LU\\n \" ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else if c > d and a is greater than b",
      "code": "else if ( c > d and a > b )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "decrease c and a",
      "code": "c -- , a -- ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "print \" LD \\ n \"",
      "code": "cout << \" LD\\n \" ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else if c is equal to d",
      "code": "else if ( c == d )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if a is less than b",
      "code": "if ( a < b )",
      "indent": 3
    },
    {
      "line": 20,
      "text": "increase a",
      "code": "a ++ ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "print \" U \\ n \"",
      "code": "cout << \" U\\n \" ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 23,
      "text": "decrease a by one",
      "code": "a -- ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "print \" D \\ n \"",
      "code": "cout << \" D\\n \" ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 26,
      "text": "else if a is equal to b",
      "code": "else if ( a == b )",
      "indent": 2
    },
    {
      "line": 27,
      "text": "if c is less than d",
      "code": "if ( c < d )",
      "indent": 3
    },
    {
      "line": 28,
      "text": "increase c",
      "code": "c ++ ;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "print \" R \\ n \"",
      "code": "cout << \" R\\n \" ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 31,
      "text": "decrease c by one",
      "code": "c -- ;",
      "indent": 4
    },
    {
      "line": 32,
      "text": "print \" L \\ n \"",
      "code": "cout << \" L\\n \" ;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long int a , b ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(int, long int)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char a , d ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d ) - b ) << ' \\n ' ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "c -- , a ++ ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        10,
        11
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "c -- , a ++ ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        14
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "c -- , a ++ ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        21
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "c -- , a ++ ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        22
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "c -- , a ++ ;",
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        10,
        14
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "c -- , a ++ ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        10,
        14,
        21
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "c -- , a ++ ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        10,
        14,
        22
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "c -- , a ++ ;",
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        10,
        21
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "c -- , a ++ ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        10,
        21,
        22
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "c -- , a ++ ;",
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        10,
        22
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "c -- , a ++ ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        11,
        14
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        21
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        22
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        11,
        21
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        11,
        21,
        22
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        11,
        22
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        14,
        21
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        14,
        21,
        22
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        14,
        22
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        21
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        21,
        22
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        4,
        22
      ],
      "mod_code": [
        "cout << max ( abs ( abs ( c ) ) - int ( d - b ) ) << ' \\n ' ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        22
      ],
      "mod_code": [
        "c -- , a ++ ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        11,
        21,
        22
      ],
      "mod_code": [
        "c -- , a ++ ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        11,
        22
      ],
      "mod_code": [
        "c -- , a ++ ;",
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        14,
        21,
        22
      ],
      "mod_code": [
        "c -- , a ++ ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        14,
        22
      ],
      "mod_code": [
        "c -- , a ++ ;",
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        21,
        22
      ],
      "mod_code": [
        "c -- , a ++ ;",
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        22
      ],
      "mod_code": [
        "c -- , a ++ ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        14,
        21,
        22
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        14,
        22
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        21,
        22
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        22
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        21,
        22
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        22
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        21,
        22
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}