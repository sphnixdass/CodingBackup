{
  "meta": {
    "index": 2163,
    "hitid": "3RQVKZ7ZRKDQPQ2CRQ4ZPVQ4QFF270",
    "workerid": "AIWEXPJAU66D9",
    "probid": "484A",
    "subid": "47729340"
  },
  "lines": [
    {
      "line": 0,
      "text": "long long function fun with long long arguments l , r and count",
      "code": "long long fun ( long long l , long long r , long long count )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if l = r , return l",
      "code": "if ( l == r ) return l ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "change count to 1",
      "code": "count = 1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while count < = r , multiply count by 2",
      "code": "while ( count <= r ) { count *= 2 ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if r is equal to count - 1 , return r",
      "code": "if ( r == count - 1 ) return r ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "divide count by 2",
      "code": "count /= 2 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if count is greater than l , return count - 1",
      "code": "if ( count > l ) return count - 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "return fun ( l - count , r - count , 1 ) + count",
      "code": "return fun ( l - count , r - count , 1 ) + count ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 10,
      "text": "declare long long variables n , l and r",
      "code": "long long n , l , r ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "decrement n and loop further , while n is not 0",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "read input to l and r",
      "code": "cin >> l >> r ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print result of fun ( l , r , 1 ) and \" \\ n \"",
      "code": "cout << fun ( l , r , 1 ) << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "count to ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cin >> input >> r ;"
      ],
      "err_line": 13,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "while ( -- n )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        12,
        13
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "while ( -- n )",
        "cin >> input >> r ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        12,
        13,
        14
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "while ( -- n )",
        "cin >> input >> r ;",
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        12,
        13,
        2
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "while ( -- n )",
        "cin >> input >> r ;",
        "count to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        12,
        13,
        3
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "while ( -- n )",
        "cin >> input >> r ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        12,
        14
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "while ( -- n )",
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        12,
        14,
        2
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "while ( -- n )",
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;",
        "count to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        12,
        14,
        3
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "while ( -- n )",
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        12,
        2
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "while ( -- n )",
        "count to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        12,
        2,
        3
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "while ( -- n )",
        "count to ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        12,
        3
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "while ( -- n )",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "cin >> input >> r ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        13,
        14
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "cin >> input >> r ;",
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        13,
        14,
        2
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "cin >> input >> r ;",
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;",
        "count to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        13,
        14,
        3
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "cin >> input >> r ;",
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        13,
        2
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "cin >> input >> r ;",
        "count to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        13,
        2,
        3
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "cin >> input >> r ;",
        "count to ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        13,
        3
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "cin >> input >> r ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14,
        2
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;",
        "count to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14,
        2,
        3
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;",
        "count to ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14,
        3
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "count to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        2,
        3
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "count to ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "long long fun ( long long l , long long r , long long count ) ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "while ( -- n )",
        "cin >> input >> r ;"
      ],
      "err_line": 13,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13,
        14
      ],
      "mod_code": [
        "while ( -- n )",
        "cin >> input >> r ;",
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        2
      ],
      "mod_code": [
        "while ( -- n )",
        "cin >> input >> r ;",
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;",
        "count to ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        3
      ],
      "mod_code": [
        "while ( -- n )",
        "cin >> input >> r ;",
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 13,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13,
        2
      ],
      "mod_code": [
        "while ( -- n )",
        "cin >> input >> r ;",
        "count to ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        12,
        13,
        2,
        3
      ],
      "mod_code": [
        "while ( -- n )",
        "cin >> input >> r ;",
        "count to ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        12,
        13,
        3
      ],
      "mod_code": [
        "while ( -- n )",
        "cin >> input >> r ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 13,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        2
      ],
      "mod_code": [
        "while ( -- n )",
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;",
        "count to ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        12,
        14,
        2,
        3
      ],
      "mod_code": [
        "while ( -- n )",
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;",
        "count to ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "while ( -- n )",
        "count to ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        12,
        2,
        3
      ],
      "mod_code": [
        "while ( -- n )",
        "count to ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "cin >> input >> r ;",
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        2
      ],
      "mod_code": [
        "cin >> input >> r ;",
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;",
        "count to ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        13,
        14,
        2,
        3
      ],
      "mod_code": [
        "cin >> input >> r ;",
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;",
        "count to ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        13,
        14,
        3
      ],
      "mod_code": [
        "cin >> input >> r ;",
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 13,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "cin >> input >> r ;",
        "count to ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        13,
        2,
        3
      ],
      "mod_code": [
        "cin >> input >> r ;",
        "count to ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "cin >> input >> r ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 13,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;",
        "count to ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        14,
        2,
        3
      ],
      "mod_code": [
        "cout << fun ( l , 1 , 1 ) << \" \\n \" ;",
        "count to ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "count to ;",
        "while ( count <= r ) count += 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘to’"
    }
  ]
}