{
  "meta": {
    "index": 2102,
    "hitid": "338GLSUI435W9IYG3OHH45GPLA4FSG",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "114A",
    "subid": "49042235"
  },
  "lines": [
    {
      "line": 0,
      "text": "k , l = integers",
      "code": "int k , l ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "Read k , l",
      "code": "cin >> k >> l ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "a = integer with 1",
      "code": "int a = 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if l modulo k is not equal to 0",
      "code": "if ( l % k != 0 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print NO and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else if l is not equal to k",
      "code": "else if ( l != k )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while l is not equal to k",
      "code": "while ( l != k )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if l modulo k is not equal to 0",
      "code": "if ( l % k != 0 )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "print NO and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "Terminate the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "else do the following",
      "code": "else",
      "indent": 3
    },
    {
      "line": 12,
      "text": "set l to l / k",
      "code": "l /= k ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "increment a",
      "code": "a ++ ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if l is equal to k , print YES , a - 1 and a new line",
      "code": "if ( l == k ) { cout << \" YES \" << endl << a - 1 << endl ; }",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else if l is equal to k",
      "code": "else if ( l == k )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print YES , 0 and a new line",
      "code": "cout << \" YES \" << endl << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "else if ( l == n )"
      ],
      "err_line": 17,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        18,
        2,
        11
      ],
      "mod_code": [
        "if ( l == k ) cout << \" YES \" << endl ;",
        "cout << \" YES \" << endl ;",
        "cin >> l >> l ;",
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        18,
        11
      ],
      "mod_code": [
        "if ( l == k ) cout << \" YES \" << endl ;",
        "cout << \" YES \" << endl ;",
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        18,
        11,
        6
      ],
      "mod_code": [
        "if ( l == k ) cout << \" YES \" << endl ;",
        "cout << \" YES \" << endl ;",
        "else else",
        "else if ( l )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        2,
        18,
        11
      ],
      "mod_code": [
        "if ( l == k ) cout << \" YES \" << endl ;",
        "cin >> l >> l ;",
        "cout << \" YES\\n \" ;",
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        2,
        11
      ],
      "mod_code": [
        "if ( l == k ) cout << \" YES \" << endl ;",
        "cin >> l >> l ;",
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        2,
        11,
        6
      ],
      "mod_code": [
        "if ( l == k ) cout << \" YES \" << endl ;",
        "cin >> l >> l ;",
        "else else",
        "else if ( l )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        18,
        11
      ],
      "mod_code": [
        "if ( l == k ) cout << \" YES \" << endl ;",
        "cout << \" YES\\n \" ;",
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        18,
        11,
        6
      ],
      "mod_code": [
        "if ( l == k ) cout << \" YES \" << endl ;",
        "cout << \" YES\\n \" ;",
        "else else",
        "else if ( l )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        11
      ],
      "mod_code": [
        "if ( l == k ) cout << \" YES \" << endl ;",
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        11,
        6
      ],
      "mod_code": [
        "if ( l == k ) cout << \" YES \" << endl ;",
        "else else",
        "else if ( l )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        2,
        11
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cin >> l >> l ;",
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        2,
        11,
        6
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cin >> l >> l ;",
        "else else",
        "else if ( l )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        11
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        11,
        6
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "else else",
        "else if ( l )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        18,
        11
      ],
      "mod_code": [
        "cin >> l >> l ;",
        "cout << \" YES\\n \" ;",
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        18,
        11,
        6
      ],
      "mod_code": [
        "cin >> l >> l ;",
        "cout << \" YES\\n \" ;",
        "else else",
        "else if ( l )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "cin >> l >> l ;",
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        11,
        6
      ],
      "mod_code": [
        "cin >> l >> l ;",
        "else else",
        "else if ( l )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        11
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        11,
        6
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "else else",
        "else if ( l )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "else else",
        "else if ( l )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}