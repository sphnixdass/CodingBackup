{
  "meta": {
    "index": 922,
    "hitid": "3087LXLJ6MAW89E4UMYXUZA6R5EF0X",
    "workerid": "A1APYLD4DUK33J",
    "probid": "275A",
    "subid": "48397799"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers i , j , t1 , t2 , t3 with i = 0 , j = 0 , t1 = 0 , t2 = 0 , t3 = 0 , create 2d integer arrays a , b , with a size 3 by 3 , b size 3 by 3",
      "code": "int i = 0 , j = 0 , a [ 3 ] [ 3 ] , b [ 3 ] [ 3 ] , t1 = 0 , t2 = 0 , t3 = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for j = 0 to 3 exclusive",
      "code": "for ( j = 0 ; j < 3 ; j ++ )",
      "indent": 2
    },
    {
      "line": 4,
      "text": "read a [ i ] [ j ]",
      "code": "cin >> a [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 5,
      "text": "set b [ i ] [ j ] to 1",
      "code": "b [ i ] [ j ] = 1 ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for j = 0 to 3 exclusive",
      "code": "for ( j = 0 ; j < 3 ; j ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if a [ i ] [ j ] % 2 is 1",
      "code": "if ( a [ i ] [ j ] % 2 == 1 )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if i is 0 and j is 0",
      "code": "if ( i == 0 && j == 0 )",
      "indent": 4
    },
    {
      "line": 12,
      "text": "set b [ 0 ] [ 0 ] to 3 % ( b [ 0 ] [ 0 ] + 2 )",
      "code": "b [ 0 ] [ 0 ] = 3 % ( b [ 0 ] [ 0 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "set b [ 0 ] [ 1 ] to 3 % ( b [ 0 ] [ 1 ] + 2 )",
      "code": "b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "set b [ 1 ] [ 0 ] to 3 % ( b [ 1 ] [ 0 ] + 2 )",
      "code": "b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "else if i is 0 and j is 1",
      "code": "else if ( i == 0 && j == 1 )",
      "indent": 4
    },
    {
      "line": 16,
      "text": "set b [ 0 ] [ 1 ] to 3 % ( b [ 0 ] [ 1 ] + 2 )",
      "code": "b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 17,
      "text": "set b [ 0 ] [ 0 ] to 3 % ( b [ 0 ] [ 0 ] + 2 )",
      "code": "b [ 0 ] [ 0 ] = 3 % ( b [ 0 ] [ 0 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 18,
      "text": "set b [ 0 ] [ 2 ] to 3 % ( b [ 0 ] [ 2 ] + 2 )",
      "code": "b [ 0 ] [ 2 ] = 3 % ( b [ 0 ] [ 2 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 19,
      "text": "set b [ 1 ] [ 1 ] to 3 % ( b [ 1 ] [ 1 ] + 2 )",
      "code": "b [ 1 ] [ 1 ] = 3 % ( b [ 1 ] [ 1 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 20,
      "text": "else if i is 0 and j is 2",
      "code": "else if ( i == 0 && j == 2 )",
      "indent": 4
    },
    {
      "line": 21,
      "text": "set b [ 0 ] [ 1 ] to 3 % ( b [ 0 ] [ 1 ] + 2 )",
      "code": "b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 22,
      "text": "set b [ 0 ] [ 2 ] to 3 % ( b [ 0 ] [ 2 ] + 2 )",
      "code": "b [ 0 ] [ 2 ] = 3 % ( b [ 0 ] [ 2 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 23,
      "text": "set b [ 1 ] [ 2 ] to 3 % ( b [ 1 ] [ 2 ] + 2 )",
      "code": "b [ 1 ] [ 2 ] = 3 % ( b [ 1 ] [ 2 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 24,
      "text": "else if i is 1 and j is 0",
      "code": "else if ( i == 1 && j == 0 )",
      "indent": 4
    },
    {
      "line": 25,
      "text": "set b [ 0 ] [ 0 ] to 3 % ( b [ 0 ] [ 0 ] + 2 )",
      "code": "b [ 0 ] [ 0 ] = 3 % ( b [ 0 ] [ 0 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 26,
      "text": "set b [ 1 ] [ 0 ] to 3 % ( b [ 1 ] [ 0 ] + 2 )",
      "code": "b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 27,
      "text": "set b [ 1 ] [ 1 ] to 3 % ( b [ 1 ] [ 1 ] + 2 )",
      "code": "b [ 1 ] [ 1 ] = 3 % ( b [ 1 ] [ 1 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 28,
      "text": "set b [ 2 ] [ 0 ] to 3 % ( b [ 2 ] [ 0 ] + 2 )",
      "code": "b [ 2 ] [ 0 ] = 3 % ( b [ 2 ] [ 0 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 29,
      "text": "else if i is 1 and j is 1",
      "code": "else if ( i == 1 && j == 1 )",
      "indent": 4
    },
    {
      "line": 30,
      "text": "set b [ 0 ] [ 1 ] to 3 % ( b [ 0 ] [ 1 ] + 2 )",
      "code": "b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 31,
      "text": "set b [ 1 ] [ 1 ] to 3 % ( b [ 1 ] [ 1 ] + 2 )",
      "code": "b [ 1 ] [ 1 ] = 3 % ( b [ 1 ] [ 1 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 32,
      "text": "set b [ 2 ] [ 1 ] to 3 % ( b [ 2 ] [ 1 ] + 2 )",
      "code": "b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 33,
      "text": "set b [ 1 ] [ 0 ] to 3 % ( b [ 1 ] [ 0 ] + 2 )",
      "code": "b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 34,
      "text": "set b [ 1 ] [ 2 ] to 3 % ( b [ 1 ] [ 2 ] + 2 )",
      "code": "b [ 1 ] [ 2 ] = 3 % ( b [ 1 ] [ 2 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 35,
      "text": "else if i is 1 and j is 2",
      "code": "else if ( i == 1 && j == 2 )",
      "indent": 4
    },
    {
      "line": 36,
      "text": "set b [ 0 ] [ 2 ] to 3 % ( b [ 0 ] [ 2 ] + 2 )",
      "code": "b [ 0 ] [ 2 ] = 3 % ( b [ 0 ] [ 2 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 37,
      "text": "set b [ 1 ] [ 1 ] to 3 % ( b [ 1 ] [ 1 ] + 2 )",
      "code": "b [ 1 ] [ 1 ] = 3 % ( b [ 1 ] [ 1 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 38,
      "text": "set b [ 1 ] [ 2 ] to 3 % ( b [ 1 ] [ 2 ] + 2 )",
      "code": "b [ 1 ] [ 2 ] = 3 % ( b [ 1 ] [ 2 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 39,
      "text": "set b [ 2 ] [ 2 ] to 3 % ( b [ 2 ] [ 2 ] + 2 )",
      "code": "b [ 2 ] [ 2 ] = 3 % ( b [ 2 ] [ 2 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 40,
      "text": "else if i is 2 and j is 0",
      "code": "else if ( i == 2 && j == 0 )",
      "indent": 4
    },
    {
      "line": 41,
      "text": "set b [ 2 ] [ 0 ] to 3 % ( b [ 2 ] [ 0 ] + 2 )",
      "code": "b [ 2 ] [ 0 ] = 3 % ( b [ 2 ] [ 0 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 42,
      "text": "set b [ 1 ] [ 0 ] to 3 % ( b [ 1 ] [ 0 ] + 2 )",
      "code": "b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 43,
      "text": "set b [ 2 ] [ 1 ] to 3 % ( b [ 2 ] [ 1 ] + 2 )",
      "code": "b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 44,
      "text": "else if i is 2 and j is 1",
      "code": "else if ( i == 2 && j == 1 )",
      "indent": 4
    },
    {
      "line": 45,
      "text": "set b [ 2 ] [ 1 ] to 3 % ( b [ 2 ] [ 1 ] + 2 )",
      "code": "b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 46,
      "text": "set b [ 2 ] [ 0 ] to 3 % ( b [ 2 ] [ 0 ] + 2 )",
      "code": "b [ 2 ] [ 0 ] = 3 % ( b [ 2 ] [ 0 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 47,
      "text": "set b [ 2 ] [ 2 ] to 3 % ( b [ 2 ] [ 2 ] + 2 )",
      "code": "b [ 2 ] [ 2 ] = 3 % ( b [ 2 ] [ 2 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 48,
      "text": "set b [ 1 ] [ 1 ] to 3 % ( b [ 1 ] [ 1 ] + 2 )",
      "code": "b [ 1 ] [ 1 ] = 3 % ( b [ 1 ] [ 1 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 49,
      "text": "else if i is 2 and j is 2",
      "code": "else if ( i == 2 && j == 2 )",
      "indent": 4
    },
    {
      "line": 50,
      "text": "set b [ 2 ] [ 1 ] to 3 % ( b [ 2 ] [ 1 ] + 2 )",
      "code": "b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 51,
      "text": "set b [ 1 ] [ 2 ] to 3 % ( b [ 1 ] [ 2 ] + 2 )",
      "code": "b [ 1 ] [ 2 ] = 3 % ( b [ 1 ] [ 2 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 52,
      "text": "set b [ 2 ] [ 2 ] to 3 % ( b [ 2 ] [ 2 ] + 2 )",
      "code": "b [ 2 ] [ 2 ] = 3 % ( b [ 2 ] [ 2 ] + 2 ) ;",
      "indent": 5
    },
    {
      "line": 53,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 54,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 55,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 56,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 57,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 58,
      "text": "for j = 0 to 3 exclusive , print b [ i ] [ j ]",
      "code": "for ( j = 0 ; j < 3 ; j ++ ) { cout << b [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 59,
      "text": "print \" \\ n \"",
      "code": "cout << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 60,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 61,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 62,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        59
      ],
      "mod_code": [
        "<< \" \\n \" ;"
      ],
      "err_line": 59,
      "err_msg": "expected primary-expression before â€˜<<â€™ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int i , j , a [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int b [ 0 ] [ 0 ] = 3 % ( b [ 0 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 12,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 13,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 16,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "int b [ 0 ] [ 0 ] = 3 % ( b [ 0 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 17,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int b [ 0 ] [ 2 ] = 3 % ( b [ 0 ] [ 2 ] + 2 ) ;"
      ],
      "err_line": 18,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "int b [ 1 ] [ 1 ] = 3 % ( b [ 1 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 19,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 21,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "int b [ 0 ] [ 2 ] = 3 % ( b [ 0 ] [ 2 ] + 2 ) ;"
      ],
      "err_line": 22,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "int b [ 1 ] [ 2 ] = 3 % ( b [ 1 ] [ 2 ] + 2 ) ;"
      ],
      "err_line": 23,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "int b [ 0 ] [ 0 ] = 3 % ( b [ 0 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 25,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 26,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "int b [ 1 ] [ 1 ] = 3 % ( b [ 1 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 27,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "int b [ 2 ] [ 0 ] = 3 % ( b [ 2 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 28,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 30,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "int b [ 1 ] [ 1 ] = 3 % ( b [ 1 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 31,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 32,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 33,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "int b [ 1 ] [ 2 ] = 3 % ( b [ 1 ] [ 2 ] + 2 ) ;"
      ],
      "err_line": 34,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "int b [ 0 ] [ 2 ] = 3 % ( b [ 0 ] [ 2 ] + 2 ) ;"
      ],
      "err_line": 36,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "int b [ 1 ] [ 1 ] = 3 % ( b [ 1 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 37,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        38
      ],
      "mod_code": [
        "int b [ 1 ] [ 2 ] = 3 % ( b [ 1 ] [ 2 ] + 2 ) ;"
      ],
      "err_line": 38,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "int b [ 2 ] [ 2 ] = 3 % ( b [ 2 ] [ 2 ] + 2 ) ;"
      ],
      "err_line": 39,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "int b [ 2 ] [ 0 ] = 3 % ( b [ 2 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 41,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 42,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 43,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        45
      ],
      "mod_code": [
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 45,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        46
      ],
      "mod_code": [
        "int b [ 2 ] [ 0 ] = 3 % ( b [ 2 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 46,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        47
      ],
      "mod_code": [
        "int b [ 2 ] [ 2 ] = 3 % ( b [ 2 ] [ 2 ] + 2 ) ;"
      ],
      "err_line": 47,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        48
      ],
      "mod_code": [
        "int b [ 1 ] [ 1 ] = 3 % ( b [ 1 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 48,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        50
      ],
      "mod_code": [
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 50,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        51
      ],
      "mod_code": [
        "int b [ 1 ] [ 2 ] = 3 % ( b [ 1 ] [ 2 ] + 2 ) ;"
      ],
      "err_line": 51,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        52
      ],
      "mod_code": [
        "int b [ 2 ] [ 2 ] = 3 % ( b [ 2 ] [ 2 ] + 2 ) ;"
      ],
      "err_line": 52,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        1,
        59
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        59,
        43
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "<< \" \\n \" ;",
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        59,
        43,
        4
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "<< \" \\n \" ;",
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        59,
        43,
        14
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "<< \" \\n \" ;",
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        59,
        43,
        21
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "<< \" \\n \" ;",
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        59,
        4
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "<< \" \\n \" ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        59,
        4,
        14
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "<< \" \\n \" ;",
        "cout << a [ i ] [ j ] ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        59,
        4,
        21
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "<< \" \\n \" ;",
        "cout << a [ i ] [ j ] ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        59,
        14
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "<< \" \\n \" ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        59,
        14,
        21
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "<< \" \\n \" ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        59,
        21
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "<< \" \\n \" ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        43
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        43,
        4
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        43,
        4,
        14
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "cout << a [ i ] [ j ] ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        43,
        4,
        21
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "cout << a [ i ] [ j ] ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        43,
        14
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        43,
        14,
        21
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        43,
        21
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        4,
        14
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "cout << a [ i ] [ j ] ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        4,
        14,
        21
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "cout << a [ i ] [ j ] ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        4,
        21
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "cout << a [ i ] [ j ] ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        14,
        21
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        1,
        21
      ],
      "mod_code": [
        "int i , j , t1 [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] , b [ 3 ] ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of â€˜int b [3]â€™"
    },
    {
      "mod_line": [
        59,
        43
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 43,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        59,
        43,
        4
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 43,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        59,
        43,
        4,
        14
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "cout << a [ i ] [ j ] ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        59,
        43,
        4,
        21
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "cout << a [ i ] [ j ] ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 21,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        59,
        43,
        14
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        59,
        43,
        14,
        21
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        59,
        43,
        21
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 21,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        59,
        4
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 59,
      "err_msg": "expected primary-expression before â€˜<<â€™ token"
    },
    {
      "mod_line": [
        59,
        4,
        14
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "cout << a [ i ] [ j ] ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        59,
        4,
        14,
        21
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "cout << a [ i ] [ j ] ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        59,
        4,
        21
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "cout << a [ i ] [ j ] ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 21,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        59,
        14
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        59,
        14,
        21
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        59,
        21
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 21,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        43,
        4
      ],
      "mod_code": [
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "cout << a [ i ] [ j ] ;"
      ],
      "err_line": 43,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        43,
        4,
        14
      ],
      "mod_code": [
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "cout << a [ i ] [ j ] ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        43,
        4,
        14,
        21
      ],
      "mod_code": [
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "cout << a [ i ] [ j ] ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        43,
        4,
        21
      ],
      "mod_code": [
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "cout << a [ i ] [ j ] ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 21,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        43,
        14
      ],
      "mod_code": [
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        43,
        14,
        21
      ],
      "mod_code": [
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        43,
        21
      ],
      "mod_code": [
        "int b [ 2 ] [ 1 ] = 3 % ( b [ 2 ] [ 1 ] + 2 ) ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 21,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "cout << a [ i ] [ j ] ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        4,
        14,
        21
      ],
      "mod_code": [
        "cout << a [ i ] [ j ] ;",
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        4,
        21
      ],
      "mod_code": [
        "cout << a [ i ] [ j ] ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 21,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        14,
        21
      ],
      "mod_code": [
        "int b [ 1 ] [ 0 ] = 3 % ( b [ 1 ] [ 0 ] + 2 ) ;",
        "int b [ 0 ] [ 1 ] = 3 % ( b [ 0 ] [ 1 ] + 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    }
  ]
}