{
  "meta": {
    "index": 1471,
    "hitid": "3G57RS03HHZB2MOT3XP2RBC8YMO52H",
    "workerid": "AIWEXPJAU66D9",
    "probid": "79A",
    "subid": "39060115"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integers x and y",
      "code": "int x , y ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "min is a integer function with integer arguments a and b",
      "code": "int min ( int a , int b )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "if a is greater than b",
      "code": "if ( a > b ) return b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "return a",
      "code": "return a ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "function ciel that returns integer",
      "code": "int ciel ( )",
      "indent": 0
    },
    {
      "line": 6,
      "text": "if y is less than 2",
      "code": "if ( y < 2 ) return 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if x > = 2",
      "code": "if ( x >= 2 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "decrease x by 2",
      "code": "x -= 2 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "decrease y by 2",
      "code": "y -= 2 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "return 1",
      "code": "return 1 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else if x = 1",
      "code": "else if ( x == 1 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if y > = 12",
      "code": "if ( y >= 12 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "decrease y by 12",
      "code": "y -= 12 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "decrease x by 1",
      "code": "x -= 1 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "return 1",
      "code": "return 1 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if y > = 22",
      "code": "if ( y >= 22 )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "decrease y by 22",
      "code": "y -= 22 ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "return 1",
      "code": "return 1 ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 26,
      "text": "hanako is an integer function",
      "code": "int hanako ( )",
      "indent": 0
    },
    {
      "line": 27,
      "text": "if y > = 22",
      "code": "if ( y >= 22 )",
      "indent": 1
    },
    {
      "line": 28,
      "text": "decrease y by 22",
      "code": "y -= 22 ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "return 1",
      "code": "return 1 ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "else if y > = 12",
      "code": "else if ( y >= 12 )",
      "indent": 1
    },
    {
      "line": 31,
      "text": "if x > = 1",
      "code": "if ( x >= 1 )",
      "indent": 2
    },
    {
      "line": 32,
      "text": "decrease x by 1",
      "code": "x -= 1 ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "decrease y by 12",
      "code": "y -= 12 ;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "return 1",
      "code": "return 1 ;",
      "indent": 3
    },
    {
      "line": 35,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 37,
      "text": "else if y > = 2",
      "code": "else if ( y >= 2 )",
      "indent": 1
    },
    {
      "line": 38,
      "text": "if x > = 2",
      "code": "if ( x >= 2 )",
      "indent": 2
    },
    {
      "line": 39,
      "text": "decrease x by 2",
      "code": "x -= 2 ;",
      "indent": 3
    },
    {
      "line": 40,
      "text": "decrease y by 2",
      "code": "y -= 2 ;",
      "indent": 3
    },
    {
      "line": 41,
      "text": "return 1",
      "code": "return 1 ;",
      "indent": 3
    },
    {
      "line": 42,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 44,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 47,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 48,
      "text": "read x and y",
      "code": "cin >> x >> y ;",
      "indent": 1
    },
    {
      "line": 49,
      "text": "integer a = min of x / 2 and y / 24",
      "code": "int a = min ( x / 2 , y / 24 ) ;",
      "indent": 1
    },
    {
      "line": 50,
      "text": "decrease x by a * 2",
      "code": "x -= a * 2 ;",
      "indent": 1
    },
    {
      "line": 51,
      "text": "decrease y by a * 24",
      "code": "y -= a * 24 ;",
      "indent": 1
    },
    {
      "line": 52,
      "text": "infinite loop",
      "code": "while ( 1 )",
      "indent": 1
    },
    {
      "line": 53,
      "text": "if ciel ( ) is 0",
      "code": "if ( ! ciel ( ) )",
      "indent": 2
    },
    {
      "line": 54,
      "text": "print \" Hanako \" and a new line",
      "code": "cout << \" Hanako \" << endl ;",
      "indent": 3
    },
    {
      "line": 55,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 56,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 57,
      "text": "if hanako ( ) is zero",
      "code": "if ( ! hanako ( ) )",
      "indent": 2
    },
    {
      "line": 58,
      "text": "print \" Ciel \" and a new line",
      "code": "cout << \" Ciel \" << endl ;",
      "indent": 3
    },
    {
      "line": 59,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 60,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 61,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 62,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 63,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int min ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int ciel ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "int hanako ( ) ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "if ( x >= l )"
      ],
      "err_line": 31,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 35,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 42,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        44
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 44,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        48
      ],
      "mod_code": [
        "cin >> x >> k ;"
      ],
      "err_line": 48,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        44
      ],
      "mod_code": [
        "if ( a > b )",
        "if ( y < 2 )",
        "else else"
      ],
      "err_line": 44,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        6,
        44,
        18
      ],
      "mod_code": [
        "if ( a > b )",
        "if ( y < 2 )",
        "else else",
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        6,
        44,
        5
      ],
      "mod_code": [
        "if ( a > b )",
        "if ( y < 2 )",
        "else else",
        "int ciel ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        6,
        18
      ],
      "mod_code": [
        "if ( a > b )",
        "if ( y < 2 )",
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        6,
        18,
        5
      ],
      "mod_code": [
        "if ( a > b )",
        "if ( y < 2 )",
        "else else",
        "int ciel ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        6,
        5
      ],
      "mod_code": [
        "if ( a > b )",
        "if ( y < 2 )",
        "int ciel ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        44
      ],
      "mod_code": [
        "if ( a > b )",
        "else else"
      ],
      "err_line": 44,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        44,
        18
      ],
      "mod_code": [
        "if ( a > b )",
        "else else",
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        44,
        18,
        5
      ],
      "mod_code": [
        "if ( a > b )",
        "else else",
        "else else",
        "int ciel ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        44,
        5
      ],
      "mod_code": [
        "if ( a > b )",
        "else else",
        "int ciel ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        18
      ],
      "mod_code": [
        "if ( a > b )",
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        18,
        5
      ],
      "mod_code": [
        "if ( a > b )",
        "else else",
        "int ciel ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "if ( a > b )",
        "int ciel ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        44
      ],
      "mod_code": [
        "if ( y < 2 )",
        "else else"
      ],
      "err_line": 44,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        44,
        18
      ],
      "mod_code": [
        "if ( y < 2 )",
        "else else",
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        44,
        18,
        5
      ],
      "mod_code": [
        "if ( y < 2 )",
        "else else",
        "else else",
        "int ciel ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        44,
        18,
        2
      ],
      "mod_code": [
        "if ( y < 2 )",
        "else else",
        "else else",
        "if ( a >= b )"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        44,
        5
      ],
      "mod_code": [
        "if ( y < 2 )",
        "else else",
        "int ciel ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        44,
        5,
        2
      ],
      "mod_code": [
        "if ( y < 2 )",
        "else else",
        "int ciel ( ) ;",
        "if ( a >= b )"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        44,
        2
      ],
      "mod_code": [
        "if ( y < 2 )",
        "else else",
        "if ( a >= b )"
      ],
      "err_line": 44,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        18
      ],
      "mod_code": [
        "if ( y < 2 )",
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        18,
        5
      ],
      "mod_code": [
        "if ( y < 2 )",
        "else else",
        "int ciel ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        18,
        5,
        2
      ],
      "mod_code": [
        "if ( y < 2 )",
        "else else",
        "int ciel ( ) ;",
        "if ( a >= b )"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        18,
        2
      ],
      "mod_code": [
        "if ( y < 2 )",
        "else else",
        "if ( a >= b )"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "if ( y < 2 )",
        "int ciel ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        5,
        2
      ],
      "mod_code": [
        "if ( y < 2 )",
        "int ciel ( ) ;",
        "if ( a >= b )"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        44,
        18
      ],
      "mod_code": [
        "else else",
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        44,
        18,
        5
      ],
      "mod_code": [
        "else else",
        "else else",
        "int ciel ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        44,
        18,
        5,
        2
      ],
      "mod_code": [
        "else else",
        "else else",
        "int ciel ( ) ;",
        "if ( a >= b )"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        44,
        18,
        2
      ],
      "mod_code": [
        "else else",
        "else else",
        "if ( a >= b )"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        44,
        5
      ],
      "mod_code": [
        "else else",
        "int ciel ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        44,
        5,
        2
      ],
      "mod_code": [
        "else else",
        "int ciel ( ) ;",
        "if ( a >= b )"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        44,
        2
      ],
      "mod_code": [
        "else else",
        "if ( a >= b )"
      ],
      "err_line": 44,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        5
      ],
      "mod_code": [
        "else else",
        "int ciel ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        5,
        2
      ],
      "mod_code": [
        "else else",
        "int ciel ( ) ;",
        "if ( a >= b )"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        2
      ],
      "mod_code": [
        "else else",
        "if ( a >= b )"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "int ciel ( ) ;",
        "if ( a >= b )"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}