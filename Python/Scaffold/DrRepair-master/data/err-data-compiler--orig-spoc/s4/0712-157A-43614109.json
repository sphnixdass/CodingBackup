{
  "meta": {
    "index": 712,
    "hitid": "3FK4G712NXU5DN3298HGB4Z4BNSSSH",
    "workerid": "AIWEXPJAU66D9",
    "probid": "157A",
    "subid": "43614109"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integers n , s and ans ; create an arrays of integers r and c with 50 elements",
      "code": "int n , s , r [ 50 ] , c [ 50 ] , ans ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "set first sizeof ( r ) bytes at the pointer r to 0",
      "code": "memset ( r , 0 , sizeof ( r ) ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set values of first sizeof ( c ) bytes at the pointer c to 0",
      "code": "memset ( c , 0 , sizeof ( c ) ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read standard input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "start for loop from j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read from the input to s",
      "code": "cin >> s ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "change c [ j ] to the sum of c [ j ] and s",
      "code": "c [ j ] += s ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "change r [ i ] to the sum of r [ i ] and s",
      "code": "r [ i ] += s ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "assign the new value = 0 to ans",
      "code": "ans = 0 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "in a for loop , change i from 0 to n exclusive incrementing i",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for j from 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if c [ j ] is greater than r [ i ] , increment ans by one",
      "code": "if ( c [ j ] > r [ i ] ) ans ++ ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , s , r , r [ 50 ] , c [ 50 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int r [50]’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "memset ( r + 0 , sizeof ( r ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "memset ( c = 0 , sizeof ( c ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [50]’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "c [ j ] = c * c ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int [50]’ and ‘int [50]’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "r [ i ] = r * r ;"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int [50]’ and ‘int [50]’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "c [ j ] = c [ j ] , s ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8,
        9
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "c [ j ] = c [ j ] , s ;",
        "r [ i ] = r [ i ] , s ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8,
        9,
        18
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "c [ j ] = c [ j ] , s ;",
        "r [ i ] = r [ i ] , s ;",
        "cout << ans ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8,
        9,
        13
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "c [ j ] = c [ j ] , s ;",
        "r [ i ] = r [ i ] , s ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8,
        18
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "c [ j ] = c [ j ] , s ;",
        "cout << ans ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8,
        18,
        9
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "c [ j ] = c [ j ] , s ;",
        "cout << ans ;",
        "r [ i ] = r * r ;"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int [50]’ and ‘int [50]’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        0,
        8,
        18,
        13
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "c [ j ] = c [ j ] , s ;",
        "cout << ans ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8,
        9
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "c [ j ] = c [ j ] , s ;",
        "r [ i ] = r * r ;"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int [50]’ and ‘int [50]’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        0,
        8,
        9,
        13
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "c [ j ] = c [ j ] , s ;",
        "r [ i ] = r * r ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int [50]’ and ‘int [50]’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        0,
        8,
        13
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "c [ j ] = c [ j ] , s ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "r [ i ] = r [ i ] , s ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        18
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "r [ i ] = r [ i ] , s ;",
        "cout << ans ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        18,
        13
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "r [ i ] = r [ i ] , s ;",
        "cout << ans ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        13
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "r [ i ] = r [ i ] , s ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        18
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "cout << ans ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        18,
        9
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "cout << ans ;",
        "r [ i ] = r * r ;"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int [50]’ and ‘int [50]’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        0,
        18,
        9,
        13
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "cout << ans ;",
        "r [ i ] = r * r ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int [50]’ and ‘int [50]’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        0,
        18,
        13
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "cout << ans ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "r [ i ] = r * r ;"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int [50]’ and ‘int [50]’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        0,
        9,
        13
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "r [ i ] = r * r ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int [50]’ and ‘int [50]’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "int n , s , r [ 50 ] , c [ 50 ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        18,
        13
      ],
      "mod_code": [
        "c [ j ] = c [ j ] , s ;",
        "r [ i ] = r [ i ] , s ;",
        "cout << ans ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        9,
        13
      ],
      "mod_code": [
        "c [ j ] = c [ j ] , s ;",
        "r [ i ] = r [ i ] , s ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        18,
        9
      ],
      "mod_code": [
        "c [ j ] = c [ j ] , s ;",
        "cout << ans ;",
        "r [ i ] = r * r ;"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int [50]’ and ‘int [50]’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        8,
        18,
        9,
        13
      ],
      "mod_code": [
        "c [ j ] = c [ j ] , s ;",
        "cout << ans ;",
        "r [ i ] = r * r ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int [50]’ and ‘int [50]’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        8,
        18,
        13
      ],
      "mod_code": [
        "c [ j ] = c [ j ] , s ;",
        "cout << ans ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "c [ j ] = c [ j ] , s ;",
        "r [ i ] = r * r ;"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int [50]’ and ‘int [50]’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        8,
        9,
        13
      ],
      "mod_code": [
        "c [ j ] = c [ j ] , s ;",
        "r [ i ] = r * r ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int [50]’ and ‘int [50]’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "c [ j ] = c [ j ] , s ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        18,
        13
      ],
      "mod_code": [
        "r [ i ] = r [ i ] , s ;",
        "cout << ans ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "r [ i ] = r [ i ] , s ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        9
      ],
      "mod_code": [
        "cout << ans ;",
        "r [ i ] = r * r ;"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int [50]’ and ‘int [50]’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        18,
        9,
        13
      ],
      "mod_code": [
        "cout << ans ;",
        "r [ i ] = r * r ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int [50]’ and ‘int [50]’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        18,
        13
      ],
      "mod_code": [
        "cout << ans ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "r [ i ] = r * r ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int [50]’ and ‘int [50]’ to binary ‘operator*’"
    }
  ]
}