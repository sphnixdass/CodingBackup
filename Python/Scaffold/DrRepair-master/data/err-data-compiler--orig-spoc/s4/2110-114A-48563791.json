{
  "meta": {
    "index": 2110,
    "hitid": "3TZ0XG8CBUE5POSUM4BKDIUD6I289H",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "114A",
    "subid": "48563791"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long long n and k",
      "code": "long long n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set count to 0",
      "code": "long long count = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while k mod n = 0 and n is different from 1",
      "code": "while ( k % n == 0 && n != 1 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set k = k / n",
      "code": "k = k / n ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if k is greater than 1",
      "code": "if ( k > 1 )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print YES and a newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print count - 1",
      "code": "cout << count - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "count = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "count = 0 ;",
        "if ( k >= 1 )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        8,
        10
      ],
      "mod_code": [
        "count = 0 ;",
        "if ( k >= 1 )",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        8,
        10,
        2
      ],
      "mod_code": [
        "count = 0 ;",
        "if ( k >= 1 )",
        "else else",
        "cin >> n , k ;"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        8,
        10,
        4
      ],
      "mod_code": [
        "count = 0 ;",
        "if ( k >= 1 )",
        "else else",
        "while ( k % n != 0 && n != 1 )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        8,
        2
      ],
      "mod_code": [
        "count = 0 ;",
        "if ( k >= 1 )",
        "cin >> n , k ;"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        8,
        2,
        4
      ],
      "mod_code": [
        "count = 0 ;",
        "if ( k >= 1 )",
        "cin >> n , k ;",
        "while ( k % n != 0 && n != 1 )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        8,
        4
      ],
      "mod_code": [
        "count = 0 ;",
        "if ( k >= 1 )",
        "while ( k % n != 0 && n != 1 )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "count = 0 ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        10,
        2
      ],
      "mod_code": [
        "count = 0 ;",
        "else else",
        "cin >> n , k ;"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        10,
        2,
        4
      ],
      "mod_code": [
        "count = 0 ;",
        "else else",
        "cin >> n , k ;",
        "while ( k % n != 0 && n != 1 )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        10,
        4
      ],
      "mod_code": [
        "count = 0 ;",
        "else else",
        "while ( k % n != 0 && n != 1 )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "count = 0 ;",
        "cin >> n , k ;"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        2,
        4
      ],
      "mod_code": [
        "count = 0 ;",
        "cin >> n , k ;",
        "while ( k % n != 0 && n != 1 )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "count = 0 ;",
        "while ( k % n != 0 && n != 1 )"
      ],
      "err_line": 3,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "if ( k >= 1 )",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        10,
        2
      ],
      "mod_code": [
        "if ( k >= 1 )",
        "else else",
        "cin >> n , k ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        10,
        2,
        4
      ],
      "mod_code": [
        "if ( k >= 1 )",
        "else else",
        "cin >> n , k ;",
        "while ( k % n != 0 && n != 1 )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        10,
        4
      ],
      "mod_code": [
        "if ( k >= 1 )",
        "else else",
        "while ( k % n != 0 && n != 1 )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "else else",
        "cin >> n , k ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        2,
        4
      ],
      "mod_code": [
        "else else",
        "cin >> n , k ;",
        "while ( k % n != 0 && n != 1 )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "else else",
        "while ( k % n != 0 && n != 1 )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}