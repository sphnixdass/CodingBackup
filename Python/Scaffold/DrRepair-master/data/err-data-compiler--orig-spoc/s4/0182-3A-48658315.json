{
  "meta": {
    "index": 182,
    "hitid": "3AQN9REUTFAW7KWTBOEGYR15Q31YDP",
    "workerid": "AIWEXPJAU66D9",
    "probid": "3A",
    "subid": "48658315"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s1 and s2 = strings",
      "code": "string s1 , s2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s1 and s2",
      "code": "cin >> s1 >> s2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "integers diag = s2 [ 0 ] - s1 [ 0 ] and diag2 = s2 [ 1 ] - s1 [ 1 ]",
      "code": "int diag = s2 [ 0 ] - s1 [ 0 ] , diag2 = s2 [ 1 ] - s1 [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "ans = vector of strings",
      "code": "vector < string > ans ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while diag > 0 and diag2 is less than 0",
      "code": "while ( diag > 0 && diag2 < 0 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "decrease diag",
      "code": "diag -- ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increase diag2",
      "code": "diag2 ++ ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "push \" RD \\ n \" into ans",
      "code": "ans . push_back ( \" RD\\n \" ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "while diag > 0 & & diag2 is greater than 0",
      "code": "while ( diag > 0 && diag2 > 0 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "decrement diag",
      "code": "diag -- ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "decrease diag2",
      "code": "diag2 -- ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "push \" RU \\ n \" into ans",
      "code": "ans . push_back ( \" RU\\n \" ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "while diag2 < 0 and diag is less than 0",
      "code": "while ( diag2 < 0 && diag < 0 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "increment diag",
      "code": "diag ++ ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increase diag2 by one",
      "code": "diag2 ++ ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "push \" LD \\ n \" into ans",
      "code": "ans . push_back ( \" LD\\n \" ) ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "while diag < 0 and diag2 is greater than 0",
      "code": "while ( diag < 0 && diag2 > 0 )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "increase diag",
      "code": "diag ++ ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "decrease diag2",
      "code": "diag2 -- ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "push \" LU \\ n \" into ans",
      "code": "ans . push_back ( \" LU\\n \" ) ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "while diag2 is less than 0",
      "code": "while ( diag2 < 0 )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "increase diag2 by one",
      "code": "diag2 ++ ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "push \" D \\ n \" into ans",
      "code": "ans . push_back ( \" D\\n \" ) ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "while diag2 is greater than 0",
      "code": "while ( diag2 > 0 )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "decrement diag2",
      "code": "diag2 -- ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "push \" U \\ n \" into ans",
      "code": "ans . push_back ( \" U\\n \" ) ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 33,
      "text": "while diag is greater than 0",
      "code": "while ( diag > 0 )",
      "indent": 1
    },
    {
      "line": 34,
      "text": "decrease diag",
      "code": "diag -- ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "push \" R \\ n \" into ans",
      "code": "ans . push_back ( \" R\\n \" ) ;",
      "indent": 2
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 37,
      "text": "while diag is less than 0",
      "code": "while ( diag < 0 )",
      "indent": 1
    },
    {
      "line": 38,
      "text": "increment diag",
      "code": "diag ++ ;",
      "indent": 2
    },
    {
      "line": 39,
      "text": "push \" L \\ n \" into ans",
      "code": "ans . push_back ( \" L\\n \" ) ;",
      "indent": 2
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 41,
      "text": "print length of ans and \" \\ n \"",
      "code": "cout << ans . size ( ) << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 42,
      "text": "print all elements of ans",
      "code": "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;",
      "indent": 1
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "ans += \" ccw\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s1 >> s1 >> s2 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int diag = s2 [ 0 ] - s1 [ 0 ] - s1 [ 1 ] - s1 [ 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘diag2’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "pair < string , string > ans ;"
      ],
      "err_line": 8,
      "err_msg": "‘struct std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "ans . push ( \" \\n \" ) ;"
      ],
      "err_line": 27,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘push’"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "ans . push ( \" R\\n \" ) ;"
      ],
      "err_line": 35,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘push’"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "cout << ans . length ( ) << \" \\n \" ;"
      ],
      "err_line": 41,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘length’"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "ans . push_back ( \" \\n \" ) ;",
        "ans += \" ccw\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        8,
        13,
        23
      ],
      "mod_code": [
        "ans . push_back ( \" \\n \" ) ;",
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" \\n \" ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        8,
        13,
        23,
        31
      ],
      "mod_code": [
        "ans . push_back ( \" \\n \" ) ;",
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" \\n \" ) ;",
        "ans . push_back ( \" R\\n \" ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        8,
        13,
        23,
        39
      ],
      "mod_code": [
        "ans . push_back ( \" \\n \" ) ;",
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" \\n \" ) ;",
        "ans . push_back ( \" \\n \" ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        8,
        13,
        23,
        42
      ],
      "mod_code": [
        "ans . push_back ( \" \\n \" ) ;",
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" \\n \" ) ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) { cout << ans [ i ] << endl ; }"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        8,
        13,
        31
      ],
      "mod_code": [
        "ans . push_back ( \" \\n \" ) ;",
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" R\\n \" ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        8,
        13,
        31,
        39
      ],
      "mod_code": [
        "ans . push_back ( \" \\n \" ) ;",
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" R\\n \" ) ;",
        "ans . push_back ( \" \\n \" ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        8,
        13,
        31,
        42
      ],
      "mod_code": [
        "ans . push_back ( \" \\n \" ) ;",
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" R\\n \" ) ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) { cout << ans [ i ] << endl ; }"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        8,
        13,
        39
      ],
      "mod_code": [
        "ans . push_back ( \" \\n \" ) ;",
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" \\n \" ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        8,
        13,
        39,
        42
      ],
      "mod_code": [
        "ans . push_back ( \" \\n \" ) ;",
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" \\n \" ) ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) { cout << ans [ i ] << endl ; }"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        8,
        13,
        42
      ],
      "mod_code": [
        "ans . push_back ( \" \\n \" ) ;",
        "ans += \" ccw\\n \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) { cout << ans [ i ] << endl ; }"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        13,
        23
      ],
      "mod_code": [
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" \\n \" ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        13,
        23,
        31
      ],
      "mod_code": [
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" \\n \" ) ;",
        "ans . push_back ( \" R\\n \" ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        13,
        23,
        31,
        39
      ],
      "mod_code": [
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" \\n \" ) ;",
        "ans . push_back ( \" R\\n \" ) ;",
        "ans . push_back ( \" \\n \" ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        13,
        23,
        31,
        42
      ],
      "mod_code": [
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" \\n \" ) ;",
        "ans . push_back ( \" R\\n \" ) ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) { cout << ans [ i ] << endl ; }"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        13,
        23,
        39
      ],
      "mod_code": [
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" \\n \" ) ;",
        "ans . push_back ( \" \\n \" ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        13,
        23,
        39,
        42
      ],
      "mod_code": [
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" \\n \" ) ;",
        "ans . push_back ( \" \\n \" ) ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) { cout << ans [ i ] << endl ; }"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        13,
        23,
        42
      ],
      "mod_code": [
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" \\n \" ) ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) { cout << ans [ i ] << endl ; }"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        13,
        31
      ],
      "mod_code": [
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" R\\n \" ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        13,
        31,
        39
      ],
      "mod_code": [
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" R\\n \" ) ;",
        "ans . push_back ( \" \\n \" ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        13,
        31,
        39,
        42
      ],
      "mod_code": [
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" R\\n \" ) ;",
        "ans . push_back ( \" \\n \" ) ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) { cout << ans [ i ] << endl ; }"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        13,
        31,
        42
      ],
      "mod_code": [
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" R\\n \" ) ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) { cout << ans [ i ] << endl ; }"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        13,
        39
      ],
      "mod_code": [
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" \\n \" ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        13,
        39,
        42
      ],
      "mod_code": [
        "ans += \" ccw\\n \" ;",
        "ans . push_back ( \" \\n \" ) ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) { cout << ans [ i ] << endl ; }"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    },
    {
      "mod_line": [
        13,
        42
      ],
      "mod_code": [
        "ans += \" ccw\\n \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) { cout << ans [ i ] << endl ; }"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [5]’)"
    }
  ]
}