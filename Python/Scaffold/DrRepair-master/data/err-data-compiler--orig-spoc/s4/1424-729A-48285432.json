{
  "meta": {
    "index": 1424,
    "hitid": "3BCRDCM0ODO226SXXM5BJDC2BHO6KN",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "729A",
    "subid": "48285432"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "s and res = string",
      "code": "string s , res ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , s",
      "code": "cin >> n >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "cek = 0",
      "code": "int cek = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "while s [ i ] is ' o ' and s [ i + 1 ] is ' g ' ans s [ i + 2 ] is ' o '",
      "code": "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' && s [ i + 2 ] == ' o ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "add 2 to i",
      "code": "i += 2 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "cek = 1",
      "code": "cek = 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if cek",
      "code": "if ( cek )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "append ' * ' to the end of res",
      "code": "res . push_back ( ' * ' ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "append ' * ' to the end of res",
      "code": "res . push_back ( ' * ' ) ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "append ' * ' to the end of res",
      "code": "res . push_back ( ' * ' ) ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "continue",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "append s [ i ] to the end of res",
      "code": "res . push_back ( s [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print res",
      "code": "cout << res << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cek = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘cek’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char s , res ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "cek = 0 ;",
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;"
      ],
      "err_line": 5,
      "err_msg": "‘cek’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "cek = 0 ;",
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "cin >> n , s ;"
      ],
      "err_line": 5,
      "err_msg": "‘cek’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        3,
        10
      ],
      "mod_code": [
        "cek = 0 ;",
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "cin >> n , s ;",
        "if ( ! cek )"
      ],
      "err_line": 5,
      "err_msg": "‘cek’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        3,
        4
      ],
      "mod_code": [
        "cek = 0 ;",
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "cin >> n , s ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        3,
        2
      ],
      "mod_code": [
        "cek = 0 ;",
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "cin >> n , s ;",
        "char s , res ;"
      ],
      "err_line": 5,
      "err_msg": "‘cek’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        10
      ],
      "mod_code": [
        "cek = 0 ;",
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "if ( ! cek )"
      ],
      "err_line": 5,
      "err_msg": "‘cek’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        4
      ],
      "mod_code": [
        "cek = 0 ;",
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "if ( ! cek )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        2
      ],
      "mod_code": [
        "cek = 0 ;",
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "if ( ! cek )",
        "char s , res ;"
      ],
      "err_line": 5,
      "err_msg": "‘cek’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        4
      ],
      "mod_code": [
        "cek = 0 ;",
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        4,
        2
      ],
      "mod_code": [
        "cek = 0 ;",
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char s , res ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        2
      ],
      "mod_code": [
        "cek = 0 ;",
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "char s , res ;"
      ],
      "err_line": 5,
      "err_msg": "‘cek’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "cek = 0 ;",
        "cin >> n , s ;"
      ],
      "err_line": 5,
      "err_msg": "‘cek’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        10
      ],
      "mod_code": [
        "cek = 0 ;",
        "cin >> n , s ;",
        "if ( ! cek )"
      ],
      "err_line": 5,
      "err_msg": "‘cek’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        10,
        4
      ],
      "mod_code": [
        "cek = 0 ;",
        "cin >> n , s ;",
        "if ( ! cek )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        10,
        2
      ],
      "mod_code": [
        "cek = 0 ;",
        "cin >> n , s ;",
        "if ( ! cek )",
        "char s , res ;"
      ],
      "err_line": 5,
      "err_msg": "‘cek’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        4
      ],
      "mod_code": [
        "cek = 0 ;",
        "cin >> n , s ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        4,
        2
      ],
      "mod_code": [
        "cek = 0 ;",
        "cin >> n , s ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char s , res ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        2
      ],
      "mod_code": [
        "cek = 0 ;",
        "cin >> n , s ;",
        "char s , res ;"
      ],
      "err_line": 5,
      "err_msg": "‘cek’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "cek = 0 ;",
        "if ( ! cek )"
      ],
      "err_line": 5,
      "err_msg": "‘cek’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        4
      ],
      "mod_code": [
        "cek = 0 ;",
        "if ( ! cek )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        4,
        2
      ],
      "mod_code": [
        "cek = 0 ;",
        "if ( ! cek )",
        "for ( i = 0 ; i < n ; i ++ )",
        "char s , res ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        2
      ],
      "mod_code": [
        "cek = 0 ;",
        "if ( ! cek )",
        "char s , res ;"
      ],
      "err_line": 5,
      "err_msg": "‘cek’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "cek = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        2
      ],
      "mod_code": [
        "cek = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char s , res ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "cek = 0 ;",
        "char s , res ;"
      ],
      "err_line": 5,
      "err_msg": "‘cek’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        10,
        4
      ],
      "mod_code": [
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "cin >> n , s ;",
        "if ( ! cek )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        10,
        2
      ],
      "mod_code": [
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "cin >> n , s ;",
        "if ( ! cek )",
        "char s , res ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        3,
        4
      ],
      "mod_code": [
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "cin >> n , s ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        4,
        2
      ],
      "mod_code": [
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "cin >> n , s ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char s , res ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        2
      ],
      "mod_code": [
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "cin >> n , s ;",
        "char s , res ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        10,
        4
      ],
      "mod_code": [
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "if ( ! cek )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        4,
        2
      ],
      "mod_code": [
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "if ( ! cek )",
        "for ( i = 0 ; i < n ; i ++ )",
        "char s , res ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        2
      ],
      "mod_code": [
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "if ( ! cek )",
        "char s , res ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        2
      ],
      "mod_code": [
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char s , res ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "while ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' ) s [ i + 2 ] = ' o ' ;",
        "char s , res ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        10,
        4
      ],
      "mod_code": [
        "cin >> n , s ;",
        "if ( ! cek )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        4,
        2
      ],
      "mod_code": [
        "cin >> n , s ;",
        "if ( ! cek )",
        "for ( i = 0 ; i < n ; i ++ )",
        "char s , res ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        2
      ],
      "mod_code": [
        "cin >> n , s ;",
        "if ( ! cek )",
        "char s , res ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "cin >> n , s ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "cin >> n , s ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char s , res ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "cin >> n , s ;",
        "char s , res ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "if ( ! cek )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        2
      ],
      "mod_code": [
        "if ( ! cek )",
        "for ( i = 0 ; i < n ; i ++ )",
        "char s , res ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "if ( ! cek )",
        "char s , res ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "char s , res ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}