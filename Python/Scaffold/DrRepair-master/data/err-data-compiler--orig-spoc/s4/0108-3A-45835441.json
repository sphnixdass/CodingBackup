{
  "meta": {
    "index": 108,
    "hitid": "3N2YPY1GI6SKVWFO282GXAFW8Y0VE6",
    "workerid": "AIWEXPJAU66D9",
    "probid": "3A",
    "subid": "45835441"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare string variable inp",
      "code": "string inp ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read inp",
      "code": "cin >> inp ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "integers x1 = inp [ 0 ] - ' a ' and y1 = inp [ 1 ] - ' 0 ' ;",
      "code": "int x1 = inp [ 0 ] - ' a ' , y1 = inp [ 1 ] - ' 0 ' ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read inp",
      "code": "cin >> inp ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare integers x2 = inp [ 0 ] - ' a ' and y2 = inp [ 1 ] - ' 0 '",
      "code": "int x2 = inp [ 0 ] - ' a ' , y2 = inp [ 1 ] - ' 0 ' ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create integer k with value 0",
      "code": "int k = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "declare string variable ans",
      "code": "string ans ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while x1 ! = x2 or y1 ! = y2",
      "code": "while ( x1 != x2 || y1 != y2 )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if x1 is less than x2",
      "code": "if ( x1 < x2 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment x1",
      "code": "x1 ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "append ' R ' to the ans",
      "code": "ans += ' R ' ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if x1 is greater than x2",
      "code": "if ( x1 > x2 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "decrement x1",
      "code": "x1 -- ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "append ' L ' to the ans",
      "code": "ans += ' L ' ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if y1 is less than y2",
      "code": "if ( y1 < y2 )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "increase y1",
      "code": "y1 ++ ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "append ' U ' to the ans",
      "code": "ans += ' U ' ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if y1 is greater than y2",
      "code": "if ( y1 > y2 )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "decrement y1",
      "code": "y1 -- ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "append ' D ' to the ans",
      "code": "ans += ' D ' ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "append ' \\ n ' to the ans",
      "code": "ans += ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "increase k",
      "code": "k ++ ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "print k , ans and a new line",
      "code": "cout << k << endl << ans ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string inp inp ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘inp’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "{ inp ;"
      ],
      "err_line": 30,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int x1 = inp [ 0 ] - ' a ' ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "{ inp ;"
      ],
      "err_line": 30,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int k create ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "string ans ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘std::__cxx11::string ans()’"
    },
    {
      "mod_line": [
        28,
        5
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        28,
        5,
        7
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "string ans ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        28,
        5,
        7,
        6
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "string ans ( ) ;",
        "int k create ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        28,
        5,
        7,
        21
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "string ans ( ) ;",
        "if ( y1 >= y2 )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        28,
        5,
        7,
        9
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "string ans ( ) ;",
        "if ( x1 <= x2 )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        28,
        5,
        6
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "int k create ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        28,
        5,
        6,
        21
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "int k create ;",
        "if ( y1 >= y2 )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        28,
        5,
        6,
        9
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "int k create ;",
        "if ( x1 <= x2 )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        28,
        5,
        21
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "if ( y1 >= y2 )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        28,
        5,
        21,
        9
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "if ( y1 >= y2 )",
        "if ( x1 <= x2 )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        28,
        5,
        9
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "if ( x1 <= x2 )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        28,
        7
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "string ans ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘std::__cxx11::string ans()’"
    },
    {
      "mod_line": [
        28,
        7,
        6
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "string ans ( ) ;",
        "int k create ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        28,
        7,
        6,
        21
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "string ans ( ) ;",
        "int k create ;",
        "if ( y1 >= y2 )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        28,
        7,
        6,
        9
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "string ans ( ) ;",
        "int k create ;",
        "if ( x1 <= x2 )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        28,
        7,
        21
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "string ans ( ) ;",
        "if ( y1 >= y2 )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘std::__cxx11::string ans()’"
    },
    {
      "mod_line": [
        28,
        7,
        21,
        9
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "string ans ( ) ;",
        "if ( y1 >= y2 )",
        "if ( x1 <= x2 )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘std::__cxx11::string ans()’"
    },
    {
      "mod_line": [
        28,
        7,
        9
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "string ans ( ) ;",
        "if ( x1 <= x2 )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘std::__cxx11::string ans()’"
    },
    {
      "mod_line": [
        28,
        6
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "int k create ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        28,
        6,
        21
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "int k create ;",
        "if ( y1 >= y2 )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        28,
        6,
        21,
        9
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "int k create ;",
        "if ( y1 >= y2 )",
        "if ( x1 <= x2 )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        28,
        6,
        9
      ],
      "mod_code": [
        "cout << k << ans << endl ;",
        "int k create ;",
        "if ( x1 <= x2 )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "string ans ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        5,
        7,
        6
      ],
      "mod_code": [
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "string ans ( ) ;",
        "int k create ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        5,
        7,
        6,
        21
      ],
      "mod_code": [
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "string ans ( ) ;",
        "int k create ;",
        "if ( y1 >= y2 )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        5,
        7,
        6,
        9
      ],
      "mod_code": [
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "string ans ( ) ;",
        "int k create ;",
        "if ( x1 <= x2 )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        5,
        7,
        21
      ],
      "mod_code": [
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "string ans ( ) ;",
        "if ( y1 >= y2 )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        5,
        7,
        21,
        9
      ],
      "mod_code": [
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "string ans ( ) ;",
        "if ( y1 >= y2 )",
        "if ( x1 <= x2 )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "string ans ( ) ;",
        "if ( x1 <= x2 )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "int k create ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        5,
        6,
        21
      ],
      "mod_code": [
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "int k create ;",
        "if ( y1 >= y2 )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        5,
        6,
        21,
        9
      ],
      "mod_code": [
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "int k create ;",
        "if ( y1 >= y2 )",
        "if ( x1 <= x2 )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "int k create ;",
        "if ( x1 <= x2 )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        5,
        21
      ],
      "mod_code": [
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "if ( y1 >= y2 )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        5,
        21,
        9
      ],
      "mod_code": [
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "if ( y1 >= y2 )",
        "if ( x1 <= x2 )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "int x2 = inp [ 0 ] - ' a ' a y2 = inp [ 1 ] - ' 0 ' ;",
        "if ( x1 <= x2 )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘,’ or ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "string ans ( ) ;",
        "int k create ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        7,
        6,
        21
      ],
      "mod_code": [
        "string ans ( ) ;",
        "int k create ;",
        "if ( y1 >= y2 )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        7,
        6,
        21,
        9
      ],
      "mod_code": [
        "string ans ( ) ;",
        "int k create ;",
        "if ( y1 >= y2 )",
        "if ( x1 <= x2 )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        7,
        6,
        9
      ],
      "mod_code": [
        "string ans ( ) ;",
        "int k create ;",
        "if ( x1 <= x2 )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        7,
        21
      ],
      "mod_code": [
        "string ans ( ) ;",
        "if ( y1 >= y2 )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘std::__cxx11::string ans()’"
    },
    {
      "mod_line": [
        7,
        21,
        9
      ],
      "mod_code": [
        "string ans ( ) ;",
        "if ( y1 >= y2 )",
        "if ( x1 <= x2 )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘std::__cxx11::string ans()’"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "string ans ( ) ;",
        "if ( x1 <= x2 )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘std::__cxx11::string ans()’"
    },
    {
      "mod_line": [
        6,
        21
      ],
      "mod_code": [
        "int k create ;",
        "if ( y1 >= y2 )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        6,
        21,
        9
      ],
      "mod_code": [
        "int k create ;",
        "if ( y1 >= y2 )",
        "if ( x1 <= x2 )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "int k create ;",
        "if ( x1 <= x2 )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘create’"
    }
  ]
}