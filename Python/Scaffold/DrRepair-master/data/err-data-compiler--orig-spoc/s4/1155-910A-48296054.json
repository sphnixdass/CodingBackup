{
  "meta": {
    "index": 1155,
    "hitid": "37G6BXQPLQFSQOJ7G986RNGORL1QEH",
    "workerid": "A1APYLD4DUK33J",
    "probid": "910A",
    "subid": "48296054"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , d",
      "code": "int n , d ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n read d",
      "code": "cin >> n >> d ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer array dp with size n",
      "code": "int dp [ n ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive , set dp [ i ] to 1e9",
      "code": "for ( int i = 0 ; i < n ; ++ i ) { dp [ i ] = 1e9 ; }",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set dp [ 0 ] to 0",
      "code": "dp [ 0 ] = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to size of s inclusive",
      "code": "for ( int i = 0 ; i < s . size ( ) ; ++ i )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if s [ i ] is ' 1 '",
      "code": "if ( s [ i ] == ' 1 ' )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "for j = i - 1 to j is less than or equal to 0 and i - j is less than or equal to d , decrementing j",
      "code": "for ( int j = i - 1 ; j >= 0 && i - j <= d ; -- j )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if s [ j ] is 1 , set dp [ i ] to minimum of dp [ j ] + 1 and dp [ i ]",
      "code": "if ( s [ j ] == ' 1 ' ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if dp [ n - 1 ] is 1e9",
      "code": "if ( dp [ n - 1 ] == 1e9 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print - 1 print newline",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print dp [ n - 1 ] print newline",
      "code": "cout << dp [ n - 1 ] << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( j = i - 1 ; j <= 0 && i - j <= d ; j -- )"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        8
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        11,
        8,
        2
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        8,
        4
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        11,
        8,
        9
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        11,
        2
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        2,
        4
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "cin >> n >> k ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        2,
        9
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "cin >> n >> k ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        4
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        11,
        4,
        9
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "gets ( s ) ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        8,
        2
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8,
        2,
        4
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "cin >> n >> k ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8,
        2,
        9
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "cin >> n >> k ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8,
        4
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        8,
        4,
        9
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "gets ( s ) ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        8,
        9
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        4
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "cin >> n >> k ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        4,
        9
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "cin >> n >> k ;",
        "gets ( s ) ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        9
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "cin >> n >> k ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        4,
        9
      ],
      "mod_code": [
        "for ( int j = i - 1 ; j <= 0 && i - j <= d ; j -- )",
        "gets ( s ) ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        8,
        2
      ],
      "mod_code": [
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        8,
        2,
        4
      ],
      "mod_code": [
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "cin >> n >> k ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        8,
        2,
        9
      ],
      "mod_code": [
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "cin >> n >> k ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        8,
        4
      ],
      "mod_code": [
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        11,
        8,
        4,
        9
      ],
      "mod_code": [
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "gets ( s ) ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        11,
        8,
        9
      ],
      "mod_code": [
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        2,
        4
      ],
      "mod_code": [
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "cin >> n >> k ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        2,
        4,
        9
      ],
      "mod_code": [
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "cin >> n >> k ;",
        "gets ( s ) ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        2,
        9
      ],
      "mod_code": [
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "cin >> n >> k ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        11,
        4,
        9
      ],
      "mod_code": [
        "if ( s [ j ] == 1 ) dp [ i ] = min ( dp [ j ] + 1 , dp [ i ] ) ;",
        "gets ( s ) ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "cin >> n >> k ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        4,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "cin >> n >> k ;",
        "gets ( s ) ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "cin >> n >> k ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        4,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "gets ( s ) ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i <= s . size ( ) ; i ++ )",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        9
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "gets ( s ) ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "gets ( s ) ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    }
  ]
}