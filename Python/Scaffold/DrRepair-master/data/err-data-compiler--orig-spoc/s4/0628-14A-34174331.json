{
  "meta": {
    "index": 628,
    "hitid": "33BFF6QPI15U0NZW3YQG0LUDOICW3Q",
    "workerid": "AIWEXPJAU66D9",
    "probid": "14A",
    "subid": "34174331"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "m and n = integers",
      "code": "int m , n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let a be a 2d array of characters with size 55 by 55",
      "code": "char a [ 55 ] [ 55 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let alt , ust , sag and sol be integers with alt and sag = - 1000 , ust and sol = 1000",
      "code": "int alt = - 1000 , ust = 1000 , sag = - 1000 , sol = 1000 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read m and n",
      "code": "cin >> m >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for integer j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read a [ i ] [ j ]",
      "code": "cin >> a [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if a [ i ] [ j ] = ' * '",
      "code": "if ( a [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "alt = max of alt and i",
      "code": "alt = max ( alt , i ) ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "ust = min of ust and i",
      "code": "ust = min ( ust , i ) ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "sag = max of sag and j",
      "code": "sag = max ( sag , j ) ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "sol = min of sol and j",
      "code": "sol = min ( sol , j ) ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "for i = ust to alt inclusive",
      "code": "for ( int i = ust ; i <= alt ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for integer j = sol to sag inclusive print a [ i ] [ j ]",
      "code": "for ( int j = sol ; j <= sag ; j ++ ) cout << a [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char a [ 55 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust , sol = 1000 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> m >> k ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( i = ust ; i <= alt ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "int sol = min ( sol , j ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        12,
        4
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "int sol = min ( sol , j ) ;",
        "cin >> m >> k ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        12,
        4,
        5
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "int sol = min ( sol , j ) ;",
        "cin >> m >> k ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        12,
        4,
        10
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "int sol = min ( sol , j ) ;",
        "cin >> m >> k ;",
        "int ust = min ( ust , i ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        12,
        4,
        11
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "int sol = min ( sol , j ) ;",
        "cin >> m >> k ;",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        12,
        5
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "int sol = min ( sol , j ) ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        12,
        5,
        10
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "int sol = min ( sol , j ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int ust = min ( ust , i ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        12,
        5,
        11
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "int sol = min ( sol , j ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        12,
        10
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "int sol = min ( sol , j ) ;",
        "int ust = min ( ust , i ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        12,
        10,
        11
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "int sol = min ( sol , j ) ;",
        "int ust = min ( ust , i ) ;",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        12,
        11
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "int sol = min ( sol , j ) ;",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "cin >> m >> k ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "cin >> m >> k ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        10
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "cin >> m >> k ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int ust = min ( ust , i ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        11
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "cin >> m >> k ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        4,
        10
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "cin >> m >> k ;",
        "int ust = min ( ust , i ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        4,
        10,
        11
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "cin >> m >> k ;",
        "int ust = min ( ust , i ) ;",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        4,
        11
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "cin >> m >> k ;",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        5,
        10
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int ust = min ( ust , i ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        5,
        10,
        11
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int ust = min ( ust , i ) ;",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        5,
        11
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "int ust = min ( ust , i ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        10,
        11
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "int ust = min ( ust , i ) ;",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "int alt , ust , sag = - 1000 , ust = - 1000 , ust = 1000 ;",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ust’"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "int sol = min ( sol , j ) ;",
        "cin >> m >> k ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        5
      ],
      "mod_code": [
        "int sol = min ( sol , j ) ;",
        "cin >> m >> k ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        5,
        10
      ],
      "mod_code": [
        "int sol = min ( sol , j ) ;",
        "cin >> m >> k ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int ust = min ( ust , i ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        5,
        11
      ],
      "mod_code": [
        "int sol = min ( sol , j ) ;",
        "cin >> m >> k ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        10
      ],
      "mod_code": [
        "int sol = min ( sol , j ) ;",
        "cin >> m >> k ;",
        "int ust = min ( ust , i ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        10,
        11
      ],
      "mod_code": [
        "int sol = min ( sol , j ) ;",
        "cin >> m >> k ;",
        "int ust = min ( ust , i ) ;",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        11
      ],
      "mod_code": [
        "int sol = min ( sol , j ) ;",
        "cin >> m >> k ;",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "int sol = min ( sol , j ) ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        10
      ],
      "mod_code": [
        "int sol = min ( sol , j ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int ust = min ( ust , i ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        10,
        11
      ],
      "mod_code": [
        "int sol = min ( sol , j ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int ust = min ( ust , i ) ;",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        11
      ],
      "mod_code": [
        "int sol = min ( sol , j ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "cin >> m >> k ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        10
      ],
      "mod_code": [
        "cin >> m >> k ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int ust = min ( ust , i ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        11
      ],
      "mod_code": [
        "cin >> m >> k ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int ust = min ( ust , i ) ;",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        11
      ],
      "mod_code": [
        "cin >> m >> k ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "cin >> m >> k ;",
        "int ust = min ( ust , i ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        11
      ],
      "mod_code": [
        "cin >> m >> k ;",
        "int ust = min ( ust , i ) ;",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "cin >> m >> k ;",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "int ust = min ( ust , i ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "int ust = min ( ust , i ) ;",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "int sag = max ( sag , j ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}