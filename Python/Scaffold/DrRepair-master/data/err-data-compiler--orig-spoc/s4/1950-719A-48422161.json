{
  "meta": {
    "index": 1950,
    "hitid": "3N3WJQXELSKP4BREVK598085LZML2U",
    "workerid": "A326O3VWP8TO8N",
    "probid": "719A",
    "subid": "48422161"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "i , val = integer and arr = integer array with size n",
      "code": "int arr [ n ] , i , val ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n values into array i",
      "code": "for ( i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if n is equal to 1",
      "code": "if ( n == 1 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if arr [ 0 ] is not 15 and arr [ 0 ] is not 0",
      "code": "if ( arr [ 0 ] != 15 && arr [ 0 ] != 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print - 1",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "up = integer set to 0",
      "code": "int up = 0 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "cmp = integer set to arr [ 0 ]",
      "code": "int cmp = arr [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if cmp is less than arr [ i ]",
      "code": "if ( cmp < arr [ i ] )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "set up to 1",
      "code": "up = 1 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "set cmp to arr [ i ]",
      "code": "cmp = arr [ i ] ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "continue loop",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 19,
      "text": "set up to - 1",
      "code": "up = - 1 ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "set cmp to arr [ i ]",
      "code": "cmp = arr [ i ] ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "continue loop",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "if arr [ n - 1 ] is equal to 0",
      "code": "if ( arr [ n - 1 ] == 0 )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print UP",
      "code": "cout << \" UP \" << endl ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "if arr [ n - 1 ] is equal to 15",
      "code": "if ( arr [ n - 1 ] == 15 )",
      "indent": 1
    },
    {
      "line": 29,
      "text": "print DOWN",
      "code": "cout << \" DOWN \" << endl ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "if up is equal to 1",
      "code": "if ( up == 1 )",
      "indent": 1
    },
    {
      "line": 33,
      "text": "print UP",
      "code": "cout << \" UP \" << endl ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 35,
      "text": "print DOWN",
      "code": "cout << \" DOWN \" << endl ;",
      "indent": 2
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int i , val [ n ] , val ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "cout << UP << endl ;"
      ],
      "err_line": 25,
      "err_msg": "‘UP’ was not declared in this scope"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "cout << DOWN << endl ;"
      ],
      "err_line": 29,
      "err_msg": "‘DOWN’ was not declared in this scope"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "cout << UP << endl ;"
      ],
      "err_line": 33,
      "err_msg": "‘UP’ was not declared in this scope"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "cout << DOWN << endl ;"
      ],
      "err_line": 35,
      "err_msg": "‘DOWN’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( n == l )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "up = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cmp = arr [ 0 ] ;"
      ],
      "err_line": 12,
      "err_msg": "‘cmp’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "t = 1 ;"
      ],
      "err_line": 15,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "continue continue ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "t = - 1 ;"
      ],
      "err_line": 19,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "continue continue ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "cout << UP ;"
      ],
      "err_line": 25,
      "err_msg": "‘UP’ was not declared in this scope"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "cout << DOWN ;"
      ],
      "err_line": 29,
      "err_msg": "‘DOWN’ was not declared in this scope"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "if ( up == l )"
      ],
      "err_line": 32,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "cout << UP ;"
      ],
      "err_line": 33,
      "err_msg": "‘UP’ was not declared in this scope"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 34,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "cout << DOWN ;"
      ],
      "err_line": 35,
      "err_msg": "‘DOWN’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        4,
        25
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << UP << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        4,
        25,
        29
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << UP << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        4,
        25,
        33
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << UP << endl ;",
        "cout << UP << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        4,
        25,
        35
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << UP << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        4,
        29
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        4,
        29,
        33
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << DOWN << endl ;",
        "cout << UP << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        4,
        29,
        35
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << DOWN << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        4,
        33
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << UP << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        4,
        33,
        35
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << UP << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        4,
        35
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        25
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "cout << UP << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        25,
        29
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "cout << UP << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        25,
        29,
        33
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "cout << UP << endl ;",
        "cout << DOWN << endl ;",
        "cout << UP << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        25,
        29,
        35
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "cout << UP << endl ;",
        "cout << DOWN << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        25,
        33
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "cout << UP << endl ;",
        "cout << UP << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        25,
        33,
        35
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "cout << UP << endl ;",
        "cout << UP << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        25,
        35
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "cout << UP << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        29
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        29,
        33
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "cout << DOWN << endl ;",
        "cout << UP << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        29,
        33,
        35
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "cout << DOWN << endl ;",
        "cout << UP << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        29,
        35
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "cout << DOWN << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        33
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "cout << UP << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        33,
        35
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "cout << UP << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        3,
        35
      ],
      "mod_code": [
        "int i , val [ n ] , val ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int val’"
    },
    {
      "mod_line": [
        4,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << UP << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        29
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << UP << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        29,
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << UP << endl ;",
        "cout << DOWN << endl ;",
        "cout << UP << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        29,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << UP << endl ;",
        "cout << DOWN << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << UP << endl ;",
        "cout << UP << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        33,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << UP << endl ;",
        "cout << UP << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << UP << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        29
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        29,
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << DOWN << endl ;",
        "cout << UP << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        29,
        33,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << DOWN << endl ;",
        "cout << UP << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        29,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << DOWN << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << UP << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        33,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << UP << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> i [ i ] ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        25,
        29
      ],
      "mod_code": [
        "cout << UP << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 25,
      "err_msg": "‘UP’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        29,
        33
      ],
      "mod_code": [
        "cout << UP << endl ;",
        "cout << DOWN << endl ;",
        "cout << UP << endl ;"
      ],
      "err_line": 25,
      "err_msg": "‘UP’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        29,
        33,
        35
      ],
      "mod_code": [
        "cout << UP << endl ;",
        "cout << DOWN << endl ;",
        "cout << UP << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 25,
      "err_msg": "‘UP’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        29,
        35
      ],
      "mod_code": [
        "cout << UP << endl ;",
        "cout << DOWN << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 25,
      "err_msg": "‘UP’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        33
      ],
      "mod_code": [
        "cout << UP << endl ;",
        "cout << UP << endl ;"
      ],
      "err_line": 25,
      "err_msg": "‘UP’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        33,
        35
      ],
      "mod_code": [
        "cout << UP << endl ;",
        "cout << UP << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 25,
      "err_msg": "‘UP’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        35
      ],
      "mod_code": [
        "cout << UP << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 25,
      "err_msg": "‘UP’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        33
      ],
      "mod_code": [
        "cout << DOWN << endl ;",
        "cout << UP << endl ;"
      ],
      "err_line": 29,
      "err_msg": "‘DOWN’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        33,
        35
      ],
      "mod_code": [
        "cout << DOWN << endl ;",
        "cout << UP << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 29,
      "err_msg": "‘DOWN’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        35
      ],
      "mod_code": [
        "cout << DOWN << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 29,
      "err_msg": "‘DOWN’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        35
      ],
      "mod_code": [
        "cout << UP << endl ;",
        "cout << DOWN << endl ;"
      ],
      "err_line": 33,
      "err_msg": "‘UP’ was not declared in this scope"
    }
  ]
}