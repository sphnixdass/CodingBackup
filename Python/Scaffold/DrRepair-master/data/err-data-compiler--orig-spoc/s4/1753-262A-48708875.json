{
  "meta": {
    "index": 1753,
    "hitid": "3QREJ3J433RKLRV4KQBD8WUZ2Z3LKB",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "262A",
    "subid": "48708875"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , k = integers",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "Read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "count = integer with 0",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while n is not 0",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "a = integer",
      "code": "int a ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "Read a",
      "code": "cin >> a ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "tempCount = integer with 0",
      "code": "int tempCount = 0 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "while a is not 0",
      "code": "while ( a != 0 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if a modulo 10 is 4 OR a modulo 10 is 7 , then increment tempCount",
      "code": "if ( a % 10 == 4 || a % 10 == 7 ) { tempCount ++ ; }",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set a to a / 10",
      "code": "a /= 10 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if tempCount is less than k , then increment count",
      "code": "if ( tempCount <= k ) { count ++ ; }",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print count and a new line",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "{ cin >> n >> k ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4,
        12,
        2
      ],
      "mod_code": [
        "while ( n != 0 )",
        "if ( tempCount < k ) count ++ ;",
        "{ cin >> n >> k ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4,
        12,
        2,
        6
      ],
      "mod_code": [
        "while ( n != 0 )",
        "if ( tempCount < k ) count ++ ;",
        "{ cin >> n >> k ;",
        "cin >> n ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "while ( n != 0 )",
        "{ cin >> n >> k ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4,
        2,
        6
      ],
      "mod_code": [
        "while ( n != 0 )",
        "{ cin >> n >> k ;",
        "cin >> n ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4,
        2,
        6,
        12
      ],
      "mod_code": [
        "while ( n != 0 )",
        "{ cin >> n >> k ;",
        "cin >> n ;",
        "if ( tempCount < k ) { count ++ ; }"
      ],
      "err_line": 16,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4,
        2,
        12
      ],
      "mod_code": [
        "while ( n != 0 )",
        "{ cin >> n >> k ;",
        "if ( tempCount < k ) { count ++ ; }"
      ],
      "err_line": 16,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "if ( tempCount < k ) count ++ ;",
        "{ cin >> n >> k ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        12,
        2,
        4
      ],
      "mod_code": [
        "if ( tempCount < k ) count ++ ;",
        "{ cin >> n >> k ;",
        "while ( n )"
      ],
      "err_line": 16,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        12,
        2,
        4,
        6
      ],
      "mod_code": [
        "if ( tempCount < k ) count ++ ;",
        "{ cin >> n >> k ;",
        "while ( n )",
        "cin >> n ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        12,
        2,
        6
      ],
      "mod_code": [
        "if ( tempCount < k ) count ++ ;",
        "{ cin >> n >> k ;",
        "cin >> n ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "{ cin >> n >> k ;",
        "while ( n )"
      ],
      "err_line": 16,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        2,
        4,
        6
      ],
      "mod_code": [
        "{ cin >> n >> k ;",
        "while ( n )",
        "cin >> n ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        2,
        4,
        6,
        12
      ],
      "mod_code": [
        "{ cin >> n >> k ;",
        "while ( n )",
        "cin >> n ;",
        "if ( tempCount < k ) { count ++ ; }"
      ],
      "err_line": 16,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        2,
        4,
        12
      ],
      "mod_code": [
        "{ cin >> n >> k ;",
        "while ( n )",
        "if ( tempCount < k ) { count ++ ; }"
      ],
      "err_line": 16,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "{ cin >> n >> k ;",
        "cin >> n ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        2,
        6,
        12
      ],
      "mod_code": [
        "{ cin >> n >> k ;",
        "cin >> n ;",
        "if ( tempCount < k ) { count ++ ; }"
      ],
      "err_line": 16,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "{ cin >> n >> k ;",
        "if ( tempCount < k ) { count ++ ; }"
      ],
      "err_line": 16,
      "err_msg": "expected ‘}’ at end of input"
    }
  ]
}