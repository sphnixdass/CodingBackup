{
  "meta": {
    "index": 204,
    "hitid": "3HY86PZXPYC49KZQVUIRQM8GJ99E1A",
    "workerid": "ACZC9ZJROQZO9",
    "probid": "793A",
    "subid": "34156908"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , amount = long longs",
      "code": "long long n , amount ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , amount",
      "code": "cin >> n >> amount ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let A = int array of size 100002",
      "code": "int A [ 100002 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let minimum = int = 1000000000",
      "code": "int minimum = 1e9 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read A [ i ]",
      "code": "cin >> A [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "minimum = min ( A [ i ] , minimum )",
      "code": "minimum = min ( A [ i ] , minimum ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "let Res = long long = 0",
      "code": "long long Res = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "let value = int = 0",
      "code": "int value = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "value = the absolute value of ( A [ i ] - minimum ) / amount",
      "code": "value = abs ( A [ i ] - minimum ) / amount ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "Res = Res + value",
      "code": "Res += value ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "A [ i ] = A [ i ] - amount * value",
      "code": "A [ i ] -= ( amount * value ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "sort ( A , A + n )",
      "code": "sort ( A , A + n ) ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if A [ 0 ] is not A [ n - 1 ]",
      "code": "if ( A [ 0 ] != A [ n - 1 ] )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print - 1",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print Res",
      "code": "cout << Res << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n >> Bob\\n ;"
      ],
      "err_line": 2,
      "err_msg": "stray ‘\\’ in program"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "minimum = 1000000000 ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "[ cin >> A [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int * value = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘long long int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "sort ( ( A , A + n ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "no matching function for call to ‘sort(int*)’"
    },
    {
      "mod_line": [
        12,
        14,
        6
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "A [ i ] = A [ i ] - ' amount ' ;",
        "[ cin >> A [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        12,
        14,
        6,
        4
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "A [ i ] = A [ i ] - ' amount ' ;",
        "[ cin >> A [ i ] ;",
        "minimum = 1000000000 ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        6,
        10
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "A [ i ] = A [ i ] - ' amount ' ;",
        "[ cin >> A [ i ] ;",
        "int * value = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        12,
        14,
        6,
        7
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "A [ i ] = A [ i ] - ' amount ' ;",
        "[ cin >> A [ i ] ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        12,
        14,
        4
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "A [ i ] = A [ i ] - ' amount ' ;",
        "minimum = 1000000000 ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        4,
        10
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "A [ i ] = A [ i ] - ' amount ' ;",
        "minimum = 1000000000 ;",
        "int * value = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        4,
        7
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "A [ i ] = A [ i ] - ' amount ' ;",
        "minimum = 1000000000 ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        10
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "A [ i ] = A [ i ] - ' amount ' ;",
        "int * value = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14,
        10,
        7
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "A [ i ] = A [ i ] - ' amount ' ;",
        "int * value = 0 ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "[ cin >> A [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        12,
        6,
        4
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "[ cin >> A [ i ] ;",
        "minimum = 1000000000 ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        4,
        10
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "[ cin >> A [ i ] ;",
        "minimum = 1000000000 ;",
        "int * value = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        4,
        7
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "[ cin >> A [ i ] ;",
        "minimum = 1000000000 ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        10
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "[ cin >> A [ i ] ;",
        "int * value = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        12,
        6,
        10,
        7
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "[ cin >> A [ i ] ;",
        "int * value = 0 ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        12,
        6,
        7
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "[ cin >> A [ i ] ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "minimum = 1000000000 ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        10
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "minimum = 1000000000 ;",
        "int * value = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        10,
        7
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "minimum = 1000000000 ;",
        "int * value = 0 ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        7
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "minimum = 1000000000 ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "int * value = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        10,
        7
      ],
      "mod_code": [
        "value = abs ( A [ i ] - minimum ) / 2 ;",
        "int * value = 0 ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "A [ i ] = A [ i ] - ' amount ' ;",
        "[ cin >> A [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        14,
        6,
        4
      ],
      "mod_code": [
        "A [ i ] = A [ i ] - ' amount ' ;",
        "[ cin >> A [ i ] ;",
        "minimum = 1000000000 ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        6,
        4,
        10
      ],
      "mod_code": [
        "A [ i ] = A [ i ] - ' amount ' ;",
        "[ cin >> A [ i ] ;",
        "minimum = 1000000000 ;",
        "int * value = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        6,
        4,
        7
      ],
      "mod_code": [
        "A [ i ] = A [ i ] - ' amount ' ;",
        "[ cin >> A [ i ] ;",
        "minimum = 1000000000 ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        6,
        10
      ],
      "mod_code": [
        "A [ i ] = A [ i ] - ' amount ' ;",
        "[ cin >> A [ i ] ;",
        "int * value = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        14,
        6,
        10,
        7
      ],
      "mod_code": [
        "A [ i ] = A [ i ] - ' amount ' ;",
        "[ cin >> A [ i ] ;",
        "int * value = 0 ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        14,
        6,
        7
      ],
      "mod_code": [
        "A [ i ] = A [ i ] - ' amount ' ;",
        "[ cin >> A [ i ] ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "A [ i ] = A [ i ] - ' amount ' ;",
        "minimum = 1000000000 ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        4,
        10
      ],
      "mod_code": [
        "A [ i ] = A [ i ] - ' amount ' ;",
        "minimum = 1000000000 ;",
        "int * value = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        4,
        10,
        7
      ],
      "mod_code": [
        "A [ i ] = A [ i ] - ' amount ' ;",
        "minimum = 1000000000 ;",
        "int * value = 0 ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        4,
        7
      ],
      "mod_code": [
        "A [ i ] = A [ i ] - ' amount ' ;",
        "minimum = 1000000000 ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        10
      ],
      "mod_code": [
        "A [ i ] = A [ i ] - ' amount ' ;",
        "int * value = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘long long int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        10,
        7
      ],
      "mod_code": [
        "A [ i ] = A [ i ] - ' amount ' ;",
        "int * value = 0 ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘long long int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "[ cin >> A [ i ] ;",
        "minimum = 1000000000 ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        10
      ],
      "mod_code": [
        "[ cin >> A [ i ] ;",
        "minimum = 1000000000 ;",
        "int * value = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        10,
        7
      ],
      "mod_code": [
        "[ cin >> A [ i ] ;",
        "minimum = 1000000000 ;",
        "int * value = 0 ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        7
      ],
      "mod_code": [
        "[ cin >> A [ i ] ;",
        "minimum = 1000000000 ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "[ cin >> A [ i ] ;",
        "int * value = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        6,
        10,
        7
      ],
      "mod_code": [
        "[ cin >> A [ i ] ;",
        "int * value = 0 ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "[ cin >> A [ i ] ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "minimum = 1000000000 ;",
        "int * value = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        7
      ],
      "mod_code": [
        "minimum = 1000000000 ;",
        "int * value = 0 ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "minimum = 1000000000 ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘minimum’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "int * value = 0 ;",
        "int minimum = min ( A [ i ] , minimum ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘long long int’ to ‘int*’ [-fpermissive]"
    }
  ]
}