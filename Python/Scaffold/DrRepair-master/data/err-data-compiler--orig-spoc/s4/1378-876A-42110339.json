{
  "meta": {
    "index": 1378,
    "hitid": "335VBRURDJUMYP2LZ7XK5SQZI8Y9EQ",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "876A",
    "subid": "42110339"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , a , b , c = integers",
      "code": "int n , a , b , c ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , a , b , c",
      "code": "cin >> n >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if ( n is 1 )",
      "code": "if ( n == 1 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print 0",
      "code": "cout << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "sum , cnt = integers with sum = 0 , cnt = 1",
      "code": "int sum = 0 , cnt = 1 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "minn = integer with minn = min of a and min ( b , c )",
      "code": "int minn = min ( a , min ( b , c ) ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "maxx = integer with maxx = max of a and max ( b , c )",
      "code": "int maxx = max ( a , max ( b , c ) ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "sr = integer with sr = a + b + c - minn - maxx",
      "code": "int sr = a + b + c - minn - maxx ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if ( a < = b )",
      "code": "if ( a <= b )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "sum = sum + a",
      "code": "sum += a ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if ( a is minn )",
      "code": "if ( a == minn )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "sum = sum + ( n - cnt ) * minn",
      "code": "sum = sum + ( n - cnt ) * minn ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if ( a > c )",
      "code": "if ( a > c )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "sum = sum + c",
      "code": "sum += c ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "sum = sum + ( n - cnt ) * minn",
      "code": "sum = sum + ( n - cnt ) * minn ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "if ( a > b )",
      "code": "if ( a > b )",
      "indent": 1
    },
    {
      "line": 28,
      "text": "sum = sum + b",
      "code": "sum += b ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "if ( b is minn )",
      "code": "if ( b == minn )",
      "indent": 2
    },
    {
      "line": 31,
      "text": "sum = sum + ( n - cnt ) * minn",
      "code": "sum = sum + ( n - cnt ) * minn ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 35,
      "text": "if ( b > c )",
      "code": "if ( b > c )",
      "indent": 2
    },
    {
      "line": 36,
      "text": "sum = sum + c",
      "code": "sum += c ;",
      "indent": 3
    },
    {
      "line": 37,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 38,
      "text": "sum = sum + ( n - cnt ) * minn",
      "code": "sum = sum + ( n - cnt ) * minn ;",
      "indent": 3
    },
    {
      "line": 39,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 3
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int sum = 0 , cnt = 1 , cnt ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int minn = min ( a , c ( b , c ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘c’ cannot be used as a function"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( a > c ) )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "if ( a > b ) )"
      ],
      "err_line": 27,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "if ( b == minn ) )"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "if ( b > c ) )"
      ],
      "err_line": 35,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        7
      ],
      "mod_code": [
        "if ( a > b ) )",
        "int sum = 0 , cnt = 1 , cnt ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        27,
        7,
        16
      ],
      "mod_code": [
        "if ( a > b ) )",
        "int sum = 0 , cnt = 1 , cnt ;",
        "cout << sum ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        27,
        7,
        16,
        19
      ],
      "mod_code": [
        "if ( a > b ) )",
        "int sum = 0 , cnt = 1 , cnt ;",
        "cout << sum ;",
        "if ( a > c ) )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        27,
        7,
        16,
        4
      ],
      "mod_code": [
        "if ( a > b ) )",
        "int sum = 0 , cnt = 1 , cnt ;",
        "cout << sum ;",
        "cout << 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        27,
        7,
        16,
        32
      ],
      "mod_code": [
        "if ( a > b ) )",
        "int sum = 0 , cnt = 1 , cnt ;",
        "cout << sum ;",
        "cout << sum ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        27,
        7,
        19
      ],
      "mod_code": [
        "if ( a > b ) )",
        "int sum = 0 , cnt = 1 , cnt ;",
        "if ( a > c ) )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        27,
        7,
        19,
        4
      ],
      "mod_code": [
        "if ( a > b ) )",
        "int sum = 0 , cnt = 1 , cnt ;",
        "if ( a > c ) )",
        "cout << 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        27,
        7,
        19,
        32
      ],
      "mod_code": [
        "if ( a > b ) )",
        "int sum = 0 , cnt = 1 , cnt ;",
        "if ( a > c ) )",
        "cout << sum ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        27,
        7,
        4
      ],
      "mod_code": [
        "if ( a > b ) )",
        "int sum = 0 , cnt = 1 , cnt ;",
        "cout << 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        27,
        7,
        4,
        32
      ],
      "mod_code": [
        "if ( a > b ) )",
        "int sum = 0 , cnt = 1 , cnt ;",
        "cout << 0 ;",
        "cout << sum ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        27,
        7,
        32
      ],
      "mod_code": [
        "if ( a > b ) )",
        "int sum = 0 , cnt = 1 , cnt ;",
        "cout << sum ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        27,
        16
      ],
      "mod_code": [
        "if ( a > b ) )",
        "cout << sum ;"
      ],
      "err_line": 27,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        16,
        19
      ],
      "mod_code": [
        "if ( a > b ) )",
        "cout << sum ;",
        "if ( a > c ) )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        16,
        19,
        4
      ],
      "mod_code": [
        "if ( a > b ) )",
        "cout << sum ;",
        "if ( a > c ) )",
        "cout << 0 ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        16,
        19,
        32
      ],
      "mod_code": [
        "if ( a > b ) )",
        "cout << sum ;",
        "if ( a > c ) )",
        "cout << sum ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        16,
        4
      ],
      "mod_code": [
        "if ( a > b ) )",
        "cout << sum ;",
        "cout << 0 ;"
      ],
      "err_line": 27,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        16,
        4,
        32
      ],
      "mod_code": [
        "if ( a > b ) )",
        "cout << sum ;",
        "cout << 0 ;",
        "cout << sum ;"
      ],
      "err_line": 27,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        16,
        32
      ],
      "mod_code": [
        "if ( a > b ) )",
        "cout << sum ;",
        "cout << sum ;"
      ],
      "err_line": 27,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        19
      ],
      "mod_code": [
        "if ( a > b ) )",
        "if ( a > c ) )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        19,
        4
      ],
      "mod_code": [
        "if ( a > b ) )",
        "if ( a > c ) )",
        "cout << 0 ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        19,
        4,
        32
      ],
      "mod_code": [
        "if ( a > b ) )",
        "if ( a > c ) )",
        "cout << 0 ;",
        "cout << sum ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        19,
        32
      ],
      "mod_code": [
        "if ( a > b ) )",
        "if ( a > c ) )",
        "cout << sum ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        4
      ],
      "mod_code": [
        "if ( a > b ) )",
        "cout << 0 ;"
      ],
      "err_line": 27,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        4,
        32
      ],
      "mod_code": [
        "if ( a > b ) )",
        "cout << 0 ;",
        "cout << sum ;"
      ],
      "err_line": 27,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        32
      ],
      "mod_code": [
        "if ( a > b ) )",
        "cout << sum ;"
      ],
      "err_line": 27,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "int sum = 0 , cnt = 1 , cnt ;",
        "cout << sum ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        7,
        16,
        19
      ],
      "mod_code": [
        "int sum = 0 , cnt = 1 , cnt ;",
        "cout << sum ;",
        "if ( a > c ) )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        7,
        16,
        19,
        4
      ],
      "mod_code": [
        "int sum = 0 , cnt = 1 , cnt ;",
        "cout << sum ;",
        "if ( a > c ) )",
        "cout << 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        7,
        16,
        19,
        32
      ],
      "mod_code": [
        "int sum = 0 , cnt = 1 , cnt ;",
        "cout << sum ;",
        "if ( a > c ) )",
        "cout << sum ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        7,
        16,
        4
      ],
      "mod_code": [
        "int sum = 0 , cnt = 1 , cnt ;",
        "cout << sum ;",
        "cout << 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        7,
        16,
        4,
        32
      ],
      "mod_code": [
        "int sum = 0 , cnt = 1 , cnt ;",
        "cout << sum ;",
        "cout << 0 ;",
        "cout << sum ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        7,
        16,
        32
      ],
      "mod_code": [
        "int sum = 0 , cnt = 1 , cnt ;",
        "cout << sum ;",
        "cout << sum ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        7,
        19
      ],
      "mod_code": [
        "int sum = 0 , cnt = 1 , cnt ;",
        "if ( a > c ) )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        7,
        19,
        4
      ],
      "mod_code": [
        "int sum = 0 , cnt = 1 , cnt ;",
        "if ( a > c ) )",
        "cout << 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        7,
        19,
        4,
        32
      ],
      "mod_code": [
        "int sum = 0 , cnt = 1 , cnt ;",
        "if ( a > c ) )",
        "cout << 0 ;",
        "cout << sum ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        7,
        19,
        32
      ],
      "mod_code": [
        "int sum = 0 , cnt = 1 , cnt ;",
        "if ( a > c ) )",
        "cout << sum ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "int sum = 0 , cnt = 1 , cnt ;",
        "cout << 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        7,
        4,
        32
      ],
      "mod_code": [
        "int sum = 0 , cnt = 1 , cnt ;",
        "cout << 0 ;",
        "cout << sum ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        7,
        32
      ],
      "mod_code": [
        "int sum = 0 , cnt = 1 , cnt ;",
        "cout << sum ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        16,
        19
      ],
      "mod_code": [
        "cout << sum ;",
        "if ( a > c ) )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        19,
        4
      ],
      "mod_code": [
        "cout << sum ;",
        "if ( a > c ) )",
        "cout << 0 ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        19,
        4,
        32
      ],
      "mod_code": [
        "cout << sum ;",
        "if ( a > c ) )",
        "cout << 0 ;",
        "cout << sum ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        19,
        32
      ],
      "mod_code": [
        "cout << sum ;",
        "if ( a > c ) )",
        "cout << sum ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        19,
        4
      ],
      "mod_code": [
        "if ( a > c ) )",
        "cout << 0 ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        19,
        4,
        32
      ],
      "mod_code": [
        "if ( a > c ) )",
        "cout << 0 ;",
        "cout << sum ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        19,
        32
      ],
      "mod_code": [
        "if ( a > c ) )",
        "cout << sum ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘)’ token"
    }
  ]
}