{
  "meta": {
    "index": 1442,
    "hitid": "362E9TQF2HKDT4RF9WTLIOAEEEWIGV",
    "workerid": "A1APYLD4DUK33J",
    "probid": "359A",
    "subid": "46823808"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integer a",
      "code": "int a ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare n , m as integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for j = 1 to m inclusive",
      "code": "for ( int j = 1 ; j <= m ; j ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if a and ( i is 1 or i is n ) or ( j is 1 or j is m )",
      "code": "if ( a && ( ( i == 1 || i == n ) || ( j == 1 || j == m ) ) )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "print 2 , newline",
      "code": "cout << 2 << endl ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print 4 , newline",
      "code": "cout << 4 << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "gets ( a ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 || j == m ) )",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        6
      ],
      "mod_code": [
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 || j == m ) )",
        "for ( j = 1 ; j <= m ; j ++ )",
        "gets ( a ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        6,
        3
      ],
      "mod_code": [
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 || j == m ) )",
        "for ( j = 1 ; j <= m ; j ++ )",
        "gets ( a ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        6,
        4
      ],
      "mod_code": [
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 || j == m ) )",
        "for ( j = 1 ; j <= m ; j ++ )",
        "gets ( a ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        3
      ],
      "mod_code": [
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 || j == m ) )",
        "for ( j = 1 ; j <= m ; j ++ )",
        "cin >> n , m ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        3,
        4
      ],
      "mod_code": [
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 || j == m ) )",
        "for ( j = 1 ; j <= m ; j ++ )",
        "cin >> n , m ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        4
      ],
      "mod_code": [
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 || j == m ) )",
        "for ( j = 1 ; j <= m ; j ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 || j == m ) )",
        "gets ( a ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        6,
        3
      ],
      "mod_code": [
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 || j == m ) )",
        "gets ( a ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        6,
        3,
        4
      ],
      "mod_code": [
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 || j == m ) )",
        "gets ( a ) ;",
        "cin >> n , m ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        4
      ],
      "mod_code": [
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 || j == m ) )",
        "gets ( a ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        4
      ],
      "mod_code": [
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 || j == m ) )",
        "cin >> n , m ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 || j == m ) )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "gets ( a ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        7
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "gets ( a ) ;",
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 ) )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        3
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "gets ( a ) ;",
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 ) )",
        "cin >> n , m ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        4
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "gets ( a ) ;",
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 ) )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "gets ( a ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        3,
        4
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "gets ( a ) ;",
        "cin >> n , m ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        4
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "gets ( a ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 ) )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        3
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 ) )",
        "cin >> n , m ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        3,
        4
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 ) )",
        "cin >> n , m ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        4
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 ) )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "cin >> n , m ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        4
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "cin >> n , m ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "gets ( a ) ;",
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 ) )"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        3
      ],
      "mod_code": [
        "gets ( a ) ;",
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 ) )",
        "cin >> n , m ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        3,
        4
      ],
      "mod_code": [
        "gets ( a ) ;",
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 ) )",
        "cin >> n , m ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        4
      ],
      "mod_code": [
        "gets ( a ) ;",
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 ) )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "gets ( a ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        3,
        4
      ],
      "mod_code": [
        "gets ( a ) ;",
        "cin >> n , m ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "gets ( a ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        4
      ],
      "mod_code": [
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 ) )",
        "cin >> n , m ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "if ( a == 1 && ( i == 1 || i == n ) || ( j == 1 ) )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "cin >> n , m ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}