{
  "meta": {
    "index": 1770,
    "hitid": "3CVBMEMMXBAU4G5UAB76CZW6FYZ7HP",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "313A",
    "subid": "45032168"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "makes integers n , n1 , and n2",
      "code": "int n , n1 , n2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n is greater than or equal to 0 , print n",
      "code": "if ( n >= 0 ) { cout << n << endl ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if n is less than 0",
      "code": "if ( n < 0 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "make n negative",
      "code": "n = - n ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set n1 to n / 10",
      "code": "n1 = n / 10 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set n2 to ( n / 100 ) * 10 + ( n % 10 )",
      "code": "n2 = ( n / 100 ) * 10 + ( n % 10 ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if n1 is greater than n2",
      "code": "if ( n1 > n2 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print - n2",
      "code": "cout << - n2 << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print - n1",
      "code": "cout << - n1 << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , n1 , n2 , n2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n2’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "int n ;",
        "int n , n1 , n2 , n2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n2’"
    },
    {
      "mod_line": [
        5,
        1,
        10
      ],
      "mod_code": [
        "int n ;",
        "int n , n1 , n2 , n2 ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n2’"
    },
    {
      "mod_line": [
        5,
        1,
        10,
        6
      ],
      "mod_code": [
        "int n ;",
        "int n , n1 , n2 , n2 ;",
        "else do",
        "n1 /= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n2’"
    },
    {
      "mod_line": [
        5,
        1,
        6
      ],
      "mod_code": [
        "int n ;",
        "int n , n1 , n2 , n2 ;",
        "n1 /= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n2’"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "int n ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        10,
        6
      ],
      "mod_code": [
        "int n ;",
        "else do",
        "n1 /= 10 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int n , n1 , n2 , n2 ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n2’"
    },
    {
      "mod_line": [
        1,
        10,
        6
      ],
      "mod_code": [
        "int n , n1 , n2 , n2 ;",
        "else do",
        "n1 /= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n2’"
    },
    {
      "mod_line": [
        1,
        10,
        6,
        5
      ],
      "mod_code": [
        "int n , n1 , n2 , n2 ;",
        "else do",
        "n1 /= 10 ;",
        "n = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n2’"
    },
    {
      "mod_line": [
        1,
        10,
        5
      ],
      "mod_code": [
        "int n , n1 , n2 , n2 ;",
        "else do",
        "n = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n2’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , n1 , n2 , n2 ;",
        "n1 /= 10 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n2’"
    },
    {
      "mod_line": [
        1,
        6,
        5
      ],
      "mod_code": [
        "int n , n1 , n2 , n2 ;",
        "n1 /= 10 ;",
        "n = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n2’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , n1 , n2 , n2 ;",
        "n = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n2’"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "else do",
        "n1 /= 10 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        6,
        5
      ],
      "mod_code": [
        "else do",
        "n1 /= 10 ;",
        "n = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "else do",
        "n = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}