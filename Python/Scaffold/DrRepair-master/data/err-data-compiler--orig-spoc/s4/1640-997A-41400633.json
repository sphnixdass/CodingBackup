{
  "meta": {
    "index": 1640,
    "hitid": "38EHZ67RIMMZPNH6UBRDAHHVVNIMGH",
    "workerid": "A1APYLD4DUK33J",
    "probid": "997A",
    "subid": "41400633"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare character array a size 300005",
      "code": "char a [ 300005 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare long long integers n , x , y",
      "code": "long long int n , x , y ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , x , y",
      "code": "cin >> n >> x >> y ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive , read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare integer num = 0",
      "code": "int num = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if a [ i ] is ' 1 ' and a [ i - 1 ] is ' 0 ' , increment num",
      "code": "if ( a [ i ] == ' 1 ' && a [ i - 1 ] == ' 0 ' ) { num ++ ; }",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if a [ n - 1 ] is ' 0 ' , increment num",
      "code": "if ( a [ n - 1 ] == ' 0 ' ) { num ++ ; }",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if num is 0",
      "code": "if ( num == 0 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print \" 0 \" and newline",
      "code": "cout << \" 0 \" << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "declare long long integer ans = minimum of ( ( num - 1 ) * x + y and num * y )",
      "code": "long long int ans = min ( ( num - 1 ) * x + y , num * y ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print ans and newline",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char a [ 300005 300005 ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "num = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "num = 0 ;",
        "char a [ 300005 300005 ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        0,
        12
      ],
      "mod_code": [
        "num = 0 ;",
        "char a [ 300005 300005 ] ;",
        "else else"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        0,
        12,
        11
      ],
      "mod_code": [
        "num = 0 ;",
        "char a [ 300005 300005 ] ;",
        "else else",
        "cout << \" 0\\n \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        0,
        12,
        3
      ],
      "mod_code": [
        "num = 0 ;",
        "char a [ 300005 300005 ] ;",
        "else else",
        "cin >> n >> x , y ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        0,
        12,
        13
      ],
      "mod_code": [
        "num = 0 ;",
        "char a [ 300005 300005 ] ;",
        "else else",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        0,
        11
      ],
      "mod_code": [
        "num = 0 ;",
        "char a [ 300005 300005 ] ;",
        "cout << \" 0\\n \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        0,
        11,
        3
      ],
      "mod_code": [
        "num = 0 ;",
        "char a [ 300005 300005 ] ;",
        "cout << \" 0\\n \" << endl ;",
        "cin >> n >> x , y ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        0,
        11,
        13
      ],
      "mod_code": [
        "num = 0 ;",
        "char a [ 300005 300005 ] ;",
        "cout << \" 0\\n \" << endl ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        0,
        3
      ],
      "mod_code": [
        "num = 0 ;",
        "char a [ 300005 300005 ] ;",
        "cin >> n >> x , y ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        0,
        3,
        13
      ],
      "mod_code": [
        "num = 0 ;",
        "char a [ 300005 300005 ] ;",
        "cin >> n >> x , y ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        0,
        13
      ],
      "mod_code": [
        "num = 0 ;",
        "char a [ 300005 300005 ] ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "num = 0 ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        11
      ],
      "mod_code": [
        "num = 0 ;",
        "else else",
        "cout << \" 0\\n \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        11,
        3
      ],
      "mod_code": [
        "num = 0 ;",
        "else else",
        "cout << \" 0\\n \" << endl ;",
        "cin >> n >> x , y ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        11,
        13
      ],
      "mod_code": [
        "num = 0 ;",
        "else else",
        "cout << \" 0\\n \" << endl ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        3
      ],
      "mod_code": [
        "num = 0 ;",
        "else else",
        "cin >> n >> x , y ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        3,
        13
      ],
      "mod_code": [
        "num = 0 ;",
        "else else",
        "cin >> n >> x , y ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        13
      ],
      "mod_code": [
        "num = 0 ;",
        "else else",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "num = 0 ;",
        "cout << \" 0\\n \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        3
      ],
      "mod_code": [
        "num = 0 ;",
        "cout << \" 0\\n \" << endl ;",
        "cin >> n >> x , y ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        3,
        13
      ],
      "mod_code": [
        "num = 0 ;",
        "cout << \" 0\\n \" << endl ;",
        "cin >> n >> x , y ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        13
      ],
      "mod_code": [
        "num = 0 ;",
        "cout << \" 0\\n \" << endl ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "num = 0 ;",
        "cin >> n >> x , y ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        13
      ],
      "mod_code": [
        "num = 0 ;",
        "cin >> n >> x , y ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "num = 0 ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "char a [ 300005 300005 ] ;",
        "else else"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        0,
        12,
        11
      ],
      "mod_code": [
        "char a [ 300005 300005 ] ;",
        "else else",
        "cout << \" 0\\n \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        0,
        12,
        11,
        3
      ],
      "mod_code": [
        "char a [ 300005 300005 ] ;",
        "else else",
        "cout << \" 0\\n \" << endl ;",
        "cin >> n >> x , y ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        0,
        12,
        11,
        13
      ],
      "mod_code": [
        "char a [ 300005 300005 ] ;",
        "else else",
        "cout << \" 0\\n \" << endl ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        0,
        12,
        3
      ],
      "mod_code": [
        "char a [ 300005 300005 ] ;",
        "else else",
        "cin >> n >> x , y ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        0,
        12,
        3,
        13
      ],
      "mod_code": [
        "char a [ 300005 300005 ] ;",
        "else else",
        "cin >> n >> x , y ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        0,
        12,
        13
      ],
      "mod_code": [
        "char a [ 300005 300005 ] ;",
        "else else",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "char a [ 300005 300005 ] ;",
        "cout << \" 0\\n \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        0,
        11,
        3
      ],
      "mod_code": [
        "char a [ 300005 300005 ] ;",
        "cout << \" 0\\n \" << endl ;",
        "cin >> n >> x , y ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        0,
        11,
        3,
        13
      ],
      "mod_code": [
        "char a [ 300005 300005 ] ;",
        "cout << \" 0\\n \" << endl ;",
        "cin >> n >> x , y ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        0,
        11,
        13
      ],
      "mod_code": [
        "char a [ 300005 300005 ] ;",
        "cout << \" 0\\n \" << endl ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "char a [ 300005 300005 ] ;",
        "cin >> n >> x , y ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        0,
        3,
        13
      ],
      "mod_code": [
        "char a [ 300005 300005 ] ;",
        "cin >> n >> x , y ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "char a [ 300005 300005 ] ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "else else",
        "cout << \" 0\\n \" << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        11,
        3
      ],
      "mod_code": [
        "else else",
        "cout << \" 0\\n \" << endl ;",
        "cin >> n >> x , y ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        11,
        3,
        13
      ],
      "mod_code": [
        "else else",
        "cout << \" 0\\n \" << endl ;",
        "cin >> n >> x , y ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        11,
        13
      ],
      "mod_code": [
        "else else",
        "cout << \" 0\\n \" << endl ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "else else",
        "cin >> n >> x , y ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        3,
        13
      ],
      "mod_code": [
        "else else",
        "cin >> n >> x , y ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "else else",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        3,
        13
      ],
      "mod_code": [
        "cout << \" 0\\n \" << endl ;",
        "cin >> n >> x , y ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "cout << \" 0\\n \" << endl ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "cin >> n >> x , y ;",
        "long long int ans = min ( ( num - 1 ) * x + y * y ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    }
  ]
}