{
  "meta": {
    "index": 254,
    "hitid": "3P6ENY9P79QRT0MQT2B33OMFTECHIW",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "238A",
    "subid": "30908617"
  },
  "lines": [
    {
      "line": 0,
      "text": "mod = 1000000009",
      "code": "const int mod = 1e9 + 9 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "function add ( get int a and b , return int )",
      "code": "int add ( int a , int b )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "return a + b - mod if a + b > = mod else a + b",
      "code": "return a + b >= mod ? a + b - mod : a + b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "function sub ( get int a and b , return int )",
      "code": "int sub ( int a , int b )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "return a - b + mod if a - b < 0 else a - b",
      "code": "return a - b < 0 ? a - b + mod : a - b ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "function mul ( get int a and b , return int )",
      "code": "int mul ( int a , int b )",
      "indent": 0
    },
    {
      "line": 8,
      "text": "return a * b modulo mod",
      "code": "return a * 1ll * b % mod ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "function fpow ( get int a and b , return int )",
      "code": "int fpow ( int a , int n )",
      "indent": 0
    },
    {
      "line": 11,
      "text": "ret = 1",
      "code": "int ret = 1 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "while n right shifted of one bit is not 0",
      "code": "for ( ; n ; n >>= 1 )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if n and 1 ret = mul ( ret , a )",
      "code": "if ( n & 1 ) ret = mul ( ret , a ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "a = mul ( a , a )",
      "code": "a = mul ( a , a ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "return ret",
      "code": "return ret ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 19,
      "text": "n , m = int",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "k = fpow ( 2 , m ) , ans = 1",
      "code": "int k = fpow ( 2 , m ) , ans = 1 ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "k = sub ( k , 1 )",
      "code": "k = sub ( k , 1 ) ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "ans = mul ( ans , k )",
      "code": "ans = mul ( ans , k ) ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "mod = 1000000009 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int add ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int fpow ( int a , int b ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "ret = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘ret’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 13,
      "err_msg": "‘ret’ cannot be used as a function"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 21,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "mod |= 1000000009 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "return a + b - b : a + b >= mod ? a + b ;"
      ],
      "err_line": 2,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int sub ( int a , int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "return a - b - a : a - b ? a - b ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int mul ( int a , int b ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int fpow ( int a , int b )"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "while ( n >> bit != 0 )"
      ],
      "err_line": 12,
      "err_msg": "‘bit’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 22,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        5
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        5,
        8
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        5,
        10
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        5,
        11
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "ret = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        5,
        12
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "while ( n -- )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        5,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        5,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        8
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "return a * b % mod ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        8,
        10
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        8,
        11
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "return a * b % mod ;",
        "ret = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        8,
        12
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "return a * b % mod ;",
        "while ( n -- )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        8,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "return a * b % mod ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        8,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "return a * b % mod ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        10
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "int fpow ( int a , int b ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        10,
        11
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        10,
        12
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "int fpow ( int a , int b ) ;",
        "while ( n -- )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        10,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "int fpow ( int a , int b ) ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        10,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "int fpow ( int a , int b ) ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        11
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "ret = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        11,
        12
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "ret = 1 ;",
        "while ( n -- )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        11,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        11,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "ret = 1 ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        12
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "while ( n -- )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        12,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        12,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        13,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int add ( int a , int b ) ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        8
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        8,
        10
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        8,
        11
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "ret = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        8,
        12
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "while ( n -- )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        8,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        8,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        10
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        10,
        11
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        10,
        12
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;",
        "while ( n -- )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        10,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        10,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        11
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "ret = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        11,
        12
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "ret = 1 ;",
        "while ( n -- )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        11,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        11,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "ret = 1 ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        12
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "while ( n -- )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        12,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        12,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        13,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a - b - b : a - b ? a - b ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a * b % mod ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        10
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        10,
        11
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        10,
        12
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "while ( n -- )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        10,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        10,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        11
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a * b % mod ;",
        "ret = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        11,
        12
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a * b % mod ;",
        "ret = 1 ;",
        "while ( n -- )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        11,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a * b % mod ;",
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        11,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a * b % mod ;",
        "ret = 1 ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        12
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a * b % mod ;",
        "while ( n -- )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        12,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a * b % mod ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        12,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a * b % mod ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a * b % mod ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        13,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a * b % mod ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "return a * b % mod ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int fpow ( int a , int b ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        11
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        11,
        12
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;",
        "while ( n -- )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        11,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        11,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        12
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int fpow ( int a , int b ) ;",
        "while ( n -- )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        12,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int fpow ( int a , int b ) ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        12,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int fpow ( int a , int b ) ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int fpow ( int a , int b ) ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        13,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int fpow ( int a , int b ) ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "int fpow ( int a , int b ) ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "ret = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        12
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "ret = 1 ;",
        "while ( n -- )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        12,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "ret = 1 ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        12,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "ret = 1 ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        13,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "ret = 1 ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "while ( n -- )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        12,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        12,
        13,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        12,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        13,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        0,
        21
      ],
      "mod_code": [
        "mod = 1000000009 ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        8
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        8,
        10
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        8,
        11
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "ret = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        8,
        12
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "while ( n -- )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        8,
        13
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        8,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        10
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        10,
        11
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        10,
        12
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;",
        "while ( n -- )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        10,
        13
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        10,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        11
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "ret = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        11,
        12
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "ret = 1 ;",
        "while ( n -- )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        11,
        13
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        11,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "ret = 1 ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        12
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "while ( n -- )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        12,
        13
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        12,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        13
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        13,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a - b - b : a - b ? a - b ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a * b % mod ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        10
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        10,
        11
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        10,
        12
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "while ( n -- )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        10,
        13
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        10,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        11
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a * b % mod ;",
        "ret = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        11,
        12
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a * b % mod ;",
        "ret = 1 ;",
        "while ( n -- )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        11,
        13
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a * b % mod ;",
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        11,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a * b % mod ;",
        "ret = 1 ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        12
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a * b % mod ;",
        "while ( n -- )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        12,
        13
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a * b % mod ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        12,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a * b % mod ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        13
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a * b % mod ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        13,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a * b % mod ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "return a * b % mod ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "int fpow ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        11
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        11,
        12
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;",
        "while ( n -- )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        11,
        13
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        11,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        12
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "int fpow ( int a , int b ) ;",
        "while ( n -- )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        12,
        13
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "int fpow ( int a , int b ) ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        12,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "int fpow ( int a , int b ) ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        13
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "int fpow ( int a , int b ) ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        13,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "int fpow ( int a , int b ) ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "int fpow ( int a , int b ) ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "ret = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        12
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "ret = 1 ;",
        "while ( n -- )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        12,
        13
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "ret = 1 ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        12,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "ret = 1 ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        13
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        13,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "ret = 1 ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "while ( n -- )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        13
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        13,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        13,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        21
      ],
      "mod_code": [
        "int add ( int a , int b ) ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        8,
        10
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        11
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        12
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "while ( n -- )"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        13
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        21
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        8,
        11
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "ret = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        12
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "ret = 1 ;",
        "while ( n -- )"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        13
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        21
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "ret = 1 ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        8,
        12
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "while ( n -- )"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        8,
        12,
        13
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        8,
        12,
        21
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        8,
        13
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        8,
        13,
        21
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        8,
        21
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "return a * b % mod ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        10,
        11
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        12
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;",
        "while ( n -- )"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        13
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        21
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        10,
        12
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;",
        "while ( n -- )"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        10,
        12,
        13
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        10,
        12,
        21
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        10,
        13
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        10,
        13,
        21
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        10,
        21
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "int fpow ( int a , int b ) ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "ret = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        11,
        12
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "ret = 1 ;",
        "while ( n -- )"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        11,
        12,
        13
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "ret = 1 ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        11,
        12,
        21
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "ret = 1 ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        11,
        13
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        11,
        13,
        21
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        11,
        21
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "ret = 1 ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "while ( n -- )"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        12,
        13
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        12,
        13,
        21
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        12,
        21
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        13,
        21
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        5,
        21
      ],
      "mod_code": [
        "return a - b - b : a - b ? a - b ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11
      ],
      "mod_code": [
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        12
      ],
      "mod_code": [
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;",
        "while ( n -- )"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        13
      ],
      "mod_code": [
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        21
      ],
      "mod_code": [
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        10,
        12
      ],
      "mod_code": [
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "while ( n -- )"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        13
      ],
      "mod_code": [
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        21
      ],
      "mod_code": [
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        10,
        13
      ],
      "mod_code": [
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        10,
        13,
        21
      ],
      "mod_code": [
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        10,
        21
      ],
      "mod_code": [
        "return a * b % mod ;",
        "int fpow ( int a , int b ) ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "return a * b % mod ;",
        "ret = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘ret’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        12
      ],
      "mod_code": [
        "return a * b % mod ;",
        "ret = 1 ;",
        "while ( n -- )"
      ],
      "err_line": 11,
      "err_msg": "‘ret’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        13
      ],
      "mod_code": [
        "return a * b % mod ;",
        "ret = 1 ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 11,
      "err_msg": "‘ret’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        21
      ],
      "mod_code": [
        "return a * b % mod ;",
        "ret = 1 ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘ret’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        13
      ],
      "mod_code": [
        "return a * b % mod ;",
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 11,
      "err_msg": "‘ret’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        21
      ],
      "mod_code": [
        "return a * b % mod ;",
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘ret’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        21
      ],
      "mod_code": [
        "return a * b % mod ;",
        "ret = 1 ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘ret’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        13
      ],
      "mod_code": [
        "return a * b % mod ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 13,
      "err_msg": "‘ret’ cannot be used as a function"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        21
      ],
      "mod_code": [
        "return a * b % mod ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "‘ret’ cannot be used as a function"
    },
    {
      "mod_line": [
        8,
        12,
        21
      ],
      "mod_code": [
        "return a * b % mod ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 21,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "return a * b % mod ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 13,
      "err_msg": "‘ret’ cannot be used as a function"
    },
    {
      "mod_line": [
        8,
        13,
        21
      ],
      "mod_code": [
        "return a * b % mod ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "‘ret’ cannot be used as a function"
    },
    {
      "mod_line": [
        8,
        21
      ],
      "mod_code": [
        "return a * b % mod ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 21,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        12
      ],
      "mod_code": [
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;",
        "while ( n -- )"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        13
      ],
      "mod_code": [
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        21
      ],
      "mod_code": [
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        13
      ],
      "mod_code": [
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        21
      ],
      "mod_code": [
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        21
      ],
      "mod_code": [
        "int fpow ( int a , int b ) ;",
        "ret = 1 ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "int fpow ( int a , int b ) ;",
        "while ( n -- )"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        12,
        13
      ],
      "mod_code": [
        "int fpow ( int a , int b ) ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        12,
        13,
        21
      ],
      "mod_code": [
        "int fpow ( int a , int b ) ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        12,
        21
      ],
      "mod_code": [
        "int fpow ( int a , int b ) ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "int fpow ( int a , int b ) ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        13,
        21
      ],
      "mod_code": [
        "int fpow ( int a , int b ) ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        21
      ],
      "mod_code": [
        "int fpow ( int a , int b ) ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "ret = 1 ;",
        "while ( n -- )"
      ],
      "err_line": 11,
      "err_msg": "‘ret’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        13
      ],
      "mod_code": [
        "ret = 1 ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 11,
      "err_msg": "‘ret’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        13,
        21
      ],
      "mod_code": [
        "ret = 1 ;",
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘ret’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        21
      ],
      "mod_code": [
        "ret = 1 ;",
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘ret’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 11,
      "err_msg": "‘ret’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        21
      ],
      "mod_code": [
        "ret = 1 ;",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘ret’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21
      ],
      "mod_code": [
        "ret = 1 ;",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘ret’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )"
      ],
      "err_line": 13,
      "err_msg": "‘ret’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        13,
        21
      ],
      "mod_code": [
        "while ( n -- )",
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "‘ret’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        21
      ],
      "mod_code": [
        "while ( n -- )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 21,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21
      ],
      "mod_code": [
        "if ( n && ret ( ret , a ) )",
        "k = fpow ( 2 , m ) , ans = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "‘ret’ cannot be used as a function"
    }
  ]
}