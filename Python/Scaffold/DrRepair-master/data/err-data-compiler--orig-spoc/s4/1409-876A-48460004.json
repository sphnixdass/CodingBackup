{
  "meta": {
    "index": 1409,
    "hitid": "3QMELQS6Y55OPA5SN6E8KPYG7WG6RP",
    "workerid": "A1APYLD4DUK33J",
    "probid": "876A",
    "subid": "48460004"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n , a , b , c",
      "code": "int n , a , b , c ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , a , b , c",
      "code": "cin >> n >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n is 1",
      "code": "if ( n == 1 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print 0 and newline",
      "code": "cout << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare integer m = minimum of b and a",
      "code": "int m = min ( b , a ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if n is 2",
      "code": "if ( n == 2 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print m and newline",
      "code": "cout << m << endl ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "let n be n - 2",
      "code": "n = n - 2 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increment m by minimum of ( m and c ) * n",
      "code": "m += min ( m , c ) * n ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "print m and newline",
      "code": "cout << m << endl ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "m += min ( m ) * n ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "int n , a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        11,
        1,
        2
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "int n , a , b , c , c ;",
        "cin >> n >> a , b >> c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        11,
        1,
        2,
        9
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "int n , a , b , c , c ;",
        "cin >> n >> a , b >> c ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        11,
        1,
        2,
        6
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "int n , a , b , c , c ;",
        "cin >> n >> a , b >> c ;",
        "int m = min ( m , a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        11,
        1,
        2,
        5
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "int n , a , b , c , c ;",
        "cin >> n >> a , b >> c ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        11,
        1,
        9
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "int n , a , b , c , c ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        11,
        1,
        9,
        6
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "int n , a , b , c , c ;",
        "else else",
        "int m = min ( m , a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        11,
        1,
        9,
        5
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "int n , a , b , c , c ;",
        "else else",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        11,
        1,
        6
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "int n , a , b , c , c ;",
        "int m = min ( m , a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        11,
        1,
        6,
        5
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "int n , a , b , c , c ;",
        "int m = min ( m , a ) ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        11,
        1,
        5
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "int n , a , b , c , c ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "cin >> n >> a , b >> c ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        11,
        2,
        9
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "cin >> n >> a , b >> c ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        2,
        9,
        6
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "cin >> n >> a , b >> c ;",
        "else else",
        "int m = min ( m , a ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        2,
        9,
        5
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "cin >> n >> a , b >> c ;",
        "else else",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        2,
        6
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "cin >> n >> a , b >> c ;",
        "int m = min ( m , a ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        11,
        2,
        6,
        5
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "cin >> n >> a , b >> c ;",
        "int m = min ( m , a ) ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        2,
        5
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "cin >> n >> a , b >> c ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        9,
        6
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "else else",
        "int m = min ( m , a ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        9,
        6,
        5
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "else else",
        "int m = min ( m , a ) ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        9,
        5
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "else else",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "int m = min ( m , a ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        11,
        6,
        5
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "int m = min ( m , a ) ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "m += min ( m ) * n ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , a , b , c , c ;",
        "cin >> n >> a , b >> c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        2,
        9
      ],
      "mod_code": [
        "int n , a , b , c , c ;",
        "cin >> n >> a , b >> c ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        2,
        9,
        6
      ],
      "mod_code": [
        "int n , a , b , c , c ;",
        "cin >> n >> a , b >> c ;",
        "else else",
        "int m = min ( m , a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        2,
        9,
        5
      ],
      "mod_code": [
        "int n , a , b , c , c ;",
        "cin >> n >> a , b >> c ;",
        "else else",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        2,
        6
      ],
      "mod_code": [
        "int n , a , b , c , c ;",
        "cin >> n >> a , b >> c ;",
        "int m = min ( m , a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        2,
        6,
        5
      ],
      "mod_code": [
        "int n , a , b , c , c ;",
        "cin >> n >> a , b >> c ;",
        "int m = min ( m , a ) ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        2,
        5
      ],
      "mod_code": [
        "int n , a , b , c , c ;",
        "cin >> n >> a , b >> c ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int n , a , b , c , c ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        9,
        6
      ],
      "mod_code": [
        "int n , a , b , c , c ;",
        "else else",
        "int m = min ( m , a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        9,
        6,
        5
      ],
      "mod_code": [
        "int n , a , b , c , c ;",
        "else else",
        "int m = min ( m , a ) ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        9,
        5
      ],
      "mod_code": [
        "int n , a , b , c , c ;",
        "else else",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , a , b , c , c ;",
        "int m = min ( m , a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        6,
        5
      ],
      "mod_code": [
        "int n , a , b , c , c ;",
        "int m = min ( m , a ) ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , a , b , c , c ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "cin >> n >> a , b >> c ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        9,
        6
      ],
      "mod_code": [
        "cin >> n >> a , b >> c ;",
        "else else",
        "int m = min ( m , a ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        9,
        6,
        5
      ],
      "mod_code": [
        "cin >> n >> a , b >> c ;",
        "else else",
        "int m = min ( m , a ) ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        9,
        5
      ],
      "mod_code": [
        "cin >> n >> a , b >> c ;",
        "else else",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        6,
        5
      ],
      "mod_code": [
        "cin >> n >> a , b >> c ;",
        "int m = min ( m , a ) ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "cin >> n >> a , b >> c ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "else else",
        "int m = min ( m , a ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        6,
        5
      ],
      "mod_code": [
        "else else",
        "int m = min ( m , a ) ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "else else",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "int m = min ( m , a ) ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}