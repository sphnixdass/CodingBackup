{
  "meta": {
    "index": 1415,
    "hitid": "3TFJJUELSHJW17X8I7CA5HIIRQBC28",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "876A",
    "subid": "48346722"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "make ints a , b , and c",
      "code": "int a , b , c ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read a , b , and c",
      "code": "cin >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "make integer result = 0",
      "code": "int result = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "let integer location = 1",
      "code": "int location = 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if location is equal to 1",
      "code": "if ( location == 1 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set result to result + min of a and b",
      "code": "result += min ( a , b ) ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if a is greater than b",
      "code": "if ( a > b )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "set location to 3",
      "code": "location = 3 ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "else do",
      "code": "else",
      "indent": 3
    },
    {
      "line": 13,
      "text": "set location to 2",
      "code": "location = 2 ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "else if location is equal to 2",
      "code": "else if ( location == 2 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "set result to result + min ( a , c )",
      "code": "result += min ( a , c ) ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if a is greater than c",
      "code": "if ( a > c )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "set location to 3",
      "code": "location = 3 ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "else do",
      "code": "else",
      "indent": 3
    },
    {
      "line": 19,
      "text": "set location to 1",
      "code": "location = 1 ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "otherwise",
      "code": "else",
      "indent": 2
    },
    {
      "line": 21,
      "text": "add min ( b , c ) to result",
      "code": "result += min ( b , c ) ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "if b is greater than c",
      "code": "if ( b > c )",
      "indent": 3
    },
    {
      "line": 23,
      "text": "set location to 2",
      "code": "location = 2 ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 25,
      "text": "set location to 1",
      "code": "location = 1 ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "show result",
      "code": "cout << result << endl ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "result = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘result’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( location == l )"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "else else"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        24,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "else else",
        "cin >> a , b >> c ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        24,
        4,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "else else",
        "cin >> a , b >> c ;",
        "else ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        24,
        4,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "else else",
        "cin >> a , b >> c ;",
        "int location = 2 ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        24,
        4,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "else else",
        "cin >> a , b >> c ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        24,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "else else",
        "else ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        24,
        20,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "else else",
        "else ;",
        "int location = 2 ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        24,
        20,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "else else",
        "else ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        24,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "else else",
        "int location = 2 ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        24,
        13,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "else else",
        "int location = 2 ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        24,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "else else",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        4,
        20,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cin >> a , b >> c ;",
        "else ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        4,
        13,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cin >> a , b >> c ;",
        "int location = 2 ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        4,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cin >> a , b >> c ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        20,
        13,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "else ;",
        "int location = 2 ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        20,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "else ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        13,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "int location = 2 ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        4
      ],
      "mod_code": [
        "else else",
        "cin >> a , b >> c ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        24,
        4,
        20
      ],
      "mod_code": [
        "else else",
        "cin >> a , b >> c ;",
        "else ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        24,
        4,
        20,
        13
      ],
      "mod_code": [
        "else else",
        "cin >> a , b >> c ;",
        "else ;",
        "int location = 2 ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        24,
        4,
        20,
        12
      ],
      "mod_code": [
        "else else",
        "cin >> a , b >> c ;",
        "else ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        4,
        13
      ],
      "mod_code": [
        "else else",
        "cin >> a , b >> c ;",
        "int location = 2 ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        24,
        4,
        13,
        12
      ],
      "mod_code": [
        "else else",
        "cin >> a , b >> c ;",
        "int location = 2 ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        4,
        12
      ],
      "mod_code": [
        "else else",
        "cin >> a , b >> c ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        20
      ],
      "mod_code": [
        "else else",
        "else ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        24,
        20,
        13
      ],
      "mod_code": [
        "else else",
        "else ;",
        "int location = 2 ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        24,
        20,
        13,
        12
      ],
      "mod_code": [
        "else else",
        "else ;",
        "int location = 2 ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        20,
        12
      ],
      "mod_code": [
        "else else",
        "else ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        13
      ],
      "mod_code": [
        "else else",
        "int location = 2 ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        24,
        13,
        12
      ],
      "mod_code": [
        "else else",
        "int location = 2 ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        12
      ],
      "mod_code": [
        "else else",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        20,
        13,
        12
      ],
      "mod_code": [
        "cin >> a , b >> c ;",
        "else ;",
        "int location = 2 ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        20,
        12
      ],
      "mod_code": [
        "cin >> a , b >> c ;",
        "else ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        13,
        12
      ],
      "mod_code": [
        "cin >> a , b >> c ;",
        "int location = 2 ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "cin >> a , b >> c ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        13,
        12
      ],
      "mod_code": [
        "else ;",
        "int location = 2 ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        12
      ],
      "mod_code": [
        "else ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "int location = 2 ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}