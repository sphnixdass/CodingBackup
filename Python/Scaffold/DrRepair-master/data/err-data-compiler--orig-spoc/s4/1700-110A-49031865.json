{
  "meta": {
    "index": 1700,
    "hitid": "367O8HRHKG2MB21RJ7LYD1JYX7LS46",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "110A",
    "subid": "49031865"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set int j equal to 0",
      "code": "int j = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to less than s . length ( ) do the following",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if s [ i ] is 4 or s [ i ] is equal to 7 then do undefined",
      "code": "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' ) j ++ ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if j is 4 | | j then do undefined",
      "code": "if ( j == 4 || j == 7 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "output YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "output NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "s = s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "s ++ ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int j equal ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘equal’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . length ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 4 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( j == \" 4 \" || j == ' j ' )"
      ],
      "err_line": 7,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "s = s ;",
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        7
      ],
      "mod_code": [
        "s = s ;",
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "if ( j == ' 4 ' || j == ' j ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        7,
        3
      ],
      "mod_code": [
        "s = s ;",
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "if ( j == ' 4 ' || j == ' j ' )",
        "int j equal ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        7,
        9
      ],
      "mod_code": [
        "s = s ;",
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "if ( j == ' 4 ' || j == ' j ' )",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        7,
        2
      ],
      "mod_code": [
        "s = s ;",
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "if ( j == ' 4 ' || j == ' j ' )",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        3
      ],
      "mod_code": [
        "s = s ;",
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "int j equal ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        3,
        9
      ],
      "mod_code": [
        "s = s ;",
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "int j equal ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        3,
        2
      ],
      "mod_code": [
        "s = s ;",
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "int j equal ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        9
      ],
      "mod_code": [
        "s = s ;",
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        9,
        2
      ],
      "mod_code": [
        "s = s ;",
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "else else",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        2
      ],
      "mod_code": [
        "s = s ;",
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "s = s ;",
        "if ( j == ' 4 ' || j == ' j ' )"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        3
      ],
      "mod_code": [
        "s = s ;",
        "if ( j == ' 4 ' || j == ' j ' )",
        "int j equal ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        3,
        9
      ],
      "mod_code": [
        "s = s ;",
        "if ( j == ' 4 ' || j == ' j ' )",
        "int j equal ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        3,
        2
      ],
      "mod_code": [
        "s = s ;",
        "if ( j == ' 4 ' || j == ' j ' )",
        "int j equal ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        9
      ],
      "mod_code": [
        "s = s ;",
        "if ( j == ' 4 ' || j == ' j ' )",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        9,
        2
      ],
      "mod_code": [
        "s = s ;",
        "if ( j == ' 4 ' || j == ' j ' )",
        "else else",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        2
      ],
      "mod_code": [
        "s = s ;",
        "if ( j == ' 4 ' || j == ' j ' )",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "s = s ;",
        "int j equal ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        9
      ],
      "mod_code": [
        "s = s ;",
        "int j equal ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        9,
        2
      ],
      "mod_code": [
        "s = s ;",
        "int j equal ;",
        "else else",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        2
      ],
      "mod_code": [
        "s = s ;",
        "int j equal ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "s = s ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        2
      ],
      "mod_code": [
        "s = s ;",
        "else else",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "s = s ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "if ( j == ' 4 ' || j == ' j ' )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        7,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "if ( j == ' 4 ' || j == ' j ' )",
        "int j equal ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘equal’"
    },
    {
      "mod_line": [
        5,
        7,
        3,
        9
      ],
      "mod_code": [
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "if ( j == ' 4 ' || j == ' j ' )",
        "int j equal ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘equal’"
    },
    {
      "mod_line": [
        5,
        7,
        3,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "if ( j == ' 4 ' || j == ' j ' )",
        "int j equal ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "if ( j == ' 4 ' || j == ' j ' )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "if ( j == ' 4 ' || j == ' j ' )",
        "else else",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        7,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "if ( j == ' 4 ' || j == ' j ' )",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "int j equal ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘equal’"
    },
    {
      "mod_line": [
        5,
        3,
        9
      ],
      "mod_code": [
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "int j equal ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘equal’"
    },
    {
      "mod_line": [
        5,
        3,
        9,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "int j equal ;",
        "else else",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        3,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "int j equal ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        9,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "else else",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "if ( j == ' 4 ' || j == ' j ' )",
        "int j equal ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘equal’"
    },
    {
      "mod_line": [
        7,
        3,
        9
      ],
      "mod_code": [
        "if ( j == ' 4 ' || j == ' j ' )",
        "int j equal ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘equal’"
    },
    {
      "mod_line": [
        7,
        3,
        9,
        2
      ],
      "mod_code": [
        "if ( j == ' 4 ' || j == ' j ' )",
        "int j equal ;",
        "else else",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        3,
        2
      ],
      "mod_code": [
        "if ( j == ' 4 ' || j == ' j ' )",
        "int j equal ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "if ( j == ' 4 ' || j == ' j ' )",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        9,
        2
      ],
      "mod_code": [
        "if ( j == ' 4 ' || j == ' j ' )",
        "else else",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "if ( j == ' 4 ' || j == ' j ' )",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "int j equal ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘equal’"
    },
    {
      "mod_line": [
        3,
        9,
        2
      ],
      "mod_code": [
        "int j equal ;",
        "else else",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "int j equal ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "else else",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}