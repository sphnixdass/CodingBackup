{
  "meta": {
    "index": 1042,
    "hitid": "37AQKJ12TXI77NTWN8RWVERCFPITTU",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "151A",
    "subid": "48935788"
  },
  "lines": [
    {
      "line": 0,
      "text": "n , k , l , c , d , p , nl , np = int",
      "code": "int n , k , l , c , d , p , nl , np ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n then k then l then c then d then p then nl then np",
      "code": "cin >> n >> k >> l >> c >> d >> p >> nl >> np ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "print ( min of ( min of k * l / nl , c * d ) , p / np ) / n",
      "code": "cout << min ( min ( ( ( k * l ) / nl ) , ( c * d ) ) , ( p / np ) ) / n << endl ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cout << ( min ( k * l / nl , c * d ) , p / d ) / p / np ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cout << min ( min ( k * l / nl , c * d ) , p / np ) / p ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "cout << ( min ( k * l / nl , c * d ) , p / d ) / p / np ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        3,
        0
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "cout << ( min ( k * l / nl , c * d ) , p / d ) / p / np ) << endl ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "cout << min ( min ( k * l / nl , c * d ) , p / np ) / p ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        3,
        0
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "cout << min ( min ( k * l / nl , c * d ) , p / np ) / p ) << endl ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        2,
        0
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "cout << ( min ( k * l / nl , c * d ) , p / d ) / p / np ) << endl ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "cout << min ( min ( k * l / nl , c * d ) , p / np ) / p ) << endl ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    }
  ]
}