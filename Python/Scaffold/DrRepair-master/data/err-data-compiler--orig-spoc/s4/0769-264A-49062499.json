{
  "meta": {
    "index": 769,
    "hitid": "33CLA8O0MI5K83Y3OZHCEVBT0VFRF9",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "264A",
    "subid": "49062499"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "ss = string",
      "code": "string ss ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read ss",
      "code": "cin >> ss ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "idx = integer with idx = ( cast to int ) ss . size ( ) - 1",
      "code": "int idx = ( int ) ss . size ( ) - 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "ans = vector of integer with ans = ( ( cast to int ) ss . size ( ) )",
      "code": "vector < int > ans ( ( int ) ss . size ( ) ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to ( cast to int ) ss . size ( ) exclusive",
      "code": "for ( int i = 0 ; i < ( int ) ss . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if ss [ i ] is r , continue next iteration",
      "code": "if ( ss [ i ] == ' r ' ) continue ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "ans [ idx ] = i",
      "code": "ans [ idx ] = i ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "decrement idx",
      "code": "idx -- ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "idx = 0",
      "code": "idx = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to ( cast to int ) ss . size ( ) exclusive",
      "code": "for ( int i = 0 ; i < ( int ) ss . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if ss [ i ] is l , continue next iteration",
      "code": "if ( ss [ i ] == ' l ' ) continue ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "ans [ idx ] = i",
      "code": "ans [ idx ] = i ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increment idx",
      "code": "idx ++ ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i = 0 to ans . size ( ) exclusive , print ans [ i ] + 1",
      "code": "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( ss [ i ] == r ) continue ;"
      ],
      "err_line": 6,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( ss [ i ] == l ) continue ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "ss >> ss ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "vector < int > ans ( ( int ) ss . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( ss [ i ] == r ) { continue ; }"
      ],
      "err_line": 6,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int idx = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int idx’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( ss [ i ] == l ) { continue ; }"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "if ( ss [ i ] == r ) continue ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4,
        6,
        12
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "if ( ss [ i ] == r ) continue ;",
        "if ( ss [ i ] == l ) continue ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        16
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "if ( ss [ i ] == r ) continue ;",
        "if ( ss [ i ] == l ) continue ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        10
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "if ( ss [ i ] == r ) continue ;",
        "if ( ss [ i ] == l ) continue ;",
        "int idx = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4,
        6,
        16
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "if ( ss [ i ] == r ) continue ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4,
        6,
        16,
        12
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "if ( ss [ i ] == r ) continue ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;",
        "if ( ss [ i ] == l ) { continue ; }"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4,
        6,
        16,
        10
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "if ( ss [ i ] == r ) continue ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;",
        "int idx = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4,
        6,
        12
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "if ( ss [ i ] == r ) continue ;",
        "if ( ss [ i ] == l ) { continue ; }"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4,
        6,
        12,
        10
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "if ( ss [ i ] == r ) continue ;",
        "if ( ss [ i ] == l ) { continue ; }",
        "int idx = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4,
        6,
        10
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "if ( ss [ i ] == r ) continue ;",
        "int idx = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "if ( ss [ i ] == l ) continue ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4,
        12,
        16
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "if ( ss [ i ] == l ) continue ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4,
        12,
        16,
        10
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "if ( ss [ i ] == l ) continue ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;",
        "int idx = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4,
        12,
        10
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "if ( ss [ i ] == l ) continue ;",
        "int idx = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4,
        16,
        12
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;",
        "if ( ss [ i ] == l ) { continue ; }"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4,
        16,
        12,
        10
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;",
        "if ( ss [ i ] == l ) { continue ; }",
        "int idx = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4,
        16,
        10
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;",
        "int idx = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "if ( ss [ i ] == l ) { continue ; }"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4,
        12,
        10
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "if ( ss [ i ] == l ) { continue ; }",
        "int idx = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "vector < int > ans = ( int ) ss . size ( ) ;",
        "int idx = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "if ( ss [ i ] == r ) continue ;",
        "if ( ss [ i ] == l ) continue ;"
      ],
      "err_line": 6,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        16
      ],
      "mod_code": [
        "if ( ss [ i ] == r ) continue ;",
        "if ( ss [ i ] == l ) continue ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        16,
        10
      ],
      "mod_code": [
        "if ( ss [ i ] == r ) continue ;",
        "if ( ss [ i ] == l ) continue ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;",
        "int idx = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        10
      ],
      "mod_code": [
        "if ( ss [ i ] == r ) continue ;",
        "if ( ss [ i ] == l ) continue ;",
        "int idx = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "if ( ss [ i ] == r ) continue ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        16,
        12
      ],
      "mod_code": [
        "if ( ss [ i ] == r ) continue ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;",
        "if ( ss [ i ] == l ) { continue ; }"
      ],
      "err_line": 6,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        16,
        12,
        10
      ],
      "mod_code": [
        "if ( ss [ i ] == r ) continue ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;",
        "if ( ss [ i ] == l ) { continue ; }",
        "int idx = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        16,
        10
      ],
      "mod_code": [
        "if ( ss [ i ] == r ) continue ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;",
        "int idx = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "if ( ss [ i ] == r ) continue ;",
        "if ( ss [ i ] == l ) { continue ; }"
      ],
      "err_line": 6,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        10
      ],
      "mod_code": [
        "if ( ss [ i ] == r ) continue ;",
        "if ( ss [ i ] == l ) { continue ; }",
        "int idx = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "if ( ss [ i ] == r ) continue ;",
        "int idx = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        16
      ],
      "mod_code": [
        "if ( ss [ i ] == l ) continue ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        16,
        10
      ],
      "mod_code": [
        "if ( ss [ i ] == l ) continue ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;",
        "int idx = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int idx’"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "if ( ss [ i ] == l ) continue ;",
        "int idx = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int idx’"
    },
    {
      "mod_line": [
        16,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;",
        "if ( ss [ i ] == l ) { continue ; }"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        12,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;",
        "if ( ss [ i ] == l ) { continue ; }",
        "int idx = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int idx’"
    },
    {
      "mod_line": [
        16,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] + 1 ;",
        "int idx = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int idx’"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "if ( ss [ i ] == l ) { continue ; }",
        "int idx = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int idx’"
    }
  ]
}