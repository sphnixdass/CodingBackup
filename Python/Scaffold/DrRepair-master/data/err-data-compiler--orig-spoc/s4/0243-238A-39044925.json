{
  "meta": {
    "index": 243,
    "hitid": "3DZKABX2ZIZ5YYVA6HWL7MFTOO3CVF",
    "workerid": "AIWEXPJAU66D9",
    "probid": "238A",
    "subid": "39044925"
  },
  "lines": [
    {
      "line": 0,
      "text": "define constant integer mod = 1e9 + 9",
      "code": "const int mod = 1e9 + 9 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new constant integer N with value 1e5 + 100",
      "code": "const int N = 1e5 + 100 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare long longs n , m , p and ans with ans = 1",
      "code": "long long n , m , p , ans = 1 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read user input to n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "assign 1 to p",
      "code": "p = 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "in a loop from i = 1 to m inclusive , multiply p by 2 , then change it to p % mod",
      "code": "for ( int i = 1 ; i <= m ; i ++ ) p *= 2 , p %= mod ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i from 1 to n inclusive , change the value of ans to ans multiplied by ( p - i + mod ) , then change ans to ans modulo mod",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) ans *= ( p - i + mod ) , ans %= mod ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "const int N + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i += 2 ) { p %= mod ; }",
        "for ( int i = 1 ; i <= n ; i ++ ) { ans += ( p - i + mod ) ; }",
        "cout << ans ;",
        "const int N + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        6,
        7,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i += 2 ) { p %= mod ; }",
        "for ( int i = 1 ; i <= n ; i ++ ) { ans += ( p - i + mod ) ; }",
        "const int N + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        6,
        8,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i += 2 ) { p %= mod ; }",
        "cout << ans ;",
        "const int N + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        6,
        8,
        1,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i += 2 ) { p %= mod ; }",
        "cout << ans ;",
        "const int N + 100 ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { ans += ( ( p - i + mod ) ) ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i += 2 ) { p %= mod ; }",
        "const int N + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        6,
        1,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i += 2 ) { p %= mod ; }",
        "const int N + 100 ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { ans += ( ( p - i + mod ) ) ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        7,
        6,
        8,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { ans += ( p - i + mod ) ; }",
        "for ( int i = 1 ; i <= m ; i += 2 ) { p += mod ; }",
        "cout << ans ;",
        "const int N + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        7,
        6,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { ans += ( p - i + mod ) ; }",
        "for ( int i = 1 ; i <= m ; i += 2 ) { p += mod ; }",
        "const int N + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        7,
        8,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { ans += ( p - i + mod ) ; }",
        "cout << ans ;",
        "const int N + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { ans += ( p - i + mod ) ; }",
        "const int N + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        6,
        8,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i += 2 ) { p += mod ; }",
        "cout << ans ;",
        "const int N + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        6,
        8,
        1,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i += 2 ) { p += mod ; }",
        "cout << ans ;",
        "const int N + 100 ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { ans += ( ( p - i + mod ) ) ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i += 2 ) { p += mod ; }",
        "const int N + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        6,
        1,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i += 2 ) { p += mod ; }",
        "const int N + 100 ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { ans += ( ( p - i + mod ) ) ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "cout << ans ;",
        "const int N + 100 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        8,
        1,
        7
      ],
      "mod_code": [
        "cout << ans ;",
        "const int N + 100 ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { ans += ( ( p - i + mod ) ) ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "const int N + 100 ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { ans += ( ( p - i + mod ) ) ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    }
  ]
}