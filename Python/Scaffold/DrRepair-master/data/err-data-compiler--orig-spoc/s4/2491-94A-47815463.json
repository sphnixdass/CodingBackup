{
  "meta": {
    "index": 2491,
    "hitid": "3G4VVJO6PZAACCA2CI4KPD3J79CPKL",
    "workerid": "AIWEXPJAU66D9",
    "probid": "94A",
    "subid": "47815463"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new string s and string array digit with 10 elements",
      "code": "string s , digit [ 10 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read standard input to s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "start for loop from i = 0 to sizeof ( digit ) / sizeof ( digit [ 0 ] ) exclusive , read digit [ i ] from the input",
      "code": "for ( size_t i = 0 ; i < sizeof ( digit ) / sizeof ( digit [ 0 ] ) ; ++ i ) { cin >> digit [ i ] ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "in a loop from i = 0 to 8 exclusive incrementing i",
      "code": "for ( size_t i = 0 ; i < 8 ; ++ i )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "new string x",
      "code": "string x = s . substr ( i * 10 , 10 ) ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for j from 0 to 10 exclusive",
      "code": "for ( size_t j = 0 ; j < 10 ; ++ j )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if x = digit [ j ]",
      "code": "if ( x == digit [ j ] )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "print j",
      "code": "cout << j ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print new line to the standard output",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s , digit , digit ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string digit , digit , digit ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 7,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( x = digit [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "could not convert ‘x.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=<char, std::char_traits<char>, std::allocator<char> >(digit[j])’ from ‘std::__cxx11::basic_string<char>’ to ‘bool’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "string x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        5,
        8
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "string x ;",
        "cout << j << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        5,
        8,
        7
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "string x ;",
        "cout << j << endl ;",
        "if ( x = digit [ j ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        5,
        8,
        6
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "string x ;",
        "cout << j << endl ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        5,
        8,
        9
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "string x ;",
        "cout << j << endl ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        5,
        7
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "string x ;",
        "if ( x = digit [ j ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        5,
        7,
        6
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "string x ;",
        "if ( x = digit [ j ] )",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        5,
        7,
        9
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "string x ;",
        "if ( x = digit [ j ] )",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        5,
        6
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "string x ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        5,
        6,
        9
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "string x ;",
        "for ( j = 0 ; j < 10 ; j ++ )",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        5,
        9
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "string x ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "cout << j << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        8,
        7
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "cout << j << endl ;",
        "if ( x = digit [ j ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        8,
        7,
        6
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "cout << j << endl ;",
        "if ( x = digit [ j ] )",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        8,
        7,
        9
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "cout << j << endl ;",
        "if ( x = digit [ j ] )",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        8,
        6
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "cout << j << endl ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        8,
        6,
        9
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "cout << j << endl ;",
        "for ( j = 0 ; j < 10 ; j ++ )",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        8,
        9
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "cout << j << endl ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "if ( x = digit [ j ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        7,
        6
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "if ( x = digit [ j ] )",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        7,
        6,
        9
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "if ( x = digit [ j ] )",
        "for ( j = 0 ; j < 10 ; j ++ )",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        7,
        9
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "if ( x = digit [ j ] )",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        6,
        9
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "for ( j = 0 ; j < 10 ; j ++ )",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        5,
        8,
        7
      ],
      "mod_code": [
        "string x ;",
        "cout << j << endl ;",
        "if ( x = digit [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "could not convert ‘x.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=<char, std::char_traits<char>, std::allocator<char> >(digit[j])’ from ‘std::__cxx11::basic_string<char>’ to ‘bool’"
    },
    {
      "mod_line": [
        5,
        8,
        7,
        6
      ],
      "mod_code": [
        "string x ;",
        "cout << j << endl ;",
        "if ( x = digit [ j ] )",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        7,
        9
      ],
      "mod_code": [
        "string x ;",
        "cout << j << endl ;",
        "if ( x = digit [ j ] )",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "could not convert ‘x.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=<char, std::char_traits<char>, std::allocator<char> >(digit[j])’ from ‘std::__cxx11::basic_string<char>’ to ‘bool’"
    },
    {
      "mod_line": [
        5,
        8,
        6
      ],
      "mod_code": [
        "string x ;",
        "cout << j << endl ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        6,
        9
      ],
      "mod_code": [
        "string x ;",
        "cout << j << endl ;",
        "for ( j = 0 ; j < 10 ; j ++ )",
        "break break ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        9
      ],
      "mod_code": [
        "string x ;",
        "cout << j << endl ;",
        "break break ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "string x ;",
        "if ( x = digit [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "could not convert ‘x.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=<char, std::char_traits<char>, std::allocator<char> >(digit[j])’ from ‘std::__cxx11::basic_string<char>’ to ‘bool’"
    },
    {
      "mod_line": [
        5,
        7,
        6
      ],
      "mod_code": [
        "string x ;",
        "if ( x = digit [ j ] )",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        6,
        9
      ],
      "mod_code": [
        "string x ;",
        "if ( x = digit [ j ] )",
        "for ( j = 0 ; j < 10 ; j ++ )",
        "break break ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "string x ;",
        "if ( x = digit [ j ] )",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "could not convert ‘x.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=<char, std::char_traits<char>, std::allocator<char> >(digit[j])’ from ‘std::__cxx11::basic_string<char>’ to ‘bool’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "string x ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "string x ;",
        "for ( j = 0 ; j < 10 ; j ++ )",
        "break break ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "string x ;",
        "break break ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "cout << j << endl ;",
        "if ( x = digit [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "could not convert ‘x.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=<char, std::char_traits<char>, std::allocator<char> >(digit[j])’ from ‘std::__cxx11::basic_string<char>’ to ‘bool’"
    },
    {
      "mod_line": [
        8,
        7,
        6
      ],
      "mod_code": [
        "cout << j << endl ;",
        "if ( x = digit [ j ] )",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7,
        6,
        9
      ],
      "mod_code": [
        "cout << j << endl ;",
        "if ( x = digit [ j ] )",
        "for ( j = 0 ; j < 10 ; j ++ )",
        "break break ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7,
        9
      ],
      "mod_code": [
        "cout << j << endl ;",
        "if ( x = digit [ j ] )",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "could not convert ‘x.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=<char, std::char_traits<char>, std::allocator<char> >(digit[j])’ from ‘std::__cxx11::basic_string<char>’ to ‘bool’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "cout << j << endl ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        9
      ],
      "mod_code": [
        "cout << j << endl ;",
        "for ( j = 0 ; j < 10 ; j ++ )",
        "break break ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "cout << j << endl ;",
        "break break ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "if ( x = digit [ j ] )",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        9
      ],
      "mod_code": [
        "if ( x = digit [ j ] )",
        "for ( j = 0 ; j < 10 ; j ++ )",
        "break break ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "if ( x = digit [ j ] )",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "could not convert ‘x.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator=<char, std::char_traits<char>, std::allocator<char> >(digit[j])’ from ‘std::__cxx11::basic_string<char>’ to ‘bool’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < 10 ; j ++ )",
        "break break ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    }
  ]
}