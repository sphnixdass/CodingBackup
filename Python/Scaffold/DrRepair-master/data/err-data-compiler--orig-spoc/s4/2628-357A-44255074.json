{
  "meta": {
    "index": 2628,
    "hitid": "3G57RS03HHZB2MOT3XP2RBC8Z9M52Q",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "357A",
    "subid": "44255074"
  },
  "lines": [
    {
      "line": 0,
      "text": "INF = 2 ^ 29",
      "code": "const int INF = 1 << 29 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "m = int",
      "code": "int m ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "C = array of 105 int",
      "code": "int C [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "x , y = int",
      "code": "int x , y ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "sum , cc = 0",
      "code": "int sum = 0 , cc = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to m inclusive",
      "code": "for ( int i = 1 ; i <= m ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read C [ i ]",
      "code": "cin >> C [ i ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "add C [ i ] to sum",
      "code": "sum += C [ i ] ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read x , y",
      "code": "cin >> x >> y ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 1 to m inclusive",
      "code": "for ( int i = 1 ; i <= m ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "add C [ i ] to cc",
      "code": "cc += C [ i ] ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if cc > = x and sum - cc > = x and cc < = y and sum - cc < = y",
      "code": "if ( cc >= x && sum - cc >= x && cc <= y && sum - cc <= y )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print i + 1",
      "code": "cout << i + 1 << endl ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print 0",
      "code": "cout << 0 << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int x , y , y ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sum = 0 , cc = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "C >> C [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int [105]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "cin >> n ;",
        "int x , y , y ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        5,
        3,
        1
      ],
      "mod_code": [
        "cin >> n ;",
        "int x , y , y ;",
        "char m ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        5,
        3,
        1,
        8
      ],
      "mod_code": [
        "cin >> n ;",
        "int x , y , y ;",
        "char m ;",
        "C >> C [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        5,
        3,
        1,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "int x , y , y ;",
        "char m ;",
        "cin >> x , y ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        5,
        3,
        1,
        12
      ],
      "mod_code": [
        "cin >> n ;",
        "int x , y , y ;",
        "char m ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        5,
        3,
        8
      ],
      "mod_code": [
        "cin >> n ;",
        "int x , y , y ;",
        "C >> C [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        5,
        3,
        8,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "int x , y , y ;",
        "C >> C [ i ] ;",
        "cin >> x , y ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        5,
        3,
        8,
        12
      ],
      "mod_code": [
        "cin >> n ;",
        "int x , y , y ;",
        "C >> C [ i ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        5,
        3,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "int x , y , y ;",
        "cin >> x , y ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        5,
        3,
        11,
        12
      ],
      "mod_code": [
        "cin >> n ;",
        "int x , y , y ;",
        "cin >> x , y ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        5,
        3,
        12
      ],
      "mod_code": [
        "cin >> n ;",
        "int x , y , y ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "cin >> n ;",
        "char m ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        8
      ],
      "mod_code": [
        "cin >> n ;",
        "char m ;",
        "C >> C [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        8,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "char m ;",
        "C >> C [ i ] ;",
        "cin >> x , y ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        8,
        12
      ],
      "mod_code": [
        "cin >> n ;",
        "char m ;",
        "C >> C [ i ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "char m ;",
        "cin >> x , y ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        11,
        12
      ],
      "mod_code": [
        "cin >> n ;",
        "char m ;",
        "cin >> x , y ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        12
      ],
      "mod_code": [
        "cin >> n ;",
        "char m ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "cin >> n ;",
        "C >> C [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "C >> C [ i ] ;",
        "cin >> x , y ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        11,
        12
      ],
      "mod_code": [
        "cin >> n ;",
        "C >> C [ i ] ;",
        "cin >> x , y ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        12
      ],
      "mod_code": [
        "cin >> n ;",
        "C >> C [ i ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "cin >> x , y ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        12
      ],
      "mod_code": [
        "cin >> n ;",
        "cin >> x , y ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "int x , y , y ;",
        "char m ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        3,
        1,
        8
      ],
      "mod_code": [
        "int x , y , y ;",
        "char m ;",
        "C >> C [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        3,
        1,
        8,
        11
      ],
      "mod_code": [
        "int x , y , y ;",
        "char m ;",
        "C >> C [ i ] ;",
        "cin >> x , y ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        3,
        1,
        8,
        12
      ],
      "mod_code": [
        "int x , y , y ;",
        "char m ;",
        "C >> C [ i ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        3,
        1,
        11
      ],
      "mod_code": [
        "int x , y , y ;",
        "char m ;",
        "cin >> x , y ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        3,
        1,
        11,
        12
      ],
      "mod_code": [
        "int x , y , y ;",
        "char m ;",
        "cin >> x , y ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        3,
        1,
        12
      ],
      "mod_code": [
        "int x , y , y ;",
        "char m ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "int x , y , y ;",
        "C >> C [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        3,
        8,
        11
      ],
      "mod_code": [
        "int x , y , y ;",
        "C >> C [ i ] ;",
        "cin >> x , y ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        3,
        8,
        11,
        12
      ],
      "mod_code": [
        "int x , y , y ;",
        "C >> C [ i ] ;",
        "cin >> x , y ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        3,
        8,
        12
      ],
      "mod_code": [
        "int x , y , y ;",
        "C >> C [ i ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "int x , y , y ;",
        "cin >> x , y ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        3,
        11,
        12
      ],
      "mod_code": [
        "int x , y , y ;",
        "cin >> x , y ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "int x , y , y ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "char m ;",
        "C >> C [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int [105]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        1,
        8,
        11
      ],
      "mod_code": [
        "char m ;",
        "C >> C [ i ] ;",
        "cin >> x , y ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int [105]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        1,
        8,
        11,
        12
      ],
      "mod_code": [
        "char m ;",
        "C >> C [ i ] ;",
        "cin >> x , y ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int [105]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        1,
        8,
        12
      ],
      "mod_code": [
        "char m ;",
        "C >> C [ i ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int [105]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        1,
        11,
        12
      ],
      "mod_code": [
        "char m ;",
        "cin >> x , y ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "char m ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "C >> C [ i ] ;",
        "cin >> x , y ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int [105]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        8,
        11,
        12
      ],
      "mod_code": [
        "C >> C [ i ] ;",
        "cin >> x , y ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int [105]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "C >> C [ i ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int [105]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "cin >> x , y ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}