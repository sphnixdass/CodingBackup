{
  "meta": {
    "index": 686,
    "hitid": "3D1TUISJWIUWYMSAT1I2M3B5NMFUIB",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "327A",
    "subid": "49075221"
  },
  "lines": [
    {
      "line": 0,
      "text": "cnt1 , cnt0 = int array of size 105 each",
      "code": "int cnt1 [ 105 ] , cnt0 [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "a = int array of size n + 1",
      "code": "int a [ n + 1 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set cnt1 [ 0 ] to 0",
      "code": "cnt1 [ 0 ] = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set cnt0 [ 0 ] to 0",
      "code": "cnt0 [ 0 ] = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "maxv = int with maxv = - 100",
      "code": "int maxv = - 100 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set cnt1 [ i ] to cnt1 [ i - 1 ] + a [ i ]",
      "code": "cnt1 [ i ] = cnt1 [ i - 1 ] + a [ i ] ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set cnt0 [ i ] to i - cnt1 [ i ]",
      "code": "cnt0 [ i ] = i - cnt1 [ i ] ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for j = i to n inclusive",
      "code": "for ( int j = i ; j <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + cnt1 [ n ] > maxv set maxv to ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + cnt1 [ n ]",
      "code": "if ( ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + cnt1 [ n ] > maxv ) maxv = ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + cnt1 [ n ] ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print maxv",
      "code": "cout << maxv << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int maxv = \" 100 \" ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( j = i ; j <= n ; j ++ )"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        14
      ],
      "mod_code": [
        "if ( ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) ) + cnt1 [ n ] ;",
        "for ( j = i ; j <= n ; j ++ )"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        14,
        18
      ],
      "mod_code": [
        "if ( ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) ) + cnt1 [ n ] ;",
        "for ( j = i ; j <= n ; j ++ )",
        "cout << maxv ;"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        14,
        18,
        7
      ],
      "mod_code": [
        "if ( ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) ) + cnt1 [ n ] ;",
        "for ( j = i ; j <= n ; j ++ )",
        "cout << maxv ;",
        "cnt0 [ 0 ] = ' 0 ' ;"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        14,
        18,
        6
      ],
      "mod_code": [
        "if ( ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) ) + cnt1 [ n ] ;",
        "for ( j = i ; j <= n ; j ++ )",
        "cout << maxv ;",
        "cnt1 [ 0 ] = ' 0 ' ;"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        14,
        18,
        0
      ],
      "mod_code": [
        "if ( ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) ) + cnt1 [ n ] ;",
        "for ( j = i ; j <= n ; j ++ )",
        "cout << maxv ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        15,
        14,
        7
      ],
      "mod_code": [
        "if ( ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) ) + cnt1 [ n ] ;",
        "for ( j = i ; j <= n ; j ++ )",
        "cnt0 [ 0 ] = ' 0 ' ;"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        14,
        7,
        6
      ],
      "mod_code": [
        "if ( ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) ) + cnt1 [ n ] ;",
        "for ( j = i ; j <= n ; j ++ )",
        "cnt0 [ 0 ] = ' 0 ' ;",
        "cnt1 [ 0 ] = ' 0 ' ;"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        14,
        7,
        0
      ],
      "mod_code": [
        "if ( ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) ) + cnt1 [ n ] ;",
        "for ( j = i ; j <= n ; j ++ )",
        "cnt0 [ 0 ] = ' 0 ' ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        15,
        14,
        6
      ],
      "mod_code": [
        "if ( ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) ) + cnt1 [ n ] ;",
        "for ( j = i ; j <= n ; j ++ )",
        "cnt1 [ 0 ] = ' 0 ' ;"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        14,
        6,
        0
      ],
      "mod_code": [
        "if ( ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) ) + cnt1 [ n ] ;",
        "for ( j = i ; j <= n ; j ++ )",
        "cnt1 [ 0 ] = ' 0 ' ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        15,
        14,
        0
      ],
      "mod_code": [
        "if ( ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) ) + cnt1 [ n ] ;",
        "for ( j = i ; j <= n ; j ++ )",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        15,
        18,
        7,
        0
      ],
      "mod_code": [
        "if ( ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) ) + cnt1 [ n ] ;",
        "cout << maxv ;",
        "cnt0 [ 0 ] = ' 0 ' ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        15,
        18,
        6,
        0
      ],
      "mod_code": [
        "if ( ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) ) + cnt1 [ n ] ;",
        "cout << maxv ;",
        "cnt1 [ 0 ] = ' 0 ' ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        15,
        18,
        0
      ],
      "mod_code": [
        "if ( ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) ) + cnt1 [ n ] ;",
        "cout << maxv ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        15,
        7,
        6,
        0
      ],
      "mod_code": [
        "if ( ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) ) + cnt1 [ n ] ;",
        "cnt0 [ 0 ] = ' 0 ' ;",
        "cnt1 [ 0 ] = ' 0 ' ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        15,
        7,
        0
      ],
      "mod_code": [
        "if ( ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) ) + cnt1 [ n ] ;",
        "cnt0 [ 0 ] = ' 0 ' ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        15,
        6,
        0
      ],
      "mod_code": [
        "if ( ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) ) + cnt1 [ n ] ;",
        "cnt1 [ 0 ] = ' 0 ' ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        15,
        0
      ],
      "mod_code": [
        "if ( ( cnt0 [ j ] - cnt0 [ i - 1 ] ) - ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) + ( cnt1 [ j ] - cnt1 [ i - 1 ] ) ) + cnt1 [ n ] ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        14,
        18
      ],
      "mod_code": [
        "for ( j = i ; j <= n ; j ++ )",
        "cout << maxv ;"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        7
      ],
      "mod_code": [
        "for ( j = i ; j <= n ; j ++ )",
        "cout << maxv ;",
        "cnt0 [ 0 ] = ' 0 ' ;"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        7,
        6
      ],
      "mod_code": [
        "for ( j = i ; j <= n ; j ++ )",
        "cout << maxv ;",
        "cnt0 [ 0 ] = ' 0 ' ;",
        "cnt1 [ 0 ] = ' 0 ' ;"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        7,
        0
      ],
      "mod_code": [
        "for ( j = i ; j <= n ; j ++ )",
        "cout << maxv ;",
        "cnt0 [ 0 ] = ' 0 ' ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        14,
        18,
        6
      ],
      "mod_code": [
        "for ( j = i ; j <= n ; j ++ )",
        "cout << maxv ;",
        "cnt1 [ 0 ] = ' 0 ' ;"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        6,
        0
      ],
      "mod_code": [
        "for ( j = i ; j <= n ; j ++ )",
        "cout << maxv ;",
        "cnt1 [ 0 ] = ' 0 ' ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        14,
        18,
        0
      ],
      "mod_code": [
        "for ( j = i ; j <= n ; j ++ )",
        "cout << maxv ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "for ( j = i ; j <= n ; j ++ )",
        "cnt0 [ 0 ] = ' 0 ' ;"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        7,
        6
      ],
      "mod_code": [
        "for ( j = i ; j <= n ; j ++ )",
        "cnt0 [ 0 ] = ' 0 ' ;",
        "cnt1 [ 0 ] = ' 0 ' ;"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        7,
        6,
        0
      ],
      "mod_code": [
        "for ( j = i ; j <= n ; j ++ )",
        "cnt0 [ 0 ] = ' 0 ' ;",
        "cnt1 [ 0 ] = ' 0 ' ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        14,
        7,
        0
      ],
      "mod_code": [
        "for ( j = i ; j <= n ; j ++ )",
        "cnt0 [ 0 ] = ' 0 ' ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "for ( j = i ; j <= n ; j ++ )",
        "cnt1 [ 0 ] = ' 0 ' ;"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        6,
        0
      ],
      "mod_code": [
        "for ( j = i ; j <= n ; j ++ )",
        "cnt1 [ 0 ] = ' 0 ' ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        14,
        0
      ],
      "mod_code": [
        "for ( j = i ; j <= n ; j ++ )",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        18,
        7,
        6,
        0
      ],
      "mod_code": [
        "cout << maxv ;",
        "cnt0 [ 0 ] = ' 0 ' ;",
        "cnt1 [ 0 ] = ' 0 ' ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        18,
        7,
        0
      ],
      "mod_code": [
        "cout << maxv ;",
        "cnt0 [ 0 ] = ' 0 ' ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        18,
        6,
        0
      ],
      "mod_code": [
        "cout << maxv ;",
        "cnt1 [ 0 ] = ' 0 ' ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        18,
        0
      ],
      "mod_code": [
        "cout << maxv ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        7,
        6,
        0
      ],
      "mod_code": [
        "cnt0 [ 0 ] = ' 0 ' ;",
        "cnt1 [ 0 ] = ' 0 ' ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "cnt0 [ 0 ] = ' 0 ' ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "cnt1 [ 0 ] = ' 0 ' ;",
        "int cnt0 [ 105 ] , cnt0 [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cnt0 [105]’"
    }
  ]
}