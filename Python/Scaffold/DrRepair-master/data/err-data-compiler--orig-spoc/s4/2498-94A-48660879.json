{
  "meta": {
    "index": 2498,
    "hitid": "3MJ9GGZYO3088S0AYTGJZMSURNQA24",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "94A",
    "subid": "48660879"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "i , j , k = integers with k = 0",
      "code": "int i , j , k = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "c = character",
      "code": "char c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "s , s1 , s2 = strings with s1 , s2 = array of size 10",
      "code": "string s , s1 [ 10 ] , s2 [ 10 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to 79",
      "code": "for ( i = 0 ; i < 80 ; )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = i to ( i + 10 ) exclusisve , s1 [ k ] = s1 [ k ] + s [ j ]",
      "code": "for ( j = i ; j < ( i + 10 ) ; j ++ ) { s1 [ k ] += s [ j ] ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "i = j",
      "code": "i = j ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to 9 , read s2 [ i ]",
      "code": "for ( i = 0 ; i < 10 ; i ++ ) { cin >> s2 [ i ] ; }",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to 7",
      "code": "for ( i = 0 ; i < 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for j = 0 to 9",
      "code": "for ( j = 0 ; j < 10 ; j ++ )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if ( s1 [ i ] is s2 [ j ] )",
      "code": "if ( s1 [ i ] == s2 [ j ] )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "print j",
      "code": "cout << j ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int i , j , k , k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string s , s1 , s2 [ 10 ] , s2 [ 10 ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘std::__cxx11::string s2 [10]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( s1 [ i ] == ' s2 ' )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 79 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 79 ; i ++ )",
        "for ( int j = i ; j <= ( i + 10 ) ; j ++ ) s1 [ k ] = s1 [ k ] + s [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        10
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 79 ; i ++ )",
        "for ( int j = i ; j <= ( i + 10 ) ; j ++ ) s1 [ k ] = s1 [ k ] + s [ j ] ;",
        "for ( int i = 0 ; i < 9 ; i ++ ) cin >> s2 [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        11
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 79 ; i ++ )",
        "for ( int j = i ; j <= ( i + 10 ) ; j ++ ) s1 [ k ] = s1 [ k ] + s [ j ] ;",
        "for ( int i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        12
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 79 ; i ++ )",
        "for ( int j = i ; j <= ( i + 10 ) ; j ++ ) s1 [ k ] = s1 [ k ] + s [ j ] ;",
        "for ( int j = 0 ; j < 9 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        14
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 79 ; i ++ )",
        "for ( int j = i ; j <= ( i + 10 ) ; j ++ ) s1 [ k ] = s1 [ k ] + s [ j ] ;",
        "cout << j << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        5,
        10
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 79 ; i ++ )",
        "for ( int i = 0 ; i < 9 ; i ++ ) cin >> s2 [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        5,
        10,
        11
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 79 ; i ++ )",
        "for ( int i = 0 ; i < 9 ; i ++ ) cin >> s2 [ i ] ;",
        "for ( int i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        5,
        10,
        12
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 79 ; i ++ )",
        "for ( int i = 0 ; i < 9 ; i ++ ) cin >> s2 [ i ] ;",
        "for ( int j = 0 ; j < 9 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        5,
        10,
        14
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 79 ; i ++ )",
        "for ( int i = 0 ; i < 9 ; i ++ ) cin >> s2 [ i ] ;",
        "cout << j << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        5,
        11
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 79 ; i ++ )",
        "for ( int i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        5,
        11,
        12
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 79 ; i ++ )",
        "for ( int i = 0 ; i < 7 ; i ++ )",
        "for ( int j = 0 ; j < 9 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        5,
        11,
        14
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 79 ; i ++ )",
        "for ( int i = 0 ; i < 7 ; i ++ )",
        "cout << j << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        5,
        12
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 79 ; i ++ )",
        "for ( int j = 0 ; j < 9 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        5,
        12,
        14
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 79 ; i ++ )",
        "for ( int j = 0 ; j < 9 ; j ++ )",
        "cout << j << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        5,
        14
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 79 ; i ++ )",
        "cout << j << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int j = i ; j <= ( i + 10 ) ; j ++ ) s1 [ k ] = s1 [ k ] + s [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        6,
        10
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int j = i ; j <= ( i + 10 ) ; j ++ ) s1 [ k ] = s1 [ k ] + s [ j ] ;",
        "for ( int i = 0 ; i < 9 ; i ++ ) cin >> s2 [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        6,
        10,
        11
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int j = i ; j <= ( i + 10 ) ; j ++ ) s1 [ k ] = s1 [ k ] + s [ j ] ;",
        "for ( int i = 0 ; i < 9 ; i ++ ) cin >> s2 [ i ] ;",
        "for ( int i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        6,
        10,
        12
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int j = i ; j <= ( i + 10 ) ; j ++ ) s1 [ k ] = s1 [ k ] + s [ j ] ;",
        "for ( int i = 0 ; i < 9 ; i ++ ) cin >> s2 [ i ] ;",
        "for ( int j = 0 ; j < 9 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        6,
        10,
        14
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int j = i ; j <= ( i + 10 ) ; j ++ ) s1 [ k ] = s1 [ k ] + s [ j ] ;",
        "for ( int i = 0 ; i < 9 ; i ++ ) cin >> s2 [ i ] ;",
        "cout << j << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        6,
        11
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int j = i ; j <= ( i + 10 ) ; j ++ ) s1 [ k ] = s1 [ k ] + s [ j ] ;",
        "for ( int i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        6,
        11,
        12
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int j = i ; j <= ( i + 10 ) ; j ++ ) s1 [ k ] = s1 [ k ] + s [ j ] ;",
        "for ( int i = 0 ; i < 7 ; i ++ )",
        "for ( int j = 0 ; j < 9 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        6,
        11,
        14
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int j = i ; j <= ( i + 10 ) ; j ++ ) s1 [ k ] = s1 [ k ] + s [ j ] ;",
        "for ( int i = 0 ; i < 7 ; i ++ )",
        "cout << j << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        6,
        12
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int j = i ; j <= ( i + 10 ) ; j ++ ) s1 [ k ] = s1 [ k ] + s [ j ] ;",
        "for ( int j = 0 ; j < 9 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        6,
        12,
        14
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int j = i ; j <= ( i + 10 ) ; j ++ ) s1 [ k ] = s1 [ k ] + s [ j ] ;",
        "for ( int j = 0 ; j < 9 ; j ++ )",
        "cout << j << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        6,
        14
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int j = i ; j <= ( i + 10 ) ; j ++ ) s1 [ k ] = s1 [ k ] + s [ j ] ;",
        "cout << j << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 9 ; i ++ ) cin >> s2 [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        10,
        11
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 9 ; i ++ ) cin >> s2 [ i ] ;",
        "for ( int i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        10,
        11,
        12
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 9 ; i ++ ) cin >> s2 [ i ] ;",
        "for ( int i = 0 ; i < 7 ; i ++ )",
        "for ( int j = 0 ; j < 9 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        10,
        11,
        14
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 9 ; i ++ ) cin >> s2 [ i ] ;",
        "for ( int i = 0 ; i < 7 ; i ++ )",
        "cout << j << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        10,
        12
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 9 ; i ++ ) cin >> s2 [ i ] ;",
        "for ( int j = 0 ; j < 9 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        10,
        12,
        14
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 9 ; i ++ ) cin >> s2 [ i ] ;",
        "for ( int j = 0 ; j < 9 ; j ++ )",
        "cout << j << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        10,
        14
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 9 ; i ++ ) cin >> s2 [ i ] ;",
        "cout << j << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        11,
        12
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 7 ; i ++ )",
        "for ( int j = 0 ; j < 9 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        11,
        12,
        14
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 7 ; i ++ )",
        "for ( int j = 0 ; j < 9 ; j ++ )",
        "cout << j << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        11,
        14
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int i = 0 ; i < 7 ; i ++ )",
        "cout << j << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int j = 0 ; j < 9 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        12,
        14
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "for ( int j = 0 ; j < 9 ; j ++ )",
        "cout << j << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "string s [ 10 ] , s1 [ 10 ] , s2 [ 10 ] ;",
        "cout << j << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’)"
    }
  ]
}