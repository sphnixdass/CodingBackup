{
  "meta": {
    "index": 688,
    "hitid": "3FCO4VKOZ47IK6ESKAZ0RWZTNIB7ED",
    "workerid": "A1AYVATMT88U1W",
    "probid": "327A",
    "subid": "49050192"
  },
  "lines": [
    {
      "line": 0,
      "text": "the 1001th element of array a is equal to 0",
      "code": "int a [ 1001 ] = { 0 } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let n , c be integers with c = 0",
      "code": "int n , c = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if a [ i ] is equal to 1",
      "code": "if ( a [ i ] == 1 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "a [ i ] = - 1",
      "code": "a [ i ] = - 1 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "increment c by 1",
      "code": "c ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "a [ i ] is equal to 1",
      "code": "a [ i ] = 1 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "let ans , maxx be integers with ans = a [ 0 ] , maxx = a [ 0 ]",
      "code": "int ans = a [ 0 ] , maxx = a [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "maxx = maximum of a [ i ] and maxx + a [ i ]",
      "code": "maxx = max ( a [ i ] , maxx + a [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "ans = maximum of ans and maxx",
      "code": "ans = max ( ans , maxx ) ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print c + ans and newline",
      "code": "cout << c + ans << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "a [ i ] = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "a [ 0 ] = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "a >> a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [1001]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "ans = a [ 0 ] , maxx = a [ 0 ] ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        13,
        5
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "a >> a [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        13,
        5,
        6
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "a >> a [ i ] ;",
        "if ( a [ i ] == ' 1 ' )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        13,
        5,
        4
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "a >> a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        13,
        6
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "if ( a [ i ] == ' 1 ' )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        13,
        6,
        4
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "if ( a [ i ] == ' 1 ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        13,
        4
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        6
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "a >> a [ i ] ;",
        "if ( a [ i ] == ' 1 ' )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        6,
        13
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "a >> a [ i ] ;",
        "if ( a [ i ] == ' 1 ' )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        6,
        4
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "a >> a [ i ] ;",
        "if ( a [ i ] == ' 1 ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        13
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "a >> a [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        13,
        4
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "a >> a [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        4
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "a >> a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "if ( a [ i ] == ' 1 ' )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        13
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "if ( a [ i ] == ' 1 ' )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        13,
        4
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "if ( a [ i ] == ' 1 ' )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        4
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "if ( a [ i ] == ' 1 ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        13,
        4
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "a >> a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [1001]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        13,
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "a >> a [ i ] ;",
        "if ( a [ i ] == ' 1 ' )"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [1001]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        13,
        5,
        6,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "a >> a [ i ] ;",
        "if ( a [ i ] == ' 1 ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        5,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "a >> a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "if ( a [ i ] == ' 1 ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "if ( a [ i ] == ' 1 ' )"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [1001]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        6,
        13
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "if ( a [ i ] == ' 1 ' )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [1001]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        4
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "if ( a [ i ] == ' 1 ' )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        4
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "if ( a [ i ] == ' 1 ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [1001]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        13,
        4
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "if ( a [ i ] == ' 1 ' )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        13,
        4
      ],
      "mod_code": [
        "if ( a [ i ] == ' 1 ' )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "if ( a [ i ] == ' 1 ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}