{
  "meta": {
    "index": 647,
    "hitid": "3PUV2Q8SV4Y0UC3I1W0WQG345UKDBQ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "14A",
    "subid": "46028074"
  },
  "lines": [
    {
      "line": 0,
      "text": "let s be a 2d array of characters with size 100 by 100",
      "code": "char s [ 100 ] [ 100 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers imx , imn , jmx and jmn with imn and jmn = 1222",
      "code": "int imx , imn = 1222 , jmx , jmn = 1222 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "n and m = integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read s [ i ] [ j ]",
      "code": "cin >> s [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set character ch to s [ i ] [ j ]",
      "code": "char ch = s [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if ch is equal to ' * '",
      "code": "if ( ch == ' * ' )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "imx = max of imx and i",
      "code": "imx = max ( imx , i ) ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "imn = min of imn and i",
      "code": "imn = min ( imn , i ) ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "jmx = max of jmx and j",
      "code": "jmx = max ( jmx , j ) ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "jmn = min of jmn and j",
      "code": "jmn = min ( jmn , j ) ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for integer k = imn to imx inclusive",
      "code": "for ( int k = imn ; k <= imx ; k ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for integer p = jmn to jmx inclusive print s [ k ] [ p ]",
      "code": "for ( int p = jmn ; p <= jmx ; p ++ ) { cout << s [ k ] [ p ] ; }",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char s [ 100 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "ch = s [ i ] [ j ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else if ( ch == ' * ' )"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "ch = s [ i ] [ j ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        7
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "ch = s [ i ] [ j ] ;",
        "cout << s [ i ] [ j ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        7,
        0
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "ch = s [ i ] [ j ] ;",
        "cout << s [ i ] [ j ] ;",
        "char s [ 100 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        8,
        7,
        9
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "ch = s [ i ] [ j ] ;",
        "cout << s [ i ] [ j ] ;",
        "else if ( ch == ' * ' )"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        7,
        12
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "ch = s [ i ] [ j ] ;",
        "cout << s [ i ] [ j ] ;",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        0
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "ch = s [ i ] [ j ] ;",
        "char s [ 100 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        8,
        0,
        9
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "ch = s [ i ] [ j ] ;",
        "char s [ 100 ] ;",
        "else if ( ch == ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        8,
        0,
        12
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "ch = s [ i ] [ j ] ;",
        "char s [ 100 ] ;",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        8,
        9
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "ch = s [ i ] [ j ] ;",
        "else if ( ch == ' * ' )"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        12
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "ch = s [ i ] [ j ] ;",
        "else if ( ch == ' * ' )",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        12
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "ch = s [ i ] [ j ] ;",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        0
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "cout << s [ i ] [ j ] ;",
        "char s [ 100 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        7,
        0,
        9
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "cout << s [ i ] [ j ] ;",
        "char s [ 100 ] ;",
        "else if ( ch == ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        7,
        0,
        12
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "cout << s [ i ] [ j ] ;",
        "char s [ 100 ] ;",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        7,
        9
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "cout << s [ i ] [ j ] ;",
        "else if ( ch == ' * ' )"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1,
        7,
        9,
        12
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "cout << s [ i ] [ j ] ;",
        "else if ( ch == ' * ' )",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "char s [ 100 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        0,
        9
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "char s [ 100 ] ;",
        "else if ( ch == ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        0,
        9,
        12
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "char s [ 100 ] ;",
        "else if ( ch == ' * ' )",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        0,
        12
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "char s [ 100 ] ;",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "else if ( ch == ' * ' )"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1,
        9,
        12
      ],
      "mod_code": [
        "int imx , imn , jmx , jmn = 1222 ;",
        "else if ( ch == ' * ' )",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "ch = s [ i ] [ j ] ;",
        "cout << s [ i ] [ j ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7,
        0
      ],
      "mod_code": [
        "ch = s [ i ] [ j ] ;",
        "cout << s [ i ] [ j ] ;",
        "char s [ 100 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        7,
        0,
        9
      ],
      "mod_code": [
        "ch = s [ i ] [ j ] ;",
        "cout << s [ i ] [ j ] ;",
        "char s [ 100 ] ;",
        "else if ( ch == ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        7,
        0,
        12
      ],
      "mod_code": [
        "ch = s [ i ] [ j ] ;",
        "cout << s [ i ] [ j ] ;",
        "char s [ 100 ] ;",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        7,
        9
      ],
      "mod_code": [
        "ch = s [ i ] [ j ] ;",
        "cout << s [ i ] [ j ] ;",
        "else if ( ch == ' * ' )"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7,
        9,
        12
      ],
      "mod_code": [
        "ch = s [ i ] [ j ] ;",
        "cout << s [ i ] [ j ] ;",
        "else if ( ch == ' * ' )",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7,
        12
      ],
      "mod_code": [
        "ch = s [ i ] [ j ] ;",
        "cout << s [ i ] [ j ] ;",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "ch = s [ i ] [ j ] ;",
        "char s [ 100 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        0,
        9
      ],
      "mod_code": [
        "ch = s [ i ] [ j ] ;",
        "char s [ 100 ] ;",
        "else if ( ch == ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        0,
        9,
        12
      ],
      "mod_code": [
        "ch = s [ i ] [ j ] ;",
        "char s [ 100 ] ;",
        "else if ( ch == ' * ' )",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        0,
        12
      ],
      "mod_code": [
        "ch = s [ i ] [ j ] ;",
        "char s [ 100 ] ;",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "ch = s [ i ] [ j ] ;",
        "else if ( ch == ' * ' )"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        12
      ],
      "mod_code": [
        "ch = s [ i ] [ j ] ;",
        "else if ( ch == ' * ' )",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "ch = s [ i ] [ j ] ;",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "cout << s [ i ] [ j ] ;",
        "char s [ 100 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        0,
        9
      ],
      "mod_code": [
        "cout << s [ i ] [ j ] ;",
        "char s [ 100 ] ;",
        "else if ( ch == ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        0,
        9,
        12
      ],
      "mod_code": [
        "cout << s [ i ] [ j ] ;",
        "char s [ 100 ] ;",
        "else if ( ch == ' * ' )",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        0,
        12
      ],
      "mod_code": [
        "cout << s [ i ] [ j ] ;",
        "char s [ 100 ] ;",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "cout << s [ i ] [ j ] ;",
        "else if ( ch == ' * ' )"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        9,
        12
      ],
      "mod_code": [
        "cout << s [ i ] [ j ] ;",
        "else if ( ch == ' * ' )",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "char s [ 100 ] ;",
        "else if ( ch == ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        9,
        12
      ],
      "mod_code": [
        "char s [ 100 ] ;",
        "else if ( ch == ' * ' )",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "char s [ 100 ] ;",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "else if ( ch == ' * ' )",
        "int jmx = max ( jmx , j ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    }
  ]
}