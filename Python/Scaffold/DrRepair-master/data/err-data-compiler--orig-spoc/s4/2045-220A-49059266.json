{
  "meta": {
    "index": 2045,
    "hitid": "3JY0Q5X05J0ZXDLKJ8TIXCXYZ11GGY",
    "workerid": "AIWEXPJAU66D9",
    "probid": "220A",
    "subid": "49059266"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long long variables n , i , j , k and cnt with cnt = 0",
      "code": "long long n , i , j , k , cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create vectors of long long a and b with n + 1 element",
      "code": "vector < long long > a ( n + 1 ) , b ( n + 1 ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let v be a vector of long longs",
      "code": "vector < long long > v ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "assign a [ i ] to b [ i ]",
      "code": "b [ i ] = a [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "sort b",
      "code": "sort ( b . begin ( ) , b . begin ( ) + n ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i from 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if a [ i ] ! = b [ i ]",
      "code": "if ( a [ i ] != b [ i ] )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "push i into v",
      "code": "v . push_back ( i ) ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if cnt is greater than 2",
      "code": "if ( cnt > 2 )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if cnt is equal to 0",
      "code": "if ( cnt == 0 )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 22,
      "text": "swap a [ v [ 0 ] ] and a [ v [ 1 ] ]",
      "code": "swap ( a [ v [ 0 ] ] , a [ v [ 1 ] ] ) ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "declare bool f = 0",
      "code": "bool f = 0 ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "for i from 1 to n exclusive",
      "code": "for ( i = 1 ; i < n ; i ++ )",
      "indent": 3
    },
    {
      "line": 25,
      "text": "if a [ i ] is less than a [ i - 1 ]",
      "code": "if ( a [ i ] < a [ i - 1 ] )",
      "indent": 4
    },
    {
      "line": 26,
      "text": "set f to 1",
      "code": "f = 1 ;",
      "indent": 5
    },
    {
      "line": 27,
      "text": "break the loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 30,
      "text": "if f = 1",
      "code": "if ( f == 1 )",
      "indent": 3
    },
    {
      "line": 31,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 4
    },
    {
      "line": 32,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 33,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 4
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 6,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < long long > a , b = n + 1 ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘long long int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "a >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "b [ i ] ] = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "sort ( b , b + n ) ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "v . push ( i ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘class std::vector<long long int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "swap ( a [ 0 [ 0 ] ] , a [ v [ 1 ] ] ) ;"
      ],
      "err_line": 22,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 32,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "sort ( b . begin ( ) , b . end ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        9,
        27
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        9,
        27,
        7
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "break break ;",
        "b [ i ] ] = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        3,
        9,
        27,
        6
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "break break ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        9,
        27,
        19
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "break break ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        9,
        7
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "b [ i ] ] = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        3,
        9,
        7,
        6
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "b [ i ] ] = a [ i ] ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        9,
        7,
        19
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "b [ i ] ] = a [ i ] ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        3,
        9,
        6
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        9,
        6,
        19
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "a >> a [ i ] ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        9,
        19
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        27
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        27,
        7
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "break break ;",
        "b [ i ] ] = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        3,
        27,
        7,
        6
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "break break ;",
        "b [ i ] ] = a [ i ] ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        27,
        7,
        19
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "break break ;",
        "b [ i ] ] = a [ i ] ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        3,
        27,
        6
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "break break ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        27,
        6,
        19
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "break break ;",
        "a >> a [ i ] ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        27,
        19
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "break break ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "b [ i ] ] = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        3,
        7,
        6
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "b [ i ] ] = a [ i ] ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        7,
        6,
        19
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "b [ i ] ] = a [ i ] ;",
        "a >> a [ i ] ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        7,
        19
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "b [ i ] ] = a [ i ] ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        6,
        19
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "a >> a [ i ] ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        19
      ],
      "mod_code": [
        "vector < long long > a , b [ n + 1 ] ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        9,
        27
      ],
      "mod_code": [
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "break break ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        9,
        27,
        7
      ],
      "mod_code": [
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "break break ;",
        "b [ i ] ] = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        27,
        7,
        6
      ],
      "mod_code": [
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "break break ;",
        "b [ i ] ] = a [ i ] ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        9,
        27,
        7,
        19
      ],
      "mod_code": [
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "break break ;",
        "b [ i ] ] = a [ i ] ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        27,
        6
      ],
      "mod_code": [
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "break break ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        9,
        27,
        6,
        19
      ],
      "mod_code": [
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "break break ;",
        "a >> a [ i ] ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        9,
        27,
        19
      ],
      "mod_code": [
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "break break ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "b [ i ] ] = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        7,
        6
      ],
      "mod_code": [
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "b [ i ] ] = a [ i ] ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        9,
        7,
        6,
        19
      ],
      "mod_code": [
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "b [ i ] ] = a [ i ] ;",
        "a >> a [ i ] ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        9,
        7,
        19
      ],
      "mod_code": [
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "b [ i ] ] = a [ i ] ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        9,
        6,
        19
      ],
      "mod_code": [
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "a >> a [ i ] ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        27,
        7
      ],
      "mod_code": [
        "break break ;",
        "b [ i ] ] = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        27,
        7,
        6
      ],
      "mod_code": [
        "break break ;",
        "b [ i ] ] = a [ i ] ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        27,
        7,
        6,
        19
      ],
      "mod_code": [
        "break break ;",
        "b [ i ] ] = a [ i ] ;",
        "a >> a [ i ] ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        27,
        7,
        19
      ],
      "mod_code": [
        "break break ;",
        "b [ i ] ] = a [ i ] ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        27,
        6
      ],
      "mod_code": [
        "break break ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        27,
        6,
        19
      ],
      "mod_code": [
        "break break ;",
        "a >> a [ i ] ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        27,
        19
      ],
      "mod_code": [
        "break break ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "b [ i ] ] = a [ i ] ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        7,
        6,
        19
      ],
      "mod_code": [
        "b [ i ] ] = a [ i ] ;",
        "a >> a [ i ] ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        7,
        19
      ],
      "mod_code": [
        "b [ i ] ] = a [ i ] ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        19
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "if ( cnt == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    }
  ]
}