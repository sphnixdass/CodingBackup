{
  "meta": {
    "index": 1031,
    "hitid": "306996CF6WE62HN6L3G1PE2VHZS1B4",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "151A",
    "subid": "48707494"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , k , l , c , d , p , nl , np = long long int",
      "code": "long long int n , k , l , c , d , p , nl , np ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n then k then l then c then d then p then nl then np",
      "code": "cin >> n >> k >> l >> c >> d >> p >> nl >> np ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "drink = long long int with drink = ( k * l ) / nl",
      "code": "long long int drink = ( k * l ) / nl ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "slice = long long int with slice = ( c * d ) / 1",
      "code": "long long int slice = ( c * d ) / 1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "salt = long long int with salt = p / np",
      "code": "long long int salt = p / np ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "min = long long int with min = INT_MAX",
      "code": "long long int min = INT_MAX ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if drink is less or equal to both slice and salt",
      "code": "if ( drink <= slice && drink <= salt )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set min to drink",
      "code": "min = drink ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else if salt is less or equal to both slice and drink",
      "code": "else if ( salt <= slice && salt <= drink )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set min to salt",
      "code": "min = salt ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else if slice is less or equal to both drink and salt",
      "code": "else if ( slice <= drink && slice <= salt )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "set min to slice",
      "code": "min = slice ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if min is not INT_MAX",
      "code": "if ( min != INT_MAX )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print min / n",
      "code": "cout << min / n << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print \" 0 \"",
      "code": "cout << \" 0 \" << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    }
  ]
}