{
  "meta": {
    "index": 2501,
    "hitid": "3OYHVNTV5TSSRCY1XIR50DYTX4GKOZ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "94A",
    "subid": "41965175"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare new string a",
      "code": "string a ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "solve is a void function",
      "code": "void solve ( )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare new ints i , j and l",
      "code": "int i , j , l = a . length ( ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create new array of strings b with size 10",
      "code": "string b [ 10 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read 10 elements to b from the user input",
      "code": "for ( i = 0 ; i < 10 ; i ++ ) cin >> b [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "in a for loop , change i from 0 to l exclusive adding 10 to i",
      "code": "for ( i = 0 ; i < l ; i += 10 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to 10 exclusive incrementing j",
      "code": "for ( j = 0 ; j < 10 ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if substring of a from position i with length 10 = b [ j ] , print j",
      "code": "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "print new line to the standard output",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 11,
      "text": "read a , call solve ( ) and keep looping",
      "code": "while ( cin >> a ) solve ( ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "while ( cin >> a >> solve ( ) )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>’ and ‘void’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char a ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘a’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int i , j , l , l ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char b [ 10 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘char’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "solve ( cin , a ) ;"
      ],
      "err_line": 11,
      "err_msg": "too many arguments to function ‘void solve()’"
    },
    {
      "mod_line": [
        2,
        7,
        11
      ],
      "mod_code": [
        "int i , j , l ;",
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "while ( cin >> a >> solve ( ) )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>’ and ‘void’)"
    },
    {
      "mod_line": [
        2,
        7,
        11,
        0
      ],
      "mod_code": [
        "int i , j , l ;",
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "while ( cin >> a >> solve ( ) )",
        "char a ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘substr’ in ‘a’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        7,
        11,
        3
      ],
      "mod_code": [
        "int i , j , l ;",
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "while ( cin >> a >> solve ( ) )",
        "char b [ 10 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘char’)"
    },
    {
      "mod_line": [
        2,
        7,
        11,
        1
      ],
      "mod_code": [
        "int i , j , l ;",
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "while ( cin >> a >> solve ( ) )",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7,
        0
      ],
      "mod_code": [
        "int i , j , l ;",
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "char a ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘substr’ in ‘a’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        7,
        0,
        3
      ],
      "mod_code": [
        "int i , j , l ;",
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "char a ;",
        "char b [ 10 ] ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘substr’ in ‘a’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        7,
        0,
        1
      ],
      "mod_code": [
        "int i , j , l ;",
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "char a ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7,
        3
      ],
      "mod_code": [
        "int i , j , l ;",
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "char b [ 10 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘char’)"
    },
    {
      "mod_line": [
        2,
        7,
        3,
        1
      ],
      "mod_code": [
        "int i , j , l ;",
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "char b [ 10 ] ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7,
        1
      ],
      "mod_code": [
        "int i , j , l ;",
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "int i , j , l ;",
        "while ( cin >> a >> solve ( ) )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>’ and ‘void’)"
    },
    {
      "mod_line": [
        2,
        11,
        0
      ],
      "mod_code": [
        "int i , j , l ;",
        "while ( cin >> a >> solve ( ) )",
        "char a ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘substr’ in ‘a’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        11,
        0,
        3
      ],
      "mod_code": [
        "int i , j , l ;",
        "while ( cin >> a >> solve ( ) )",
        "char a ;",
        "char b [ 10 ] ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘substr’ in ‘a’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        11,
        0,
        1
      ],
      "mod_code": [
        "int i , j , l ;",
        "while ( cin >> a >> solve ( ) )",
        "char a ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        11,
        3
      ],
      "mod_code": [
        "int i , j , l ;",
        "while ( cin >> a >> solve ( ) )",
        "char b [ 10 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘char’)"
    },
    {
      "mod_line": [
        2,
        11,
        3,
        1
      ],
      "mod_code": [
        "int i , j , l ;",
        "while ( cin >> a >> solve ( ) )",
        "char b [ 10 ] ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        11,
        1
      ],
      "mod_code": [
        "int i , j , l ;",
        "while ( cin >> a >> solve ( ) )",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        0
      ],
      "mod_code": [
        "int i , j , l ;",
        "char a ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘substr’ in ‘a’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        0,
        3
      ],
      "mod_code": [
        "int i , j , l ;",
        "char a ;",
        "char b [ 10 ] ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘substr’ in ‘a’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2,
        0,
        3,
        1
      ],
      "mod_code": [
        "int i , j , l ;",
        "char a ;",
        "char b [ 10 ] ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        0,
        1
      ],
      "mod_code": [
        "int i , j , l ;",
        "char a ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "int i , j , l ;",
        "char b [ 10 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘char’)"
    },
    {
      "mod_line": [
        2,
        3,
        1
      ],
      "mod_code": [
        "int i , j , l ;",
        "char b [ 10 ] ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "int i , j , l ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "while ( cin >> a >> solve ( ) )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>’ and ‘void’)"
    },
    {
      "mod_line": [
        7,
        11,
        0
      ],
      "mod_code": [
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "while ( cin >> a >> solve ( ) )",
        "char a ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘a’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        11,
        0,
        3
      ],
      "mod_code": [
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "while ( cin >> a >> solve ( ) )",
        "char a ;",
        "char b [ 10 ] ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘a’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        11,
        0,
        1
      ],
      "mod_code": [
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "while ( cin >> a >> solve ( ) )",
        "char a ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        11,
        3
      ],
      "mod_code": [
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "while ( cin >> a >> solve ( ) )",
        "char b [ 10 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘char’)"
    },
    {
      "mod_line": [
        7,
        11,
        3,
        1
      ],
      "mod_code": [
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "while ( cin >> a >> solve ( ) )",
        "char b [ 10 ] ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        11,
        1
      ],
      "mod_code": [
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "while ( cin >> a >> solve ( ) )",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "char a ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘a’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        0,
        3
      ],
      "mod_code": [
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "char a ;",
        "char b [ 10 ] ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘a’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        0,
        3,
        1
      ],
      "mod_code": [
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "char a ;",
        "char b [ 10 ] ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        0,
        1
      ],
      "mod_code": [
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "char a ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "char b [ 10 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘char’)"
    },
    {
      "mod_line": [
        7,
        3,
        1
      ],
      "mod_code": [
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "char b [ 10 ] ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "if ( a . substr ( i , 10 ) == b [ j ] ) cout << j << endl ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        0
      ],
      "mod_code": [
        "while ( cin >> a >> solve ( ) )",
        "char a ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘a’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        0,
        3
      ],
      "mod_code": [
        "while ( cin >> a >> solve ( ) )",
        "char a ;",
        "char b [ 10 ] ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘a’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        11,
        0,
        3,
        1
      ],
      "mod_code": [
        "while ( cin >> a >> solve ( ) )",
        "char a ;",
        "char b [ 10 ] ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        0,
        1
      ],
      "mod_code": [
        "while ( cin >> a >> solve ( ) )",
        "char a ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "while ( cin >> a >> solve ( ) )",
        "char b [ 10 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘char’)"
    },
    {
      "mod_line": [
        11,
        3,
        1
      ],
      "mod_code": [
        "while ( cin >> a >> solve ( ) )",
        "char b [ 10 ] ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "while ( cin >> a >> solve ( ) )",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "char a ;",
        "char b [ 10 ] ;"
      ],
      "err_line": 2,
      "err_msg": "request for member ‘length’ in ‘a’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        0,
        3,
        1
      ],
      "mod_code": [
        "char a ;",
        "char b [ 10 ] ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "char a ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "char b [ 10 ] ;",
        "void solve ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}