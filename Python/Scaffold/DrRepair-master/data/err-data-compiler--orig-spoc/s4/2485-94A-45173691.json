{
  "meta": {
    "index": 2485,
    "hitid": "36818Z1KV37XTAWT2TUOIWXMX1QA3F",
    "workerid": "A1APYLD4DUK33J",
    "probid": "94A",
    "subid": "45173691"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare string password",
      "code": "string password ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read password",
      "code": "cin >> password ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare map from string to integer mp",
      "code": "map < string , int > mp ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to 10 exclusive",
      "code": "for ( int i = 0 ; i < 10 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare string s",
      "code": "string s ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "let mp [ s ] be i",
      "code": "mp [ s ] = i ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "declare integer index = 0",
      "code": "int index = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to 8 exclusive",
      "code": "for ( int i = 0 ; i < 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "declare string s = substring of password from index to 10",
      "code": "string s = password . substr ( index , 10 ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print mp [ s ]",
      "code": "cout << mp [ s ] ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increment index by 10",
      "code": "index += 10 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string commamd ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> commamd ;"
      ],
      "err_line": 2,
      "err_msg": "‘commamd’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < 10 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "mp [ ' s ' ] = i ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘char’)"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        3,
        1
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "map < string , string > mp ;",
        "string commamd ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3,
        1,
        11
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "map < string , string > mp ;",
        "string commamd ;",
        "string s = password . substr ( 10 , 10 ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3,
        1,
        7
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "map < string , string > mp ;",
        "string commamd ;",
        "mp [ ' s ' ] = i ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3,
        1,
        6
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "map < string , string > mp ;",
        "string commamd ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3,
        11,
        7
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "map < string , string > mp ;",
        "string s = password . substr ( 10 , 10 ) ;",
        "mp [ ' s ' ] = i ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        3,
        11,
        6
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "map < string , string > mp ;",
        "string s = password . substr ( 10 , 10 ) ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        3,
        7
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "map < string , string > mp ;",
        "mp [ ' s ' ] = i ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        3,
        7,
        6
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "map < string , string > mp ;",
        "mp [ ' s ' ] = i ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        3,
        6
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "map < string , string > mp ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "string commamd ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        1,
        11
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "string commamd ;",
        "string s = password . substr ( 10 , 10 ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        1,
        11,
        7
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "string commamd ;",
        "string s = password . substr ( 10 , 10 ) ;",
        "mp [ ' s ' ] = i ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        1,
        11,
        6
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "string commamd ;",
        "string s = password . substr ( 10 , 10 ) ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        1,
        7
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "string commamd ;",
        "mp [ ' s ' ] = i ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        1,
        7,
        6
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "string commamd ;",
        "mp [ ' s ' ] = i ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        1,
        6
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "string commamd ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        11,
        7
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "string s = password . substr ( 10 , 10 ) ;",
        "mp [ ' s ' ] = i ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        11,
        7,
        6
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "string s = password . substr ( 10 , 10 ) ;",
        "mp [ ' s ' ] = i ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        11,
        6
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "string s = password . substr ( 10 , 10 ) ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "mp [ ' s ' ] = i ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘char’)"
    },
    {
      "mod_line": [
        12,
        7,
        6
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "mp [ ' s ' ] = i ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "cout << mp [ s ] << endl ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "map < string , string > mp ;",
        "string commamd ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        11
      ],
      "mod_code": [
        "map < string , string > mp ;",
        "string commamd ;",
        "string s = password . substr ( 10 , 10 ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        11,
        7
      ],
      "mod_code": [
        "map < string , string > mp ;",
        "string commamd ;",
        "string s = password . substr ( 10 , 10 ) ;",
        "mp [ ' s ' ] = i ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        11,
        6
      ],
      "mod_code": [
        "map < string , string > mp ;",
        "string commamd ;",
        "string s = password . substr ( 10 , 10 ) ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        7
      ],
      "mod_code": [
        "map < string , string > mp ;",
        "string commamd ;",
        "mp [ ' s ' ] = i ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        7,
        6
      ],
      "mod_code": [
        "map < string , string > mp ;",
        "string commamd ;",
        "mp [ ' s ' ] = i ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        6
      ],
      "mod_code": [
        "map < string , string > mp ;",
        "string commamd ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        7
      ],
      "mod_code": [
        "map < string , string > mp ;",
        "string s = password . substr ( 10 , 10 ) ;",
        "mp [ ' s ' ] = i ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘char’)"
    },
    {
      "mod_line": [
        3,
        11,
        7,
        6
      ],
      "mod_code": [
        "map < string , string > mp ;",
        "string s = password . substr ( 10 , 10 ) ;",
        "mp [ ' s ' ] = i ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        11,
        6
      ],
      "mod_code": [
        "map < string , string > mp ;",
        "string s = password . substr ( 10 , 10 ) ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "map < string , string > mp ;",
        "mp [ ' s ' ] = i ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘char’)"
    },
    {
      "mod_line": [
        3,
        7,
        6
      ],
      "mod_code": [
        "map < string , string > mp ;",
        "mp [ ' s ' ] = i ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "map < string , string > mp ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "string commamd ;",
        "string s = password . substr ( 10 , 10 ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        7
      ],
      "mod_code": [
        "string commamd ;",
        "string s = password . substr ( 10 , 10 ) ;",
        "mp [ ' s ' ] = i ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        7,
        6
      ],
      "mod_code": [
        "string commamd ;",
        "string s = password . substr ( 10 , 10 ) ;",
        "mp [ ' s ' ] = i ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        6
      ],
      "mod_code": [
        "string commamd ;",
        "string s = password . substr ( 10 , 10 ) ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "string commamd ;",
        "mp [ ' s ' ] = i ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        6
      ],
      "mod_code": [
        "string commamd ;",
        "mp [ ' s ' ] = i ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "string commamd ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "‘password’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "string s = password . substr ( 10 , 10 ) ;",
        "mp [ ' s ' ] = i ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘char’)"
    },
    {
      "mod_line": [
        11,
        7,
        6
      ],
      "mod_code": [
        "string s = password . substr ( 10 , 10 ) ;",
        "mp [ ' s ' ] = i ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "string s = password . substr ( 10 , 10 ) ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "mp [ ' s ' ] = i ;",
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}