{
  "meta": {
    "index": 169,
    "hitid": "30P8I9JKOIFKZDMVR79DTG9JV525VG",
    "workerid": "AIWEXPJAU66D9",
    "probid": "3A",
    "subid": "47804814"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare char arrays start and end with size 3",
      "code": "char start [ 3 ] , end [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "x , y , gap and step = integers",
      "code": "int x , y , gap , step ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read 3 or less characters , terminated by ' \\ n ' , into start",
      "code": "cin . get ( start , 3 , ' \\n ' ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "discard character from the input",
      "code": "cin . ignore ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read 3 or less characters , terminated by ' \\ n ' , into end",
      "code": "cin . get ( end , 3 , ' \\n ' ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "discard character from the input",
      "code": "cin . ignore ( ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "x = start [ 0 ] - end [ 0 ]",
      "code": "x = start [ 0 ] - end [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "y = start [ 1 ] - end [ 1 ]",
      "code": "y = start [ 1 ] - end [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if abs ( x ) is greater than abs ( y )",
      "code": "if ( abs ( x ) > abs ( y ) )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "gap = abs ( y )",
      "code": "gap = abs ( y ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set step to abs ( x )",
      "code": "step = abs ( x ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else if abs ( x ) is less than abs ( y )",
      "code": "else if ( abs ( x ) < abs ( y ) )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "assign value of abs ( x ) to the gap",
      "code": "gap = abs ( x ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "assign value of abs ( y ) to the step",
      "code": "step = abs ( y ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "assign value of 0 to the gap",
      "code": "gap = 0 ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "assign value of abs ( x ) to the step",
      "code": "step = abs ( x ) ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print step and a new line",
      "code": "cout << step << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for i = 0 to step exclusive",
      "code": "for ( int i = 0 ; i < step ; ++ i )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if gap is equal to 0",
      "code": "if ( gap == 0 )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "if x is greater than 0",
      "code": "if ( x > 0 )",
      "indent": 3
    },
    {
      "line": 23,
      "text": "print \" L \"",
      "code": "cout << \" L \" ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "else if x is less than 0",
      "code": "else if ( x < 0 )",
      "indent": 3
    },
    {
      "line": 25,
      "text": "print \" R \"",
      "code": "cout << \" R \" ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "if y is greater than 0",
      "code": "if ( y > 0 )",
      "indent": 3
    },
    {
      "line": 27,
      "text": "print \" D \"",
      "code": "cout << \" D \" ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "else if y is less than 0",
      "code": "else if ( y < 0 )",
      "indent": 3
    },
    {
      "line": 29,
      "text": "print \" U \"",
      "code": "cout << \" U \" ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "else if i is less than gap",
      "code": "else if ( i < gap )",
      "indent": 2
    },
    {
      "line": 32,
      "text": "if x is greater than 0",
      "code": "if ( x > 0 )",
      "indent": 3
    },
    {
      "line": 33,
      "text": "print \" L \"",
      "code": "cout << \" L \" ;",
      "indent": 4
    },
    {
      "line": 34,
      "text": "else if x is less than 0",
      "code": "else if ( x < 0 )",
      "indent": 3
    },
    {
      "line": 35,
      "text": "print \" R \"",
      "code": "cout << \" R \" ;",
      "indent": 4
    },
    {
      "line": 36,
      "text": "if y is greater than 0",
      "code": "if ( y > 0 )",
      "indent": 3
    },
    {
      "line": 37,
      "text": "print \" D \"",
      "code": "cout << \" D \" ;",
      "indent": 4
    },
    {
      "line": 38,
      "text": "else if y is less than 0",
      "code": "else if ( y < 0 )",
      "indent": 3
    },
    {
      "line": 39,
      "text": "print \" U \"",
      "code": "cout << \" U \" ;",
      "indent": 4
    },
    {
      "line": 40,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 3
    },
    {
      "line": 41,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 42,
      "text": "if abs ( x ) is greater than abs ( y )",
      "code": "if ( abs ( x ) > abs ( y ) )",
      "indent": 3
    },
    {
      "line": 43,
      "text": "if x is greater than 0",
      "code": "if ( x > 0 )",
      "indent": 4
    },
    {
      "line": 44,
      "text": "print \" L \"",
      "code": "cout << \" L \" ;",
      "indent": 5
    },
    {
      "line": 45,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 46,
      "text": "print \" R \"",
      "code": "cout << \" R \" ;",
      "indent": 5
    },
    {
      "line": 47,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 48,
      "text": "if y is greater than 0",
      "code": "if ( y > 0 )",
      "indent": 4
    },
    {
      "line": 49,
      "text": "print \" D \"",
      "code": "cout << \" D \" ;",
      "indent": 5
    },
    {
      "line": 50,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 51,
      "text": "print \" U \"",
      "code": "cout << \" U \" ;",
      "indent": 5
    },
    {
      "line": 52,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 53,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 3
    },
    {
      "line": 54,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 55,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 56,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 57,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "start = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> 3 ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char a [ 3 ] , end [ 3 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘start’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> 3 >> terminated [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> 3 >> terminated [ n ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "gap = abs ( x ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "* step = abs ( y ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "* gap = 0 ;"
      ],
      "err_line": 16,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "* step = abs ( x ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( i = 0 ; i < step ; i ++ )"
      ],
      "err_line": 20,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 41,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        45
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 45,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        47
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 47,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        50
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 50,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        25
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        25,
        29
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        25,
        33
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        25,
        35
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        25,
        39
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        25,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        25,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        29
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        29,
        33
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        29,
        35
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        29,
        39
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        29,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        29,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        33
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        33,
        35
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        33,
        39
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" L \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        33,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" L \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        33,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        35
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        35,
        39
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        35,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        35,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        39
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        39,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        39,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        44,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        5,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cin >> 3 ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        29
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        29,
        33
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        29,
        35
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        29,
        39
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        29,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        29,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        33
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        33,
        35
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        33,
        39
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        33,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        33,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        35
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        35,
        39
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        35,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        35,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        39
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        39,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        39,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        44,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        25,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        29
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        29,
        33
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        29,
        33,
        35
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        29,
        33,
        39
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        29,
        33,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        29,
        33,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        29,
        35
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        29,
        35,
        39
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        29,
        35,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        29,
        35,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        29,
        39
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" U \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        29,
        39,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" U \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        29,
        39,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" U \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        29,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        29,
        44,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        29,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        33
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        33,
        35
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        33,
        35,
        39
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        33,
        35,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        33,
        35,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        33,
        39
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" L \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        33,
        39,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" L \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        33,
        39,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" L \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        33,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" L \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        33,
        44,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" L \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        33,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        35
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        35,
        39
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        35,
        39,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        35,
        39,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        35,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        35,
        44,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        35,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        39
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        39,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        39,
        44,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        39,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        44
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        44,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        3,
        46
      ],
      "mod_code": [
        "start = getchar ( ) ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [3]’"
    },
    {
      "mod_line": [
        5,
        25
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        29
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        29,
        33
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        29,
        35
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        29,
        39
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        29,
        44
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        29,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        33
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        33,
        35
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        33,
        39
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        33,
        44
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        33,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        35
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        35,
        39
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        35,
        44
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        35,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        39
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        39,
        44
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        39,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        44
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        44,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        25,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        29
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        29,
        33
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        29,
        33,
        35
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        29,
        33,
        39
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        29,
        33,
        44
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        29,
        33,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        29,
        35
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        29,
        35,
        39
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        29,
        35,
        44
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        29,
        35,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        29,
        39
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        29,
        39,
        44
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        29,
        39,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        29,
        44
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        29,
        44,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        29,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        33
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        33,
        35
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        33,
        35,
        39
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        33,
        35,
        44
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        33,
        35,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        33,
        39
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" L \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        33,
        39,
        44
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" L \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        33,
        39,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" L \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        33,
        44
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" L \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        33,
        44,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" L \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        33,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        35
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        35,
        39
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        35,
        39,
        44
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        35,
        39,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        35,
        44
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        35,
        44,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        35,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        39
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" U \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        39,
        44
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        39,
        44,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        39,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" U \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        44
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" L \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        44,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        46
      ],
      "mod_code": [
        "cin >> 3 ;",
        "cout << \" R \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int’)"
    }
  ]
}