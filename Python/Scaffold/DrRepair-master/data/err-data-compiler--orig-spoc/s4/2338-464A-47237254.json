{
  "meta": {
    "index": 2338,
    "hitid": "3DIIW4IV8PPXHOYVEVRK9ZDBO9JI44",
    "workerid": "AIWEXPJAU66D9",
    "probid": "464A",
    "subid": "47237254"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integer variables n and p",
      "code": "int n , p ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare string s",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "boolean function helper with int argument pos and char argument start",
      "code": "bool helper ( int pos , char start )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "loop c from start while c - ' a ' + 1 < = p , incrementing c",
      "code": "for ( int c = start ; c - ' a ' + 1 <= p ; c ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if c = s [ pos - 1 ] or c = s [ pos - 2 ]",
      "code": "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] ) { continue ; }",
      "indent": 2
    },
    {
      "line": 5,
      "text": "assign c to s [ pos ]",
      "code": "s [ pos ] = c ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "return true",
      "code": "return true ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return false",
      "code": "return false ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 11,
      "text": "read from the input to n and p",
      "code": "cin >> n >> p ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i from n - 1 to 0 inclusive counting down",
      "code": "for ( int i = n - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if helper ( i is true s [ i ] + 1 ) returned true",
      "code": "if ( helper ( i , s [ i ] + 1 ) )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "create boolean success = true",
      "code": "bool success = true ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "for j = i + 1 to n exclusive",
      "code": "for ( int j = i + 1 ; j < n ; j ++ )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "if helper ( j , ' a ' ) is false",
      "code": "if ( ! helper ( j , ' a ' ) )",
      "indent": 4
    },
    {
      "line": 18,
      "text": "assign false to success",
      "code": "success = false ;",
      "indent": 5
    },
    {
      "line": 19,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 22,
      "text": "if success is true",
      "code": "if ( success )",
      "indent": 3
    },
    {
      "line": 23,
      "text": "print s",
      "code": "cout << s << endl ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( helper ( i ) == true ) s [ i ] + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘bool helper(int, char)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool helper ( int pos , char start ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( c -- ) { c += c - ' a ' + 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 11,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( helper ( i ) == s [ i ] + 1 ) )"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘bool helper(int, char)’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( j = i + 1 ; j < n ; j ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )"
      ],
      "err_line": 3,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        14
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "if ( helper ( i ) == true ) s [ i ] + 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        14,
        12
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        14,
        2
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "bool helper ( int pos , char start ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        14,
        23
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "cout << s ;"
      ],
      "err_line": 3,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        12
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        12,
        2
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "gets ( s ) ;",
        "bool helper ( int pos , char start ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        12,
        23
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "gets ( s ) ;",
        "cout << s ;"
      ],
      "err_line": 3,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "bool helper ( int pos , char start ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        2,
        23
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "bool helper ( int pos , char start ) ;",
        "cout << s ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        23
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "cout << s ;"
      ],
      "err_line": 3,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "if ( helper ( i ) == true ) s [ i ] + 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        12
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        12,
        2
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "gets ( s ) ;",
        "bool helper ( int pos , char start ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        14,
        12,
        23
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "gets ( s ) ;",
        "cout << s ;"
      ],
      "err_line": 3,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        2
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "bool helper ( int pos , char start ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        14,
        2,
        23
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "bool helper ( int pos , char start ) ;",
        "cout << s ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        14,
        23
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "cout << s ;"
      ],
      "err_line": 3,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        2
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "gets ( s ) ;",
        "bool helper ( int pos , char start ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        12,
        2,
        23
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "gets ( s ) ;",
        "bool helper ( int pos , char start ) ;",
        "cout << s ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        12,
        23
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "gets ( s ) ;",
        "cout << s ;"
      ],
      "err_line": 3,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "bool helper ( int pos , char start ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2,
        23
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "bool helper ( int pos , char start ) ;",
        "cout << s ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        23
      ],
      "mod_code": [
        "while ( c ++ ) { c += c - ' a ' + 1 ; }",
        "cout << s ;"
      ],
      "err_line": 3,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "if ( helper ( i ) == true ) s [ i ] + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘bool helper(int, char)’"
    },
    {
      "mod_line": [
        4,
        14,
        12
      ],
      "mod_code": [
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "gets ( s ) ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        14,
        12,
        2
      ],
      "mod_code": [
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "gets ( s ) ;",
        "bool helper ( int pos , char start ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        14,
        12,
        23
      ],
      "mod_code": [
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "gets ( s ) ;",
        "cout << s ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        14,
        2
      ],
      "mod_code": [
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "bool helper ( int pos , char start ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        14,
        2,
        23
      ],
      "mod_code": [
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "bool helper ( int pos , char start ) ;",
        "cout << s ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        14,
        23
      ],
      "mod_code": [
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "cout << s ;"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘bool helper(int, char)’"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "gets ( s ) ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        12,
        2
      ],
      "mod_code": [
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "gets ( s ) ;",
        "bool helper ( int pos , char start ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        12,
        2,
        23
      ],
      "mod_code": [
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "gets ( s ) ;",
        "bool helper ( int pos , char start ) ;",
        "cout << s ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        12,
        23
      ],
      "mod_code": [
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "gets ( s ) ;",
        "cout << s ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "bool helper ( int pos , char start ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        2,
        23
      ],
      "mod_code": [
        "if ( c == s [ pos - 1 ] || c == s [ pos - 2 ] )",
        "bool helper ( int pos , char start ) ;",
        "cout << s ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        12
      ],
      "mod_code": [
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "gets ( s ) ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        14,
        12,
        2
      ],
      "mod_code": [
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "gets ( s ) ;",
        "bool helper ( int pos , char start ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        12,
        2,
        23
      ],
      "mod_code": [
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "gets ( s ) ;",
        "bool helper ( int pos , char start ) ;",
        "cout << s ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        12,
        23
      ],
      "mod_code": [
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "gets ( s ) ;",
        "cout << s ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "bool helper ( int pos , char start ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        2,
        23
      ],
      "mod_code": [
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "bool helper ( int pos , char start ) ;",
        "cout << s ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        23
      ],
      "mod_code": [
        "if ( helper ( i ) == true ) s [ i ] + 1 ;",
        "cout << s ;"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘bool helper(int, char)’"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "gets ( s ) ;",
        "bool helper ( int pos , char start ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        2,
        23
      ],
      "mod_code": [
        "gets ( s ) ;",
        "bool helper ( int pos , char start ) ;",
        "cout << s ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        23
      ],
      "mod_code": [
        "gets ( s ) ;",
        "cout << s ;"
      ],
      "err_line": 12,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        2,
        23
      ],
      "mod_code": [
        "bool helper ( int pos , char start ) ;",
        "cout << s ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}