{
  "meta": {
    "index": 2626,
    "hitid": "3BFNCI9LYKKFA8YVVQI485VWWTH73I",
    "workerid": "ACI8PUCF5OPDC",
    "probid": "357A",
    "subid": "37452488"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer m",
      "code": "int m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integers s , s1 with s = 0 , s1 = 0 and integer array a with dimension m",
      "code": "int a [ m ] , s = 0 , s1 = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for integer i = 0 to m - 1 with increment i",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "add a [ i ] to s",
      "code": "s += a [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create integer x , y",
      "code": "int x , y ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read x , y",
      "code": "cin >> x >> y ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for integer i = 0 to m - 1 with increment i",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if ( s and s1 greater than or equal to x ) and ( s and s1 less than or equal to y ) then",
      "code": "if ( ( s >= x && s <= y ) && ( s1 >= x && s1 <= y ) )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print i + 1",
      "code": "cout << i + 1 << endl ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "subtract a [ i ] from s",
      "code": "s -= a [ i ] ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "add a [ i ] to s1",
      "code": "s1 += a [ i ] ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print 0",
      "code": "cout << 0 << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int s [ m ] , s1 [ m ] , s1 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s1’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( s && s1 >= x ) && ( s and s1 <= y ) )"
      ],
      "err_line": 11,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int s [ m ] , s [ m ] , s1 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int s [m]’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "a >> a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [m]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( s && s1 >= x ) and ( s , s1 <= y ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "int s [ m ] , s1 [ m ] , s1 = 0 ;",
        "if ( s && s1 >= x ) && ( s and s1 <= y ) )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s1’"
    },
    {
      "mod_line": [
        3,
        11,
        4
      ],
      "mod_code": [
        "int s [ m ] , s1 [ m ] , s1 = 0 ;",
        "if ( s && s1 >= x ) && ( s and s1 <= y ) )",
        "for ( int i = 0 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s1’"
    },
    {
      "mod_line": [
        3,
        11,
        4,
        5
      ],
      "mod_code": [
        "int s [ m ] , s1 [ m ] , s1 = 0 ;",
        "if ( s && s1 >= x ) && ( s and s1 <= y ) )",
        "for ( int i = 0 ; i <= m ; i ++ )",
        "a >> a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s1’"
    },
    {
      "mod_line": [
        3,
        11,
        5
      ],
      "mod_code": [
        "int s [ m ] , s1 [ m ] , s1 = 0 ;",
        "if ( s && s1 >= x ) && ( s and s1 <= y ) )",
        "a >> a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s1’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int s [ m ] , s1 [ m ] , s1 = 0 ;",
        "for ( int i = 0 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s1’"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "int s [ m ] , s1 [ m ] , s1 = 0 ;",
        "for ( int i = 0 ; i <= m ; i ++ )",
        "a >> a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s1’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        11
      ],
      "mod_code": [
        "int s [ m ] , s1 [ m ] , s1 = 0 ;",
        "for ( int i = 0 ; i <= m ; i ++ )",
        "a >> a [ i ] ;",
        "if ( s && s1 >= x ) and ( s , s1 <= y ) ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s1’"
    },
    {
      "mod_line": [
        3,
        4,
        11
      ],
      "mod_code": [
        "int s [ m ] , s1 [ m ] , s1 = 0 ;",
        "for ( int i = 0 ; i <= m ; i ++ )",
        "if ( s && s1 >= x ) and ( s , s1 <= y ) ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s1’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "int s [ m ] , s1 [ m ] , s1 = 0 ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s1’"
    },
    {
      "mod_line": [
        3,
        5,
        11
      ],
      "mod_code": [
        "int s [ m ] , s1 [ m ] , s1 = 0 ;",
        "a >> a [ i ] ;",
        "if ( s && s1 >= x ) and ( s , s1 <= y ) ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s1’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "int s [ m ] , s1 [ m ] , s1 = 0 ;",
        "if ( s && s1 >= x ) and ( s , s1 <= y ) ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int s1’"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "if ( s && s1 >= x ) && ( s and s1 <= y ) )",
        "for ( int i = 0 ; i <= m ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        11,
        4,
        5
      ],
      "mod_code": [
        "if ( s && s1 >= x ) && ( s and s1 <= y ) )",
        "for ( int i = 0 ; i <= m ; i ++ )",
        "a >> a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [m]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        11,
        4,
        5,
        3
      ],
      "mod_code": [
        "if ( s && s1 >= x ) && ( s and s1 <= y ) )",
        "for ( int i = 0 ; i <= m ; i ++ )",
        "a >> a [ i ] ;",
        "int s [ m ] , s [ m ] , s1 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int s [m]’"
    },
    {
      "mod_line": [
        11,
        4,
        3
      ],
      "mod_code": [
        "if ( s && s1 >= x ) && ( s and s1 <= y ) )",
        "for ( int i = 0 ; i <= m ; i ++ )",
        "int s [ m ] , s [ m ] , s1 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int s [m]’"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "if ( s && s1 >= x ) && ( s and s1 <= y ) )",
        "a >> a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [m]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        11,
        5,
        3
      ],
      "mod_code": [
        "if ( s && s1 >= x ) && ( s and s1 <= y ) )",
        "a >> a [ i ] ;",
        "int s [ m ] , s [ m ] , s1 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int s [m]’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "if ( s && s1 >= x ) && ( s and s1 <= y ) )",
        "int s [ m ] , s [ m ] , s1 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int s [m]’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= m ; i ++ )",
        "a >> a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [m]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        5,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= m ; i ++ )",
        "a >> a [ i ] ;",
        "int s [ m ] , s [ m ] , s1 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int s [m]’"
    },
    {
      "mod_line": [
        4,
        5,
        3,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= m ; i ++ )",
        "a >> a [ i ] ;",
        "int s [ m ] , s [ m ] , s1 = 0 ;",
        "if ( s && s1 >= x ) and ( s , s1 <= y ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int s [m]’"
    },
    {
      "mod_line": [
        4,
        5,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= m ; i ++ )",
        "a >> a [ i ] ;",
        "if ( s && s1 >= x ) and ( s , s1 <= y ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [m]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= m ; i ++ )",
        "int s [ m ] , s [ m ] , s1 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int s [m]’"
    },
    {
      "mod_line": [
        4,
        3,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= m ; i ++ )",
        "int s [ m ] , s [ m ] , s1 = 0 ;",
        "if ( s && s1 >= x ) and ( s , s1 <= y ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int s [m]’"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= m ; i ++ )",
        "if ( s && s1 >= x ) and ( s , s1 <= y ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "int s [ m ] , s [ m ] , s1 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int s [m]’"
    },
    {
      "mod_line": [
        5,
        3,
        11
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "int s [ m ] , s [ m ] , s1 = 0 ;",
        "if ( s && s1 >= x ) and ( s , s1 <= y ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int s [m]’"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "if ( s && s1 >= x ) and ( s , s1 <= y ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [m]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "int s [ m ] , s [ m ] , s1 = 0 ;",
        "if ( s && s1 >= x ) and ( s , s1 <= y ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int s [m]’"
    }
  ]
}