{
  "meta": {
    "index": 946,
    "hitid": "3DQYSJDTYL5CZLKJ2N3YLVCHPBKEX9",
    "workerid": "A1AYVATMT88U1W",
    "probid": "275A",
    "subid": "46295892"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let light , x , y , temp be integers with light = 2d array of integers with 3 rows and 3 columns",
      "code": "int light [ 3 ] [ 3 ] , x , y , temp ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "dx is an array of integers with elements - 1 , 0 , 1 , 0",
      "code": "int dx [ ] = { - 1 , 0 , 1 , 0 } ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "dy is an array of integers with elements 0 , - 1 , 0 , 1",
      "code": "int dy [ ] = { 0 , - 1 , 0 , 1 } ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "memset of light , 0 , 9 * sizeof ( int )",
      "code": "memset ( light , 0 , 9 * sizeof ( int ) ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to 3 exclusive",
      "code": "for ( int j = 0 ; j < 3 ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read temp",
      "code": "cin >> temp ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if temp modulo 2 is not equal to 0",
      "code": "if ( temp % 2 != 0 )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "light [ i ] [ j ] is equal to ( light [ i ] [ j ] + 1 ) modulo 2",
      "code": "light [ i ] [ j ] = ( light [ i ] [ j ] + 1 ) % 2 ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "for k = 0 to 4 exclusive",
      "code": "for ( int k = 0 ; k < 4 ; k ++ )",
      "indent": 4
    },
    {
      "line": 11,
      "text": "x is equal to j + dx [ k ]",
      "code": "x = j + dx [ k ] ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "y is equal to i + dy [ k ]",
      "code": "y = i + dy [ k ] ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "if x > = 0 and x is less than 3 and y > = 0 and y is less than 3 , light [ y ] [ x ] is equal to ( light [ y ] [ x ] + 1 ) modulo 2",
      "code": "if ( x >= 0 && x < 3 && y >= 0 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) % 2 ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for j = 0 to 3 exclusive , print ( light [ i ] [ j ] + 1 ) modulo 2",
      "code": "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 ; }",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘temp’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "memset ( light , 0 , sizeof ( int ) 9 ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int light [ 3 ] [ 3 ] , x [ 3 ] , temp [ 3 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [3]’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "memset ( light , 0 , sizeof ( int ) sizeof ( int ) sizeof ( int ) sizeof ( int ( int ) sizeof ( ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘sizeof’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( k = 0 ; k < 4 ; k ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "memset ( light , 0 , sizeof ( int ) 9 ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        11
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "x += dx [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        11,
        13
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "x += dx [ k ] ;",
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        11,
        19
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "x += dx [ k ] ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        11,
        7
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "x += dx [ k ] ;",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        13
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        13,
        19
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        13,
        7
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        19
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        19,
        7
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        7
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "x += dx [ k ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘temp’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        13
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "x += dx [ k ] ;",
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘temp’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        13,
        19
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "x += dx [ k ] ;",
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }"
      ],
      "err_line": 7,
      "err_msg": "‘temp’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        13,
        7
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "x += dx [ k ] ;",
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        19
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "x += dx [ k ] ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }"
      ],
      "err_line": 7,
      "err_msg": "‘temp’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        19,
        7
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "x += dx [ k ] ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        7
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "x += dx [ k ] ;",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘temp’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        19
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }"
      ],
      "err_line": 7,
      "err_msg": "‘temp’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        19,
        7
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        7
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        19
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }"
      ],
      "err_line": 7,
      "err_msg": "‘temp’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        19,
        7
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int light [ 3 ] , x [ 3 ] , y [ 3 ] ;",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "x += dx [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        11,
        13
      ],
      "mod_code": [
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "x += dx [ k ] ;",
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        19
      ],
      "mod_code": [
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "x += dx [ k ] ;",
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        7
      ],
      "mod_code": [
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "x += dx [ k ] ;",
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        11,
        19
      ],
      "mod_code": [
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "x += dx [ k ] ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        11,
        19,
        7
      ],
      "mod_code": [
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "x += dx [ k ] ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        11,
        7
      ],
      "mod_code": [
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "x += dx [ k ] ;",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        13,
        19
      ],
      "mod_code": [
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        13,
        19,
        7
      ],
      "mod_code": [
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        13,
        7
      ],
      "mod_code": [
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        19
      ],
      "mod_code": [
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        19,
        7
      ],
      "mod_code": [
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "memset ( light , 0 , sizeof ( int ) 9 ) ;",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        13,
        19,
        7
      ],
      "mod_code": [
        "x += dx [ k ] ;",
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        7
      ],
      "mod_code": [
        "x += dx [ k ] ;",
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        7
      ],
      "mod_code": [
        "x += dx [ k ] ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "x += dx [ k ] ;",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        7
      ],
      "mod_code": [
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;",
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "if ( x >= 0 && x < 3 && y <= 3 && y < 3 ) light [ y ] [ x ] = ( light [ y ] [ x ] + 1 ) ;",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        7
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ( light [ i ] [ j ] + 1 ) % 2 << endl ; }",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    }
  ]
}