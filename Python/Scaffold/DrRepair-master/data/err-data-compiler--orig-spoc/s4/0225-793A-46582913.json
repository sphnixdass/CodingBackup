{
  "meta": {
    "index": 225,
    "hitid": "3UZUVSO3P7P159LFOG1PAEWJHK4MEQ",
    "workerid": "A1APYLD4DUK33J",
    "probid": "793A",
    "subid": "46582913"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers amount , decrease , create integer array num with size 100005",
      "code": "int amount , decrease , num [ 100005 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read amount read decrease",
      "code": "cin >> amount >> decrease ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to amount exclusive , read num [ i ]",
      "code": "for ( int i = 0 ; i < amount ; i ++ ) { cin >> num [ i ] ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer mn with mn = 1e9",
      "code": "int mn = 1e9 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to amount exclusive",
      "code": "for ( int i = 0 ; i < amount ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if num [ i ] is less than mn , set mn to num [ i ]",
      "code": "if ( num [ i ] < mn ) { mn = num [ i ] ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create long long sum with sum = 0",
      "code": "long long sum = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to amount exclusive",
      "code": "for ( int i = 0 ; i < amount ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if ( num [ i ] - mn ) % decrease is not 0",
      "code": "if ( ( num [ i ] - mn ) % decrease != 0 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print \" - 1 \" print newline",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increment sum by ( num [ i ] - mn ) / decrease",
      "code": "sum += ( num [ i ] - mn ) / decrease ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print sum print newline",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int amount [ 100005 ] , num [ 100005 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [100005]’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int amount , num [ 100005 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘decrease’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int amount [ 100005 ] , num [ 100005 ] ;",
        "sum += ( num [ i ] - mn ) / ( num [ i ] - mn ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [100005]’)"
    },
    {
      "mod_line": [
        1,
        14,
        11
      ],
      "mod_code": [
        "int amount [ 100005 ] , num [ 100005 ] ;",
        "sum += ( num [ i ] - mn ) / ( num [ i ] - mn ) ;",
        "cout << \" - \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [100005]’)"
    },
    {
      "mod_line": [
        1,
        14,
        11,
        2
      ],
      "mod_code": [
        "int amount [ 100005 ] , num [ 100005 ] ;",
        "sum += ( num [ i ] - mn ) / ( num [ i ] - mn ) ;",
        "cout << \" - \" << endl ;",
        "cin >> amount ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [100005]’)"
    },
    {
      "mod_line": [
        1,
        14,
        2
      ],
      "mod_code": [
        "int amount [ 100005 ] , num [ 100005 ] ;",
        "sum += ( num [ i ] - mn ) / ( num [ i ] - mn ) ;",
        "cin >> amount ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [100005]’)"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int amount [ 100005 ] , num [ 100005 ] ;",
        "cout << \" - \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [100005]’)"
    },
    {
      "mod_line": [
        1,
        11,
        2
      ],
      "mod_code": [
        "int amount [ 100005 ] , num [ 100005 ] ;",
        "cout << \" - \" << endl ;",
        "cin >> amount ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [100005]’)"
    },
    {
      "mod_line": [
        1,
        11,
        2,
        14
      ],
      "mod_code": [
        "int amount [ 100005 ] , num [ 100005 ] ;",
        "cout << \" - \" << endl ;",
        "cin >> amount ;",
        "sum += ( num [ i ] - mn ) / mn ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [100005]’)"
    },
    {
      "mod_line": [
        1,
        11,
        14
      ],
      "mod_code": [
        "int amount [ 100005 ] , num [ 100005 ] ;",
        "cout << \" - \" << endl ;",
        "sum += ( num [ i ] - mn ) / mn ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [100005]’)"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int amount [ 100005 ] , num [ 100005 ] ;",
        "cin >> amount ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [100005]’)"
    },
    {
      "mod_line": [
        1,
        2,
        14
      ],
      "mod_code": [
        "int amount [ 100005 ] , num [ 100005 ] ;",
        "cin >> amount ;",
        "sum += ( num [ i ] - mn ) / mn ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [100005]’)"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int amount [ 100005 ] , num [ 100005 ] ;",
        "sum += ( num [ i ] - mn ) / mn ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [100005]’)"
    },
    {
      "mod_line": [
        14,
        11,
        2,
        1
      ],
      "mod_code": [
        "sum += ( num [ i ] - mn ) / ( num [ i ] - mn ) ;",
        "cout << \" - \" << endl ;",
        "cin >> amount ;",
        "int amount , num [ 100005 ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘decrease’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        11,
        1
      ],
      "mod_code": [
        "sum += ( num [ i ] - mn ) / ( num [ i ] - mn ) ;",
        "cout << \" - \" << endl ;",
        "int amount , num [ 100005 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘decrease’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        1
      ],
      "mod_code": [
        "sum += ( num [ i ] - mn ) / ( num [ i ] - mn ) ;",
        "cin >> amount ;",
        "int amount , num [ 100005 ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘decrease’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "sum += ( num [ i ] - mn ) / ( num [ i ] - mn ) ;",
        "int amount , num [ 100005 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘decrease’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        2,
        14,
        1
      ],
      "mod_code": [
        "cout << \" - \" << endl ;",
        "cin >> amount ;",
        "sum += ( num [ i ] - mn ) / mn ;",
        "int amount , num [ 100005 ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘decrease’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        2,
        1
      ],
      "mod_code": [
        "cout << \" - \" << endl ;",
        "cin >> amount ;",
        "int amount , num [ 100005 ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘decrease’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        1
      ],
      "mod_code": [
        "cout << \" - \" << endl ;",
        "sum += ( num [ i ] - mn ) / mn ;",
        "int amount , num [ 100005 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘decrease’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "cout << \" - \" << endl ;",
        "int amount , num [ 100005 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘decrease’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        14,
        1
      ],
      "mod_code": [
        "cin >> amount ;",
        "sum += ( num [ i ] - mn ) / mn ;",
        "int amount , num [ 100005 ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘decrease’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "cin >> amount ;",
        "int amount , num [ 100005 ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘decrease’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "sum += ( num [ i ] - mn ) / mn ;",
        "int amount , num [ 100005 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘decrease’ was not declared in this scope"
    }
  ]
}