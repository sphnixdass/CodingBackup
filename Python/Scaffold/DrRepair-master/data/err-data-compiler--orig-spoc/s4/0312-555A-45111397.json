{
  "meta": {
    "index": 312,
    "hitid": "33P2GD6NRNMIZVCET5WFG41SKV2HKX",
    "workerid": "AIWEXPJAU66D9",
    "probid": "555A",
    "subid": "45111397"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integers res and lste = 0 and lst = 1",
      "code": "int res = 0 , lst = 1 , lste = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create boolean tr = true",
      "code": "bool tr = true ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare integer variable x",
      "code": "int x ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "declare boolean variable one = false",
      "code": "bool one = false ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for integer j = 0 to x exclusive",
      "code": "for ( int j = 0 ; j < x ; j ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "create integer y",
      "code": "int y ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "read y",
      "code": "cin >> y ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if y = lst & & tr",
      "code": "if ( y == lst && tr )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "set lst to y + 1",
      "code": "lst = y + 1 ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "set value of one to true",
      "code": "one = true ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if one is true",
      "code": "if ( one )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "set value of tr to false",
      "code": "tr = false ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "set value of lste to lst - 1",
      "code": "lste = lst - 1 ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "increase res by x - ( lst - 1 )",
      "code": "res += x - ( lst - 1 ) ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 22,
      "text": "increase res by x - 1",
      "code": "res += x - 1 ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print res + ( n - lste )",
      "code": "cout << res + ( n - lste ) << endl ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "‘lst’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "tr = true ;"
      ],
      "err_line": 4,
      "err_msg": "‘tr’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 11,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "* tr = false ;"
      ],
      "err_line": 18,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "* lste = lst - 1 ;"
      ],
      "err_line": 19,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "res += x - ( lst - 1 ) ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        20
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "res += x - ( lst - 1 ) ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘lst’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        20,
        25
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "res += x - ( lst - 1 ) ) ;",
        "cout << res + ( n - lste ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘lst’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        20,
        25,
        4
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "res += x - ( lst - 1 ) ) ;",
        "cout << res + ( n - lste ) ;",
        "tr = true ;"
      ],
      "err_line": 4,
      "err_msg": "‘tr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        20,
        25,
        12
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "res += x - ( lst - 1 ) ) ;",
        "cout << res + ( n - lste ) ;",
        "if ( y == ' lst ' && tr )"
      ],
      "err_line": 13,
      "err_msg": "‘lst’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        20,
        25,
        2
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "res += x - ( lst - 1 ) ) ;",
        "cout << res + ( n - lste ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        20,
        4
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "res += x - ( lst - 1 ) ) ;",
        "tr = true ;"
      ],
      "err_line": 4,
      "err_msg": "‘tr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        20,
        4,
        12
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "res += x - ( lst - 1 ) ) ;",
        "tr = true ;",
        "if ( y == ' lst ' && tr )"
      ],
      "err_line": 4,
      "err_msg": "‘tr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        20,
        4,
        2
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "res += x - ( lst - 1 ) ) ;",
        "tr = true ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        20,
        12
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "res += x - ( lst - 1 ) ) ;",
        "if ( y == ' lst ' && tr )"
      ],
      "err_line": 13,
      "err_msg": "‘lst’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        20,
        12,
        2
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "res += x - ( lst - 1 ) ) ;",
        "if ( y == ' lst ' && tr )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        20,
        2
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "res += x - ( lst - 1 ) ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        25
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "cout << res + ( n - lste ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘lst’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        25,
        4
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "cout << res + ( n - lste ) ;",
        "tr = true ;"
      ],
      "err_line": 4,
      "err_msg": "‘tr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        25,
        4,
        12
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "cout << res + ( n - lste ) ;",
        "tr = true ;",
        "if ( y == ' lst ' && tr )"
      ],
      "err_line": 4,
      "err_msg": "‘tr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        25,
        4,
        2
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "cout << res + ( n - lste ) ;",
        "tr = true ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        25,
        12
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "cout << res + ( n - lste ) ;",
        "if ( y == ' lst ' && tr )"
      ],
      "err_line": 13,
      "err_msg": "‘lst’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        25,
        12,
        2
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "cout << res + ( n - lste ) ;",
        "if ( y == ' lst ' && tr )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        25,
        2
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "cout << res + ( n - lste ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "tr = true ;"
      ],
      "err_line": 4,
      "err_msg": "‘tr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        12
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "tr = true ;",
        "if ( y == ' lst ' && tr )"
      ],
      "err_line": 4,
      "err_msg": "‘tr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        12,
        2
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "tr = true ;",
        "if ( y == ' lst ' && tr )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "tr = true ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "if ( y == ' lst ' && tr )"
      ],
      "err_line": 13,
      "err_msg": "‘lst’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        2
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "if ( y == ' lst ' && tr )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "int res = 0 , lste = 0 ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25
      ],
      "mod_code": [
        "res += x - ( lst - 1 ) ) ;",
        "cout << res + ( n - lste ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        20,
        25,
        4
      ],
      "mod_code": [
        "res += x - ( lst - 1 ) ) ;",
        "cout << res + ( n - lste ) ;",
        "tr = true ;"
      ],
      "err_line": 4,
      "err_msg": "‘tr’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        4,
        12
      ],
      "mod_code": [
        "res += x - ( lst - 1 ) ) ;",
        "cout << res + ( n - lste ) ;",
        "tr = true ;",
        "if ( y == ' lst ' && tr )"
      ],
      "err_line": 4,
      "err_msg": "‘tr’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        4,
        2
      ],
      "mod_code": [
        "res += x - ( lst - 1 ) ) ;",
        "cout << res + ( n - lste ) ;",
        "tr = true ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        12
      ],
      "mod_code": [
        "res += x - ( lst - 1 ) ) ;",
        "cout << res + ( n - lste ) ;",
        "if ( y == ' lst ' && tr )"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        20,
        25,
        12,
        2
      ],
      "mod_code": [
        "res += x - ( lst - 1 ) ) ;",
        "cout << res + ( n - lste ) ;",
        "if ( y == ' lst ' && tr )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        2
      ],
      "mod_code": [
        "res += x - ( lst - 1 ) ) ;",
        "cout << res + ( n - lste ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        4
      ],
      "mod_code": [
        "res += x - ( lst - 1 ) ) ;",
        "tr = true ;"
      ],
      "err_line": 4,
      "err_msg": "‘tr’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        4,
        12
      ],
      "mod_code": [
        "res += x - ( lst - 1 ) ) ;",
        "tr = true ;",
        "if ( y == ' lst ' && tr )"
      ],
      "err_line": 4,
      "err_msg": "‘tr’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        4,
        12,
        2
      ],
      "mod_code": [
        "res += x - ( lst - 1 ) ) ;",
        "tr = true ;",
        "if ( y == ' lst ' && tr )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        4,
        2
      ],
      "mod_code": [
        "res += x - ( lst - 1 ) ) ;",
        "tr = true ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        12
      ],
      "mod_code": [
        "res += x - ( lst - 1 ) ) ;",
        "if ( y == ' lst ' && tr )"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        20,
        12,
        2
      ],
      "mod_code": [
        "res += x - ( lst - 1 ) ) ;",
        "if ( y == ' lst ' && tr )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        2
      ],
      "mod_code": [
        "res += x - ( lst - 1 ) ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        4
      ],
      "mod_code": [
        "cout << res + ( n - lste ) ;",
        "tr = true ;"
      ],
      "err_line": 4,
      "err_msg": "‘tr’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        4,
        12
      ],
      "mod_code": [
        "cout << res + ( n - lste ) ;",
        "tr = true ;",
        "if ( y == ' lst ' && tr )"
      ],
      "err_line": 4,
      "err_msg": "‘tr’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        4,
        12,
        2
      ],
      "mod_code": [
        "cout << res + ( n - lste ) ;",
        "tr = true ;",
        "if ( y == ' lst ' && tr )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        4,
        2
      ],
      "mod_code": [
        "cout << res + ( n - lste ) ;",
        "tr = true ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        12,
        2
      ],
      "mod_code": [
        "cout << res + ( n - lste ) ;",
        "if ( y == ' lst ' && tr )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        2
      ],
      "mod_code": [
        "cout << res + ( n - lste ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "tr = true ;",
        "if ( y == ' lst ' && tr )"
      ],
      "err_line": 4,
      "err_msg": "‘tr’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        12,
        2
      ],
      "mod_code": [
        "tr = true ;",
        "if ( y == ' lst ' && tr )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "tr = true ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "if ( y == ' lst ' && tr )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    }
  ]
}