{
  "meta": {
    "index": 971,
    "hitid": "3QHITW7OYO3P0B2V046KV4QX7TZAQD",
    "workerid": "ACI8PUCF5OPDC",
    "probid": "275A",
    "subid": "47848345"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer arrays a and out with dimension 9 each",
      "code": "int a [ 9 ] , out [ 9 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "for integer i = 0 to 9 exclusive get a [ i ]",
      "code": "for ( int i = 0 ; i < 9 ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set out [ 0 ] to a [ 0 ] + a [ 1 ] + a [ 3 ]",
      "code": "out [ 0 ] = a [ 0 ] + a [ 1 ] + a [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set out [ 1 ] to a [ 1 ] + a [ 0 ] + a [ 2 ] + a [ 4 ]",
      "code": "out [ 1 ] = a [ 1 ] + a [ 0 ] + a [ 2 ] + a [ 4 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set out [ 2 to a [ 1 ] + a [ 2 ] + a [ 5 ]",
      "code": "out [ 2 ] = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set out [ 3 ] to a [ 0 ] + a [ 3 ] + a [ 4 ] + a [ 6 ]",
      "code": "out [ 3 ] = a [ 0 ] + a [ 3 ] + a [ 4 ] + a [ 6 ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set out [ 4 ] to a [ 1 ] + a [ 3 ] + a [ 4 ] + a [ 5 ] + a [ 7 ]",
      "code": "out [ 4 ] = a [ 1 ] + a [ 3 ] + a [ 4 ] + a [ 5 ] + a [ 7 ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set out [ 5 ] to a [ 2 ] + a [ 4 ] + a [ 5 ] + a [ 8 ]",
      "code": "out [ 5 ] = a [ 2 ] + a [ 4 ] + a [ 5 ] + a [ 8 ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set out [ 6 ] to a [ 3 ] + a [ 6 ] + a [ 7 ]",
      "code": "out [ 6 ] = a [ 3 ] + a [ 6 ] + a [ 7 ] ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set out [ 7 ] to a [ 4 ] + a [ 6 ] + a [ 7 ] + a [ 8 ]",
      "code": "out [ 7 ] = a [ 4 ] + a [ 6 ] + a [ 7 ] + a [ 8 ] ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set out [ 8 ] to a [ 7 ] + a [ 8 ] + a [ 5 ]",
      "code": "out [ 8 ] = a [ 7 ] + a [ 8 ] + a [ 5 ] ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for integer i = 0 to 9 exclusive",
      "code": "for ( int i = 0 ; i < 9 ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if out [ i ] is even then",
      "code": "if ( out [ i ] % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print \" 1 \"",
      "code": "cout << \" 1 \" ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print \" 0 \"",
      "code": "cout << \" 0 \" ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "if i + 1 mod 3 is equal to 0 then print a new line",
      "code": "if ( ( i + 1 ) % 3 == 0 ) cout << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        14,
        16
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "cout << \" 1 \" << endl ;",
        "cout << \" 0 \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        14,
        16,
        17
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "cout << \" 1 \" << endl ;",
        "cout << \" 0 \" << endl ;",
        "if ( i + 1 % 3 == 0 ) cout << endl ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        14,
        16,
        3
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "cout << \" 1 \" << endl ;",
        "cout << \" 0 \" << endl ;",
        "out [ 0 ] = a [ 0 ] + a [ 3 ] + a [ 3 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        14,
        16,
        7
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "cout << \" 1 \" << endl ;",
        "cout << \" 0 \" << endl ;",
        "out [ 4 ] = a [ 1 ] + a [ 3 ] + a [ 4 ] + a [ 4 ] + a [ 7 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        14,
        17
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "cout << \" 1 \" << endl ;",
        "if ( i + 1 % 3 == 0 ) cout << endl ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        14,
        17,
        3
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "cout << \" 1 \" << endl ;",
        "if ( i + 1 % 3 == 0 ) cout << endl ;",
        "out [ 0 ] = a [ 0 ] + a [ 3 ] + a [ 3 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        14,
        17,
        7
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "cout << \" 1 \" << endl ;",
        "if ( i + 1 % 3 == 0 ) cout << endl ;",
        "out [ 4 ] = a [ 1 ] + a [ 3 ] + a [ 4 ] + a [ 4 ] + a [ 7 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        14,
        3
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "cout << \" 1 \" << endl ;",
        "out [ 0 ] = a [ 0 ] + a [ 3 ] + a [ 3 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        14,
        3,
        7
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "cout << \" 1 \" << endl ;",
        "out [ 0 ] = a [ 0 ] + a [ 3 ] + a [ 3 ] ;",
        "out [ 4 ] = a [ 1 ] + a [ 3 ] + a [ 4 ] + a [ 4 ] + a [ 7 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        14,
        7
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "cout << \" 1 \" << endl ;",
        "out [ 4 ] = a [ 1 ] + a [ 3 ] + a [ 4 ] + a [ 4 ] + a [ 7 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "cout << \" 0 \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        16,
        17
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "cout << \" 0 \" << endl ;",
        "if ( i + 1 % 3 == 0 ) cout << endl ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        16,
        17,
        3
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "cout << \" 0 \" << endl ;",
        "if ( i + 1 % 3 == 0 ) cout << endl ;",
        "out [ 0 ] = a [ 0 ] + a [ 3 ] + a [ 3 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        16,
        17,
        7
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "cout << \" 0 \" << endl ;",
        "if ( i + 1 % 3 == 0 ) cout << endl ;",
        "out [ 4 ] = a [ 1 ] + a [ 3 ] + a [ 4 ] + a [ 4 ] + a [ 7 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        16,
        3
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "cout << \" 0 \" << endl ;",
        "out [ 0 ] = a [ 0 ] + a [ 3 ] + a [ 3 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        16,
        3,
        7
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "cout << \" 0 \" << endl ;",
        "out [ 0 ] = a [ 0 ] + a [ 3 ] + a [ 3 ] ;",
        "out [ 4 ] = a [ 1 ] + a [ 3 ] + a [ 4 ] + a [ 4 ] + a [ 7 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        16,
        7
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "cout << \" 0 \" << endl ;",
        "out [ 4 ] = a [ 1 ] + a [ 3 ] + a [ 4 ] + a [ 4 ] + a [ 7 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "if ( i + 1 % 3 == 0 ) cout << endl ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        17,
        3
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "if ( i + 1 % 3 == 0 ) cout << endl ;",
        "out [ 0 ] = a [ 0 ] + a [ 3 ] + a [ 3 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        17,
        3,
        7
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "if ( i + 1 % 3 == 0 ) cout << endl ;",
        "out [ 0 ] = a [ 0 ] + a [ 3 ] + a [ 3 ] ;",
        "out [ 4 ] = a [ 1 ] + a [ 3 ] + a [ 4 ] + a [ 4 ] + a [ 7 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        17,
        7
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "if ( i + 1 % 3 == 0 ) cout << endl ;",
        "out [ 4 ] = a [ 1 ] + a [ 3 ] + a [ 4 ] + a [ 4 ] + a [ 7 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "out [ 0 ] = a [ 0 ] + a [ 3 ] + a [ 3 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        3,
        7
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "out [ 0 ] = a [ 0 ] + a [ 3 ] + a [ 3 ] ;",
        "out [ 4 ] = a [ 1 ] + a [ 3 ] + a [ 4 ] + a [ 4 ] + a [ 7 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "out [ 2 = a [ 1 ] + a [ 2 ] + a [ 5 ] ;",
        "out [ 4 ] = a [ 1 ] + a [ 3 ] + a [ 4 ] + a [ 4 ] + a [ 7 ] ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    }
  ]
}