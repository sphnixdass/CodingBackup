{
  "meta": {
    "index": 860,
    "hitid": "3Z56AA6EK4UXSUS0IYIRYQ4619I6M2",
    "workerid": "A1AYVATMT88U1W",
    "probid": "171A",
    "subid": "36754391"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let s , ss be strings",
      "code": "string s , ss ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s , ss",
      "code": "cin >> s >> ss ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "reverse the values of ss from beginning to end",
      "code": "reverse ( ss . begin ( ) , ss . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let x , y be integers",
      "code": "int x , y ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read a stringstream into sss and read a stringstream into ssss",
      "code": "stringstream sss , ssss ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "shift sss to the right by s",
      "code": "sss << s ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "shift sss to the left by x",
      "code": "sss >> x ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "shift ssss to the right by ss",
      "code": "ssss << ss ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "shift ssss to the left by y",
      "code": "ssss >> y ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print x + y and newline",
      "code": "cout << x + y << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sss -= s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "sss += x ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "ssss += ss ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "ssss += y ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s , ss , ss ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string ss’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s >> ss ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "reverse ( v . begin ( ) , ss . end ( ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "stringstream getline ( sss , sss ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sss += s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "sss -= x ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "ssss -= ss ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "ssss = ssss + y ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "sss -= s ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        7
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "sss -= s ;",
        "sss += x ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        8
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "sss -= s ;",
        "sss += x ;",
        "ssss += ss ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        9
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "sss -= s ;",
        "sss += x ;",
        "ssss += y ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        9
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "sss -= s ;",
        "sss += x ;",
        "ssss = ssss + y ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        8
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "sss -= s ;",
        "ssss += ss ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        9
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "sss -= s ;",
        "ssss += ss ;",
        "ssss += y ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        9
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "sss -= s ;",
        "ssss += ss ;",
        "ssss = ssss + y ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "sss -= s ;",
        "ssss += y ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "sss -= s ;",
        "ssss = ssss + y ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "sss += x ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        8
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "sss += x ;",
        "ssss += ss ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        9
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "sss += x ;",
        "ssss += ss ;",
        "ssss += y ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        9
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "sss += x ;",
        "ssss += ss ;",
        "ssss = ssss + y ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "sss += x ;",
        "ssss += y ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "sss += x ;",
        "ssss = ssss + y ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "ssss += ss ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        9
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "ssss += ss ;",
        "ssss += y ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        9
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "ssss += ss ;",
        "ssss = ssss + y ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "ssss += y ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "stringstream getline ( sss , read ( ) ) ;",
        "ssss = ssss + y ;"
      ],
      "err_line": 5,
      "err_msg": "‘sss’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "sss -= s ;",
        "sss += x ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        7,
        8
      ],
      "mod_code": [
        "sss -= s ;",
        "sss += x ;",
        "ssss += ss ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        9
      ],
      "mod_code": [
        "sss -= s ;",
        "sss += x ;",
        "ssss += ss ;",
        "ssss += y ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        9
      ],
      "mod_code": [
        "sss -= s ;",
        "sss += x ;",
        "ssss += ss ;",
        "ssss = ssss + y ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        7,
        9
      ],
      "mod_code": [
        "sss -= s ;",
        "sss += x ;",
        "ssss += y ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        7,
        9
      ],
      "mod_code": [
        "sss -= s ;",
        "sss += x ;",
        "ssss = ssss + y ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "sss -= s ;",
        "ssss += ss ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        8,
        9
      ],
      "mod_code": [
        "sss -= s ;",
        "ssss += ss ;",
        "ssss += y ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        8,
        9
      ],
      "mod_code": [
        "sss -= s ;",
        "ssss += ss ;",
        "ssss = ssss + y ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "sss -= s ;",
        "ssss += y ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "sss -= s ;",
        "ssss = ssss + y ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "sss += x ;",
        "ssss += ss ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        8,
        9
      ],
      "mod_code": [
        "sss += x ;",
        "ssss += ss ;",
        "ssss += y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        8,
        9
      ],
      "mod_code": [
        "sss += x ;",
        "ssss += ss ;",
        "ssss = ssss + y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "sss += x ;",
        "ssss += y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "sss += x ;",
        "ssss = ssss + y ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "ssss += ss ;",
        "ssss += y ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "ssss += ss ;",
        "ssss = ssss + y ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}