{
  "meta": {
    "index": 2398,
    "hitid": "3MVY4USGB6HGJ9064WN272TH2PWSIV",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "392A",
    "subid": "42701515"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while reading n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "x = n * sqrt ( 2 to double )",
      "code": "int x = n * sqrt ( double ( 2 ) ) ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "if n = 0",
      "code": "if ( n == 0 )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "print 1",
      "code": "cout << 1 << endl ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print x * 4",
      "code": "cout << x * 4 << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "x = n * sqrt ( 2 , double ( 2 ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "double x = n * sqrt ( 2 , double ( 2 ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘sqrt(int, double)’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "cout << 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "cout << 1 ;",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        1
      ],
      "mod_code": [
        "x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "cout << 1 ;",
        "else ;",
        "char n ;"
      ],
      "err_line": 3,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        2
      ],
      "mod_code": [
        "x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "cout << 1 ;",
        "else ;",
        "while ( n -- )"
      ],
      "err_line": 3,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        1
      ],
      "mod_code": [
        "x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "cout << 1 ;",
        "char n ;"
      ],
      "err_line": 3,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        1,
        2
      ],
      "mod_code": [
        "x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "cout << 1 ;",
        "char n ;",
        "while ( n -- )"
      ],
      "err_line": 3,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        2
      ],
      "mod_code": [
        "x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "cout << 1 ;",
        "while ( n -- )"
      ],
      "err_line": 3,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        1
      ],
      "mod_code": [
        "x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "else ;",
        "char n ;"
      ],
      "err_line": 3,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        1,
        2
      ],
      "mod_code": [
        "x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "else ;",
        "char n ;",
        "while ( n -- )"
      ],
      "err_line": 3,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        2
      ],
      "mod_code": [
        "x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "else ;",
        "while ( n -- )"
      ],
      "err_line": 3,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "char n ;"
      ],
      "err_line": 3,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        2
      ],
      "mod_code": [
        "x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "char n ;",
        "while ( n -- )"
      ],
      "err_line": 3,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "while ( n -- )"
      ],
      "err_line": 3,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        1,
        3
      ],
      "mod_code": [
        "cout << 1 ;",
        "else ;",
        "char n ;",
        "double x = n * sqrt ( 2 , double ( 2 ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘sqrt(int, double)’"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "cout << 1 ;",
        "else ;",
        "double x = n * sqrt ( 2 , double ( 2 ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘sqrt(int, double)’"
    },
    {
      "mod_line": [
        5,
        6,
        3,
        2
      ],
      "mod_code": [
        "cout << 1 ;",
        "else ;",
        "double x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "while ( n -- )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘sqrt(int, double)’"
    },
    {
      "mod_line": [
        5,
        1,
        3
      ],
      "mod_code": [
        "cout << 1 ;",
        "char n ;",
        "double x = n * sqrt ( 2 , double ( 2 ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘sqrt(int, double)’"
    },
    {
      "mod_line": [
        5,
        1,
        3,
        2
      ],
      "mod_code": [
        "cout << 1 ;",
        "char n ;",
        "double x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "while ( n -- )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘sqrt(int, double)’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "cout << 1 ;",
        "double x = n * sqrt ( 2 , double ( 2 ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘sqrt(int, double)’"
    },
    {
      "mod_line": [
        5,
        3,
        2
      ],
      "mod_code": [
        "cout << 1 ;",
        "double x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "while ( n -- )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘sqrt(int, double)’"
    },
    {
      "mod_line": [
        6,
        1,
        3
      ],
      "mod_code": [
        "else ;",
        "char n ;",
        "double x = n * sqrt ( 2 , double ( 2 ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘sqrt(int, double)’"
    },
    {
      "mod_line": [
        6,
        1,
        3,
        2
      ],
      "mod_code": [
        "else ;",
        "char n ;",
        "double x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "while ( n -- )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘sqrt(int, double)’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "else ;",
        "double x = n * sqrt ( 2 , double ( 2 ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘sqrt(int, double)’"
    },
    {
      "mod_line": [
        6,
        3,
        2
      ],
      "mod_code": [
        "else ;",
        "double x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "while ( n -- )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘sqrt(int, double)’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "char n ;",
        "double x = n * sqrt ( 2 , double ( 2 ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘sqrt(int, double)’"
    },
    {
      "mod_line": [
        1,
        3,
        2
      ],
      "mod_code": [
        "char n ;",
        "double x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "while ( n -- )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘sqrt(int, double)’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "double x = n * sqrt ( 2 , double ( 2 ) ) ;",
        "while ( n -- )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘sqrt(int, double)’"
    }
  ]
}