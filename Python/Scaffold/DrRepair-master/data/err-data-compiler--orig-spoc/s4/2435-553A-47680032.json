{
  "meta": {
    "index": 2435,
    "hitid": "3B623HUYJ4KNU3OTVABBUDZ3ZTJ8SV",
    "workerid": "A1APYLD4DUK33J",
    "probid": "553A",
    "subid": "47680032"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant long long mod with mod = 1000000007",
      "code": "const long long mod = 1000000007 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long long k",
      "code": "long long k ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create long long array c with size 10010",
      "code": "long long c [ 10010 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create long long tol",
      "code": "long long tol ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "create 2d long long array cal with size 1010 by 1010",
      "code": "long long cal [ 1010 ] [ 1010 ] ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "declare get with no arguments , returning void",
      "code": "void get ( )",
      "indent": 0
    },
    {
      "line": 6,
      "text": "set cal [ 1 ] [ 1 ] to 1",
      "code": "cal [ 1 ] [ 1 ] = 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 2 to tol + 1 inclusive",
      "code": "for ( int i = 2 ; i <= tol + 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for j = 1 to i inclusive",
      "code": "for ( int j = 1 ; j <= i ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if j is 1",
      "code": "if ( j == 1 )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set cal [ i ] [ j ] to 1",
      "code": "cal [ i ] [ j ] = 1 ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "else if j is 1",
      "code": "else if ( j == i )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "set cal [ i ] [ j ] to 1",
      "code": "cal [ i ] [ j ] = 1 ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 14,
      "text": "set cal [ i ] [ j ] to cal [ i - 1 ] [ j - 1 ] + cal [ i - 1 ] [ j ]",
      "code": "cal [ i ] [ j ] = cal [ i - 1 ] [ j - 1 ] + cal [ i - 1 ] [ j ] ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "set cal [ i ] [ j ] to cal [ i ] [ j ] % mod",
      "code": "cal [ i ] [ j ] %= mod ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 21,
      "text": "read k",
      "code": "cin >> k ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "set tol to 0",
      "code": "tol = 0 ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for i = 1 to k inclusive",
      "code": "for ( int i = 1 ; i <= k ; i ++ )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "read c [ i ]",
      "code": "cin >> c [ i ] ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "increment tol by c [ i ]",
      "code": "tol += c [ i ] ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "run get",
      "code": "get ( ) ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "create long long ans with ans = 1",
      "code": "long long ans = 1 ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "for i = k to 1 inclusive , decrementing i",
      "code": "for ( int i = k ; i >= 1 ; i -- )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "set ans to ( ans * cal [ tol ] [ c [ i ] ] ) % mod",
      "code": "ans = ( ans * cal [ tol ] [ c [ i ] ] ) % mod ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "decrement tol by c [ i ]",
      "code": "tol -= c [ i ] ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 33,
      "text": "print ans print newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "long long tol tol ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘tol’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "void get ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cal [ 1 ] [ 1 ] ] = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 2 ; i <= tol + 1 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( j = 1 ; j <= i ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( j == l )"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else if ( j == l )"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cal [ i ] [ j ] = cal [ i - 1 ] [ j - 1 ] [ cal [ i - 1 ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 21,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )"
      ],
      "err_line": 23,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "c >> c [ i ] ;"
      ],
      "err_line": 24,
      "err_msg": "invalid operands of types ‘long long int [10010]’ and ‘long long int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "get get ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘get’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "for ( i = k ; i >= 1 ; i -- )"
      ],
      "err_line": 29,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "ans = ( ans * cal [ tol ] [ c [ i ] ) % mod ;"
      ],
      "err_line": 30,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        22,
        23
      ],
      "mod_code": [
        "int tol = 0 ;",
        "for ( i = 1 ; i <= k ; i ++ )"
      ],
      "err_line": 23,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        33
      ],
      "mod_code": [
        "int tol = 0 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "cout << ans ;"
      ],
      "err_line": 23,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        33,
        8
      ],
      "mod_code": [
        "int tol = 0 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "cout << ans ;",
        "for ( j = 1 ; j <= i ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        33,
        11
      ],
      "mod_code": [
        "int tol = 0 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "cout << ans ;",
        "else if ( j == l )"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        33,
        12
      ],
      "mod_code": [
        "int tol = 0 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "cout << ans ;",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        22,
        23,
        8
      ],
      "mod_code": [
        "int tol = 0 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "for ( j = 1 ; j <= i ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        8,
        11
      ],
      "mod_code": [
        "int tol = 0 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "for ( j = 1 ; j <= i ; j ++ )",
        "else if ( j == l )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        8,
        12
      ],
      "mod_code": [
        "int tol = 0 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "for ( j = 1 ; j <= i ; j ++ )",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        11
      ],
      "mod_code": [
        "int tol = 0 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "else if ( j == l )"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        11,
        12
      ],
      "mod_code": [
        "int tol = 0 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "else if ( j == l )",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        12
      ],
      "mod_code": [
        "int tol = 0 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        22,
        33,
        8
      ],
      "mod_code": [
        "int tol = 0 ;",
        "cout << ans ;",
        "for ( j = 1 ; j <= i ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        33,
        8,
        11
      ],
      "mod_code": [
        "int tol = 0 ;",
        "cout << ans ;",
        "for ( j = 1 ; j <= i ; j ++ )",
        "else if ( j == l )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        33,
        8,
        12
      ],
      "mod_code": [
        "int tol = 0 ;",
        "cout << ans ;",
        "for ( j = 1 ; j <= i ; j ++ )",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        33,
        11
      ],
      "mod_code": [
        "int tol = 0 ;",
        "cout << ans ;",
        "else if ( j == l )"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        33,
        11,
        12
      ],
      "mod_code": [
        "int tol = 0 ;",
        "cout << ans ;",
        "else if ( j == l )",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        33,
        12
      ],
      "mod_code": [
        "int tol = 0 ;",
        "cout << ans ;",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        22,
        8
      ],
      "mod_code": [
        "int tol = 0 ;",
        "for ( j = 1 ; j <= i ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        8,
        11
      ],
      "mod_code": [
        "int tol = 0 ;",
        "for ( j = 1 ; j <= i ; j ++ )",
        "else if ( j == l )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        8,
        11,
        12
      ],
      "mod_code": [
        "int tol = 0 ;",
        "for ( j = 1 ; j <= i ; j ++ )",
        "else if ( j == l )",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        8,
        12
      ],
      "mod_code": [
        "int tol = 0 ;",
        "for ( j = 1 ; j <= i ; j ++ )",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        11
      ],
      "mod_code": [
        "int tol = 0 ;",
        "else if ( j == l )"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        11,
        12
      ],
      "mod_code": [
        "int tol = 0 ;",
        "else if ( j == l )",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        12
      ],
      "mod_code": [
        "int tol = 0 ;",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        23,
        33
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "cout << ans ;"
      ],
      "err_line": 23,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        33,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "cout << ans ;",
        "for ( j = 1 ; j <= i ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        33,
        8,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "cout << ans ;",
        "for ( j = 1 ; j <= i ; j ++ )",
        "else if ( j == l )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        33,
        8,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "cout << ans ;",
        "for ( j = 1 ; j <= i ; j ++ )",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        33,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "cout << ans ;",
        "else if ( j == l )"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        33,
        11,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "cout << ans ;",
        "else if ( j == l )",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        33,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "cout << ans ;",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        23,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "for ( j = 1 ; j <= i ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        8,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "for ( j = 1 ; j <= i ; j ++ )",
        "else if ( j == l )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        8,
        11,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "for ( j = 1 ; j <= i ; j ++ )",
        "else if ( j == l )",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        8,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "for ( j = 1 ; j <= i ; j ++ )",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "else if ( j == l )"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        11,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "else if ( j == l )",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        33,
        8
      ],
      "mod_code": [
        "cout << ans ;",
        "for ( j = 1 ; j <= i ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        8,
        11
      ],
      "mod_code": [
        "cout << ans ;",
        "for ( j = 1 ; j <= i ; j ++ )",
        "else if ( j == l )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        8,
        11,
        12
      ],
      "mod_code": [
        "cout << ans ;",
        "for ( j = 1 ; j <= i ; j ++ )",
        "else if ( j == l )",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        8,
        12
      ],
      "mod_code": [
        "cout << ans ;",
        "for ( j = 1 ; j <= i ; j ++ )",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        11
      ],
      "mod_code": [
        "cout << ans ;",
        "else if ( j == l )"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        11,
        12
      ],
      "mod_code": [
        "cout << ans ;",
        "else if ( j == l )",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        12
      ],
      "mod_code": [
        "cout << ans ;",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "for ( j = 1 ; j <= i ; j ++ )",
        "else if ( j == l )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        12
      ],
      "mod_code": [
        "for ( j = 1 ; j <= i ; j ++ )",
        "else if ( j == l )",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "for ( j = 1 ; j <= i ; j ++ )",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "else if ( j == l )",
        "cal [ i ] [ j ] ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    }
  ]
}