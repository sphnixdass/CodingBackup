{
  "meta": {
    "index": 1855,
    "hitid": "3VADEH0UHCR80VNAHRDMGZUTNGNPSP",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "443A",
    "subid": "41734419"
  },
  "lines": [
    {
      "line": 0,
      "text": "let constant maxn = 100005",
      "code": "const int maxn = 100000 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a = array of 30 integers",
      "code": "int a [ 30 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "n and m = integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "s = string",
      "code": "char s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "fill the array a with zeroes",
      "code": "memset ( a , 0 , sizeof ( a ) ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while read s",
      "code": "while ( cin >> s )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s is ' } ' break",
      "code": "if ( s == ' } ' ) break ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if s is a lowercase letter increment a [ s - ' a ' ]",
      "code": "if ( s >= ' a ' && s <= ' z ' ) a [ s - ' a ' ] ++ ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "int ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to 30 exclusive",
      "code": "for ( int i = 0 ; i < 30 ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if a [ i ] increment ans",
      "code": "if ( a [ i ] ) ans ++ ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "string s ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( s == ' } ) break ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else"
      ],
      "err_line": 17,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "string s ; ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( s == ' } } break ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 30 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "string s ;",
        "if ( s == ' } ) break ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "string s ;",
        "if ( s == ' } ) break ;",
        "else"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        10
      ],
      "mod_code": [
        "string s ;",
        "if ( s == ' } ) break ;",
        "else",
        "int ans = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "string s ;",
        "if ( s == ' } ) break ;",
        "if ( s >= ' 9 ' ) a [ s - ' a ' ] ++ ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        10
      ],
      "mod_code": [
        "string s ;",
        "if ( s == ' } ) break ;",
        "if ( s >= ' 9 ' ) a [ s - ' a ' ] ++ ;",
        "int ans = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        7,
        10
      ],
      "mod_code": [
        "string s ;",
        "if ( s == ' } ) break ;",
        "int ans = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "string s ;",
        "else"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        8,
        7
      ],
      "mod_code": [
        "string s ;",
        "else",
        "if ( s == ' } } break ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        8,
        7,
        10
      ],
      "mod_code": [
        "string s ;",
        "else",
        "if ( s == ' } } break ;",
        "int ans = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        8,
        10
      ],
      "mod_code": [
        "string s ;",
        "else",
        "int ans = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "string s ;",
        "if ( s == ' } } break ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "string s ;",
        "if ( s == ' } } break ;",
        "if ( s >= ' 9 ' ) a [ s - ' a ' ] ++ ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        10
      ],
      "mod_code": [
        "string s ;",
        "if ( s == ' } } break ;",
        "if ( s >= ' 9 ' ) a [ s - ' a ' ] ++ ;",
        "int ans = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        7,
        10
      ],
      "mod_code": [
        "string s ;",
        "if ( s == ' } } break ;",
        "int ans = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "string s ;",
        "if ( s >= ' 9 ' ) a [ s - ' a ' ] ++ ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        8,
        10
      ],
      "mod_code": [
        "string s ;",
        "if ( s >= ' 9 ' ) a [ s - ' a ' ] ++ ;",
        "int ans = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "string s ;",
        "int ans = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "if ( s == ' } ) break ;",
        "else"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        8,
        10
      ],
      "mod_code": [
        "if ( s == ' } ) break ;",
        "else",
        "int ans = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "if ( s == ' } ) break ;",
        "if ( s >= ' 9 ' ) a [ s - ' a ' ] ++ ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        8,
        10
      ],
      "mod_code": [
        "if ( s == ' } ) break ;",
        "if ( s >= ' 9 ' ) a [ s - ' a ' ] ++ ;",
        "int ans = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "if ( s == ' } ) break ;",
        "int ans = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "else",
        "if ( s == ' } } break ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        8,
        7,
        10
      ],
      "mod_code": [
        "else",
        "if ( s == ' } } break ;",
        "int ans = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "else",
        "int ans = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "if ( s == ' } } break ;",
        "if ( s >= ' 9 ' ) a [ s - ' a ' ] ++ ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        8,
        10
      ],
      "mod_code": [
        "if ( s == ' } } break ;",
        "if ( s >= ' 9 ' ) a [ s - ' a ' ] ++ ;",
        "int ans = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "if ( s == ' } } break ;",
        "int ans = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    }
  ]
}