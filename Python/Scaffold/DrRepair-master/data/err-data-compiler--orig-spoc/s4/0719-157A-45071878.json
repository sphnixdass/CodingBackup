{
  "meta": {
    "index": 719,
    "hitid": "3JU8CV4BRL6T23VHAAWDWUKSREIPO1",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "157A",
    "subid": "45071878"
  },
  "lines": [
    {
      "line": 0,
      "text": "n , c = int , a and b = array of 40 by 40 int , col and row = array of 40 int",
      "code": "int n , a [ 40 ] [ 40 ] , col [ 40 ] , row [ 40 ] , b [ 40 ] [ 40 ] , c ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for j = 0 to n exclusive read a [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < n ; j ++ ) { cin >> a [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "add a [ i ] [ j ] to row [ i ]",
      "code": "row [ i ] += a [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "add a [ i ] [ j ] to col [ i ]",
      "code": "col [ j ] += a [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "a [ i ] [ j ] = row [ i ]",
      "code": "a [ i ] [ j ] = row [ i ] ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "b [ i ] [ j ] = col [ j ]",
      "code": "b [ i ] [ j ] = col [ j ] ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if a [ i ] [ j ] < b [ i ] [ j ] increment c",
      "code": "if ( a [ i ] [ j ] < b [ i ] [ j ] ) c ++ ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print c",
      "code": "cout << c << endl ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , b [ 40 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "row [ i ] = row + a [ i ] [ j ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "col [ i ] = col + a [ i ] [ j ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "col [ i ] += a [ i ] [ j ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        9,
        23
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "col [ i ] += a [ i ] [ j ] ;",
        "cout << c ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        9,
        23,
        18
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "col [ i ] += a [ i ] [ j ] ;",
        "cout << c ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        9,
        23,
        7
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "col [ i ] += a [ i ] [ j ] ;",
        "cout << c ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        9,
        23,
        12
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "col [ i ] += a [ i ] [ j ] ;",
        "cout << c ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        9,
        18
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "col [ i ] += a [ i ] [ j ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        9,
        18,
        7
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "col [ i ] += a [ i ] [ j ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        9,
        18,
        12
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "col [ i ] += a [ i ] [ j ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        9,
        7
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "col [ i ] += a [ i ] [ j ] ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        9,
        7,
        12
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "col [ i ] += a [ i ] [ j ] ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        9,
        12
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "col [ i ] += a [ i ] [ j ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        23
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "cout << c ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        23,
        18
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "cout << c ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        23,
        18,
        7
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "cout << c ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        23,
        18,
        12
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "cout << c ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        23,
        7
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "cout << c ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        23,
        7,
        12
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "cout << c ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        23,
        12
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "cout << c ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        18
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        18,
        7
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        18,
        7,
        12
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        18,
        12
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        7,
        12
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "int n , c , a [ 40 ] , col [ 40 ] , col [ 40 ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int col [40]’"
    },
    {
      "mod_line": [
        9,
        23,
        18
      ],
      "mod_code": [
        "col [ i ] += a [ i ] [ j ] ;",
        "cout << c ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        23,
        18,
        7
      ],
      "mod_code": [
        "col [ i ] += a [ i ] [ j ] ;",
        "cout << c ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        23,
        18,
        12
      ],
      "mod_code": [
        "col [ i ] += a [ i ] [ j ] ;",
        "cout << c ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        23,
        7
      ],
      "mod_code": [
        "col [ i ] += a [ i ] [ j ] ;",
        "cout << c ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        23,
        7,
        12
      ],
      "mod_code": [
        "col [ i ] += a [ i ] [ j ] ;",
        "cout << c ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        23,
        12
      ],
      "mod_code": [
        "col [ i ] += a [ i ] [ j ] ;",
        "cout << c ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        18
      ],
      "mod_code": [
        "col [ i ] += a [ i ] [ j ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        18,
        7
      ],
      "mod_code": [
        "col [ i ] += a [ i ] [ j ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        7,
        12
      ],
      "mod_code": [
        "col [ i ] += a [ i ] [ j ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        12
      ],
      "mod_code": [
        "col [ i ] += a [ i ] [ j ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "col [ i ] += a [ i ] [ j ] ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7,
        12
      ],
      "mod_code": [
        "col [ i ] += a [ i ] [ j ] ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "col [ i ] += a [ i ] [ j ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        18
      ],
      "mod_code": [
        "cout << c ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        18,
        7
      ],
      "mod_code": [
        "cout << c ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        18,
        7,
        12
      ],
      "mod_code": [
        "cout << c ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        18,
        12
      ],
      "mod_code": [
        "cout << c ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        7
      ],
      "mod_code": [
        "cout << c ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        7,
        12
      ],
      "mod_code": [
        "cout << c ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        12
      ],
      "mod_code": [
        "cout << c ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        7,
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    }
  ]
}