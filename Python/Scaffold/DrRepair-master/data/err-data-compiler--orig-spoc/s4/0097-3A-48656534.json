{
  "meta": {
    "index": 97,
    "hitid": "3NRZ1LDP7W05179OCJ7UCSRWAG8PZL",
    "workerid": "AIWEXPJAU66D9",
    "probid": "3A",
    "subid": "48656534"
  },
  "lines": [
    {
      "line": 0,
      "text": "let a be an array of integers of size 10",
      "code": "int a [ 10 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let b be a 2d array of integers with size 10 by 10",
      "code": "int b [ 10 ] [ 10 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "csx and ctx = characters",
      "code": "char csx , ctx ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare integers called sx , sy , tx and ty",
      "code": "int sx , sy , tx , ty ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "let i and k be integers",
      "code": "int i , k ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "read csx and sy",
      "code": "cin >> csx >> sy ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read ctx and ty",
      "code": "cin >> ctx >> ty ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "sx = csx - 96",
      "code": "sx = csx - 96 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "tx = ctx - 96",
      "code": "tx = ctx - 96 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "k = 0",
      "code": "k = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if sx is greater than tx",
      "code": "if ( sx > tx )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if sy is greater than ty",
      "code": "if ( sy > ty )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "while sx > tx and sy > ty",
      "code": "while ( sx > tx && sy > ty )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "set a [ k ] to 6",
      "code": "a [ k ] = 6 ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "decrease sx",
      "code": "sx -- ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "decrease sy",
      "code": "sy -- ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if sy is less than ty",
      "code": "if ( sy < ty )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "while sx > tx and sy is < ty",
      "code": "while ( sx > tx && sy < ty )",
      "indent": 3
    },
    {
      "line": 22,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "a [ k ] = 1",
      "code": "a [ k ] = 1 ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "decrease sx",
      "code": "sx -- ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "increase sy",
      "code": "sy ++ ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "if sx is less than tx",
      "code": "if ( sx < tx )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "if sy is greater than ty",
      "code": "if ( sy > ty )",
      "indent": 2
    },
    {
      "line": 31,
      "text": "while sx < tx and sy > ty",
      "code": "while ( sx < tx && sy > ty )",
      "indent": 3
    },
    {
      "line": 32,
      "text": "increase k",
      "code": "k ++ ;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "a [ k ] = 8",
      "code": "a [ k ] = 8 ;",
      "indent": 4
    },
    {
      "line": 34,
      "text": "increase sx",
      "code": "sx ++ ;",
      "indent": 4
    },
    {
      "line": 35,
      "text": "decrease sy",
      "code": "sy -- ;",
      "indent": 4
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 38,
      "text": "if sy is less than ty",
      "code": "if ( sy < ty )",
      "indent": 2
    },
    {
      "line": 39,
      "text": "while sx < tx & & sy < ty",
      "code": "while ( sx < tx && sy < ty )",
      "indent": 3
    },
    {
      "line": 40,
      "text": "increase k by one",
      "code": "k ++ ;",
      "indent": 4
    },
    {
      "line": 41,
      "text": "set value of a [ k ] to 3",
      "code": "a [ k ] = 3 ;",
      "indent": 4
    },
    {
      "line": 42,
      "text": "increment sx",
      "code": "sx ++ ;",
      "indent": 4
    },
    {
      "line": 43,
      "text": "increase sy by one",
      "code": "sy ++ ;",
      "indent": 4
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 47,
      "text": "while sx < tx",
      "code": "while ( sx < tx )",
      "indent": 1
    },
    {
      "line": 48,
      "text": "increase k by one",
      "code": "k ++ ;",
      "indent": 2
    },
    {
      "line": 49,
      "text": "set value of a [ k ] to 5",
      "code": "a [ k ] = 5 ;",
      "indent": 2
    },
    {
      "line": 50,
      "text": "increment sx",
      "code": "sx ++ ;",
      "indent": 2
    },
    {
      "line": 51,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 52,
      "text": "while sx > tx",
      "code": "while ( sx > tx )",
      "indent": 1
    },
    {
      "line": 53,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 2
    },
    {
      "line": 54,
      "text": "set value of a [ k ] to 4",
      "code": "a [ k ] = 4 ;",
      "indent": 2
    },
    {
      "line": 55,
      "text": "decrement sx",
      "code": "sx -- ;",
      "indent": 2
    },
    {
      "line": 56,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 57,
      "text": "while sy < ty",
      "code": "while ( sy < ty )",
      "indent": 1
    },
    {
      "line": 58,
      "text": "increase k",
      "code": "k ++ ;",
      "indent": 2
    },
    {
      "line": 59,
      "text": "a [ k ] = 2",
      "code": "a [ k ] = 2 ;",
      "indent": 2
    },
    {
      "line": 60,
      "text": "increment sy",
      "code": "sy ++ ;",
      "indent": 2
    },
    {
      "line": 61,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 62,
      "text": "while sy > ty",
      "code": "while ( sy > ty )",
      "indent": 1
    },
    {
      "line": 63,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 2
    },
    {
      "line": 64,
      "text": "a [ k ] = 7",
      "code": "a [ k ] = 7 ;",
      "indent": 2
    },
    {
      "line": 65,
      "text": "decrease sy by one",
      "code": "sy -- ;",
      "indent": 2
    },
    {
      "line": 66,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 67,
      "text": "print k and a new line",
      "code": "cout << k << endl ;",
      "indent": 1
    },
    {
      "line": 68,
      "text": "for i = 1 to k inclusive",
      "code": "for ( i = 1 ; i <= k ; i ++ )",
      "indent": 1
    },
    {
      "line": 69,
      "text": "if a [ i ] = 1 print \" LU \" and a new line",
      "code": "if ( a [ i ] == 1 ) { cout << \" LU \" << endl ; }",
      "indent": 2
    },
    {
      "line": 70,
      "text": "if a [ i ] = 2 print \" U \" and a new line",
      "code": "if ( a [ i ] == 2 ) { cout << \" U \" << endl ; }",
      "indent": 2
    },
    {
      "line": 71,
      "text": "if a [ i ] = 3 print \" RU \" and a new line",
      "code": "if ( a [ i ] == 3 ) { cout << \" RU \" << endl ; }",
      "indent": 2
    },
    {
      "line": 72,
      "text": "if a [ i ] = 4 print \" L \" and a new line",
      "code": "if ( a [ i ] == 4 ) { cout << \" L \" << endl ; }",
      "indent": 2
    },
    {
      "line": 73,
      "text": "if a [ i ] = 5 print \" R \" and a new line",
      "code": "if ( a [ i ] == 5 ) { cout << \" R \" << endl ; }",
      "indent": 2
    },
    {
      "line": 74,
      "text": "if a [ i ] = 6 print \" LD \" and a new line",
      "code": "if ( a [ i ] == 6 ) { cout << \" LD \" << endl ; }",
      "indent": 2
    },
    {
      "line": 75,
      "text": "if a [ i ] = 7 print \" D \" and a new line",
      "code": "if ( a [ i ] == 7 ) { cout << \" D \" << endl ; }",
      "indent": 2
    },
    {
      "line": 76,
      "text": "if a [ i ] = 8 print \" RD \" and a new line",
      "code": "if ( a [ i ] == 8 ) { cout << \" RD \" << endl ; }",
      "indent": 2
    },
    {
      "line": 77,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 78,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int sx , sy , tx , ty , ty ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        8,
        9,
        21,
        3
      ],
      "mod_code": [
        "sx -= 96 ;",
        "tx -= 96 ;",
        "while ( sx > tx && sy <= ty )",
        "int sx , sy , tx , ty , ty ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        8,
        9,
        3
      ],
      "mod_code": [
        "sx -= 96 ;",
        "tx -= 96 ;",
        "int sx , sy , tx , ty , ty ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        8,
        9,
        3,
        62
      ],
      "mod_code": [
        "sx -= 96 ;",
        "tx -= 96 ;",
        "int sx , sy , tx , ty , ty ;",
        "while ( sy )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        8,
        9,
        3,
        7
      ],
      "mod_code": [
        "sx -= 96 ;",
        "tx -= 96 ;",
        "int sx , sy , tx , ty , ty ;",
        "cin >> ctx >> k ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        8,
        21,
        3
      ],
      "mod_code": [
        "sx -= 96 ;",
        "while ( sx > tx && sy <= ty )",
        "int sx , sy , tx , ty , ty ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        8,
        21,
        3,
        62
      ],
      "mod_code": [
        "sx -= 96 ;",
        "while ( sx > tx && sy <= ty )",
        "int sx , sy , tx , ty , ty ;",
        "while ( sy )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        8,
        21,
        3,
        7
      ],
      "mod_code": [
        "sx -= 96 ;",
        "while ( sx > tx && sy <= ty )",
        "int sx , sy , tx , ty , ty ;",
        "cin >> ctx >> k ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "sx -= 96 ;",
        "int sx , sy , tx , ty , ty ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        8,
        3,
        62
      ],
      "mod_code": [
        "sx -= 96 ;",
        "int sx , sy , tx , ty , ty ;",
        "while ( sy )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        8,
        3,
        62,
        7
      ],
      "mod_code": [
        "sx -= 96 ;",
        "int sx , sy , tx , ty , ty ;",
        "while ( sy )",
        "cin >> ctx >> k ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        8,
        3,
        7
      ],
      "mod_code": [
        "sx -= 96 ;",
        "int sx , sy , tx , ty , ty ;",
        "cin >> ctx >> k ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        9,
        21,
        3
      ],
      "mod_code": [
        "tx -= 96 ;",
        "while ( sx > tx && sy <= ty )",
        "int sx , sy , tx , ty , ty ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        9,
        21,
        3,
        62
      ],
      "mod_code": [
        "tx -= 96 ;",
        "while ( sx > tx && sy <= ty )",
        "int sx , sy , tx , ty , ty ;",
        "while ( sy )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        9,
        21,
        3,
        7
      ],
      "mod_code": [
        "tx -= 96 ;",
        "while ( sx > tx && sy <= ty )",
        "int sx , sy , tx , ty , ty ;",
        "cin >> ctx >> k ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "tx -= 96 ;",
        "int sx , sy , tx , ty , ty ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        9,
        3,
        62
      ],
      "mod_code": [
        "tx -= 96 ;",
        "int sx , sy , tx , ty , ty ;",
        "while ( sy )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        9,
        3,
        62,
        7
      ],
      "mod_code": [
        "tx -= 96 ;",
        "int sx , sy , tx , ty , ty ;",
        "while ( sy )",
        "cin >> ctx >> k ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        9,
        3,
        7
      ],
      "mod_code": [
        "tx -= 96 ;",
        "int sx , sy , tx , ty , ty ;",
        "cin >> ctx >> k ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        21,
        3
      ],
      "mod_code": [
        "while ( sx > tx && sy <= ty )",
        "int sx , sy , tx , ty , ty ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        21,
        3,
        62
      ],
      "mod_code": [
        "while ( sx > tx && sy <= ty )",
        "int sx , sy , tx , ty , ty ;",
        "while ( sy )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        21,
        3,
        62,
        7
      ],
      "mod_code": [
        "while ( sx > tx && sy <= ty )",
        "int sx , sy , tx , ty , ty ;",
        "while ( sy )",
        "cin >> ctx >> k ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        21,
        3,
        7
      ],
      "mod_code": [
        "while ( sx > tx && sy <= ty )",
        "int sx , sy , tx , ty , ty ;",
        "cin >> ctx >> k ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        3,
        62
      ],
      "mod_code": [
        "int sx , sy , tx , ty , ty ;",
        "while ( sy )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        3,
        62,
        7
      ],
      "mod_code": [
        "int sx , sy , tx , ty , ty ;",
        "while ( sy )",
        "cin >> ctx >> k ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "int sx , sy , tx , ty , ty ;",
        "cin >> ctx >> k ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    }
  ]
}