{
  "meta": {
    "index": 907,
    "hitid": "3VDI8GSXAFNK4YF20AHU5ZG0AVU8G5",
    "workerid": "AIWEXPJAU66D9",
    "probid": "820A",
    "subid": "45912828"
  },
  "lines": [
    {
      "line": 0,
      "text": "set constant integer inf to 0x3f3f3f3f",
      "code": "const int inf = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "assign value 1e9 + 7 to constant integer mod",
      "code": "const int mod = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "constant double pi = acos ( - 1 . 0 )",
      "code": "const double pi = acos ( - 1.0 ) ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "assign value 1e - 15 to constant double eps",
      "code": "const double eps = 1e-15 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "declare integer variables c , v0 , v1 , a and l",
      "code": "int c , v0 , v1 , a , l ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read c , v0 , v1 , a and l",
      "code": "cin >> c >> v0 >> v1 >> a >> l ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create integers cnt = 1 and read = v0",
      "code": "int cnt = 1 , read = v0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if v0 > = c",
      "code": "if ( v0 >= c )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print cnt and a new line",
      "code": "cout << cnt << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "while true",
      "code": "while ( true )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "v0 = min ( v0 + a , v1 )",
      "code": "v0 = min ( v0 + a , v1 ) ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "increase read by v0 - l",
      "code": "read += v0 - l ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "increase cnt",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if read > = c , break",
      "code": "if ( read >= c ) break ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print cnt and a new line",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int c , v0 , v1 , a [ l ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int cnt = 1 , cnt = v0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator>=’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        16,
        7
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "int cnt = 1 , cnt = v0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        16,
        7,
        6
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "int cnt = 1 , cnt = v0 ;",
        "cin >> c >> v0 >> v1 >> l >> l ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        16,
        7,
        6,
        13
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "int cnt = 1 , cnt = v0 ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int v0 = min ( v0 + a , v1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        16,
        7,
        6,
        8
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "int cnt = 1 , cnt = v0 ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "if ( v0 > c )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        16,
        7,
        6,
        0
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "int cnt = 1 , cnt = v0 ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        16,
        7,
        13
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "int cnt = 1 , cnt = v0 ;",
        "int v0 = min ( v0 + a , v1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        16,
        7,
        13,
        8
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "int cnt = 1 , cnt = v0 ;",
        "int v0 = min ( v0 + a , v1 ) ;",
        "if ( v0 > c )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        16,
        7,
        13,
        0
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "int cnt = 1 , cnt = v0 ;",
        "int v0 = min ( v0 + a , v1 ) ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        16,
        7,
        8
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "int cnt = 1 , cnt = v0 ;",
        "if ( v0 > c )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        16,
        7,
        8,
        0
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "int cnt = 1 , cnt = v0 ;",
        "if ( v0 > c )",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        16,
        7,
        0
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "int cnt = 1 , cnt = v0 ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        16,
        6
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "cin >> c >> v0 >> v1 >> l >> l ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator>=’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        16,
        6,
        13
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int v0 = min ( v0 + a , v1 ) ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator>=’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        16,
        6,
        13,
        8
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int v0 = min ( v0 + a , v1 ) ;",
        "if ( v0 > c )"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator>=’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        16,
        6,
        13,
        0
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int v0 = min ( v0 + a , v1 ) ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        16,
        6,
        8
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "if ( v0 > c )"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator>=’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        16,
        6,
        8,
        0
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "if ( v0 > c )",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        16,
        6,
        0
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        16,
        13
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "int v0 = min ( v0 + a , v1 ) ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator>=’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        16,
        13,
        8
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "int v0 = min ( v0 + a , v1 ) ;",
        "if ( v0 > c )"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator>=’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        16,
        13,
        8,
        0
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "int v0 = min ( v0 + a , v1 ) ;",
        "if ( v0 > c )",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        16,
        13,
        0
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "int v0 = min ( v0 + a , v1 ) ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "if ( v0 > c )"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator>=’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        16,
        8,
        0
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "if ( v0 > c )",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        16,
        0
      ],
      "mod_code": [
        "if ( cin >> read >= c ) break ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "int cnt = 1 , cnt = v0 ;",
        "cin >> c >> v0 >> v1 >> l >> l ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        7,
        6,
        13
      ],
      "mod_code": [
        "int cnt = 1 , cnt = v0 ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int v0 = min ( v0 + a , v1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        7,
        6,
        13,
        8
      ],
      "mod_code": [
        "int cnt = 1 , cnt = v0 ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int v0 = min ( v0 + a , v1 ) ;",
        "if ( v0 > c )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        7,
        6,
        13,
        0
      ],
      "mod_code": [
        "int cnt = 1 , cnt = v0 ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int v0 = min ( v0 + a , v1 ) ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        7,
        6,
        8
      ],
      "mod_code": [
        "int cnt = 1 , cnt = v0 ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "if ( v0 > c )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        7,
        6,
        8,
        0
      ],
      "mod_code": [
        "int cnt = 1 , cnt = v0 ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "if ( v0 > c )",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        7,
        6,
        0
      ],
      "mod_code": [
        "int cnt = 1 , cnt = v0 ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "int cnt = 1 , cnt = v0 ;",
        "int v0 = min ( v0 + a , v1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        7,
        13,
        8
      ],
      "mod_code": [
        "int cnt = 1 , cnt = v0 ;",
        "int v0 = min ( v0 + a , v1 ) ;",
        "if ( v0 > c )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        7,
        13,
        8,
        0
      ],
      "mod_code": [
        "int cnt = 1 , cnt = v0 ;",
        "int v0 = min ( v0 + a , v1 ) ;",
        "if ( v0 > c )",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        7,
        13,
        0
      ],
      "mod_code": [
        "int cnt = 1 , cnt = v0 ;",
        "int v0 = min ( v0 + a , v1 ) ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "int cnt = 1 , cnt = v0 ;",
        "if ( v0 > c )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        7,
        8,
        0
      ],
      "mod_code": [
        "int cnt = 1 , cnt = v0 ;",
        "if ( v0 > c )",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "int cnt = 1 , cnt = v0 ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        6,
        13,
        8,
        0
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int v0 = min ( v0 + a , v1 ) ;",
        "if ( v0 > c )",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        6,
        13,
        0
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int v0 = min ( v0 + a , v1 ) ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        6,
        8,
        0
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "if ( v0 > c )",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        13,
        8,
        0
      ],
      "mod_code": [
        "int v0 = min ( v0 + a , v1 ) ;",
        "if ( v0 > c )",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        13,
        0
      ],
      "mod_code": [
        "int v0 = min ( v0 + a , v1 ) ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "if ( v0 > c )",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    }
  ]
}