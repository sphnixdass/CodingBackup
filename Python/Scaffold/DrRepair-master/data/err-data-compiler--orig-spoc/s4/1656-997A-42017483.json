{
  "meta": {
    "index": 1656,
    "hitid": "3ULIZ0H1VAZ4D16XKTPOMS2373951A",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "997A",
    "subid": "42017483"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int n , x , y",
      "code": "int n , x , y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create string str",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , x , y",
      "code": "cin >> n >> x >> y ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "cnt = 0",
      "code": "long long cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( long long i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if str [ i ] = 0 and str [ i + 1 ] = 1 , increment cnt",
      "code": "if ( str [ i ] == ' 0 ' && str [ i + 1 ] == ' 1 ' ) cnt ++ ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if str [ n - 1 ] = 0 , add 1 to cnt",
      "code": "if ( str [ n - 1 ] == ' 0 ' ) cnt ++ ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create long long minn",
      "code": "long long minn ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if x less than y",
      "code": "if ( x < y )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set minn to x * ( cnt - 1 ) + y",
      "code": "minn = x * ( cnt - 1 ) + y ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "minn equal to y * cnt",
      "code": "minn = y * cnt ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if cnt = 0 , set minn to 0",
      "code": "if ( cnt == 0 ) minn = 0 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print minn",
      "code": "cout << minn << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char str ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cnt = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "long long minn = ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘;’ token"
    },
    {
      "mod_line": [
        7,
        8,
        4
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        8,
        4,
        15
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "gets ( str ) ;",
        "cout << minn ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        8,
        4,
        2
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "gets ( str ) ;",
        "char str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        4,
        6
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        8,
        15,
        2
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "cout << minn ;",
        "char str ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        15,
        6
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "cout << minn ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        2
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "char str ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        2,
        6
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "char str ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        6
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        4,
        15
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "gets ( str ) ;",
        "cout << minn ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        4,
        15,
        2
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "gets ( str ) ;",
        "cout << minn ;",
        "char str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        4,
        15,
        6
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "gets ( str ) ;",
        "cout << minn ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        4,
        2
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "gets ( str ) ;",
        "char str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        4,
        2,
        6
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "gets ( str ) ;",
        "char str ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        4,
        6
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        15,
        2
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "cout << minn ;",
        "char str ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        15,
        2,
        6
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "cout << minn ;",
        "char str ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15,
        6
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "cout << minn ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "char str ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        2,
        6
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "char str ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "if ( str [ i ] == 0 && str [ i + 1 ] == 1 ) cnt ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        4,
        15
      ],
      "mod_code": [
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "gets ( str ) ;",
        "cout << minn ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        4,
        15,
        2
      ],
      "mod_code": [
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "gets ( str ) ;",
        "cout << minn ;",
        "char str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4,
        15,
        6
      ],
      "mod_code": [
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "gets ( str ) ;",
        "cout << minn ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        4,
        2
      ],
      "mod_code": [
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "gets ( str ) ;",
        "char str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4,
        2,
        6
      ],
      "mod_code": [
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "gets ( str ) ;",
        "char str ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4,
        6
      ],
      "mod_code": [
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        15,
        2
      ],
      "mod_code": [
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "cout << minn ;",
        "char str ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        15,
        2,
        6
      ],
      "mod_code": [
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "cout << minn ;",
        "char str ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        6
      ],
      "mod_code": [
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "cout << minn ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "char str ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        2,
        6
      ],
      "mod_code": [
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "char str ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "if ( str [ n - 1 ] == 0 ) cnt ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "gets ( str ) ;",
        "cout << minn ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        15,
        2
      ],
      "mod_code": [
        "gets ( str ) ;",
        "cout << minn ;",
        "char str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        15,
        2,
        6
      ],
      "mod_code": [
        "gets ( str ) ;",
        "cout << minn ;",
        "char str ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        15,
        6
      ],
      "mod_code": [
        "gets ( str ) ;",
        "cout << minn ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "gets ( str ) ;",
        "char str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2,
        6
      ],
      "mod_code": [
        "gets ( str ) ;",
        "char str ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        15,
        2
      ],
      "mod_code": [
        "cout << minn ;",
        "char str ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        2,
        6
      ],
      "mod_code": [
        "cout << minn ;",
        "char str ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        6
      ],
      "mod_code": [
        "cout << minn ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "char str ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}