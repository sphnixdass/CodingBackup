{
  "meta": {
    "index": 2195,
    "hitid": "337F8MIIMZ7MATHFA52E3VDF2F504U",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "556A",
    "subid": "48434695"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let c0 = 0 be int",
      "code": "int c0 = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s [ i ] is ' 0 ' , increment c0",
      "code": "if ( s [ i ] == ' 0 ' ) c0 ++ ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "let l = s . length ( ) be an int",
      "code": "int l = s . length ( ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print the absolute value of 1 - 2c0",
      "code": "cout << abs ( ( l - c0 ) - c0 ) << endl ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout << abs ( 1 ) - 2c0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"c0\" on integer constant"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int l = new int . length ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "cout << abs ( 1 ) - 2c0 << endl ;",
        "int c0 = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"c0\" on integer constant"
    },
    {
      "mod_line": [
        9,
        5,
        4
      ],
      "mod_code": [
        "cout << abs ( 1 ) - 2c0 << endl ;",
        "int c0 = 1 ;",
        "s >> s ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"c0\" on integer constant"
    },
    {
      "mod_line": [
        9,
        5,
        4,
        8
      ],
      "mod_code": [
        "cout << abs ( 1 ) - 2c0 << endl ;",
        "int c0 = 1 ;",
        "s >> s ;",
        "int l = new int . length ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"c0\" on integer constant"
    },
    {
      "mod_line": [
        9,
        5,
        4,
        6
      ],
      "mod_code": [
        "cout << abs ( 1 ) - 2c0 << endl ;",
        "int c0 = 1 ;",
        "s >> s ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"c0\" on integer constant"
    },
    {
      "mod_line": [
        9,
        5,
        8
      ],
      "mod_code": [
        "cout << abs ( 1 ) - 2c0 << endl ;",
        "int c0 = 1 ;",
        "int l = new int . length ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"c0\" on integer constant"
    },
    {
      "mod_line": [
        9,
        5,
        8,
        6
      ],
      "mod_code": [
        "cout << abs ( 1 ) - 2c0 << endl ;",
        "int c0 = 1 ;",
        "int l = new int . length ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"c0\" on integer constant"
    },
    {
      "mod_line": [
        9,
        5,
        6
      ],
      "mod_code": [
        "cout << abs ( 1 ) - 2c0 << endl ;",
        "int c0 = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"c0\" on integer constant"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "cout << abs ( 1 ) - 2c0 << endl ;",
        "s >> s ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"c0\" on integer constant"
    },
    {
      "mod_line": [
        9,
        4,
        8
      ],
      "mod_code": [
        "cout << abs ( 1 ) - 2c0 << endl ;",
        "s >> s ;",
        "int l = new int . length ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"c0\" on integer constant"
    },
    {
      "mod_line": [
        9,
        4,
        8,
        6
      ],
      "mod_code": [
        "cout << abs ( 1 ) - 2c0 << endl ;",
        "s >> s ;",
        "int l = new int . length ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"c0\" on integer constant"
    },
    {
      "mod_line": [
        9,
        4,
        6
      ],
      "mod_code": [
        "cout << abs ( 1 ) - 2c0 << endl ;",
        "s >> s ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"c0\" on integer constant"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "cout << abs ( 1 ) - 2c0 << endl ;",
        "int l = new int . length ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"c0\" on integer constant"
    },
    {
      "mod_line": [
        9,
        8,
        6
      ],
      "mod_code": [
        "cout << abs ( 1 ) - 2c0 << endl ;",
        "int l = new int . length ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"c0\" on integer constant"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "cout << abs ( 1 ) - 2c0 << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"c0\" on integer constant"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "int c0 = 1 ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        4,
        8
      ],
      "mod_code": [
        "int c0 = 1 ;",
        "s >> s ;",
        "int l = new int . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        4,
        8,
        6
      ],
      "mod_code": [
        "int c0 = 1 ;",
        "s >> s ;",
        "int l = new int . length ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        4,
        8,
        9
      ],
      "mod_code": [
        "int c0 = 1 ;",
        "s >> s ;",
        "int l = new int . length ( ) ;",
        "cout << abs ( 1 ) - 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        4,
        6
      ],
      "mod_code": [
        "int c0 = 1 ;",
        "s >> s ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        4,
        6,
        9
      ],
      "mod_code": [
        "int c0 = 1 ;",
        "s >> s ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << abs ( 1 ) - 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        4,
        9
      ],
      "mod_code": [
        "int c0 = 1 ;",
        "s >> s ;",
        "cout << abs ( 1 ) - 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "int c0 = 1 ;",
        "int l = new int . length ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        8,
        6
      ],
      "mod_code": [
        "int c0 = 1 ;",
        "int l = new int . length ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        6,
        9
      ],
      "mod_code": [
        "int c0 = 1 ;",
        "int l = new int . length ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << abs ( 1 ) - 1 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        9
      ],
      "mod_code": [
        "int c0 = 1 ;",
        "int l = new int . length ( ) ;",
        "cout << abs ( 1 ) - 1 << endl ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "int c0 = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "int c0 = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << abs ( 1 ) - 1 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "s >> s ;",
        "int l = new int . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        8,
        6
      ],
      "mod_code": [
        "s >> s ;",
        "int l = new int . length ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        8,
        6,
        9
      ],
      "mod_code": [
        "s >> s ;",
        "int l = new int . length ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << abs ( 1 ) - 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        8,
        9
      ],
      "mod_code": [
        "s >> s ;",
        "int l = new int . length ( ) ;",
        "cout << abs ( 1 ) - 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "s >> s ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        6,
        9
      ],
      "mod_code": [
        "s >> s ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << abs ( 1 ) - 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "s >> s ;",
        "cout << abs ( 1 ) - 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "int l = new int . length ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        9
      ],
      "mod_code": [
        "int l = new int . length ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << abs ( 1 ) - 1 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "int l = new int . length ( ) ;",
        "cout << abs ( 1 ) - 1 << endl ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << abs ( 1 ) - 1 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}