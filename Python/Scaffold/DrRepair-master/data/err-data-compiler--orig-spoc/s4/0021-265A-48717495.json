{
  "meta": {
    "index": 21,
    "hitid": "3FULMHZ7OURJD7OMZAPC1SKS5I54M8",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "265A",
    "subid": "48717495"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string s and t",
      "code": "string s , t ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s and t",
      "code": "cin >> s >> t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer lent = t . size ( )",
      "code": "int lent = t . size ( ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer pos = 0",
      "code": "int pos = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to lent exclusive",
      "code": "for ( int i = 0 ; i < lent ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if s [ pos ] is equal to t [ i ] , increment pos",
      "code": "if ( s [ pos ] == t [ i ] ) { pos ++ ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print pos + 1",
      "code": "cout << pos + 1 << endl ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s , t t ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s >> t ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "lent = t . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘lent’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "pos = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘pos’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < lent ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "string s , t t ;",
        "lent = t . size ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "string s , t t ;",
        "lent = t . size ( ) ;",
        "pos = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        5
      ],
      "mod_code": [
        "string s , t t ;",
        "lent = t . size ( ) ;",
        "pos = 0 ;",
        "for ( i = 0 ; i < lent ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        2
      ],
      "mod_code": [
        "string s , t t ;",
        "lent = t . size ( ) ;",
        "pos = 0 ;",
        "s >> s >> t ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "string s , t t ;",
        "lent = t . size ( ) ;",
        "for ( i = 0 ; i < lent ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        2
      ],
      "mod_code": [
        "string s , t t ;",
        "lent = t . size ( ) ;",
        "for ( i = 0 ; i < lent ; i ++ )",
        "s >> s >> t ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        1,
        3,
        2
      ],
      "mod_code": [
        "string s , t t ;",
        "lent = t . size ( ) ;",
        "s >> s >> t ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "string s , t t ;",
        "pos = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        1,
        4,
        5
      ],
      "mod_code": [
        "string s , t t ;",
        "pos = 0 ;",
        "for ( i = 0 ; i < lent ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        2
      ],
      "mod_code": [
        "string s , t t ;",
        "pos = 0 ;",
        "for ( i = 0 ; i < lent ; i ++ )",
        "s >> s >> t ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        1,
        4,
        2
      ],
      "mod_code": [
        "string s , t t ;",
        "pos = 0 ;",
        "s >> s >> t ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "string s , t t ;",
        "for ( i = 0 ; i < lent ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        1,
        5,
        2
      ],
      "mod_code": [
        "string s , t t ;",
        "for ( i = 0 ; i < lent ; i ++ )",
        "s >> s >> t ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "string s , t t ;",
        "s >> s >> t ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘t’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "lent = t . size ( ) ;",
        "pos = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘lent’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "lent = t . size ( ) ;",
        "pos = 0 ;",
        "for ( i = 0 ; i < lent ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘lent’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        2
      ],
      "mod_code": [
        "lent = t . size ( ) ;",
        "pos = 0 ;",
        "for ( i = 0 ; i < lent ; i ++ )",
        "s >> s >> t ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "lent = t . size ( ) ;",
        "pos = 0 ;",
        "s >> s >> t ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "lent = t . size ( ) ;",
        "for ( i = 0 ; i < lent ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘lent’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        2
      ],
      "mod_code": [
        "lent = t . size ( ) ;",
        "for ( i = 0 ; i < lent ; i ++ )",
        "s >> s >> t ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "lent = t . size ( ) ;",
        "s >> s >> t ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "pos = 0 ;",
        "for ( i = 0 ; i < lent ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘pos’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        2
      ],
      "mod_code": [
        "pos = 0 ;",
        "for ( i = 0 ; i < lent ; i ++ )",
        "s >> s >> t ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "pos = 0 ;",
        "s >> s >> t ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < lent ; i ++ )",
        "s >> s >> t ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}