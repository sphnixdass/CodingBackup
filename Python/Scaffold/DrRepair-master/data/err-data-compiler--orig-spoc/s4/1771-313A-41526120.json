{
  "meta": {
    "index": 1771,
    "hitid": "3D06DR5225DYFW438BZ3EV6SXS4MA4",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "313A",
    "subid": "41526120"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , l , sl , a = int",
      "code": "int n , l , sl , a ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n > = 0",
      "code": "if ( n >= 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print n",
      "code": "cout << n << endl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set a to n",
      "code": "a = n ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set l to a mod 10",
      "code": "l = a % 10 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set a to a / 10",
      "code": "a = a / 10 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set sl to a mod 10",
      "code": "sl = a % 10 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set a to a - sl",
      "code": "a = a - sl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if sl > l",
      "code": "if ( sl > l )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "increment a by sl",
      "code": "a += sl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 15,
      "text": "increment a",
      "code": "a += l ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print a",
      "code": "cout << a << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , l , sl , a , a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int a = n ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        14
      ],
      "mod_code": [
        "a ++ ;",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        14,
        10
      ],
      "mod_code": [
        "a ++ ;",
        "else else",
        "sl /= 10 ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        14,
        10,
        16
      ],
      "mod_code": [
        "a ++ ;",
        "else else",
        "sl /= 10 ;",
        "cout << a ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        14,
        10,
        3
      ],
      "mod_code": [
        "a ++ ;",
        "else else",
        "sl /= 10 ;",
        "if ( ! n )"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        14,
        16
      ],
      "mod_code": [
        "a ++ ;",
        "else else",
        "cout << a ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        14,
        16,
        3
      ],
      "mod_code": [
        "a ++ ;",
        "else else",
        "cout << a ;",
        "if ( ! n )"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        14,
        3
      ],
      "mod_code": [
        "a ++ ;",
        "else else",
        "if ( ! n )"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        10
      ],
      "mod_code": [
        "else else",
        "sl /= 10 ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        10,
        15
      ],
      "mod_code": [
        "else else",
        "sl /= 10 ;",
        "++ a ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        10,
        15,
        16
      ],
      "mod_code": [
        "else else",
        "sl /= 10 ;",
        "++ a ;",
        "cout << a ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        10,
        15,
        3
      ],
      "mod_code": [
        "else else",
        "sl /= 10 ;",
        "++ a ;",
        "if ( ! n )"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        10,
        16
      ],
      "mod_code": [
        "else else",
        "sl /= 10 ;",
        "cout << a ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        10,
        16,
        3
      ],
      "mod_code": [
        "else else",
        "sl /= 10 ;",
        "cout << a ;",
        "if ( ! n )"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        10,
        3
      ],
      "mod_code": [
        "else else",
        "sl /= 10 ;",
        "if ( ! n )"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "else else",
        "++ a ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        15,
        16
      ],
      "mod_code": [
        "else else",
        "++ a ;",
        "cout << a ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        3
      ],
      "mod_code": [
        "else else",
        "++ a ;",
        "cout << a ;",
        "if ( ! n )"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        15,
        3
      ],
      "mod_code": [
        "else else",
        "++ a ;",
        "if ( ! n )"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        16
      ],
      "mod_code": [
        "else else",
        "cout << a ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        16,
        3
      ],
      "mod_code": [
        "else else",
        "cout << a ;",
        "if ( ! n )"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "else else",
        "if ( ! n )"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}