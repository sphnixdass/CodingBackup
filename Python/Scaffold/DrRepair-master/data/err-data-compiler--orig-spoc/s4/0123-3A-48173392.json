{
  "meta": {
    "index": 123,
    "hitid": "38VTL6WC4A7137H0WIWX0FDDDM3Y5H",
    "workerid": "AIWEXPJAU66D9",
    "probid": "3A",
    "subid": "48173392"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if 0",
      "code": "if ( 0 )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "open file \" cp . inp \" for reading",
      "code": "freopen ( \" CP.inp \" , \" r \" , stdin ) ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "open file \" cp . out \" for writing",
      "code": "freopen ( \" CP.out \" , \" w \" , stdout ) ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 5,
      "text": "s1 and s2 = strings",
      "code": "string s1 , s2 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read s1 and s2",
      "code": "cin >> s1 >> s2 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print max of abs ( s1 [ 0 ] - s2 [ 0 ] ) and abs ( s1 [ 1 ] - s2 [ 1 ] ) and ' \\ n '",
      "code": "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) , abs ( s1 [ 1 ] - s2 [ 1 ] ) ) << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while s1 ! = s2",
      "code": "while ( s1 != s2 )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if s1 [ 0 ] is less than s2 [ 0 ]",
      "code": "if ( s1 [ 0 ] < s2 [ 0 ] )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print \" R \" and increment s1 [ 0 ]",
      "code": "cout << \" R \" , s1 [ 0 ] += 1 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else if s1 [ 0 ] is greater than s2 [ 0 ]",
      "code": "else if ( s1 [ 0 ] > s2 [ 0 ] )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print \" L \" and increment s2 [ 0 ]",
      "code": "cout << \" L \" , s2 [ 0 ] += 1 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if s1 [ 1 ] is less than s2 [ 1 ]",
      "code": "if ( s1 [ 1 ] < s2 [ 1 ] )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print \" U \" and increment s1 [ 1 ]",
      "code": "cout << \" U \" , s1 [ 1 ] += 1 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else if s1 [ 1 ] is greater than s2 [ 1 ]",
      "code": "else if ( s1 [ 1 ] > s2 [ 1 ] )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print \" D \" and increment s2 [ 1 ]",
      "code": "cout << \" D \" , s2 [ 1 ] += 1 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "print ' \\ n '",
      "code": "cout << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "s1 >> s1 >> s2 ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "while ( s1 )"
      ],
      "err_line": 8,
      "err_msg": "could not convert ‘s1’ from ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘bool’"
    },
    {
      "mod_line": [
        10,
        12,
        14,
        7
      ],
      "mod_code": [
        "cout << \" R \" << s1 [ 0 ] << endl ;",
        "cout << \" L \" << s2 [ 0 ] << endl ;",
        "cout << \" U \" << s1 [ 1 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        10,
        12,
        14,
        1
      ],
      "mod_code": [
        "cout << \" R \" << s1 [ 0 ] << endl ;",
        "cout << \" L \" << s2 [ 0 ] << endl ;",
        "cout << \" U \" << s1 [ 1 ] << endl ;",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        12,
        7
      ],
      "mod_code": [
        "cout << \" R \" << s1 [ 0 ] << endl ;",
        "cout << \" L \" << s2 [ 0 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        10,
        12,
        7,
        15
      ],
      "mod_code": [
        "cout << \" R \" << s1 [ 0 ] << endl ;",
        "cout << \" L \" << s2 [ 0 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;",
        "else if ( s1 [ 1 ] >= s2 [ 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        10,
        12,
        7,
        1
      ],
      "mod_code": [
        "cout << \" R \" << s1 [ 0 ] << endl ;",
        "cout << \" L \" << s2 [ 0 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        12,
        15,
        1
      ],
      "mod_code": [
        "cout << \" R \" << s1 [ 0 ] << endl ;",
        "cout << \" L \" << s2 [ 0 ] << endl ;",
        "else if ( s1 [ 1 ] >= s2 [ 1 ] )",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        12,
        1
      ],
      "mod_code": [
        "cout << \" R \" << s1 [ 0 ] << endl ;",
        "cout << \" L \" << s2 [ 0 ] << endl ;",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        14,
        7
      ],
      "mod_code": [
        "cout << \" R \" << s1 [ 0 ] << endl ;",
        "cout << \" U \" << s1 [ 1 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        10,
        14,
        7,
        15
      ],
      "mod_code": [
        "cout << \" R \" << s1 [ 0 ] << endl ;",
        "cout << \" U \" << s1 [ 1 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;",
        "else if ( s1 [ 1 ] >= s2 [ 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        10,
        14,
        7,
        1
      ],
      "mod_code": [
        "cout << \" R \" << s1 [ 0 ] << endl ;",
        "cout << \" U \" << s1 [ 1 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        14,
        15,
        1
      ],
      "mod_code": [
        "cout << \" R \" << s1 [ 0 ] << endl ;",
        "cout << \" U \" << s1 [ 1 ] << endl ;",
        "else if ( s1 [ 1 ] >= s2 [ 1 ] )",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        14,
        1
      ],
      "mod_code": [
        "cout << \" R \" << s1 [ 0 ] << endl ;",
        "cout << \" U \" << s1 [ 1 ] << endl ;",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "cout << \" R \" << s1 [ 0 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        10,
        7,
        15
      ],
      "mod_code": [
        "cout << \" R \" << s1 [ 0 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;",
        "else if ( s1 [ 1 ] >= s2 [ 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        10,
        7,
        15,
        1
      ],
      "mod_code": [
        "cout << \" R \" << s1 [ 0 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;",
        "else if ( s1 [ 1 ] >= s2 [ 1 ] )",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        7,
        1
      ],
      "mod_code": [
        "cout << \" R \" << s1 [ 0 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        15,
        1
      ],
      "mod_code": [
        "cout << \" R \" << s1 [ 0 ] << endl ;",
        "else if ( s1 [ 1 ] >= s2 [ 1 ] )",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "cout << \" R \" << s1 [ 0 ] << endl ;",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        14,
        7
      ],
      "mod_code": [
        "cout << \" L \" << s2 [ 0 ] << endl ;",
        "cout << \" U \" << s1 [ 1 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        12,
        14,
        7,
        15
      ],
      "mod_code": [
        "cout << \" L \" << s2 [ 0 ] << endl ;",
        "cout << \" U \" << s1 [ 1 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;",
        "else if ( s1 [ 1 ] >= s2 [ 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        12,
        14,
        7,
        1
      ],
      "mod_code": [
        "cout << \" L \" << s2 [ 0 ] << endl ;",
        "cout << \" U \" << s1 [ 1 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        1
      ],
      "mod_code": [
        "cout << \" L \" << s2 [ 0 ] << endl ;",
        "cout << \" U \" << s1 [ 1 ] << endl ;",
        "else if ( s1 [ 1 ] >= s2 [ 1 ] )",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        14,
        1
      ],
      "mod_code": [
        "cout << \" L \" << s2 [ 0 ] << endl ;",
        "cout << \" U \" << s1 [ 1 ] << endl ;",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "cout << \" L \" << s2 [ 0 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        12,
        7,
        15
      ],
      "mod_code": [
        "cout << \" L \" << s2 [ 0 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;",
        "else if ( s1 [ 1 ] >= s2 [ 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        12,
        7,
        15,
        1
      ],
      "mod_code": [
        "cout << \" L \" << s2 [ 0 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;",
        "else if ( s1 [ 1 ] >= s2 [ 1 ] )",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        7,
        1
      ],
      "mod_code": [
        "cout << \" L \" << s2 [ 0 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        15,
        1
      ],
      "mod_code": [
        "cout << \" L \" << s2 [ 0 ] << endl ;",
        "else if ( s1 [ 1 ] >= s2 [ 1 ] )",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "cout << \" L \" << s2 [ 0 ] << endl ;",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "cout << \" U \" << s1 [ 1 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        14,
        7,
        15
      ],
      "mod_code": [
        "cout << \" U \" << s1 [ 1 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;",
        "else if ( s1 [ 1 ] >= s2 [ 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        14,
        7,
        15,
        1
      ],
      "mod_code": [
        "cout << \" U \" << s1 [ 1 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;",
        "else if ( s1 [ 1 ] >= s2 [ 1 ] )",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        7,
        1
      ],
      "mod_code": [
        "cout << \" U \" << s1 [ 1 ] << endl ;",
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        15,
        1
      ],
      "mod_code": [
        "cout << \" U \" << s1 [ 1 ] << endl ;",
        "else if ( s1 [ 1 ] >= s2 [ 1 ] )",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "cout << \" U \" << s1 [ 1 ] << endl ;",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        15
      ],
      "mod_code": [
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;",
        "else if ( s1 [ 1 ] >= s2 [ 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        7,
        15,
        1
      ],
      "mod_code": [
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;",
        "else if ( s1 [ 1 ] >= s2 [ 1 ] )",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "cout << max ( abs ( s1 [ 0 ] - s2 [ 0 ] ) ) << abs ( s1 [ 1 ] - s2 [ 1 ] ) << ' \\n ' ;",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        15,
        1
      ],
      "mod_code": [
        "else if ( s1 [ 1 ] >= s2 [ 1 ] )",
        "else"
      ],
      "err_line": 1,
      "err_msg": "‘else’ without a previous ‘if’"
    }
  ]
}