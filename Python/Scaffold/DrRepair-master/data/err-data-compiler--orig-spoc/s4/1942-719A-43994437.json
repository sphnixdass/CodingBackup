{
  "meta": {
    "index": 1942,
    "hitid": "3DW3BNF1GHC3MV5XP5GG50JAYXGV8Q",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "719A",
    "subid": "43994437"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "i , j , k = int",
      "code": "int i , j , k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "a = int array of size 99",
      "code": "int a [ 99 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n values into a",
      "code": "for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "x , y , z = int",
      "code": "int x , y , z ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if n is 1",
      "code": "if ( n == 1 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set x to a [ 0 ]",
      "code": "x = a [ 0 ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if x is 15",
      "code": "if ( x == 15 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print \" DOWN \"",
      "code": "cout << \" DOWN \" << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else if x is 0",
      "code": "else if ( x == 0 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print \" UP \"",
      "code": "cout << \" UP \" << endl ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print \" - 1 \"",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else if n is 2",
      "code": "else if ( n == 2 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "set x to a [ n - 2 ]",
      "code": "x = a [ n - 2 ] ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "set y to a [ n - 1 ]",
      "code": "y = a [ n - 1 ] ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if x is 1 and y is 0",
      "code": "if ( x == 1 && y == 0 )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print \" UP \"",
      "code": "cout << \" UP \" << endl ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else if x is 14 and y is 15",
      "code": "else if ( x == 14 && y == 15 )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print \" DOWN \"",
      "code": "cout << \" DOWN \" << endl ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 23,
      "text": "if x < y",
      "code": "if ( x < y )",
      "indent": 3
    },
    {
      "line": 24,
      "text": "print \" UP \"",
      "code": "cout << \" UP \" << endl ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 26,
      "text": "print \" DOWN \"",
      "code": "cout << \" DOWN \" << endl ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 29,
      "text": "set x to a [ n - 3 ]",
      "code": "x = a [ n - 3 ] ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "set y to a [ n - 2 ]",
      "code": "y = a [ n - 2 ] ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "set z to a [ n - 1 ]",
      "code": "z = a [ n - 1 ] ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "if x is 1 and y is 1 and z is 0",
      "code": "if ( x == 2 && y == 1 && z == 0 )",
      "indent": 2
    },
    {
      "line": 33,
      "text": "print \" UP \"",
      "code": "cout << \" UP \" << endl ;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "else if x is 1 and y is 0 and z is 1",
      "code": "else if ( x == 1 && y == 0 && z == 1 )",
      "indent": 2
    },
    {
      "line": 35,
      "text": "print \" UP \"",
      "code": "cout << \" UP \" << endl ;",
      "indent": 3
    },
    {
      "line": 36,
      "text": "else if x is 13 and y is 14 and z is 15",
      "code": "else if ( x == 13 && y == 14 && z == 15 )",
      "indent": 2
    },
    {
      "line": 37,
      "text": "print \" DOWN \"",
      "code": "cout << \" DOWN \" << endl ;",
      "indent": 3
    },
    {
      "line": 38,
      "text": "else if x is 14 and z is 15 and z is 14",
      "code": "else if ( x == 14 && y == 15 && z == 14 )",
      "indent": 2
    },
    {
      "line": 39,
      "text": "print \" DOWN \"",
      "code": "cout << \" DOWN \" << endl ;",
      "indent": 3
    },
    {
      "line": 40,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 41,
      "text": "if y < z",
      "code": "if ( y < z )",
      "indent": 3
    },
    {
      "line": 42,
      "text": "print \" UP \"",
      "code": "cout << \" UP \" << endl ;",
      "indent": 4
    },
    {
      "line": 43,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 44,
      "text": "print \" DOWN \"",
      "code": "cout << \" DOWN \" << endl ;",
      "indent": 4
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 47,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 48,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int i , j , k , k ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int x , y , z , z ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else if ( x == 15 )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 25,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 28,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 40,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 43,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        25,
        22
      ],
      "mod_code": [
        "else else",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        25,
        22,
        9
      ],
      "mod_code": [
        "else else",
        "else else",
        "else if ( x == 15 )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        25,
        22,
        9,
        6
      ],
      "mod_code": [
        "else else",
        "else else",
        "else if ( x == 15 )",
        "int x , y , z , z ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        25,
        22,
        9,
        44
      ],
      "mod_code": [
        "else else",
        "else else",
        "else if ( x == 15 )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        25,
        22,
        9,
        41
      ],
      "mod_code": [
        "else else",
        "else else",
        "else if ( x == 15 )",
        "if ( y < ' z ' )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        25,
        22,
        6
      ],
      "mod_code": [
        "else else",
        "else else",
        "int x , y , z , z ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        25,
        22,
        6,
        44
      ],
      "mod_code": [
        "else else",
        "else else",
        "int x , y , z , z ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        25,
        22,
        6,
        41
      ],
      "mod_code": [
        "else else",
        "else else",
        "int x , y , z , z ;",
        "if ( y < ' z ' )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        25,
        22,
        44
      ],
      "mod_code": [
        "else else",
        "else else",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        25,
        22,
        44,
        41
      ],
      "mod_code": [
        "else else",
        "else else",
        "cout << \" -1 \" << endl ;",
        "if ( y < ' z ' )"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        25,
        22,
        41
      ],
      "mod_code": [
        "else else",
        "else else",
        "if ( y < ' z ' )"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        25,
        9
      ],
      "mod_code": [
        "else else",
        "else if ( x == 15 )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        25,
        9,
        6
      ],
      "mod_code": [
        "else else",
        "else if ( x == 15 )",
        "int x , y , z , z ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        25,
        9,
        6,
        44
      ],
      "mod_code": [
        "else else",
        "else if ( x == 15 )",
        "int x , y , z , z ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        25,
        9,
        6,
        41
      ],
      "mod_code": [
        "else else",
        "else if ( x == 15 )",
        "int x , y , z , z ;",
        "if ( y < ' z ' )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        25,
        9,
        44
      ],
      "mod_code": [
        "else else",
        "else if ( x == 15 )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        25,
        9,
        44,
        41
      ],
      "mod_code": [
        "else else",
        "else if ( x == 15 )",
        "cout << \" -1 \" << endl ;",
        "if ( y < ' z ' )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        25,
        9,
        41
      ],
      "mod_code": [
        "else else",
        "else if ( x == 15 )",
        "if ( y < ' z ' )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        25,
        6
      ],
      "mod_code": [
        "else else",
        "int x , y , z , z ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        25,
        6,
        44
      ],
      "mod_code": [
        "else else",
        "int x , y , z , z ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        25,
        6,
        44,
        41
      ],
      "mod_code": [
        "else else",
        "int x , y , z , z ;",
        "cout << \" -1 \" << endl ;",
        "if ( y < ' z ' )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        25,
        6,
        41
      ],
      "mod_code": [
        "else else",
        "int x , y , z , z ;",
        "if ( y < ' z ' )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        25,
        44
      ],
      "mod_code": [
        "else else",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 25,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        25,
        44,
        41
      ],
      "mod_code": [
        "else else",
        "cout << \" -1 \" << endl ;",
        "if ( y < ' z ' )"
      ],
      "err_line": 25,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        25,
        41
      ],
      "mod_code": [
        "else else",
        "if ( y < ' z ' )"
      ],
      "err_line": 25,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22,
        9
      ],
      "mod_code": [
        "else else",
        "else if ( x == 15 )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        22,
        9,
        6
      ],
      "mod_code": [
        "else else",
        "else if ( x == 15 )",
        "int x , y , z , z ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        22,
        9,
        6,
        44
      ],
      "mod_code": [
        "else else",
        "else if ( x == 15 )",
        "int x , y , z , z ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        22,
        9,
        6,
        41
      ],
      "mod_code": [
        "else else",
        "else if ( x == 15 )",
        "int x , y , z , z ;",
        "if ( y < ' z ' )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        22,
        9,
        44
      ],
      "mod_code": [
        "else else",
        "else if ( x == 15 )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        22,
        9,
        44,
        41
      ],
      "mod_code": [
        "else else",
        "else if ( x == 15 )",
        "cout << \" -1 \" << endl ;",
        "if ( y < ' z ' )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        22,
        9,
        41
      ],
      "mod_code": [
        "else else",
        "else if ( x == 15 )",
        "if ( y < ' z ' )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        22,
        6
      ],
      "mod_code": [
        "else else",
        "int x , y , z , z ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        22,
        6,
        44
      ],
      "mod_code": [
        "else else",
        "int x , y , z , z ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        22,
        6,
        44,
        41
      ],
      "mod_code": [
        "else else",
        "int x , y , z , z ;",
        "cout << \" -1 \" << endl ;",
        "if ( y < ' z ' )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        22,
        6,
        41
      ],
      "mod_code": [
        "else else",
        "int x , y , z , z ;",
        "if ( y < ' z ' )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        22,
        44
      ],
      "mod_code": [
        "else else",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22,
        44,
        41
      ],
      "mod_code": [
        "else else",
        "cout << \" -1 \" << endl ;",
        "if ( y < ' z ' )"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22,
        41
      ],
      "mod_code": [
        "else else",
        "if ( y < ' z ' )"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "else if ( x == 15 )",
        "int x , y , z , z ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        9,
        6,
        44
      ],
      "mod_code": [
        "else if ( x == 15 )",
        "int x , y , z , z ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        9,
        6,
        44,
        41
      ],
      "mod_code": [
        "else if ( x == 15 )",
        "int x , y , z , z ;",
        "cout << \" -1 \" << endl ;",
        "if ( y < ' z ' )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        9,
        6,
        41
      ],
      "mod_code": [
        "else if ( x == 15 )",
        "int x , y , z , z ;",
        "if ( y < ' z ' )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        9,
        44
      ],
      "mod_code": [
        "else if ( x == 15 )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        9,
        44,
        41
      ],
      "mod_code": [
        "else if ( x == 15 )",
        "cout << \" -1 \" << endl ;",
        "if ( y < ' z ' )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        9,
        41
      ],
      "mod_code": [
        "else if ( x == 15 )",
        "if ( y < ' z ' )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        6,
        44
      ],
      "mod_code": [
        "int x , y , z , z ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        6,
        44,
        41
      ],
      "mod_code": [
        "int x , y , z , z ;",
        "cout << \" -1 \" << endl ;",
        "if ( y < ' z ' )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        6,
        41
      ],
      "mod_code": [
        "int x , y , z , z ;",
        "if ( y < ' z ' )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int z’"
    }
  ]
}