{
  "meta": {
    "index": 2658,
    "hitid": "3N5YJ55YXGX4XEP3KCE3RAVS1G0NAM",
    "workerid": "A1APYLD4DUK33J",
    "probid": "12A",
    "subid": "42818584"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create character array one with size 4",
      "code": "char one [ 4 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create character array two with size 4",
      "code": "char two [ 4 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create character array three with size 4",
      "code": "char three [ 4 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer res with res = 2",
      "code": "int res = 2 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer finall with finall = 0",
      "code": "int finall = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read one read two read three",
      "code": "cin >> one >> two >> three ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if one [ i ] is ' X '",
      "code": "if ( one [ i ] == ' X ' )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if three [ res ] is ' X '",
      "code": "if ( three [ res ] == ' X ' )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increment finall",
      "code": "finall ++ ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "decrement res",
      "code": "res -- ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 13,
      "text": "set finall to 0",
      "code": "finall = 0 ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else if one [ i ] is ' . '",
      "code": "else if ( one [ i ] == ' . ' )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if three [ res ] is ' . '",
      "code": "if ( three [ res ] == ' . ' )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "increment finall",
      "code": "finall ++ ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "decrement res",
      "code": "res -- ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 22,
      "text": "set finall to 0",
      "code": "finall = 0 ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 27,
      "text": "if two [ 0 ] is not two [ 2 ]",
      "code": "if ( two [ 0 ] != two [ 2 ] )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "set finall to 0",
      "code": "finall = 0 ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "break loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 33,
      "text": "if finall is not 0 , print \" YES \" print newline",
      "code": "if ( finall != 0 ) { cout << \" YES \" << endl ; }",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char a [ 4 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char a [ 4 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘two’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char a [ 4 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘three’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "res = 2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "else if ( one [ j ] == ' . ' )"
      ],
      "err_line": 17,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 30,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "char a [ 4 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘two’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        12
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "char a [ 4 ] ;",
        "else ;"
      ],
      "err_line": 6,
      "err_msg": "‘two’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        12,
        4
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "char a [ 4 ] ;",
        "else ;",
        "res = 2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        12,
        21
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "char a [ 4 ] ;",
        "else ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "‘two’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        12,
        9
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "char a [ 4 ] ;",
        "else ;",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 6,
      "err_msg": "‘two’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        4
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "char a [ 4 ] ;",
        "res = 2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        4,
        21
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "char a [ 4 ] ;",
        "res = 2 ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        4,
        9
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "char a [ 4 ] ;",
        "res = 2 ;",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        21
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "char a [ 4 ] ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "‘two’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        21,
        9
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "char a [ 4 ] ;",
        "else else",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 6,
      "err_msg": "‘two’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        9
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "char a [ 4 ] ;",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 6,
      "err_msg": "‘two’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        4
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "else ;",
        "res = 2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        4,
        21
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "else ;",
        "res = 2 ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        4,
        9
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "else ;",
        "res = 2 ;",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        21
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "else ;",
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        12,
        21,
        9
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "else ;",
        "else else",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "res = 2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        21
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "res = 2 ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        21,
        9
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "res = 2 ;",
        "else else",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        9
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "res = 2 ;",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        21
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        21,
        9
      ],
      "mod_code": [
        "cin >> two >> two ;",
        "else else",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "char a [ 4 ] ;",
        "else ;"
      ],
      "err_line": 6,
      "err_msg": "‘two’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        4
      ],
      "mod_code": [
        "char a [ 4 ] ;",
        "else ;",
        "res = 2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        4,
        21
      ],
      "mod_code": [
        "char a [ 4 ] ;",
        "else ;",
        "res = 2 ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        4,
        9
      ],
      "mod_code": [
        "char a [ 4 ] ;",
        "else ;",
        "res = 2 ;",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        21
      ],
      "mod_code": [
        "char a [ 4 ] ;",
        "else ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "‘two’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        21,
        9
      ],
      "mod_code": [
        "char a [ 4 ] ;",
        "else ;",
        "else else",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 6,
      "err_msg": "‘two’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        9
      ],
      "mod_code": [
        "char a [ 4 ] ;",
        "else ;",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 6,
      "err_msg": "‘two’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "char a [ 4 ] ;",
        "res = 2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        21
      ],
      "mod_code": [
        "char a [ 4 ] ;",
        "res = 2 ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        21,
        9
      ],
      "mod_code": [
        "char a [ 4 ] ;",
        "res = 2 ;",
        "else else",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        9
      ],
      "mod_code": [
        "char a [ 4 ] ;",
        "res = 2 ;",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        21
      ],
      "mod_code": [
        "char a [ 4 ] ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "‘two’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        21,
        9
      ],
      "mod_code": [
        "char a [ 4 ] ;",
        "else else",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 6,
      "err_msg": "‘two’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "char a [ 4 ] ;",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 6,
      "err_msg": "‘two’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "else ;",
        "res = 2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        21
      ],
      "mod_code": [
        "else ;",
        "res = 2 ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        21,
        9
      ],
      "mod_code": [
        "else ;",
        "res = 2 ;",
        "else else",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        9
      ],
      "mod_code": [
        "else ;",
        "res = 2 ;",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        21
      ],
      "mod_code": [
        "else ;",
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        21,
        9
      ],
      "mod_code": [
        "else ;",
        "else else",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        21
      ],
      "mod_code": [
        "res = 2 ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        9
      ],
      "mod_code": [
        "res = 2 ;",
        "else else",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "res = 2 ;",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 4,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        9
      ],
      "mod_code": [
        "else else",
        "if ( three [ res ] == ' o ' )"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}