{
  "meta": {
    "index": 1000,
    "hitid": "39XCQ6V3KYYZKN7UQZ15HOTKFEP659",
    "workerid": "AIWEXPJAU66D9",
    "probid": "495A",
    "subid": "46730827"
  },
  "lines": [
    {
      "line": 0,
      "text": "function counter with char argument a that returns int",
      "code": "int counter ( char a )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new integer c with value 1",
      "code": "int c = 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "if a is ' 9 ' , ' 2 ' , ' 6 ' or ' 0 '",
      "code": "if ( ' 9 ' == a || ' 2 ' == a || ' 6 ' == a || ' 0 ' == a )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "assign 2 to c",
      "code": "c = 2 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "else if a is ' 7 '",
      "code": "else if ( ' 7 ' == a )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "assign the new value = 5 to c",
      "code": "c = 5 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else if a is ' 5 '",
      "code": "else if ( ' 5 ' == a )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set c to 4",
      "code": "c = 4 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else if a is ' 3 ' or ' 4 '",
      "code": "else if ( ' 3 ' == a || ' 4 ' == a )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "change the value of c to 3",
      "code": "c = 3 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else if a is ' 1 '",
      "code": "else if ( ' 1 ' == a )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "change c to 7",
      "code": "c = 7 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "return c",
      "code": "return c ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 15,
      "text": "declare string variable with name n",
      "code": "string n ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "read user input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "create new integer co with value 1",
      "code": "int co = 1 ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for i from 0 to 2 exclusive , multiply co by counter ( n [ i ] )",
      "code": "for ( int i = 0 ; i < 2 ; i ++ ) { co *= counter ( n [ i ] ) ; }",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print co",
      "code": "cout << co << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int counter ( char a ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "c = \" 4 \" ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "* c = 3 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "string name ;"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        9
      ],
      "mod_code": [
        "bool c = 1 ;",
        "if ( a == ' 9 ' || a == ' 2 ' || a == ' 6 ' || a == ' 6 ' )",
        "* c = 3 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        1,
        2,
        9,
        16
      ],
      "mod_code": [
        "bool c = 1 ;",
        "if ( a == ' 9 ' || a == ' 2 ' || a == ' 6 ' || a == ' 6 ' )",
        "* c = 3 ;",
        "n = n ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        1,
        2,
        9,
        17
      ],
      "mod_code": [
        "bool c = 1 ;",
        "if ( a == ' 9 ' || a == ' 2 ' || a == ' 6 ' || a == ' 6 ' )",
        "* c = 3 ;",
        "bool co = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        1,
        2,
        9,
        19
      ],
      "mod_code": [
        "bool c = 1 ;",
        "if ( a == ' 9 ' || a == ' 2 ' || a == ' 6 ' || a == ' 6 ' )",
        "* c = 3 ;",
        "cout << co ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "bool c = 1 ;",
        "* c = 3 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        1,
        9,
        16
      ],
      "mod_code": [
        "bool c = 1 ;",
        "* c = 3 ;",
        "n = n ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        1,
        9,
        16,
        17
      ],
      "mod_code": [
        "bool c = 1 ;",
        "* c = 3 ;",
        "n = n ;",
        "bool co = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        1,
        9,
        16,
        19
      ],
      "mod_code": [
        "bool c = 1 ;",
        "* c = 3 ;",
        "n = n ;",
        "cout << co ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        1,
        9,
        17
      ],
      "mod_code": [
        "bool c = 1 ;",
        "* c = 3 ;",
        "bool co = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        1,
        9,
        17,
        19
      ],
      "mod_code": [
        "bool c = 1 ;",
        "* c = 3 ;",
        "bool co = 1 ;",
        "cout << co ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        1,
        9,
        19
      ],
      "mod_code": [
        "bool c = 1 ;",
        "* c = 3 ;",
        "cout << co ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘bool’)"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "if ( a == ' 9 ' || a == ' 2 ' || a == ' 6 ' || a == ' 6 ' )",
        "* c = 3 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        9,
        16
      ],
      "mod_code": [
        "if ( a == ' 9 ' || a == ' 2 ' || a == ' 6 ' || a == ' 6 ' )",
        "* c = 3 ;",
        "n = n ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        9,
        16,
        17
      ],
      "mod_code": [
        "if ( a == ' 9 ' || a == ' 2 ' || a == ' 6 ' || a == ' 6 ' )",
        "* c = 3 ;",
        "n = n ;",
        "bool co = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        9,
        16,
        19
      ],
      "mod_code": [
        "if ( a == ' 9 ' || a == ' 2 ' || a == ' 6 ' || a == ' 6 ' )",
        "* c = 3 ;",
        "n = n ;",
        "cout << co ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        9,
        17
      ],
      "mod_code": [
        "if ( a == ' 9 ' || a == ' 2 ' || a == ' 6 ' || a == ' 6 ' )",
        "* c = 3 ;",
        "bool co = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        9,
        17,
        19
      ],
      "mod_code": [
        "if ( a == ' 9 ' || a == ' 2 ' || a == ' 6 ' || a == ' 6 ' )",
        "* c = 3 ;",
        "bool co = 1 ;",
        "cout << co ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        9,
        19
      ],
      "mod_code": [
        "if ( a == ' 9 ' || a == ' 2 ' || a == ' 6 ' || a == ' 6 ' )",
        "* c = 3 ;",
        "cout << co ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "* c = 3 ;",
        "n = n ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        16,
        17
      ],
      "mod_code": [
        "* c = 3 ;",
        "n = n ;",
        "bool co = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        16,
        17,
        19
      ],
      "mod_code": [
        "* c = 3 ;",
        "n = n ;",
        "bool co = 1 ;",
        "cout << co ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        16,
        19
      ],
      "mod_code": [
        "* c = 3 ;",
        "n = n ;",
        "cout << co ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "* c = 3 ;",
        "bool co = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        17,
        19
      ],
      "mod_code": [
        "* c = 3 ;",
        "bool co = 1 ;",
        "cout << co ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        19
      ],
      "mod_code": [
        "* c = 3 ;",
        "cout << co ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    }
  ]
}