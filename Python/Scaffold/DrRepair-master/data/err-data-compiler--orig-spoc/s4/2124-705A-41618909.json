{
  "meta": {
    "index": 2124,
    "hitid": "32K26U12DNIF3Q1O6DRWRSXB9OAVDT",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "705A",
    "subid": "41618909"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , d , e = integer , c = integer = 0",
      "code": "int n , d , c = 0 , e ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n is even",
      "code": "if ( n % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "d = n / 2",
      "code": "d = n / 2 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "print I hate that",
      "code": "cout << \" I hate that \"",
      "indent": 3
    },
    {
      "line": 7,
      "text": "space",
      "code": "<< \" \" ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "increase c by 1",
      "code": "c ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if c is d exit the for loop",
      "code": "if ( c == d ) { break ; }",
      "indent": 3
    },
    {
      "line": 10,
      "text": "print I love that",
      "code": "cout << \" I love that \"",
      "indent": 3
    },
    {
      "line": 11,
      "text": "space",
      "code": "<< \" \" ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print I love it",
      "code": "cout << \" I love it \" << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 15,
      "text": "e = n / 2",
      "code": "e = n / 2 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "for i = 1 to e inclusive",
      "code": "for ( int i = 1 ; i <= e ; i ++ )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print I hate that",
      "code": "cout << \" I hate that \"",
      "indent": 3
    },
    {
      "line": 18,
      "text": "space",
      "code": "<< \" \" ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "print I love that",
      "code": "cout << \" I love that \"",
      "indent": 3
    },
    {
      "line": 20,
      "text": "space",
      "code": "<< \" \" ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print I hate it",
      "code": "cout << \" I hate it \" << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cout << * I << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "cout << \" I \" << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "cout << \" \" << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "cout << * I << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , d , e , c , c = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cout << \" I \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cout << \" I \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cout << * I << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( i = 1 ; i <= e ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "cout << \" I \" ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "cout << \" I \" ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "cout << * I << \" \\n \" ;"
      ],
      "err_line": 22,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        10
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        13
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        17
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        7,
        11
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        13
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        17
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        13
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        17
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        17
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        7,
        17,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        7,
        17,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        7,
        17,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        7,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        18,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        18,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        18,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        7,
        19,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        7,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        20,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        11
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        13
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        17
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        13
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        17
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        17
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        17,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        17,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        17,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        17,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        18,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        18,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        18,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        19,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        19,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        20,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        13
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        17
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        17
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        17,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        17,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        17,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        17,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        18,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        18,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        18,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        19,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        19,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        20,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        13,
        17
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        13,
        17,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        13,
        17,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        13,
        17,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        13,
        17,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        13,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        13,
        18,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        13,
        18,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        13,
        18,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        13,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        13,
        19,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        13,
        19,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        13,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        13,
        20,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        13,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        17,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        17,
        18,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        17,
        18,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        17,
        18,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        17,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        17,
        19,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        17,
        19,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        17,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        17,
        20,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        17,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        18,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        18,
        19,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        18,
        19,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        18,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        18,
        20,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        18,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        19,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        19,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        20,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        13
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        17
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        18
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        13
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        17
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        18
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        17
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        17,
        18
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        17,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        17,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        17,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        18
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        18,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        18,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        18,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        13
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        17
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        18
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        17
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        17,
        18
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        17,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        17,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        17,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        18
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        18,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        18,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        18,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        17
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        17,
        18
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        17,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        17,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        17,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        18
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        18,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        18,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        18,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        13,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        17
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        17,
        18
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        17,
        18,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        17,
        18,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        17,
        18,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        17,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        17,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        17,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        17,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        17,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        17,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        18
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        18,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        18,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        18,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        18,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        18,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        18,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        13
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        17
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        17
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        11,
        17,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        11,
        17,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        11,
        17,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        11,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        18,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        18,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        18,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        11,
        19,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        11,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        20,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        13,
        17
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        13,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        13,
        18,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        13,
        18,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        13,
        18,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        13,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        13,
        19,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        13,
        19,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        13,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        13,
        20,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        13,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        18,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        18,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        18,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        19,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        19,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        20,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        17,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        18
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        18,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        18,
        19,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        18,
        19,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        18,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        18,
        20,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        18,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        19,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        19,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        20,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        17
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        18
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        18
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        18,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        18,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        18,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        17,
        18
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        17,
        18,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        17,
        18,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        17,
        18,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        17,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        17,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        17,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        17,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        17,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        17,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        18
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        18,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        18,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        18,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        18,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        18,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        18,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        19
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        20
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        22
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        19
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        20
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        22
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        20
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        20,
        22
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        22
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        19
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        19,
        20
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        19,
        22
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        20
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        20,
        22
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        22
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        20
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        22
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        22
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22
      ],
      "mod_code": [
        "cout << * I << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        17,
        18,
        19,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        17,
        18,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        17,
        18,
        20,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        17,
        18,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        17,
        19,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        17,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        17,
        19,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        17,
        20
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        17,
        20,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        17,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        19
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        18,
        19,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        18,
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        18,
        19,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        18,
        20
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        18,
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        18,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        19,
        20,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘I’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        22
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22
      ],
      "mod_code": [
        "cout << \" \" << endl ;",
        "cout << * I << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘cout’"
    }
  ]
}