{
  "meta": {
    "index": 2122,
    "hitid": "3ZVPAMTJWNXQM3UYZJNUWGB51ACGRU",
    "workerid": "AIWEXPJAU66D9",
    "probid": "114A",
    "subid": "30369711"
  },
  "lines": [
    {
      "line": 0,
      "text": "long long function Pow with long long arguments b and p",
      "code": "long long Pow ( long long b , long long p )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if p is equal to 0 , return 1",
      "code": "if ( p == 0 ) return 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create long long z = Pow ( b , p / 2 )",
      "code": "long long z = Pow ( b , p / 2 ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if p is even",
      "code": "if ( p % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return z * z",
      "code": "return z * z ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 6,
      "text": "return z * z * b",
      "code": "return z * z * b ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 9,
      "text": "create long longs k and l",
      "code": "long long k , l ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read k and l",
      "code": "cin >> k >> l ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "create long long ans = 1",
      "code": "long long ans = 1 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "increment ans while Pow ( k , ans ) < l",
      "code": "while ( Pow ( k , ans ) < l ) ans ++ ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if Pow ( km ans ) is not 0",
      "code": "if ( Pow ( k , ans ) == l )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print \" YES \" and ans - 1",
      "code": "cout << \" YES \" << endl << ans - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( Pow ( km ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "‘km’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long Pow ( long long b , long long p ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long z = Pow ( b , p / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( Pow ( ans ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘long long int Pow(long long int, long long int)’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "if ( Pow ( km ) != 0 )",
        "return z ;"
      ],
      "err_line": 13,
      "err_msg": "‘km’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4,
        0
      ],
      "mod_code": [
        "if ( Pow ( km ) != 0 )",
        "return z ;",
        "long long Pow ( long long b , long long p ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        4,
        0,
        5
      ],
      "mod_code": [
        "if ( Pow ( km ) != 0 )",
        "return z ;",
        "long long Pow ( long long b , long long p ) ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        4,
        0,
        15
      ],
      "mod_code": [
        "if ( Pow ( km ) != 0 )",
        "return z ;",
        "long long Pow ( long long b , long long p ) ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        4,
        5
      ],
      "mod_code": [
        "if ( Pow ( km ) != 0 )",
        "return z ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13,
        4,
        5,
        15
      ],
      "mod_code": [
        "if ( Pow ( km ) != 0 )",
        "return z ;",
        "else else",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13,
        4,
        15
      ],
      "mod_code": [
        "if ( Pow ( km ) != 0 )",
        "return z ;",
        "else else"
      ],
      "err_line": 13,
      "err_msg": "‘km’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        0
      ],
      "mod_code": [
        "if ( Pow ( km ) != 0 )",
        "long long Pow ( long long b , long long p ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        0,
        5
      ],
      "mod_code": [
        "if ( Pow ( km ) != 0 )",
        "long long Pow ( long long b , long long p ) ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        0,
        5,
        15
      ],
      "mod_code": [
        "if ( Pow ( km ) != 0 )",
        "long long Pow ( long long b , long long p ) ;",
        "else else",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        0,
        15
      ],
      "mod_code": [
        "if ( Pow ( km ) != 0 )",
        "long long Pow ( long long b , long long p ) ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "if ( Pow ( km ) != 0 )",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13,
        5,
        15
      ],
      "mod_code": [
        "if ( Pow ( km ) != 0 )",
        "else else",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "if ( Pow ( km ) != 0 )",
        "else else"
      ],
      "err_line": 13,
      "err_msg": "‘km’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "return z ;",
        "long long Pow ( long long b , long long p ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        0,
        5
      ],
      "mod_code": [
        "return z ;",
        "long long Pow ( long long b , long long p ) ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        0,
        5,
        13
      ],
      "mod_code": [
        "return z ;",
        "long long Pow ( long long b , long long p ) ;",
        "else else",
        "if ( Pow ( ans ) != 0 )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        0,
        5,
        15
      ],
      "mod_code": [
        "return z ;",
        "long long Pow ( long long b , long long p ) ;",
        "else else",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        0,
        13
      ],
      "mod_code": [
        "return z ;",
        "long long Pow ( long long b , long long p ) ;",
        "if ( Pow ( ans ) != 0 )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        0,
        13,
        15
      ],
      "mod_code": [
        "return z ;",
        "long long Pow ( long long b , long long p ) ;",
        "if ( Pow ( ans ) != 0 )",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        0,
        15
      ],
      "mod_code": [
        "return z ;",
        "long long Pow ( long long b , long long p ) ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "return z ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        5,
        13
      ],
      "mod_code": [
        "return z ;",
        "else else",
        "if ( Pow ( ans ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        15
      ],
      "mod_code": [
        "return z ;",
        "else else",
        "if ( Pow ( ans ) != 0 )",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        5,
        15
      ],
      "mod_code": [
        "return z ;",
        "else else",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "return z ;",
        "if ( Pow ( ans ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘long long int Pow(long long int, long long int)’"
    },
    {
      "mod_line": [
        4,
        13,
        15
      ],
      "mod_code": [
        "return z ;",
        "if ( Pow ( ans ) != 0 )",
        "else else"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘long long int Pow(long long int, long long int)’"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "return z ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "long long Pow ( long long b , long long p ) ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        13
      ],
      "mod_code": [
        "long long Pow ( long long b , long long p ) ;",
        "else else",
        "if ( Pow ( ans ) != 0 )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        13,
        15
      ],
      "mod_code": [
        "long long Pow ( long long b , long long p ) ;",
        "else else",
        "if ( Pow ( ans ) != 0 )",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        15
      ],
      "mod_code": [
        "long long Pow ( long long b , long long p ) ;",
        "else else",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "long long Pow ( long long b , long long p ) ;",
        "if ( Pow ( ans ) != 0 )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        13,
        15
      ],
      "mod_code": [
        "long long Pow ( long long b , long long p ) ;",
        "if ( Pow ( ans ) != 0 )",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "long long Pow ( long long b , long long p ) ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "else else",
        "if ( Pow ( ans ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        13,
        15
      ],
      "mod_code": [
        "else else",
        "if ( Pow ( ans ) != 0 )",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "else else",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "if ( Pow ( ans ) != 0 )",
        "else else"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘long long int Pow(long long int, long long int)’"
    }
  ]
}