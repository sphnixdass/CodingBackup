{
  "meta": {
    "index": 1164,
    "hitid": "3GITHABACYFFSBUZ7XLOLSCUP7ON2P",
    "workerid": "A1APYLD4DUK33J",
    "probid": "910A",
    "subid": "46664550"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare jump with character array x , integers a , b as arguments , returning integer",
      "code": "int jump ( char x [ ] , int a , int b ) ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integers n , d",
      "code": "int n , d ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create character array s with size 1000",
      "code": "char s [ 1000 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integers o , c",
      "code": "int o , c ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while read n read d is true",
      "code": "while ( cin >> n >> d )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set o to c to 0",
      "code": "o = c = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "while o is not n - 1",
      "code": "while ( o != n - 1 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if o + d is greater than d",
      "code": "if ( o + d > n )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increment c",
      "code": "c ++ ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "set o to n - 1",
      "code": "o = n - 1 ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if o is not result of run jump with s , o , d as arguments",
      "code": "if ( o != jump ( s , o , d ) )",
      "indent": 4
    },
    {
      "line": 14,
      "text": "set o to result of run jump with s , o , d , as arguments",
      "code": "o = jump ( s , o , d ) ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "increment c",
      "code": "c ++ ;",
      "indent": 5
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 17,
      "text": "set c to - 1",
      "code": "c = - 1 ;",
      "indent": 5
    },
    {
      "line": 18,
      "text": "break loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print c print newline",
      "code": "cout << c << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 25,
      "text": "declare jump with character array x , integers a , b as arguments , returning integer",
      "code": "int jump ( char x [ ] , int a , int b )",
      "indent": 0
    },
    {
      "line": 26,
      "text": "create integer maxid",
      "code": "int maxid ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "set maxid to a",
      "code": "maxid = a ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "create integer i",
      "code": "int i ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "for i = a to a + b inclusive",
      "code": "for ( i = a ; i <= a + b ; i ++ )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "if x [ i ] is ' 1 ' and maxid is less than i , set maxid to i",
      "code": "if ( x [ i ] == ' 1 ' && maxid < i ) maxid = i ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "return maxid from function",
      "code": "return maxid ;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( o != jump )"
      ],
      "err_line": 13,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )"
      ],
      "err_line": 27,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] ) ;"
      ],
      "err_line": 13,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char a [ 1000 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char [1000]’ and ‘char [1000]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( o != s . find ( s , o ) )"
      ],
      "err_line": 13,
      "err_msg": "request for member ‘find’ in ‘s’, which is of non-class type ‘char [1000]’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "o = jump - jump , d = d ;"
      ],
      "err_line": 14,
      "err_msg": "ISO C++ forbids using pointer to a function in subtraction [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] ) ;"
      ],
      "err_line": 26,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "int t ;"
      ],
      "err_line": 27,
      "err_msg": "‘maxid’ was not declared in this scope"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "char maxid = a ;"
      ],
      "err_line": 27,
      "err_msg": "conflicting declaration ‘char maxid’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 29,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "return ;"
      ],
      "err_line": 32,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "if ( o + d > d )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        9,
        13
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "if ( o + d > d )",
        "if ( o != jump )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        9,
        13,
        25
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "if ( o + d > d )",
        "if ( o != jump )",
        "int jump ( char x [ ] , int a [ ] )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        9,
        13,
        11
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "if ( o + d > d )",
        "if ( o != jump )",
        "o -= 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        9,
        13,
        18
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "if ( o + d > d )",
        "if ( o != jump )",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        9,
        25
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "if ( o + d > d )",
        "int jump ( char x [ ] , int a [ ] )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        9,
        25,
        11
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "if ( o + d > d )",
        "int jump ( char x [ ] , int a [ ] )",
        "o -= 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        9,
        25,
        18
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "if ( o + d > d )",
        "int jump ( char x [ ] , int a [ ] )",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        9,
        11
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "if ( o + d > d )",
        "o -= 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        9,
        11,
        18
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "if ( o + d > d )",
        "o -= 1 ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        9,
        18
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "if ( o + d > d )",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "if ( o != jump )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        13,
        25
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "if ( o != jump )",
        "int jump ( char x [ ] , int a [ ] )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        13,
        25,
        11
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "if ( o != jump )",
        "int jump ( char x [ ] , int a [ ] )",
        "o -= 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        13,
        25,
        18
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "if ( o != jump )",
        "int jump ( char x [ ] , int a [ ] )",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        13,
        11
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "if ( o != jump )",
        "o -= 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        13,
        11,
        18
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "if ( o != jump )",
        "o -= 1 ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        13,
        18
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "if ( o != jump )",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        25
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "int jump ( char x [ ] , int a [ ] )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        25,
        11
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "int jump ( char x [ ] , int a [ ] )",
        "o -= 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        25,
        11,
        18
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "int jump ( char x [ ] , int a [ ] )",
        "o -= 1 ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        25,
        18
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "int jump ( char x [ ] , int a [ ] )",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "o -= 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        11,
        18
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "o -= 1 ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        0,
        18
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "if ( o + d > d )",
        "if ( o != jump )"
      ],
      "err_line": 13,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        13,
        25
      ],
      "mod_code": [
        "if ( o + d > d )",
        "if ( o != jump )",
        "int jump ( char x [ ] , int a [ ] )"
      ],
      "err_line": 13,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        13,
        25,
        11
      ],
      "mod_code": [
        "if ( o + d > d )",
        "if ( o != jump )",
        "int jump ( char x [ ] , int a [ ] )",
        "o -= 1 ;"
      ],
      "err_line": 13,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        13,
        25,
        18
      ],
      "mod_code": [
        "if ( o + d > d )",
        "if ( o != jump )",
        "int jump ( char x [ ] , int a [ ] )",
        "break break ;"
      ],
      "err_line": 13,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        13,
        11
      ],
      "mod_code": [
        "if ( o + d > d )",
        "if ( o != jump )",
        "o -= 1 ;"
      ],
      "err_line": 13,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        13,
        11,
        18
      ],
      "mod_code": [
        "if ( o + d > d )",
        "if ( o != jump )",
        "o -= 1 ;",
        "break break ;"
      ],
      "err_line": 13,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        13,
        18
      ],
      "mod_code": [
        "if ( o + d > d )",
        "if ( o != jump )",
        "break break ;"
      ],
      "err_line": 13,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        25
      ],
      "mod_code": [
        "if ( o + d > d )",
        "int jump ( char x [ ] , int a [ ] )"
      ],
      "err_line": 27,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        25,
        11
      ],
      "mod_code": [
        "if ( o + d > d )",
        "int jump ( char x [ ] , int a [ ] )",
        "o -= 1 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        25,
        11,
        18
      ],
      "mod_code": [
        "if ( o + d > d )",
        "int jump ( char x [ ] , int a [ ] )",
        "o -= 1 ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        9,
        25,
        18
      ],
      "mod_code": [
        "if ( o + d > d )",
        "int jump ( char x [ ] , int a [ ] )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        9,
        11,
        18
      ],
      "mod_code": [
        "if ( o + d > d )",
        "o -= 1 ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        9,
        18
      ],
      "mod_code": [
        "if ( o + d > d )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        13,
        25
      ],
      "mod_code": [
        "if ( o != jump )",
        "int jump ( char x [ ] , int a [ ] )"
      ],
      "err_line": 13,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        25,
        11
      ],
      "mod_code": [
        "if ( o != jump )",
        "int jump ( char x [ ] , int a [ ] )",
        "o -= 1 ;"
      ],
      "err_line": 13,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        25,
        11,
        18
      ],
      "mod_code": [
        "if ( o != jump )",
        "int jump ( char x [ ] , int a [ ] )",
        "o -= 1 ;",
        "break break ;"
      ],
      "err_line": 13,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        25,
        18
      ],
      "mod_code": [
        "if ( o != jump )",
        "int jump ( char x [ ] , int a [ ] )",
        "break break ;"
      ],
      "err_line": 13,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "if ( o != jump )",
        "o -= 1 ;"
      ],
      "err_line": 13,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        11,
        18
      ],
      "mod_code": [
        "if ( o != jump )",
        "o -= 1 ;",
        "break break ;"
      ],
      "err_line": 13,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        18
      ],
      "mod_code": [
        "if ( o != jump )",
        "break break ;"
      ],
      "err_line": 13,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        25,
        11
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "o -= 1 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        25,
        11,
        18
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "o -= 1 ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        25,
        18
      ],
      "mod_code": [
        "int jump ( char x [ ] , int a [ ] )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        11,
        18
      ],
      "mod_code": [
        "o -= 1 ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    }
  ]
}