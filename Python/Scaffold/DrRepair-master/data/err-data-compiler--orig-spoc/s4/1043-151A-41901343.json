{
  "meta": {
    "index": 1043,
    "hitid": "37VE3DA4YUBH6S8KNSJMH1I2YOOBHD",
    "workerid": "AIWEXPJAU66D9",
    "probid": "151A",
    "subid": "41901343"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create vector of integers vec",
      "code": "vector < int > vec ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare int variables n , k , l , c , d , p , nl and np",
      "code": "int n , k , l , c , d , p , nl , np ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read input to n , k , l , c , d , p , nl and np",
      "code": "cin >> n >> k >> l >> c >> d >> p >> nl >> np ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integer variable ovarall = k * l",
      "code": "int ovarall = k * l ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer enough = ovarall / nl",
      "code": "int enough = ovarall / nl ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create int toast = c * d",
      "code": "int toast = c * d ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "declare int variable salt = p / np",
      "code": "int salt = p / np ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "declare integer m = min of enough and min ( toast , salt )",
      "code": "int m = min ( enough , min ( toast , salt ) ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print m / n",
      "code": "cout << m / n << endl ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        3,
        2,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "int m = __gcd ( enough , min ( toast , salt ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        3,
        2,
        8,
        5
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "int m = __gcd ( enough , min ( toast , salt ) ) ;",
        "int enough = ovarall / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        3,
        2,
        8,
        7
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "int m = __gcd ( enough , min ( toast , salt ) ) ;",
        "int salt = p / p ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        3,
        2,
        5
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "int enough = ovarall / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        3,
        2,
        5,
        7
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "int enough = ovarall / 2 ;",
        "int salt = p / p ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        3,
        2,
        7
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "int salt = p / p ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "int m = __gcd ( enough , min ( toast , salt ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        8,
        5
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "int m = __gcd ( enough , min ( toast , salt ) ) ;",
        "int enough = ovarall / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        8,
        5,
        7
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "int m = __gcd ( enough , min ( toast , salt ) ) ;",
        "int enough = ovarall / 2 ;",
        "int salt = p / p ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        8,
        7
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "int m = __gcd ( enough , min ( toast , salt ) ) ;",
        "int salt = p / p ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "int enough = ovarall / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        5,
        7
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "int enough = ovarall / 2 ;",
        "int salt = p / p ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "int salt = p / p ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int p’"
    }
  ]
}