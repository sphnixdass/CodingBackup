{
  "meta": {
    "index": 1968,
    "hitid": "37VUR2VJ6AJPCMFCZ3CW0Y8DZKSC1M",
    "workerid": "AIWEXPJAU66D9",
    "probid": "801A",
    "subid": "49053870"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare string variable s",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare int array dp with size 110 filled with 0",
      "code": "int dp [ 110 ] = { 0 } ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare int array state with size 110 filled with 0",
      "code": "int state [ 110 ] = { 0 } ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare int variable cur = 0",
      "code": "int cur = 0 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "read input to s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create int length = length of s",
      "code": "int length = s . size ( ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if length is equal to 1",
      "code": "if ( length == 1 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print 0",
      "code": "cout << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for integer i = 0 to length exclusive",
      "code": "for ( int i = 0 ; i < length ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if s [ i ] is equal to ' V ' and s [ i + 1 ] is equal to ' K '",
      "code": "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "set state [ i ] and state [ i + 1 ] to 3",
      "code": "state [ i ] = state [ i + 1 ] = 3 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "increment cur",
      "code": "cur ++ ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else if s [ i ] is equal to ' V '",
      "code": "else if ( s [ i ] == ' V ' )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "change state [ i ] to 1",
      "code": "state [ i ] = 1 ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else if s [ i ] is equal to ' K '",
      "code": "else if ( s [ i ] == ' K ' )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "change state [ i ] to 2",
      "code": "state [ i ] = 2 ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "create integer flag = 0",
      "code": "int flag = 0 ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for i from 0 to length exclusive",
      "code": "for ( int i = 0 ; i < length ; i ++ )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if state [ i ] = state [ i + 1 ] and state [ i ] ! = 3 , change flag to 1",
      "code": "if ( ( state [ i ] == state [ i + 1 ] ) && state [ i ] != 3 ) flag = 1 ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print cur + flag",
      "code": "cout << cur + flag << endl ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int state [ 110 ] = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( length == l )"
      ],
      "err_line": 7,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "else if ( s [ j ] == ' V ' )"
      ],
      "err_line": 16,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "state [ i ] ] = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "state [ i ] ] = 2 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "for ( i = 0 ; i < length ; i ++ )"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        25,
        0
      ],
      "mod_code": [
        "cout << 0 ;",
        "cout << cur + flag ;",
        "string n ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        25,
        0,
        2
      ],
      "mod_code": [
        "cout << 0 ;",
        "cout << cur + flag ;",
        "string n ;",
        "int state [ 110 ] = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        8,
        25,
        0,
        7
      ],
      "mod_code": [
        "cout << 0 ;",
        "cout << cur + flag ;",
        "string n ;",
        "if ( length == l )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        25,
        0,
        1
      ],
      "mod_code": [
        "cout << 0 ;",
        "cout << cur + flag ;",
        "string n ;",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        8,
        25,
        2
      ],
      "mod_code": [
        "cout << 0 ;",
        "cout << cur + flag ;",
        "int state [ 110 ] = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        8,
        25,
        2,
        7
      ],
      "mod_code": [
        "cout << 0 ;",
        "cout << cur + flag ;",
        "int state [ 110 ] = 0 ;",
        "if ( length == l )"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        8,
        25,
        2,
        1
      ],
      "mod_code": [
        "cout << 0 ;",
        "cout << cur + flag ;",
        "int state [ 110 ] = 0 ;",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        8,
        25,
        7
      ],
      "mod_code": [
        "cout << 0 ;",
        "cout << cur + flag ;",
        "if ( length == l )"
      ],
      "err_line": 7,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        25,
        7,
        1
      ],
      "mod_code": [
        "cout << 0 ;",
        "cout << cur + flag ;",
        "if ( length == l )",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        8,
        25,
        1
      ],
      "mod_code": [
        "cout << 0 ;",
        "cout << cur + flag ;",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "cout << 0 ;",
        "string n ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        0,
        2
      ],
      "mod_code": [
        "cout << 0 ;",
        "string n ;",
        "int state [ 110 ] = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        8,
        0,
        2,
        7
      ],
      "mod_code": [
        "cout << 0 ;",
        "string n ;",
        "int state [ 110 ] = 0 ;",
        "if ( length == l )"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        8,
        0,
        2,
        1
      ],
      "mod_code": [
        "cout << 0 ;",
        "string n ;",
        "int state [ 110 ] = 0 ;",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        8,
        0,
        7
      ],
      "mod_code": [
        "cout << 0 ;",
        "string n ;",
        "if ( length == l )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        0,
        7,
        1
      ],
      "mod_code": [
        "cout << 0 ;",
        "string n ;",
        "if ( length == l )",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        8,
        0,
        1
      ],
      "mod_code": [
        "cout << 0 ;",
        "string n ;",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "cout << 0 ;",
        "int state [ 110 ] = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        8,
        2,
        7
      ],
      "mod_code": [
        "cout << 0 ;",
        "int state [ 110 ] = 0 ;",
        "if ( length == l )"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        8,
        2,
        7,
        1
      ],
      "mod_code": [
        "cout << 0 ;",
        "int state [ 110 ] = 0 ;",
        "if ( length == l )",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        8,
        2,
        1
      ],
      "mod_code": [
        "cout << 0 ;",
        "int state [ 110 ] = 0 ;",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "cout << 0 ;",
        "if ( length == l )"
      ],
      "err_line": 7,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7,
        1
      ],
      "mod_code": [
        "cout << 0 ;",
        "if ( length == l )",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "cout << 0 ;",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        25,
        0
      ],
      "mod_code": [
        "cout << cur + flag ;",
        "string n ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        0,
        2
      ],
      "mod_code": [
        "cout << cur + flag ;",
        "string n ;",
        "int state [ 110 ] = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        25,
        0,
        2,
        7
      ],
      "mod_code": [
        "cout << cur + flag ;",
        "string n ;",
        "int state [ 110 ] = 0 ;",
        "if ( length == l )"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        25,
        0,
        2,
        1
      ],
      "mod_code": [
        "cout << cur + flag ;",
        "string n ;",
        "int state [ 110 ] = 0 ;",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        25,
        0,
        7
      ],
      "mod_code": [
        "cout << cur + flag ;",
        "string n ;",
        "if ( length == l )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        0,
        7,
        1
      ],
      "mod_code": [
        "cout << cur + flag ;",
        "string n ;",
        "if ( length == l )",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        25,
        0,
        1
      ],
      "mod_code": [
        "cout << cur + flag ;",
        "string n ;",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        25,
        2
      ],
      "mod_code": [
        "cout << cur + flag ;",
        "int state [ 110 ] = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        25,
        2,
        7
      ],
      "mod_code": [
        "cout << cur + flag ;",
        "int state [ 110 ] = 0 ;",
        "if ( length == l )"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        25,
        2,
        7,
        1
      ],
      "mod_code": [
        "cout << cur + flag ;",
        "int state [ 110 ] = 0 ;",
        "if ( length == l )",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        25,
        2,
        1
      ],
      "mod_code": [
        "cout << cur + flag ;",
        "int state [ 110 ] = 0 ;",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        25,
        7
      ],
      "mod_code": [
        "cout << cur + flag ;",
        "if ( length == l )"
      ],
      "err_line": 7,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        7,
        1
      ],
      "mod_code": [
        "cout << cur + flag ;",
        "if ( length == l )",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        25,
        1
      ],
      "mod_code": [
        "cout << cur + flag ;",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "string n ;",
        "int state [ 110 ] = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        0,
        2,
        7
      ],
      "mod_code": [
        "string n ;",
        "int state [ 110 ] = 0 ;",
        "if ( length == l )"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        0,
        2,
        7,
        1
      ],
      "mod_code": [
        "string n ;",
        "int state [ 110 ] = 0 ;",
        "if ( length == l )",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        0,
        2,
        1
      ],
      "mod_code": [
        "string n ;",
        "int state [ 110 ] = 0 ;",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "string n ;",
        "if ( length == l )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        7,
        1
      ],
      "mod_code": [
        "string n ;",
        "if ( length == l )",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "string n ;",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "int state [ 110 ] = 0 ;",
        "if ( length == l )"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        2,
        7,
        1
      ],
      "mod_code": [
        "int state [ 110 ] = 0 ;",
        "if ( length == l )",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "int state [ 110 ] = 0 ;",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "if ( length == l )",
        "int dp [ 110 ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    }
  ]
}