{
  "meta": {
    "index": 2240,
    "hitid": "37VE3DA4YUBH6S8KNSJMH1I2YOMHBH",
    "workerid": "A1APYLD4DUK33J",
    "probid": "336A",
    "subid": "48662849"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers x , y , x1 , y1 , x2 , y2",
      "code": "int x , y , x1 , y1 , x2 , y2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read x read y",
      "code": "cin >> x >> y ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if x is less than 0 and y is less than 0",
      "code": "if ( x < 0 && y < 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print x + y print \" 0 0 \" print x + y",
      "code": "cout << x + y << \" 0 0 \" << x + y ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else if x is less than 0 and y is greater than 0",
      "code": "else if ( x < 0 && y > 0 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print - ( - x + y ) print \" 0 0 \" print - x + y",
      "code": "cout << - ( - x + y ) << \" 0 0 \" << - x + y ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else if x is greater than 0 and y is less than 0",
      "code": "else if ( x > 0 && y < 0 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print 0 print \" \" print - ( - y + x ) print \" \" print - y + x print \" \" print 0",
      "code": "cout << 0 << \" \" << - ( - y + x ) << \" \" << - y + x << \" \" << 0 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print 0 print \" \" print x + y print \" \" print x + y print \" \" print 0",
      "code": "cout << 0 << \" \" << x + y << \" \" << x + y << \" \" << 0 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" \" << x << \" \" << 0 << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> x >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" << \" << \" \" << 0 << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        4,
        6,
        8
      ],
      "mod_code": [
        "cout << x + y << \" \" << x + y << \" \\n \" ;",
        "cout << - ( - x + y ) << \" \" << - x + y << \" \\n \" ;",
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" \" << x << \" \" << 0 << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        10
      ],
      "mod_code": [
        "cout << x + y << \" \" << x + y << \" \\n \" ;",
        "cout << - ( - x + y ) << \" \" << - x + y << \" \\n \" ;",
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" \" << x << \" \" << 0 << endl ;",
        "cout << 0 << \" \" << x + y << \" \" << x + y << \" \" << x + y << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        10
      ],
      "mod_code": [
        "cout << x + y << \" \" << x + y << \" \\n \" ;",
        "cout << - ( - x + y ) << \" \" << - x + y << \" \\n \" ;",
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" \" << x << \" \" << 0 << endl ;",
        "cout << 0 << \" \" << x + y << \" \" << x + y << \" \" << x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        8
      ],
      "mod_code": [
        "cout << x + y << \" \" << x + y << \" \\n \" ;",
        "cout << - ( - x + y ) << \" \" << - x + y << \" \\n \" ;",
        "cout << 0 << \" \" << x + y << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" << \" << \" \" << 0 << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        4,
        6,
        8
      ],
      "mod_code": [
        "cout << x + y << \" \" << x + y << \" \\n \" ;",
        "cout << - ( - x + y ) << \" \" << - x + y << \" \\n \" ;",
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" << \" << \" \" << 0 << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        10
      ],
      "mod_code": [
        "cout << x + y << \" \" << x + y << \" \\n \" ;",
        "cout << - ( - x + y ) << \" \" << - x + y << \" \\n \" ;",
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" << \" << \" \" << 0 << endl ;",
        "cout << 0 << \" \" << x + y << \" \" << x + y << \" \" << x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "cout << x + y << \" \" << x + y << \" \\n \" ;",
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" \" << x << \" \" << 0 << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        4,
        8,
        10
      ],
      "mod_code": [
        "cout << x + y << \" \" << x + y << \" \\n \" ;",
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" \" << x << \" \" << 0 << endl ;",
        "cout << 0 << \" \" << x + y << \" \" << x + y << \" \" << x + y << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        4,
        8,
        10
      ],
      "mod_code": [
        "cout << x + y << \" \" << x + y << \" \\n \" ;",
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" \" << x << \" \" << 0 << endl ;",
        "cout << 0 << \" \" << x + y << \" \" << x + y << \" \" << x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        4,
        10,
        8
      ],
      "mod_code": [
        "cout << x + y << \" \" << x + y << \" \\n \" ;",
        "cout << 0 << \" \" << x + y << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" << \" << \" \" << 0 << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "cout << x + y << \" \" << x + y << \" \\n \" ;",
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" << \" << \" \" << 0 << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        4,
        8,
        10
      ],
      "mod_code": [
        "cout << x + y << \" \" << x + y << \" \\n \" ;",
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" << \" << \" \" << 0 << endl ;",
        "cout << 0 << \" \" << x + y << \" \" << x + y << \" \" << x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "cout << - ( - x + y ) << \" \" << - x + y << \" \\n \" ;",
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" \" << x << \" \" << 0 << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        6,
        8,
        10
      ],
      "mod_code": [
        "cout << - ( - x + y ) << \" \" << - x + y << \" \\n \" ;",
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" \" << x << \" \" << 0 << endl ;",
        "cout << 0 << \" \" << x + y << \" \" << x + y << \" \" << x + y << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        6,
        8,
        10
      ],
      "mod_code": [
        "cout << - ( - x + y ) << \" \" << - x + y << \" \\n \" ;",
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" \" << x << \" \" << 0 << endl ;",
        "cout << 0 << \" \" << x + y << \" \" << x + y << \" \" << x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        6,
        10,
        8
      ],
      "mod_code": [
        "cout << - ( - x + y ) << \" \" << - x + y << \" \\n \" ;",
        "cout << 0 << \" \" << x + y << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" << \" << \" \" << 0 << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "cout << - ( - x + y ) << \" \" << - x + y << \" \\n \" ;",
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" << \" << \" \" << 0 << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        6,
        8,
        10
      ],
      "mod_code": [
        "cout << - ( - x + y ) << \" \" << - x + y << \" \\n \" ;",
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" << \" << \" \" << 0 << endl ;",
        "cout << 0 << \" \" << x + y << \" \" << x + y << \" \" << x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" \" << x << \" \" << 0 << endl ;",
        "cout << 0 << \" \" << x + y << \" \" << x + y << \" \" << x + y << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" \" << x << \" \" << 0 << endl ;",
        "cout << 0 << \" \" << x + y << \" \" << x + y << \" \" << x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "cout << 0 << \" \" << x + y << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" << \" << \" \" << 0 << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "cout << 0 << \" \" << ( - y + x ) << \" \" << - \" << \" << \" \" << 0 << endl ;",
        "cout << 0 << \" \" << x + y << \" \" << x + y << \" \" << x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "wrong type argument to unary minus"
    }
  ]
}