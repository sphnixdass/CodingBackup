{
  "meta": {
    "index": 1830,
    "hitid": "3AQN9REUTFAW7KWTBOEGYR15QIGYDY",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "443A",
    "subid": "48936403"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s is a string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "getline ( cin , s ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "mp is a map from char to int",
      "code": "map < char , int > mp ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to size of s - 1 exclusive",
      "code": "for ( int i = 1 ; i < s . size ( ) - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if s [ i ] is not ' ' and is not ' , ' mp [ s [ i ] ] = 1",
      "code": "if ( s [ i ] != ' ' && s [ i ] != ' , ' ) mp [ s [ i ] ] = 1 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "print size of mp",
      "code": "cout << mp . size ( ) << endl ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "map < char , int > :: mp ;"
      ],
      "err_line": 3,
      "err_msg": "‘mp’ is not a member of ‘std::map<char, int>’"
    },
    {
      "mod_line": [
        2,
        5,
        3
      ],
      "mod_code": [
        "cin >> s ;",
        "if ( s [ i ] != ' ' && s [ i ] != ' 1 ' ) mp [ s [ i ] ] = 1 ;",
        "map < char , int > :: mp ;"
      ],
      "err_line": 3,
      "err_msg": "‘mp’ is not a member of ‘std::map<char, int>’"
    },
    {
      "mod_line": [
        2,
        5,
        3,
        4
      ],
      "mod_code": [
        "cin >> s ;",
        "if ( s [ i ] != ' ' && s [ i ] != ' 1 ' ) mp [ s [ i ] ] = 1 ;",
        "map < char , int > :: mp ;",
        "for ( int i = 1 ; i <= s . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘mp’ is not a member of ‘std::map<char, int>’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cin >> s ;",
        "map < char , int > :: mp ;"
      ],
      "err_line": 3,
      "err_msg": "‘mp’ is not a member of ‘std::map<char, int>’"
    },
    {
      "mod_line": [
        2,
        3,
        4
      ],
      "mod_code": [
        "cin >> s ;",
        "map < char , int > :: mp ;",
        "for ( int i = 1 ; i <= s . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘mp’ is not a member of ‘std::map<char, int>’"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        5
      ],
      "mod_code": [
        "cin >> s ;",
        "map < char , int > :: mp ;",
        "for ( int i = 1 ; i <= s . size ( ) - 1 ; i ++ )",
        "if ( s [ i ] != ' ' && s [ i ] != ' ' ) mp [ s [ i ] ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘mp’ is not a member of ‘std::map<char, int>’"
    },
    {
      "mod_line": [
        2,
        3,
        5
      ],
      "mod_code": [
        "cin >> s ;",
        "map < char , int > :: mp ;",
        "if ( s [ i ] != ' ' && s [ i ] != ' ' ) mp [ s [ i ] ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘mp’ is not a member of ‘std::map<char, int>’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "if ( s [ i ] != ' ' && s [ i ] != ' 1 ' ) mp [ s [ i ] ] = 1 ;",
        "map < char , int > :: mp ;"
      ],
      "err_line": 3,
      "err_msg": "‘mp’ is not a member of ‘std::map<char, int>’"
    },
    {
      "mod_line": [
        5,
        3,
        4
      ],
      "mod_code": [
        "if ( s [ i ] != ' ' && s [ i ] != ' 1 ' ) mp [ s [ i ] ] = 1 ;",
        "map < char , int > :: mp ;",
        "for ( int i = 1 ; i <= s . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘mp’ is not a member of ‘std::map<char, int>’"
    },
    {
      "mod_line": [
        5,
        3,
        4,
        2
      ],
      "mod_code": [
        "if ( s [ i ] != ' ' && s [ i ] != ' 1 ' ) mp [ s [ i ] ] = 1 ;",
        "map < char , int > :: mp ;",
        "for ( int i = 1 ; i <= s . size ( ) - 1 ; i ++ )",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        3,
        2
      ],
      "mod_code": [
        "if ( s [ i ] != ' ' && s [ i ] != ' 1 ' ) mp [ s [ i ] ] = 1 ;",
        "map < char , int > :: mp ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        4,
        2
      ],
      "mod_code": [
        "if ( s [ i ] != ' ' && s [ i ] != ' 1 ' ) mp [ s [ i ] ] = 1 ;",
        "for ( int i = 1 ; i <= s . size ( ) - 1 ; i ++ )",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "if ( s [ i ] != ' ' && s [ i ] != ' 1 ' ) mp [ s [ i ] ] = 1 ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "map < char , int > :: mp ;",
        "for ( int i = 1 ; i <= s . size ( ) - 1 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘mp’ is not a member of ‘std::map<char, int>’"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "map < char , int > :: mp ;",
        "for ( int i = 1 ; i <= s . size ( ) - 1 ; i ++ )",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        4,
        2,
        5
      ],
      "mod_code": [
        "map < char , int > :: mp ;",
        "for ( int i = 1 ; i <= s . size ( ) - 1 ; i ++ )",
        "gets ( s ) ;",
        "if ( s [ i ] != ' ' && s [ i ] != ' ' ) mp [ s [ i ] ] = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "map < char , int > :: mp ;",
        "for ( int i = 1 ; i <= s . size ( ) - 1 ; i ++ )",
        "if ( s [ i ] != ' ' && s [ i ] != ' ' ) mp [ s [ i ] ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘mp’ is not a member of ‘std::map<char, int>’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "map < char , int > :: mp ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        2,
        5
      ],
      "mod_code": [
        "map < char , int > :: mp ;",
        "gets ( s ) ;",
        "if ( s [ i ] != ' ' && s [ i ] != ' ' ) mp [ s [ i ] ] = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "map < char , int > :: mp ;",
        "if ( s [ i ] != ' ' && s [ i ] != ' ' ) mp [ s [ i ] ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘mp’ is not a member of ‘std::map<char, int>’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= s . size ( ) - 1 ; i ++ )",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        2,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= s . size ( ) - 1 ; i ++ )",
        "gets ( s ) ;",
        "if ( s [ i ] != ' ' && s [ i ] != ' ' ) mp [ s [ i ] ] = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "gets ( s ) ;",
        "if ( s [ i ] != ' ' && s [ i ] != ' ' ) mp [ s [ i ] ] = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    }
  ]
}