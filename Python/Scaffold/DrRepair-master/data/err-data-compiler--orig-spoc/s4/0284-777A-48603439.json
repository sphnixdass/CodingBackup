{
  "meta": {
    "index": 284,
    "hitid": "3MNJFORX8BYV3G05RS49BU6X8DNF5G",
    "workerid": "A1APYLD4DUK33J",
    "probid": "777A",
    "subid": "48603439"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long longs n , k",
      "code": "long long n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create 2d integer array a with size 3 by 10 with a = { { 0 , 1 , 2 , 2 , 1 , 0 } , { 1 , 0 , 0 , 1 , 2 , 2 } , { 2 , 2 , 1 , 0 , 0 , 1 } }",
      "code": "int a [ 3 ] [ 10 ] = { { 0 , 1 , 2 , 2 , 1 , 0 } , { 1 , 0 , 0 , 1 , 2 , 2 } , { 2 , 2 , 1 , 0 , 0 , 1 } } ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n read k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set n to n % 6",
      "code": "n = n % 6 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if a [ i ] [ n ] is k , print i print newline",
      "code": "if ( a [ i ] [ n ] == k ) cout << i << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int a [ 3 ] [ 10 ] = { 2 , 1 , 2 , 2 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 0 , 0 , 1 } } ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘,’ or ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int a [ 3 ] [ 10 ] = { 2 , 1 , 2 , 2 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 0 , 1 , 1 } } ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘,’ or ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "int a [ 3 ] [ 10 ] = { 2 , 1 , 2 , 2 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 0 , 0 , 1 } } ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘,’ or ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        5,
        3
      ],
      "mod_code": [
        "int a [ 3 ] [ 10 ] = { 2 , 1 , 2 , 2 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 0 , 0 , 1 } } ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "n >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘,’ or ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        5,
        3,
        4
      ],
      "mod_code": [
        "int a [ 3 ] [ 10 ] = { 2 , 1 , 2 , 2 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 0 , 0 , 1 } } ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "n >> n >> k ;",
        "n /= 6 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘,’ or ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        5,
        4
      ],
      "mod_code": [
        "int a [ 3 ] [ 10 ] = { 2 , 1 , 2 , 2 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 0 , 0 , 1 } } ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "n /= 6 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘,’ or ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "int a [ 3 ] [ 10 ] = { 2 , 1 , 2 , 2 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 0 , 0 , 1 } } ;",
        "n >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘,’ or ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        3,
        4
      ],
      "mod_code": [
        "int a [ 3 ] [ 10 ] = { 2 , 1 , 2 , 2 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 0 , 0 , 1 } } ;",
        "n >> n >> k ;",
        "n /= 6 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘,’ or ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "int a [ 3 ] [ 10 ] = { 2 , 1 , 2 , 2 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 0 , 0 , 1 } } ;",
        "n /= 6 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘,’ or ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "int a [ 3 ] [ 10 ] = { 2 , 1 , 2 , 2 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 0 , 1 , 1 } } ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘,’ or ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        2,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "int a [ 3 ] [ 10 ] = { 2 , 1 , 2 , 2 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 0 , 1 , 1 } } ;",
        "n >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘,’ or ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        2,
        3,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "int a [ 3 ] [ 10 ] = { 2 , 1 , 2 , 2 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 0 , 1 , 1 } } ;",
        "n >> n >> k ;",
        "n /= 6 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘,’ or ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        2,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "int a [ 3 ] [ 10 ] = { 2 , 1 , 2 , 2 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 0 , 1 , 1 } } ;",
        "n /= 6 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘,’ or ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "n >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "n >> n >> k ;",
        "n /= 6 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "n /= 6 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "int a [ 3 ] [ 10 ] = { 2 , 1 , 2 , 2 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 0 , 1 , 1 } } ;",
        "n >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘,’ or ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        3,
        4
      ],
      "mod_code": [
        "int a [ 3 ] [ 10 ] = { 2 , 1 , 2 , 2 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 0 , 1 , 1 } } ;",
        "n >> n >> k ;",
        "n /= 6 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘,’ or ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "int a [ 3 ] [ 10 ] = { 2 , 1 , 2 , 2 , 1 , 1 , 1 , 1 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 2 , 0 , 1 , 1 } } ;",
        "n /= 6 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘,’ or ‘;’ before ‘}’ token"
    }
  ]
}