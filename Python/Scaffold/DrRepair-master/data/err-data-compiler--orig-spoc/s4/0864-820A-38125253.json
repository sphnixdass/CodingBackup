{
  "meta": {
    "index": 864,
    "hitid": "30Z7M1Q8UYEJU72ZEAPK9D5XC0H8AT",
    "workerid": "A1APYLD4DUK33J",
    "probid": "820A",
    "subid": "38125253"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers c , v0 , v1 , a , l",
      "code": "int c , v0 , v1 , a , l ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read c read v0 read v1 read a read l",
      "code": "while ( cin >> c >> v0 >> v1 >> a >> l )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer sum with sum = 0",
      "code": "int sum = 0 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "create integer add with add = 0",
      "code": "int add = 0 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "create integer count with count = 1",
      "code": "int count = 1 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if v0 is less than v1",
      "code": "if ( v0 < v1 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment sum by v0",
      "code": "sum += v0 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set add to v0",
      "code": "add = v0 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment sum by v1",
      "code": "sum += v1 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "set add to v1",
      "code": "add = v1 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if sum is greater than or equal to c",
      "code": "if ( sum >= c )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print \" 1 \" print newline",
      "code": "cout << \" 1 \" << endl ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "break current loop iteration",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "while sum is less than c",
      "code": "while ( sum < c )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "decrement sum by l",
      "code": "sum -= l ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "if sum is less than 0 , set sum to 0",
      "code": "if ( sum < 0 ) sum = 0 ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "increment add by a",
      "code": "add += a ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "if add is greater than v1 , set add to v1",
      "code": "if ( add > v1 ) { add = v1 ; }",
      "indent": 4
    },
    {
      "line": 23,
      "text": "increment sum by add",
      "code": "sum += add ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "if sum is greater than or equal to c",
      "code": "if ( sum >= c )",
      "indent": 4
    },
    {
      "line": 25,
      "text": "print count print newline",
      "code": "cout << count << endl ;",
      "indent": 5
    },
    {
      "line": 26,
      "text": "break current loop iteration",
      "code": "continue ;",
      "indent": 5
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;"
      ],
      "err_line": 15,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int c , v0 , v1 , a [ l ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> l >> l ;"
      ],
      "err_line": 15,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "if ( add ( v1 ) > v1 ) { add = v1 ; }"
      ],
      "err_line": 22,
      "err_msg": "‘add’ cannot be used as a function"
    },
    {
      "mod_line": [
        2,
        23
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "sum += 1 ;"
      ],
      "err_line": 15,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        2,
        23,
        7
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "sum += 1 ;",
        "sum += ' v0 ' ;"
      ],
      "err_line": 15,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        2,
        23,
        7,
        17
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "sum += 1 ;",
        "sum += ' v0 ' ;",
        "while ( sum <= c )"
      ],
      "err_line": 15,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        2,
        23,
        7,
        14
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "sum += 1 ;",
        "sum += ' v0 ' ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        2,
        23,
        7,
        9
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "sum += 1 ;",
        "sum += ' v0 ' ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        23,
        17
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "sum += 1 ;",
        "while ( sum <= c )"
      ],
      "err_line": 15,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        2,
        23,
        17,
        14
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "sum += 1 ;",
        "while ( sum <= c )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        2,
        23,
        17,
        9
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "sum += 1 ;",
        "while ( sum <= c )",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        23,
        14
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "sum += 1 ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        2,
        23,
        14,
        9
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "sum += 1 ;",
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        23,
        9
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "sum += 1 ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "sum += ' v0 ' ;"
      ],
      "err_line": 15,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        2,
        7,
        17
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "sum += ' v0 ' ;",
        "while ( sum <= c )"
      ],
      "err_line": 15,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        2,
        7,
        17,
        14
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "sum += ' v0 ' ;",
        "while ( sum <= c )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        2,
        7,
        17,
        9
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "sum += ' v0 ' ;",
        "while ( sum <= c )",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        7,
        14
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "sum += ' v0 ' ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        2,
        7,
        14,
        9
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "sum += ' v0 ' ;",
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        7,
        9
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "sum += ' v0 ' ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "while ( sum <= c )"
      ],
      "err_line": 15,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        2,
        17,
        14
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "while ( sum <= c )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        2,
        17,
        14,
        9
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "while ( sum <= c )",
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        17,
        9
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "while ( sum <= c )",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        2,
        14,
        9
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> a >> l ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        23,
        7,
        17,
        9
      ],
      "mod_code": [
        "sum += 1 ;",
        "sum += ' v0 ' ;",
        "while ( sum <= c )",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        23,
        7,
        14,
        9
      ],
      "mod_code": [
        "sum += 1 ;",
        "sum += ' v0 ' ;",
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        23,
        7,
        9
      ],
      "mod_code": [
        "sum += 1 ;",
        "sum += ' v0 ' ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        23,
        17,
        14,
        9
      ],
      "mod_code": [
        "sum += 1 ;",
        "while ( sum <= c )",
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        23,
        17,
        9
      ],
      "mod_code": [
        "sum += 1 ;",
        "while ( sum <= c )",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        23,
        14,
        9
      ],
      "mod_code": [
        "sum += 1 ;",
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        23,
        9
      ],
      "mod_code": [
        "sum += 1 ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        17,
        14,
        9
      ],
      "mod_code": [
        "sum += ' v0 ' ;",
        "while ( sum <= c )",
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        17,
        9
      ],
      "mod_code": [
        "sum += ' v0 ' ;",
        "while ( sum <= c )",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        14,
        9
      ],
      "mod_code": [
        "sum += ' v0 ' ;",
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "sum += ' v0 ' ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17,
        14,
        9
      ],
      "mod_code": [
        "while ( sum <= c )",
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17,
        9
      ],
      "mod_code": [
        "while ( sum <= c )",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        9
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}