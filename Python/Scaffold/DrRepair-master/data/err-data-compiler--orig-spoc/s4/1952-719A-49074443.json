{
  "meta": {
    "index": 1952,
    "hitid": "3OEWW2KGQJ5KD6SR515IW033DVGDOC",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "719A",
    "subid": "49074443"
  },
  "lines": [
    {
      "line": 0,
      "text": "n , x = int",
      "code": "int n , x ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a = int array of size 100",
      "code": "int a [ 100 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if n is 1",
      "code": "if ( n == 1 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if x is 15",
      "code": "if ( x == 15 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print \" DOWN \"",
      "code": "cout << \" DOWN \" << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if x is 0",
      "code": "if ( x == 0 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print \" UP \"",
      "code": "cout << \" UP \" << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i = 1 to n inclusive read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if a [ n ] is 15",
      "code": "if ( a [ n ] == 15 )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print \" DOWN \"",
      "code": "cout << \" DOWN \" << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "if a [ n ] is 0",
      "code": "if ( a [ n ] == 0 )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print \" UP \"",
      "code": "cout << \" UP \" << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "if a [ n ] > a [ n - 1 ]",
      "code": "if ( a [ n ] > a [ n - 1 ] )",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print \" UP \"",
      "code": "cout << \" UP \" << endl ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "if a [ n ] < a [ n - 1 ]",
      "code": "if ( a [ n ] < a [ n - 1 ] )",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print \" DOWN \"",
      "code": "cout << \" DOWN \" << endl ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , x , x ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "else if ( x == 15 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "if ( a [ i ] > a [ n - 1 ] )"
      ],
      "err_line": 26,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )"
      ],
      "err_line": 30,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        0
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "int n , x , x ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        30,
        0,
        27
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "int n , x , x ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        30,
        0,
        27,
        4
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "int n , x , x ;",
        "cout << \" -1 \" << endl ;",
        "if ( ! n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        30,
        0,
        27,
        3
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "int n , x , x ;",
        "cout << \" -1 \" << endl ;",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        30,
        0,
        27,
        6
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "int n , x , x ;",
        "cout << \" -1 \" << endl ;",
        "else if ( x == 15 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        30,
        0,
        4
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "int n , x , x ;",
        "if ( ! n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        30,
        0,
        4,
        3
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "int n , x , x ;",
        "if ( ! n )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        30,
        0,
        4,
        6
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "int n , x , x ;",
        "if ( ! n )",
        "else if ( x == 15 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        30,
        0,
        3
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "int n , x , x ;",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        30,
        0,
        3,
        6
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "int n , x , x ;",
        "while ( cin >> n )",
        "else if ( x == 15 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        30,
        0,
        6
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "int n , x , x ;",
        "else if ( x == 15 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        30,
        27
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 30,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        27,
        4
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "cout << \" -1 \" << endl ;",
        "if ( ! n )"
      ],
      "err_line": 30,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        27,
        4,
        3
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "cout << \" -1 \" << endl ;",
        "if ( ! n )",
        "while ( cin >> n )"
      ],
      "err_line": 30,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        27,
        4,
        6
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "cout << \" -1 \" << endl ;",
        "if ( ! n )",
        "else if ( x == 15 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        30,
        27,
        3
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "cout << \" -1 \" << endl ;",
        "while ( cin >> n )"
      ],
      "err_line": 30,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        27,
        3,
        6
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "cout << \" -1 \" << endl ;",
        "while ( cin >> n )",
        "else if ( x == 15 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        30,
        27,
        6
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "cout << \" -1 \" << endl ;",
        "else if ( x == 15 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        30,
        4
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "if ( ! n )"
      ],
      "err_line": 30,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        4,
        3
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "if ( ! n )",
        "while ( cin >> n )"
      ],
      "err_line": 30,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        4,
        3,
        6
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "if ( ! n )",
        "while ( cin >> n )",
        "else if ( x == 15 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        30,
        4,
        6
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "if ( ! n )",
        "else if ( x == 15 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        30,
        3
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "while ( cin >> n )"
      ],
      "err_line": 30,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        3,
        6
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "while ( cin >> n )",
        "else if ( x == 15 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        30,
        6
      ],
      "mod_code": [
        "if ( a [ i ] < a [ n - 1 ] )",
        "else if ( x == 15 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        0,
        27
      ],
      "mod_code": [
        "int n , x , x ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        27,
        4
      ],
      "mod_code": [
        "int n , x , x ;",
        "cout << \" -1 \" << endl ;",
        "if ( ! n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        27,
        4,
        3
      ],
      "mod_code": [
        "int n , x , x ;",
        "cout << \" -1 \" << endl ;",
        "if ( ! n )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        27,
        4,
        6
      ],
      "mod_code": [
        "int n , x , x ;",
        "cout << \" -1 \" << endl ;",
        "if ( ! n )",
        "else if ( x == 15 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        27,
        3
      ],
      "mod_code": [
        "int n , x , x ;",
        "cout << \" -1 \" << endl ;",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        27,
        3,
        6
      ],
      "mod_code": [
        "int n , x , x ;",
        "cout << \" -1 \" << endl ;",
        "while ( cin >> n )",
        "else if ( x == 15 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        27,
        6
      ],
      "mod_code": [
        "int n , x , x ;",
        "cout << \" -1 \" << endl ;",
        "else if ( x == 15 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "int n , x , x ;",
        "if ( ! n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        4,
        3
      ],
      "mod_code": [
        "int n , x , x ;",
        "if ( ! n )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        4,
        3,
        6
      ],
      "mod_code": [
        "int n , x , x ;",
        "if ( ! n )",
        "while ( cin >> n )",
        "else if ( x == 15 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        4,
        6
      ],
      "mod_code": [
        "int n , x , x ;",
        "if ( ! n )",
        "else if ( x == 15 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int n , x , x ;",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        3,
        6
      ],
      "mod_code": [
        "int n , x , x ;",
        "while ( cin >> n )",
        "else if ( x == 15 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "int n , x , x ;",
        "else if ( x == 15 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        27,
        4,
        3,
        6
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "if ( ! n )",
        "while ( cin >> n )",
        "else if ( x == 15 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        27,
        4,
        6
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "if ( ! n )",
        "else if ( x == 15 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        27,
        3,
        6
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "while ( cin >> n )",
        "else if ( x == 15 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        27,
        6
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "else if ( x == 15 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        4,
        3,
        6
      ],
      "mod_code": [
        "if ( ! n )",
        "while ( cin >> n )",
        "else if ( x == 15 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "if ( ! n )",
        "else if ( x == 15 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else if ( x == 15 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    }
  ]
}