{
  "meta": {
    "index": 2662,
    "hitid": "3W3RSPVVGSLYON0GE4FFEJ3X3OSUL3",
    "workerid": "AIWEXPJAU66D9",
    "probid": "12A",
    "subid": "34167780"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let count be integer",
      "code": "int count ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let a be a 2d array of characters with size 3 by 3",
      "code": "char a [ 3 ] [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for integer i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for integer j = 0 to 3 exclusive read a [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < 3 ; j ++ ) cin >> a [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "set count to 0",
      "code": "count = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if a [ 0 ] [ 0 ] is equal to a [ 2 ] [ 2 ] increase count",
      "code": "if ( a [ 0 ] [ 0 ] == a [ 2 ] [ 2 ] ) count ++ ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if a [ 0 ] [ 1 ] is equal to a [ 2 ] [ 1 ] increase count",
      "code": "if ( a [ 0 ] [ 1 ] == a [ 2 ] [ 1 ] ) count ++ ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if a [ 0 ] [ 2 ] is equal to a [ 2 ] [ 0 ] increase count",
      "code": "if ( a [ 0 ] [ 2 ] == a [ 2 ] [ 0 ] ) count ++ ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if a [ 1 ] [ 0 ] is equal to a [ 1 ] [ 2 ] increase count",
      "code": "if ( a [ 1 ] [ 0 ] == a [ 1 ] [ 2 ] ) count ++ ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if count is equal to 4",
      "code": "if ( count == 4 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print \" YES \" and ' \\ n '",
      "code": "cout << \" YES \" << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print \" NO \" and ' \\ n '",
      "code": "cout << \" NO \" << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char a [ 3 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int count = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "else else",
        "if ( count == ' 4 ' )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        10,
        2
      ],
      "mod_code": [
        "else else",
        "if ( count == ' 4 ' )",
        "char a [ 3 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        10,
        2,
        5
      ],
      "mod_code": [
        "else else",
        "if ( count == ' 4 ' )",
        "char a [ 3 ] ;",
        "int count = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        10,
        5
      ],
      "mod_code": [
        "else else",
        "if ( count == ' 4 ' )",
        "int count = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "else else",
        "char a [ 3 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        2,
        5
      ],
      "mod_code": [
        "else else",
        "char a [ 3 ] ;",
        "int count = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "else else",
        "int count = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "if ( count == ' 4 ' )",
        "char a [ 3 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        2,
        5
      ],
      "mod_code": [
        "if ( count == ' 4 ' )",
        "char a [ 3 ] ;",
        "int count = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "if ( count == ' 4 ' )",
        "int count = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "char a [ 3 ] ;",
        "int count = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    }
  ]
}