{
  "meta": {
    "index": 1961,
    "hitid": "3YCT0L9OMM38XABX1C0UCAPYOOLNS1",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "719A",
    "subid": "43477761"
  },
  "lines": [
    {
      "line": 0,
      "text": "n = int",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "maxn = const int with maxn = 100",
      "code": "const int maxn = 100 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "a = int array of size maxn",
      "code": "int a [ maxn ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n values into a",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if n is 1",
      "code": "if ( n == 1 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if a [ 0 ] is 0",
      "code": "if ( a [ 0 ] == 0 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print \" UP \"",
      "code": "cout << \" UP \" << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if a [ 0 ] is 15",
      "code": "else if ( a [ 0 ] == 15 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print \" DOWN \"",
      "code": "cout << \" DOWN \" << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print \" - 1 \"",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if a [ n - 1 ] > a [ n - 2 ]",
      "code": "if ( a [ n - 1 ] > a [ n - 2 ] )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if a [ n - 1 ] is 15",
      "code": "if ( a [ n - 1 ] == 15 )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print \" DOWN \"",
      "code": "cout << \" DOWN \" << endl ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print \" UP \"",
      "code": "cout << \" UP \" << endl ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if a [ n - 1 ] is 0",
      "code": "if ( a [ n - 1 ] == 0 )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "print \" UP \"",
      "code": "cout << \" UP \" << endl ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 26,
      "text": "print \" DOWN \"",
      "code": "cout << \" DOWN \" << endl ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 25,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        20
      ],
      "mod_code": [
        "else else",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        20,
        17
      ],
      "mod_code": [
        "else else",
        "else else",
        "if ( a [ n - 1 ] > a [ n - 1 ] )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        20,
        17,
        7
      ],
      "mod_code": [
        "else else",
        "else else",
        "if ( a [ n - 1 ] > a [ n - 1 ] )",
        "if ( ! n )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        20,
        17,
        26
      ],
      "mod_code": [
        "else else",
        "else else",
        "if ( a [ n - 1 ] > a [ n - 1 ] )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        20,
        17,
        22
      ],
      "mod_code": [
        "else else",
        "else else",
        "if ( a [ n - 1 ] > a [ n - 1 ] )",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        20,
        7
      ],
      "mod_code": [
        "else else",
        "else else",
        "if ( ! n )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        20,
        7,
        26
      ],
      "mod_code": [
        "else else",
        "else else",
        "if ( ! n )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        20,
        7,
        22
      ],
      "mod_code": [
        "else else",
        "else else",
        "if ( ! n )",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        20,
        26
      ],
      "mod_code": [
        "else else",
        "else else",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        20,
        26,
        22
      ],
      "mod_code": [
        "else else",
        "else else",
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        20,
        22
      ],
      "mod_code": [
        "else else",
        "else else",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "else else",
        "if ( a [ n - 1 ] > a [ n - 1 ] )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        17,
        7
      ],
      "mod_code": [
        "else else",
        "if ( a [ n - 1 ] > a [ n - 1 ] )",
        "if ( ! n )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        17,
        7,
        26
      ],
      "mod_code": [
        "else else",
        "if ( a [ n - 1 ] > a [ n - 1 ] )",
        "if ( ! n )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        17,
        7,
        22
      ],
      "mod_code": [
        "else else",
        "if ( a [ n - 1 ] > a [ n - 1 ] )",
        "if ( ! n )",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        17,
        26
      ],
      "mod_code": [
        "else else",
        "if ( a [ n - 1 ] > a [ n - 1 ] )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        17,
        26,
        22
      ],
      "mod_code": [
        "else else",
        "if ( a [ n - 1 ] > a [ n - 1 ] )",
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        17,
        22
      ],
      "mod_code": [
        "else else",
        "if ( a [ n - 1 ] > a [ n - 1 ] )",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "else else",
        "if ( ! n )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        7,
        26
      ],
      "mod_code": [
        "else else",
        "if ( ! n )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        7,
        26,
        22
      ],
      "mod_code": [
        "else else",
        "if ( ! n )",
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        7,
        22
      ],
      "mod_code": [
        "else else",
        "if ( ! n )",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        26
      ],
      "mod_code": [
        "else else",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        26,
        22
      ],
      "mod_code": [
        "else else",
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        22
      ],
      "mod_code": [
        "else else",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        17
      ],
      "mod_code": [
        "else else",
        "if ( a [ n - 1 ] > a [ n - 1 ] )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        17,
        7
      ],
      "mod_code": [
        "else else",
        "if ( a [ n - 1 ] > a [ n - 1 ] )",
        "if ( ! n )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        17,
        7,
        26
      ],
      "mod_code": [
        "else else",
        "if ( a [ n - 1 ] > a [ n - 1 ] )",
        "if ( ! n )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        17,
        7,
        22
      ],
      "mod_code": [
        "else else",
        "if ( a [ n - 1 ] > a [ n - 1 ] )",
        "if ( ! n )",
        "else else"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        17,
        26
      ],
      "mod_code": [
        "else else",
        "if ( a [ n - 1 ] > a [ n - 1 ] )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        17,
        26,
        22
      ],
      "mod_code": [
        "else else",
        "if ( a [ n - 1 ] > a [ n - 1 ] )",
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        17,
        22
      ],
      "mod_code": [
        "else else",
        "if ( a [ n - 1 ] > a [ n - 1 ] )",
        "else else"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        7
      ],
      "mod_code": [
        "else else",
        "if ( ! n )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        7,
        26
      ],
      "mod_code": [
        "else else",
        "if ( ! n )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        7,
        26,
        22
      ],
      "mod_code": [
        "else else",
        "if ( ! n )",
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        7,
        22
      ],
      "mod_code": [
        "else else",
        "if ( ! n )",
        "else else"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        26
      ],
      "mod_code": [
        "else else",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        26,
        22
      ],
      "mod_code": [
        "else else",
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        22
      ],
      "mod_code": [
        "else else",
        "else else"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17,
        7,
        26,
        22
      ],
      "mod_code": [
        "if ( a [ n - 1 ] > a [ n - 1 ] )",
        "if ( ! n )",
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17,
        7,
        22
      ],
      "mod_code": [
        "if ( a [ n - 1 ] > a [ n - 1 ] )",
        "if ( ! n )",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17,
        26,
        22
      ],
      "mod_code": [
        "if ( a [ n - 1 ] > a [ n - 1 ] )",
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17,
        22
      ],
      "mod_code": [
        "if ( a [ n - 1 ] > a [ n - 1 ] )",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        26,
        22
      ],
      "mod_code": [
        "if ( ! n )",
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        22
      ],
      "mod_code": [
        "if ( ! n )",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        26,
        22
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}