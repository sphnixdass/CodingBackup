{
  "meta": {
    "index": 1454,
    "hitid": "3OCZWXS7ZO1H38A1D37767BH59CL5U",
    "workerid": "AIWEXPJAU66D9",
    "probid": "359A",
    "subid": "48580457"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new long long variable T with value 1",
      "code": "long long T = 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "loop , decrementing T , while it is not 0",
      "code": "while ( T -- )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create new long longs n and m",
      "code": "long long n , m ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "read n and m from the input",
      "code": "cin >> n >> m ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "goodCell is a new 2d array of booleans with size 51 by 51",
      "code": "bool goodCell [ 51 ] [ 51 ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i from 0 to n exclusive incrementing i",
      "code": "for ( long long i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment j from 0 to m exclusive in a loop",
      "code": "for ( long long j = 0 ; j < m ; j ++ )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "read goodCell [ i ] [ j ] from the input",
      "code": "cin >> goodCell [ i ] [ j ] ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "if ( i or j is 0 or i = n - 1 or j = m - 1 ) and goodCell [ i ] [ j ] is true",
      "code": "if ( ( i == 0 || j == 0 || i == n - 1 || j == m - 1 ) && goodCell [ i ] [ j ] )",
      "indent": 4
    },
    {
      "line": 10,
      "text": "print 2 and ' \\ n ' to the standard output",
      "code": "cout << 2 << ' \\n ' ;",
      "indent": 5
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print 4 and ' \\ n ' to the standard output",
      "code": "cout << 4 << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 8,
      "err_msg": "‘goodCell’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cin >> goodCell >> goodCell [ i ] [ j ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘bool [51][51]’)"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        2
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( -- T )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        2,
        7
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( -- T )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        2,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( -- T )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        2,
        5
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( -- T )",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        7
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < m ; j ++ )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        5
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < m ; j ++ )",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        5
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        5
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( i = 0 ; i < n ; i ++ )",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "while ( -- T )"
      ],
      "err_line": 8,
      "err_msg": "‘goodCell’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2,
        7
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "while ( -- T )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2,
        7,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "while ( -- T )",
        "for ( j = 0 ; j < m ; j ++ )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2,
        7,
        5
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "while ( -- T )",
        "for ( j = 0 ; j < m ; j ++ )",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "while ( -- T )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘goodCell’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2,
        8,
        5
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "while ( -- T )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘goodCell’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2,
        5
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "while ( -- T )",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘goodCell’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( j = 0 ; j < m ; j ++ )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        5
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( j = 0 ; j < m ; j ++ )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        5
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "for ( j = 0 ; j < m ; j ++ )",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘goodCell’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        5
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘goodCell’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘goodCell’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( -- T )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( -- T )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        7,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( -- T )",
        "for ( j = 0 ; j < m ; j ++ )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        7,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( -- T )",
        "for ( j = 0 ; j < m ; j ++ )",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( -- T )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        8,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( -- T )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( -- T )",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < m ; j ++ )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < m ; j ++ )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < m ; j ++ )",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "while ( -- T )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        8
      ],
      "mod_code": [
        "while ( -- T )",
        "for ( j = 0 ; j < m ; j ++ )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        5
      ],
      "mod_code": [
        "while ( -- T )",
        "for ( j = 0 ; j < m ; j ++ )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        5
      ],
      "mod_code": [
        "while ( -- T )",
        "for ( j = 0 ; j < m ; j ++ )",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "while ( -- T )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘bool [51][51]’)"
    },
    {
      "mod_line": [
        2,
        8,
        5
      ],
      "mod_code": [
        "while ( -- T )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘bool [102]’)"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "while ( -- T )",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "cin >> goodCell >> goodCell [ i ] [ j ] ;",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "cin >> goodCell >> goodCell [ i ] [ j ] ;",
        "bool goodCell [ 51 + 51 ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘bool [102]’)"
    }
  ]
}