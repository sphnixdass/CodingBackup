{
  "meta": {
    "index": 1376,
    "hitid": "32TZXEA1OLEMHI2X6O6EH0WP77G416",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "876A",
    "subid": "46965793"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "a = int",
      "code": "int a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "b = int",
      "code": "int b ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "c = int",
      "code": "int c ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n then a then b then c",
      "code": "cin >> n >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "t = int array of size 4",
      "code": "int t [ 4 ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if a > b",
      "code": "if ( a > b )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set t [ 1 ] to 3",
      "code": "t [ 1 ] = 3 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set t [ 1 ] to 2",
      "code": "t [ 1 ] = 2 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if b > c",
      "code": "if ( b > c )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "set t [ 3 ] to 2",
      "code": "t [ 3 ] = 2 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "set t [ 3 ] to 1",
      "code": "t [ 3 ] = 1 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if a > c",
      "code": "if ( a > c )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "set t [ 2 ] to 3",
      "code": "t [ 2 ] = 3 ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "set t [ 2 ] to 1",
      "code": "t [ 2 ] = 1 ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "time = int with time = 1",
      "code": "int time = 1 ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "sum = int with sum = 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "zhuangtai = int with zhuangtai = 1",
      "code": "int zhuangtai = 1 ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "loop while time < n incrementing time",
      "code": "for ( ; time < n ; time ++ )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if zhuangtai is 1",
      "code": "if ( zhuangtai == 1 )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "if t [ zhuangtai ] is 2",
      "code": "if ( t [ zhuangtai ] == 2 )",
      "indent": 3
    },
    {
      "line": 25,
      "text": "increment sum by a",
      "code": "sum += a ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "set zhuangtai to 2",
      "code": "zhuangtai = 2 ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "else if t [ zhuangtai ] is 3",
      "code": "else if ( t [ zhuangtai ] == 3 )",
      "indent": 3
    },
    {
      "line": 28,
      "text": "increment sum by b",
      "code": "sum += b ;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "set zhuangtai to 3",
      "code": "zhuangtai = 3 ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 31,
      "text": "else if zhuangtai is 2",
      "code": "else if ( zhuangtai == 2 )",
      "indent": 2
    },
    {
      "line": 32,
      "text": "if t [ zhuangtai ] is 1",
      "code": "if ( t [ zhuangtai ] == 1 )",
      "indent": 3
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "{",
      "indent": 4
    },
    {
      "line": 34,
      "text": "increment sum by a",
      "code": "sum += a ;",
      "indent": 5
    },
    {
      "line": 35,
      "text": "set zhuangtai to 1",
      "code": "zhuangtai = 1 ;",
      "indent": 5
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 37,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 38,
      "text": "increment sum by c",
      "code": "sum += c ;",
      "indent": 4
    },
    {
      "line": 39,
      "text": "set zhuangtai to 3",
      "code": "zhuangtai = 3 ;",
      "indent": 4
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 41,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 42,
      "text": "if t [ zhuangtai ] is 1",
      "code": "if ( t [ zhuangtai ] == 1 )",
      "indent": 3
    },
    {
      "line": 43,
      "text": "increment sum by b",
      "code": "sum += b ;",
      "indent": 4
    },
    {
      "line": 44,
      "text": "set zhuangtai to 1",
      "code": "zhuangtai = 1 ;",
      "indent": 4
    },
    {
      "line": 45,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 46,
      "text": "increment sum by c",
      "code": "sum += c ;",
      "indent": 4
    },
    {
      "line": 47,
      "text": "set zhuangtai to 2",
      "code": "zhuangtai = 2 ;",
      "indent": 4
    },
    {
      "line": 48,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 49,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 50,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 51,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 52,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 53,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "t [ 3 ] ] = 2 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "t [ 2 ] ] = 1 ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "else if ( zhuangtai == 2 2"
      ],
      "err_line": 31,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 41,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        45
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 45,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22,
        4,
        32,
        12
      ],
      "mod_code": [
        "while ( time < n ) time ++ ;",
        "char c ;",
        "if ( t [ zhuangtai ] == ' 1 ' )",
        "t [ 3 ] ] = 2 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        22,
        4,
        32,
        37
      ],
      "mod_code": [
        "while ( time < n ) time ++ ;",
        "char c ;",
        "if ( t [ zhuangtai ] == ' 1 ' )",
        "else else"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22,
        4,
        12
      ],
      "mod_code": [
        "while ( time < n ) time ++ ;",
        "char c ;",
        "t [ 3 ] ] = 2 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        22,
        4,
        12,
        37
      ],
      "mod_code": [
        "while ( time < n ) time ++ ;",
        "char c ;",
        "t [ 3 ] ] = 2 ;",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        22,
        4,
        12,
        23
      ],
      "mod_code": [
        "while ( time < n ) time ++ ;",
        "char c ;",
        "t [ 3 ] ] = 2 ;",
        "if ( zhuangtai )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        22,
        4,
        37
      ],
      "mod_code": [
        "while ( time < n ) time ++ ;",
        "char c ;",
        "else else"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22,
        4,
        37,
        23
      ],
      "mod_code": [
        "while ( time < n ) time ++ ;",
        "char c ;",
        "else else",
        "if ( zhuangtai )"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22,
        32,
        12
      ],
      "mod_code": [
        "while ( time < n ) time ++ ;",
        "if ( t [ zhuangtai ] == ' 1 ' )",
        "t [ 3 ] ] = 2 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        22,
        32,
        12,
        37
      ],
      "mod_code": [
        "while ( time < n ) time ++ ;",
        "if ( t [ zhuangtai ] == ' 1 ' )",
        "t [ 3 ] ] = 2 ;",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        22,
        32,
        12,
        23
      ],
      "mod_code": [
        "while ( time < n ) time ++ ;",
        "if ( t [ zhuangtai ] == ' 1 ' )",
        "t [ 3 ] ] = 2 ;",
        "if ( zhuangtai )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        22,
        32,
        37
      ],
      "mod_code": [
        "while ( time < n ) time ++ ;",
        "if ( t [ zhuangtai ] == ' 1 ' )",
        "else else"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22,
        32,
        37,
        23
      ],
      "mod_code": [
        "while ( time < n ) time ++ ;",
        "if ( t [ zhuangtai ] == ' 1 ' )",
        "else else",
        "if ( zhuangtai )"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22,
        12
      ],
      "mod_code": [
        "while ( time < n ) time ++ ;",
        "t [ 3 ] ] = 2 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        22,
        12,
        37
      ],
      "mod_code": [
        "while ( time < n ) time ++ ;",
        "t [ 3 ] ] = 2 ;",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        22,
        12,
        37,
        23
      ],
      "mod_code": [
        "while ( time < n ) time ++ ;",
        "t [ 3 ] ] = 2 ;",
        "else else",
        "if ( zhuangtai )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        22,
        12,
        23
      ],
      "mod_code": [
        "while ( time < n ) time ++ ;",
        "t [ 3 ] ] = 2 ;",
        "if ( zhuangtai )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        22,
        37
      ],
      "mod_code": [
        "while ( time < n ) time ++ ;",
        "else else"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22,
        37,
        23
      ],
      "mod_code": [
        "while ( time < n ) time ++ ;",
        "else else",
        "if ( zhuangtai )"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        32,
        12
      ],
      "mod_code": [
        "char c ;",
        "if ( t [ zhuangtai ] == ' 1 ' )",
        "t [ 3 ] ] = 2 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        32,
        12,
        37
      ],
      "mod_code": [
        "char c ;",
        "if ( t [ zhuangtai ] == ' 1 ' )",
        "t [ 3 ] ] = 2 ;",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        32,
        12,
        23
      ],
      "mod_code": [
        "char c ;",
        "if ( t [ zhuangtai ] == ' 1 ' )",
        "t [ 3 ] ] = 2 ;",
        "if ( zhuangtai )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        32,
        37
      ],
      "mod_code": [
        "char c ;",
        "if ( t [ zhuangtai ] == ' 1 ' )",
        "else else"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        32,
        37,
        23
      ],
      "mod_code": [
        "char c ;",
        "if ( t [ zhuangtai ] == ' 1 ' )",
        "else else",
        "if ( zhuangtai )"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "char c ;",
        "t [ 3 ] ] = 2 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        12,
        37
      ],
      "mod_code": [
        "char c ;",
        "t [ 3 ] ] = 2 ;",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        12,
        37,
        23
      ],
      "mod_code": [
        "char c ;",
        "t [ 3 ] ] = 2 ;",
        "else else",
        "if ( zhuangtai )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        12,
        23
      ],
      "mod_code": [
        "char c ;",
        "t [ 3 ] ] = 2 ;",
        "if ( zhuangtai )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        37
      ],
      "mod_code": [
        "char c ;",
        "else else"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        37,
        23
      ],
      "mod_code": [
        "char c ;",
        "else else",
        "if ( zhuangtai )"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        32,
        12
      ],
      "mod_code": [
        "if ( t [ zhuangtai ] == ' 1 ' )",
        "t [ 3 ] ] = 2 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        32,
        12,
        37
      ],
      "mod_code": [
        "if ( t [ zhuangtai ] == ' 1 ' )",
        "t [ 3 ] ] = 2 ;",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        32,
        12,
        37,
        23
      ],
      "mod_code": [
        "if ( t [ zhuangtai ] == ' 1 ' )",
        "t [ 3 ] ] = 2 ;",
        "else else",
        "if ( zhuangtai )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        32,
        12,
        23
      ],
      "mod_code": [
        "if ( t [ zhuangtai ] == ' 1 ' )",
        "t [ 3 ] ] = 2 ;",
        "if ( zhuangtai )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        32,
        37
      ],
      "mod_code": [
        "if ( t [ zhuangtai ] == ' 1 ' )",
        "else else"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        32,
        37,
        23
      ],
      "mod_code": [
        "if ( t [ zhuangtai ] == ' 1 ' )",
        "else else",
        "if ( zhuangtai )"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        37
      ],
      "mod_code": [
        "t [ 3 ] ] = 2 ;",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        37,
        23
      ],
      "mod_code": [
        "t [ 3 ] ] = 2 ;",
        "else else",
        "if ( zhuangtai )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        23
      ],
      "mod_code": [
        "t [ 3 ] ] = 2 ;",
        "if ( zhuangtai )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        37,
        23
      ],
      "mod_code": [
        "else else",
        "if ( zhuangtai )"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}