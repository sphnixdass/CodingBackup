{
  "meta": {
    "index": 951,
    "hitid": "3H781YYV6TC5I4BZXD21WSRBCFWETQ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "275A",
    "subid": "48330656"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare 2d array of ints ans with size 3 by 3",
      "code": "int ans [ 3 ] [ 3 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "change is a void function with int arguments i and j",
      "code": "void change ( int i , int j )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "if i > = 0 and j > = 0 and i < 3 and j < 3",
      "code": "if ( i >= 0 && j >= 0 && i < 3 && j < 3 )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if ans [ i ] [ j ] is true",
      "code": "if ( ans [ i ] [ j ] )",
      "indent": 2
    },
    {
      "line": 4,
      "text": "assign 0 to ans [ i ] [ j ]",
      "code": "ans [ i ] [ j ] = 0 ;",
      "indent": 3
    },
    {
      "line": 5,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 6,
      "text": "change ans [ i ] [ j ] to 1",
      "code": "ans [ i ] [ j ] = 1 ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 11,
      "text": "declare array of ints arr with size 3 by 3",
      "code": "int arr [ 3 ] [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for integer i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for j from 0 to 3 exclusive",
      "code": "for ( int j = 0 ; j < 3 ; j ++ )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "read input to arr [ i ] [ j ]",
      "code": "cin >> arr [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "change arr [ i ] [ j ] to arr [ i ] [ j ] modulo 2",
      "code": "arr [ i ] [ j ] = arr [ i ] [ j ] % 2 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "call fill ( & ans [ 0 ] [ 0 ] , & ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 )",
      "code": "fill ( & ans [ 0 ] [ 0 ] , & ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for i from 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for j from 0 to 3 exclusive",
      "code": "for ( int j = 0 ; j < 3 ; j ++ )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if arr [ i ] [ j ] is true",
      "code": "if ( arr [ i ] [ j ] )",
      "indent": 3
    },
    {
      "line": 22,
      "text": "call change ( i , j )",
      "code": "change ( i , j ) ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "call change ( i + 1 , j )",
      "code": "change ( i + 1 , j ) ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "call change ( i , j + 1 )",
      "code": "change ( i , j + 1 ) ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "call change ( i - 1 , j )",
      "code": "change ( i - 1 , j ) ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "call change ( i , j - 1 )",
      "code": "change ( i , j - 1 ) ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 31,
      "text": "for j = 0 to 3 exclusive , print ans [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < 3 ; j ++ ) { cout << ans [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 32,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;"
      ],
      "err_line": 18,
      "err_msg": "no matching function for call to ‘fill(int*, long unsigned int, int)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void is ( int i , int j )"
      ],
      "err_line": 22,
      "err_msg": "‘change’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘int [3][3]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 20,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "i ( i , j ) ;"
      ],
      "err_line": 22,
      "err_msg": "‘i’ cannot be used as a function"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "i ( i , j + 1 ) ;"
      ],
      "err_line": 24,
      "err_msg": "‘i’ cannot be used as a function"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "i ( i , j - 1 ) ;"
      ],
      "err_line": 26,
      "err_msg": "‘i’ cannot be used as a function"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 30,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        13
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        13,
        30
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        13,
        30,
        25
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "( i - 1 , j ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        13,
        30,
        19
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        13,
        30,
        14
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        13,
        25
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "( i - 1 , j ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        13,
        25,
        19
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "( i - 1 , j ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        13,
        25,
        14
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "( i - 1 , j ) ;",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        13,
        19
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        13,
        19,
        14
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        13,
        14
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        30
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "no matching function for call to ‘fill(int*, long unsigned int, int)’"
    },
    {
      "mod_line": [
        18,
        30,
        25
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "( i - 1 , j ) ;"
      ],
      "err_line": 18,
      "err_msg": "no matching function for call to ‘fill(int*, long unsigned int, int)’"
    },
    {
      "mod_line": [
        18,
        30,
        25,
        19
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "( i - 1 , j ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "no matching function for call to ‘fill(int*, long unsigned int, int)’"
    },
    {
      "mod_line": [
        18,
        30,
        25,
        14
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "( i - 1 , j ) ;",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘int [3][3]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        18,
        30,
        19
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "no matching function for call to ‘fill(int*, long unsigned int, int)’"
    },
    {
      "mod_line": [
        18,
        30,
        19,
        14
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘int [3][3]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        18,
        30,
        14
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘int [3][3]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        18,
        25
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "( i - 1 , j ) ;"
      ],
      "err_line": 18,
      "err_msg": "no matching function for call to ‘fill(int*, long unsigned int, int)’"
    },
    {
      "mod_line": [
        18,
        25,
        19
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "( i - 1 , j ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "no matching function for call to ‘fill(int*, long unsigned int, int)’"
    },
    {
      "mod_line": [
        18,
        25,
        19,
        14
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "( i - 1 , j ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘int [3][3]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        18,
        25,
        14
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "( i - 1 , j ) ;",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘int [3][3]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        18,
        19
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "no matching function for call to ‘fill(int*, long unsigned int, int)’"
    },
    {
      "mod_line": [
        18,
        19,
        14
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘int [3][3]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        18,
        14
      ],
      "mod_code": [
        "fill ( & ans [ 0 ] [ 0 ] , ans [ 0 ] [ 0 ] + sizeof ( ans ) , 1 ) ;",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘int [3][3]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        13,
        30
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        30,
        25
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "( i - 1 , j ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        30,
        25,
        19
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "( i - 1 , j ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        30,
        25,
        14
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "( i - 1 , j ) ;",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        30,
        19
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        30,
        19,
        14
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        30,
        14
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )",
        "( i - 1 , j ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        19
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )",
        "( i - 1 , j ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        19,
        14
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )",
        "( i - 1 , j ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        14
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )",
        "( i - 1 , j ) ;",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        14
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        25
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "( i - 1 , j ) ;"
      ],
      "err_line": 30,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        25,
        19
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "( i - 1 , j ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        25,
        19,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "( i - 1 , j ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘int [3][3]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        30,
        25,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "( i - 1 , j ) ;",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘int [3][3]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        30,
        19
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        19,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘int [3][3]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        30,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘int [3][3]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        25,
        19
      ],
      "mod_code": [
        "( i - 1 , j ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        25,
        19,
        14
      ],
      "mod_code": [
        "( i - 1 , j ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘int [3][3]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        25,
        14
      ],
      "mod_code": [
        "( i - 1 , j ) ;",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘int [3][3]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        19,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "arr >> arr [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘int [3][3]’ and ‘int’ to binary ‘operator>>’"
    }
  ]
}