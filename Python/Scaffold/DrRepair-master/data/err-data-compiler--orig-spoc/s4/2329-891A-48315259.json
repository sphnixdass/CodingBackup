{
  "meta": {
    "index": 2329,
    "hitid": "3VW0145YLY69GP772HCG7U9BMSZMJA",
    "workerid": "AIWEXPJAU66D9",
    "probid": "891A",
    "subid": "48315259"
  },
  "lines": [
    {
      "line": 0,
      "text": "fastMax is a integer function with integer arguments x and y",
      "code": "int fastMax ( int x , int y )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return ( ( ( y - x ) > > ( 32 - 1 ) ) & ( x ^ y ) ) ^ y",
      "code": "return ( ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "fastMin is a integer function with integer arguments x and y",
      "code": "int fastMin ( int x , int y )",
      "indent": 0
    },
    {
      "line": 4,
      "text": "return ( ( ( y - x ) > > ( 32 - 1 ) ) & ( x ^ y ) ) ^ x",
      "code": "return ( ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "void function solve",
      "code": "void solve ( )",
      "indent": 0
    },
    {
      "line": 7,
      "text": "declare long long integer called n",
      "code": "long long int n ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "a is an array of long long integers with size n",
      "code": "long long int a [ n ] ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "let cnt be long long integer = 0",
      "code": "long long int cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for integer i = 0 to n - 1 inclusive",
      "code": "for ( int i = ( 0 ) ; i <= ( n - 1 ) ; ++ i )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if a [ i ] = 1 , increment cnt",
      "code": "if ( a [ i ] == 1 ) cnt ++ ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if cnt is greater than 0",
      "code": "if ( cnt > 0 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print n - cnt and a new line",
      "code": "cout << n - cnt << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "return",
      "code": "return ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "declare long long integer called seg = 1e17",
      "code": "long long int seg = 1e17 ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for l = 0 to n exclusive",
      "code": "for ( long long int l = 0 ; l < n ; l ++ )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "x is long long integer = a [ l ]",
      "code": "long long int x = a [ l ] ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "for long = l to n exclusive",
      "code": "for ( long long int r = l ; r < n ; r ++ )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "assign value of __gcd ( x , a [ r ] ) to x",
      "code": "x = __gcd ( x , a [ r ] ) ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "if x = 1",
      "code": "if ( x == 1 )",
      "indent": 3
    },
    {
      "line": 25,
      "text": "seg = min of seg and r - l",
      "code": "seg = min ( seg , r - l ) ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "send seg to the log stream",
      "code": "clog << seg << endl ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "if seg > = 1e6",
      "code": "if ( seg >= 1e6 )",
      "indent": 1
    },
    {
      "line": 32,
      "text": "print - 1 and a new line",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "return",
      "code": "return ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 35,
      "text": "print seg + n - 1 and a new line",
      "code": "cout << seg + n - 1 << endl ;",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 38,
      "text": "create long long integer t",
      "code": "long long int t ;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "assign value of 1 to t",
      "code": "t = 1 ;",
      "indent": 1
    },
    {
      "line": 40,
      "text": "decrementing t in a loop , call solve ( ) on each iteration",
      "code": "while ( t -- ) { solve ( ) ; }",
      "indent": 1
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )"
      ],
      "err_line": 23,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "stream << seg ;"
      ],
      "err_line": 30,
      "err_msg": "‘stream’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int fastMax ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int fastMin ( int x , int y ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "return ( ( y - x ) >> ( 32 - 1 ) ) & ( x ^ y ) ) ^ x ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "void solve ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 12,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "a >> a [ i ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘long long int [n]’ and ‘long long int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "return return ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( l = 0 ; l < n ; l ++ )"
      ],
      "err_line": 20,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "for ( long long i = l ; j < n ; i ++ )"
      ],
      "err_line": 22,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "x ] = __gcd ( x , a [ r ] ) ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "int seg = min ( seg , r - l ) ;"
      ],
      "err_line": 25,
      "err_msg": "no matching function for call to ‘min(int&, long long int)’"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 26,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "stream . push ( seg ) ;"
      ],
      "err_line": 30,
      "err_msg": "‘stream’ was not declared in this scope"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "return return ;"
      ],
      "err_line": 33,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "int t = 1 ;"
      ],
      "err_line": 39,
      "err_msg": "conflicting declaration ‘int t’"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "solve ( t -- ) ;"
      ],
      "err_line": 40,
      "err_msg": "too many arguments to function ‘void solve()’"
    },
    {
      "mod_line": [
        22,
        30
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "stream << seg ;"
      ],
      "err_line": 23,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        30,
        39
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "stream << seg ;",
        "int t = 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        30,
        39,
        33
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "stream << seg ;",
        "int t = 1 ;",
        "return return ;"
      ],
      "err_line": 23,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        30,
        39,
        17
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "stream << seg ;",
        "int t = 1 ;",
        "return return ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        30,
        39,
        31
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "stream << seg ;",
        "int t = 1 ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 23,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        30,
        33
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "stream << seg ;",
        "return return ;"
      ],
      "err_line": 23,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        30,
        33,
        17
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "stream << seg ;",
        "return return ;",
        "return return ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        30,
        33,
        31
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "stream << seg ;",
        "return return ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 23,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        30,
        17
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "stream << seg ;",
        "return return ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        30,
        17,
        31
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "stream << seg ;",
        "return return ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        30,
        31
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "stream << seg ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 23,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        39
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "int t = 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        39,
        33
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "int t = 1 ;",
        "return return ;"
      ],
      "err_line": 23,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        39,
        33,
        17
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "int t = 1 ;",
        "return return ;",
        "return return ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        39,
        33,
        31
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "int t = 1 ;",
        "return return ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 23,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        39,
        17
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "int t = 1 ;",
        "return return ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        39,
        17,
        31
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "int t = 1 ;",
        "return return ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        39,
        31
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "int t = 1 ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 23,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        33
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "return return ;"
      ],
      "err_line": 23,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        33,
        17
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "return return ;",
        "return return ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        33,
        17,
        31
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "return return ;",
        "return return ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        33,
        31
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "return return ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 23,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        17
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "return return ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        17,
        31
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "return return ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        31
      ],
      "mod_code": [
        "for ( long long i = l ; i < n ; i ++ )",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 23,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        39
      ],
      "mod_code": [
        "stream << seg ;",
        "int t = 1 ;"
      ],
      "err_line": 30,
      "err_msg": "‘stream’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        39,
        33
      ],
      "mod_code": [
        "stream << seg ;",
        "int t = 1 ;",
        "return return ;"
      ],
      "err_line": 30,
      "err_msg": "‘stream’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        39,
        33,
        17
      ],
      "mod_code": [
        "stream << seg ;",
        "int t = 1 ;",
        "return return ;",
        "return return ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        30,
        39,
        33,
        31
      ],
      "mod_code": [
        "stream << seg ;",
        "int t = 1 ;",
        "return return ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 30,
      "err_msg": "‘stream’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        39,
        17
      ],
      "mod_code": [
        "stream << seg ;",
        "int t = 1 ;",
        "return return ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        30,
        39,
        17,
        31
      ],
      "mod_code": [
        "stream << seg ;",
        "int t = 1 ;",
        "return return ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        30,
        39,
        31
      ],
      "mod_code": [
        "stream << seg ;",
        "int t = 1 ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 30,
      "err_msg": "‘stream’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        33
      ],
      "mod_code": [
        "stream << seg ;",
        "return return ;"
      ],
      "err_line": 30,
      "err_msg": "‘stream’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        33,
        17
      ],
      "mod_code": [
        "stream << seg ;",
        "return return ;",
        "return return ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        30,
        33,
        17,
        31
      ],
      "mod_code": [
        "stream << seg ;",
        "return return ;",
        "return return ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        30,
        33,
        31
      ],
      "mod_code": [
        "stream << seg ;",
        "return return ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 30,
      "err_msg": "‘stream’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        17
      ],
      "mod_code": [
        "stream << seg ;",
        "return return ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        30,
        17,
        31
      ],
      "mod_code": [
        "stream << seg ;",
        "return return ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        30,
        31
      ],
      "mod_code": [
        "stream << seg ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 30,
      "err_msg": "‘stream’ was not declared in this scope"
    },
    {
      "mod_line": [
        39,
        33
      ],
      "mod_code": [
        "int t = 1 ;",
        "return return ;"
      ],
      "err_line": 33,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        39,
        33,
        17
      ],
      "mod_code": [
        "int t = 1 ;",
        "return return ;",
        "return return ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        39,
        33,
        17,
        31
      ],
      "mod_code": [
        "int t = 1 ;",
        "return return ;",
        "return return ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        39,
        33,
        31
      ],
      "mod_code": [
        "int t = 1 ;",
        "return return ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 33,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        39,
        17
      ],
      "mod_code": [
        "int t = 1 ;",
        "return return ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        39,
        17,
        31
      ],
      "mod_code": [
        "int t = 1 ;",
        "return return ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        39,
        31
      ],
      "mod_code": [
        "int t = 1 ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 39,
      "err_msg": "conflicting declaration ‘int t’"
    },
    {
      "mod_line": [
        33,
        17
      ],
      "mod_code": [
        "return return ;",
        "return return ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        33,
        17,
        31
      ],
      "mod_code": [
        "return return ;",
        "return return ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        33,
        31
      ],
      "mod_code": [
        "return return ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 33,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        17,
        31
      ],
      "mod_code": [
        "return return ;",
        "if ( seg <= 1e6 )"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘return’"
    }
  ]
}