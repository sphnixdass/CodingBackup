{
  "meta": {
    "index": 1062,
    "hitid": "3R16PJFTS3LONJOJEYCWMFSOGDB4K4",
    "workerid": "AIWEXPJAU66D9",
    "probid": "151A",
    "subid": "47813721"
  },
  "lines": [
    {
      "line": 0,
      "text": "int function mi with int arguments a , b and c",
      "code": "int mi ( int a , int b , int c )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if a is less than b",
      "code": "if ( a < b )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "if a is less than c",
      "code": "if ( a < c )",
      "indent": 2
    },
    {
      "line": 3,
      "text": "return a",
      "code": "return a ;",
      "indent": 3
    },
    {
      "line": 4,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 5,
      "text": "return c",
      "code": "return c ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if b is less than c",
      "code": "if ( b < c )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "return b",
      "code": "return b ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "return c",
      "code": "return c ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 14,
      "text": "declare ints n , k , l , c , d , p , nl and np",
      "code": "int n , k , l , c , d , p , nl , np ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "read input to n , k , l , c , d , p , nl and np",
      "code": "cin >> n >> k >> l >> c >> d >> p >> nl >> np ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "create integers num1 , num2 and num3",
      "code": "int num1 , num2 , num3 ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "set num1 to ( k * l ) / nl",
      "code": "num1 = ( k * l ) / nl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "set num2 to c * d",
      "code": "num2 = c * d ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "set num3 to p / np",
      "code": "num3 = p / np ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "declare integer m = mi of num1 , num2 and num3",
      "code": "int m = mi ( num1 , num2 , num3 ) ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print m / n",
      "code": "cout << ( m / n ) << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "int m = mi ( num1 , num2 ) ;"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘int mi(int, int, int)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 14,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "int num1 = ( k * l ) / nl ;"
      ],
      "err_line": 17,
      "err_msg": "redeclaration of ‘int num1’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "int m = mi ( num1 , num2 + num3 ) ;"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘int mi(int, int, int)’"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        20
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int m = mi ( num1 , num2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        20,
        14
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int m = mi ( num1 , num2 ) ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        20,
        17
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int m = mi ( num1 , num2 ) ;",
        "int num1 = ( k * l ) / nl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        20,
        6
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int m = mi ( num1 , num2 ) ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        14
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        14,
        17
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "int num1 = ( k * l ) / nl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        14,
        6
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        17
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int num1 = ( k * l ) / nl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        17,
        6
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int num1 = ( k * l ) / nl ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        6
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        20
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "int m = mi ( num1 , num2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        20,
        14
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "int m = mi ( num1 , num2 ) ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        20,
        14,
        17
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "int m = mi ( num1 , num2 ) ;",
        "int n , k , l , c , d , p , p , np ;",
        "int num1 = ( k * l ) / nl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        20,
        14,
        6
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "int m = mi ( num1 , num2 ) ;",
        "int n , k , l , c , d , p , p , np ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        20,
        17
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "int m = mi ( num1 , num2 ) ;",
        "int num1 = ( k * l ) / nl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        20,
        17,
        6
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "int m = mi ( num1 , num2 ) ;",
        "int num1 = ( k * l ) / nl ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        20,
        6
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "int m = mi ( num1 , num2 ) ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14,
        17
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "int n , k , l , c , d , p , p , np ;",
        "int num1 = ( k * l ) / nl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14,
        17,
        6
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "int n , k , l , c , d , p , p , np ;",
        "int num1 = ( k * l ) / nl ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14,
        6
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "int n , k , l , c , d , p , p , np ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "int num1 = ( k * l ) / nl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        17,
        6
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "int num1 = ( k * l ) / nl ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "int mi ( int a , int b , int c ) ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        20
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int m = mi ( num1 , num2 ) ;"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘int mi(int, int, int)’"
    },
    {
      "mod_line": [
        15,
        20,
        14
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int m = mi ( num1 , num2 ) ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 14,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        15,
        20,
        14,
        17
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int m = mi ( num1 , num2 ) ;",
        "int n , k , l , c , d , p , p , np ;",
        "int num1 = ( k * l ) / nl ;"
      ],
      "err_line": 14,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        15,
        20,
        14,
        6
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int m = mi ( num1 , num2 ) ;",
        "int n , k , l , c , d , p , p , np ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        20,
        17
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int m = mi ( num1 , num2 ) ;",
        "int num1 = ( k * l ) / nl ;"
      ],
      "err_line": 17,
      "err_msg": "redeclaration of ‘int num1’"
    },
    {
      "mod_line": [
        15,
        20,
        17,
        6
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int m = mi ( num1 , num2 ) ;",
        "int num1 = ( k * l ) / nl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        20,
        6
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int m = mi ( num1 , num2 ) ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        14
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 14,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        15,
        14,
        17
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "int num1 = ( k * l ) / nl ;"
      ],
      "err_line": 14,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        15,
        14,
        17,
        6
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "int num1 = ( k * l ) / nl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        14,
        6
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        17
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int num1 = ( k * l ) / nl ;"
      ],
      "err_line": 17,
      "err_msg": "redeclaration of ‘int num1’"
    },
    {
      "mod_line": [
        15,
        17,
        6
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int num1 = ( k * l ) / nl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        6
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        14
      ],
      "mod_code": [
        "int m = mi ( num1 , num2 ) ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 14,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        20,
        14,
        17
      ],
      "mod_code": [
        "int m = mi ( num1 , num2 ) ;",
        "int n , k , l , c , d , p , p , np ;",
        "int num1 = ( k * l ) / nl ;"
      ],
      "err_line": 14,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        20,
        14,
        17,
        6
      ],
      "mod_code": [
        "int m = mi ( num1 , num2 ) ;",
        "int n , k , l , c , d , p , p , np ;",
        "int num1 = ( k * l ) / nl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        14,
        6
      ],
      "mod_code": [
        "int m = mi ( num1 , num2 ) ;",
        "int n , k , l , c , d , p , p , np ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        17
      ],
      "mod_code": [
        "int m = mi ( num1 , num2 ) ;",
        "int num1 = ( k * l ) / nl ;"
      ],
      "err_line": 17,
      "err_msg": "redeclaration of ‘int num1’"
    },
    {
      "mod_line": [
        20,
        17,
        6
      ],
      "mod_code": [
        "int m = mi ( num1 , num2 ) ;",
        "int num1 = ( k * l ) / nl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        6
      ],
      "mod_code": [
        "int m = mi ( num1 , num2 ) ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        17
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "int num1 = ( k * l ) / nl ;"
      ],
      "err_line": 14,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        14,
        17,
        6
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "int num1 = ( k * l ) / nl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17,
        6
      ],
      "mod_code": [
        "int num1 = ( k * l ) / nl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}