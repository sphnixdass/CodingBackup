{
  "meta": {
    "index": 2525,
    "hitid": "3GITHABACYFFSBUZ7XLOLSCUQUO2NF",
    "workerid": "AIWEXPJAU66D9",
    "probid": "822A",
    "subid": "48287931"
  },
  "lines": [
    {
      "line": 0,
      "text": "create new vector of integers called divisor with 1000000 + 1 elements filled with 0",
      "code": "vector < int > divisor ( 1000000 + 1 , 0 ) ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "integer function bigmod with long long arguments a , b and c",
      "code": "int bigmod ( long long a , long long b , long long c )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create long long variable with name x",
      "code": "long long x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if b is equal to 0 , return 1 modulo c",
      "code": "if ( b == 0 ) return 1 % c ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "change x to bigmod ( a , b / 2 , c )",
      "code": "x = bigmod ( a , b / 2 , c ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set x to x squared % c",
      "code": "x = ( x * x ) % c ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if b & 1 is true , assign the new value = ( x * a ) % c to x",
      "code": "if ( b & 1 ) x = ( x * a ) % c ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "return x",
      "code": "return x ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "ulong long function factorial with long long argument n",
      "code": "ulong long factorial ( long long n )",
      "indent": 0
    },
    {
      "line": 10,
      "text": "new ulong long fact = 1",
      "code": "ulong long fact = 1 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "in a for loop , change i from 2 to n inclusive , multiplying fact by i",
      "code": "for ( int i = 2 ; i <= n ; i ++ ) { fact *= i ; }",
      "indent": 1
    },
    {
      "line": 12,
      "text": "return fact",
      "code": "return fact ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 15,
      "text": "declare int variables x and y",
      "code": "int x , y ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "loop , reading x and y from the input",
      "code": "while ( cin >> x >> y )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "new integer variable mn with value min of x and y",
      "code": "int mn = min ( x , y ) ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "new ulong long A = result of factorial ( mn )",
      "code": "ulong long A = factorial ( mn ) ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print the result of __gcd ( A , A )",
      "code": "cout << ( __gcd ( A , A ) ) << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "x -= a ( a , b / 2 ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘a’ cannot be used as a function"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ ) { fact += i ; }"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "int x , y y ;"
      ],
      "err_line": 15,
      "err_msg": "expected initializer before ‘y’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "input >> x >> y ;"
      ],
      "err_line": 16,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "int mn = min ( x new y ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘)’ before ‘new’"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "for ( int i = 2 ; i <= n ; i ++ ) { fact += i ; }",
        "int x , y y ;"
      ],
      "err_line": 15,
      "err_msg": "expected initializer before ‘y’"
    },
    {
      "mod_line": [
        11,
        15,
        0
      ],
      "mod_code": [
        "for ( int i = 2 ; i <= n ; i ++ ) { fact += i ; }",
        "int x , y y ;",
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        11,
        15,
        0,
        17
      ],
      "mod_code": [
        "for ( int i = 2 ; i <= n ; i ++ ) { fact += i ; }",
        "int x , y y ;",
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;",
        "int mn = min ( x new y ) ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        11,
        15,
        0,
        16
      ],
      "mod_code": [
        "for ( int i = 2 ; i <= n ; i ++ ) { fact += i ; }",
        "int x , y y ;",
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;",
        "input >> x >> y ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        11,
        15,
        17
      ],
      "mod_code": [
        "for ( int i = 2 ; i <= n ; i ++ ) { fact += i ; }",
        "int x , y y ;",
        "int mn = min ( x new y ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected initializer before ‘y’"
    },
    {
      "mod_line": [
        11,
        15,
        17,
        16
      ],
      "mod_code": [
        "for ( int i = 2 ; i <= n ; i ++ ) { fact += i ; }",
        "int x , y y ;",
        "int mn = min ( x new y ) ;",
        "input >> x >> y ;"
      ],
      "err_line": 15,
      "err_msg": "expected initializer before ‘y’"
    },
    {
      "mod_line": [
        11,
        15,
        16
      ],
      "mod_code": [
        "for ( int i = 2 ; i <= n ; i ++ ) { fact += i ; }",
        "int x , y y ;",
        "input >> x >> y ;"
      ],
      "err_line": 15,
      "err_msg": "expected initializer before ‘y’"
    },
    {
      "mod_line": [
        11,
        0
      ],
      "mod_code": [
        "for ( int i = 2 ; i <= n ; i ++ ) { fact += i ; }",
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        11,
        0,
        17
      ],
      "mod_code": [
        "for ( int i = 2 ; i <= n ; i ++ ) { fact += i ; }",
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;",
        "int mn = min ( x new y ) ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        11,
        0,
        17,
        16
      ],
      "mod_code": [
        "for ( int i = 2 ; i <= n ; i ++ ) { fact += i ; }",
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;",
        "int mn = min ( x new y ) ;",
        "input >> x >> y ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        11,
        0,
        16
      ],
      "mod_code": [
        "for ( int i = 2 ; i <= n ; i ++ ) { fact += i ; }",
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;",
        "input >> x >> y ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "for ( int i = 2 ; i <= n ; i ++ ) { fact += i ; }",
        "int mn = min ( x new y ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘)’ before ‘new’"
    },
    {
      "mod_line": [
        11,
        17,
        16
      ],
      "mod_code": [
        "for ( int i = 2 ; i <= n ; i ++ ) { fact += i ; }",
        "int mn = min ( x new y ) ;",
        "input >> x >> y ;"
      ],
      "err_line": 16,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        16
      ],
      "mod_code": [
        "for ( int i = 2 ; i <= n ; i ++ ) { fact += i ; }",
        "input >> x >> y ;"
      ],
      "err_line": 16,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        0
      ],
      "mod_code": [
        "int x , y y ;",
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        15,
        0,
        17
      ],
      "mod_code": [
        "int x , y y ;",
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;",
        "int mn = min ( x new y ) ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        15,
        0,
        17,
        16
      ],
      "mod_code": [
        "int x , y y ;",
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;",
        "int mn = min ( x new y ) ;",
        "input >> x >> y ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        15,
        0,
        17,
        11
      ],
      "mod_code": [
        "int x , y y ;",
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;",
        "int mn = min ( x new y ) ;",
        "for ( i = 2 ; i <= n ; i ++ ) { fact += i ; }"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        15,
        0,
        16
      ],
      "mod_code": [
        "int x , y y ;",
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;",
        "input >> x >> y ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        15,
        0,
        16,
        11
      ],
      "mod_code": [
        "int x , y y ;",
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;",
        "input >> x >> y ;",
        "for ( i = 2 ; i <= n ; i ++ ) { fact += i ; }"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        15,
        0,
        11
      ],
      "mod_code": [
        "int x , y y ;",
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;",
        "for ( i = 2 ; i <= n ; i ++ ) { fact += i ; }"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        15,
        17
      ],
      "mod_code": [
        "int x , y y ;",
        "int mn = min ( x new y ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected initializer before ‘y’"
    },
    {
      "mod_line": [
        15,
        17,
        16
      ],
      "mod_code": [
        "int x , y y ;",
        "int mn = min ( x new y ) ;",
        "input >> x >> y ;"
      ],
      "err_line": 15,
      "err_msg": "expected initializer before ‘y’"
    },
    {
      "mod_line": [
        15,
        17,
        16,
        11
      ],
      "mod_code": [
        "int x , y y ;",
        "int mn = min ( x new y ) ;",
        "input >> x >> y ;",
        "for ( i = 2 ; i <= n ; i ++ ) { fact += i ; }"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        11
      ],
      "mod_code": [
        "int x , y y ;",
        "int mn = min ( x new y ) ;",
        "for ( i = 2 ; i <= n ; i ++ ) { fact += i ; }"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16
      ],
      "mod_code": [
        "int x , y y ;",
        "input >> x >> y ;"
      ],
      "err_line": 15,
      "err_msg": "expected initializer before ‘y’"
    },
    {
      "mod_line": [
        15,
        16,
        11
      ],
      "mod_code": [
        "int x , y y ;",
        "input >> x >> y ;",
        "for ( i = 2 ; i <= n ; i ++ ) { fact += i ; }"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        11
      ],
      "mod_code": [
        "int x , y y ;",
        "for ( i = 2 ; i <= n ; i ++ ) { fact += i ; }"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;",
        "int mn = min ( x new y ) ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        0,
        17,
        16
      ],
      "mod_code": [
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;",
        "int mn = min ( x new y ) ;",
        "input >> x >> y ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        0,
        17,
        16,
        11
      ],
      "mod_code": [
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;",
        "int mn = min ( x new y ) ;",
        "input >> x >> y ;",
        "for ( i = 2 ; i <= n ; i ++ ) { fact += i ; }"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        0,
        17,
        11
      ],
      "mod_code": [
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;",
        "int mn = min ( x new y ) ;",
        "for ( i = 2 ; i <= n ; i ++ ) { fact += i ; }"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;",
        "input >> x >> y ;"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        0,
        16,
        11
      ],
      "mod_code": [
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;",
        "input >> x >> y ;",
        "for ( i = 2 ; i <= n ; i ++ ) { fact += i ; }"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "vector < int > divisor [ 1000000 + 1 ] = { 0 } ;",
        "for ( i = 2 ; i <= n ; i ++ ) { fact += i ; }"
      ],
      "err_line": 0,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        17,
        16
      ],
      "mod_code": [
        "int mn = min ( x new y ) ;",
        "input >> x >> y ;"
      ],
      "err_line": 16,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        16,
        11
      ],
      "mod_code": [
        "int mn = min ( x new y ) ;",
        "input >> x >> y ;",
        "for ( i = 2 ; i <= n ; i ++ ) { fact += i ; }"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        11
      ],
      "mod_code": [
        "int mn = min ( x new y ) ;",
        "for ( i = 2 ; i <= n ; i ++ ) { fact += i ; }"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        11
      ],
      "mod_code": [
        "input >> x >> y ;",
        "for ( i = 2 ; i <= n ; i ++ ) { fact += i ; }"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}