{
  "meta": {
    "index": 2465,
    "hitid": "3IVEC1GSLPTCK0LI9VTIN2L8OH4J1Z",
    "workerid": "A1APYLD4DUK33J",
    "probid": "912A",
    "subid": "48564961"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long longs a , b",
      "code": "long long a , b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read a read b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create long longs x , y , z",
      "code": "long long x , y , z ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read x read y read z",
      "code": "cin >> x >> y >> z ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create long long ans with ans = 0",
      "code": "long long ans = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if y is greater than a",
      "code": "if ( y > a )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "increment ans by y - a",
      "code": "ans += y - a ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set a to 0",
      "code": "a = 0 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "decrement a by y",
      "code": "a -= y ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if y is greater than b",
      "code": "if ( y > b )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "increment ans by y - b",
      "code": "ans += y - b ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set b to 0",
      "code": "b = 0 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "decrement b by y",
      "code": "b -= y ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if x * 2 is greater than a , increment ans by x * 2 - a",
      "code": "if ( x * 2 > a ) ans += x * 2 - a ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if x * 3 is greater than b , increment ans by z * 3 - b",
      "code": "if ( z * 3 > b ) ans += z * 3 - b ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print ans print newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> x >> y >> z )"
      ],
      "err_line": 7,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        2,
        8,
        15
      ],
      "mod_code": [
        "if ( x * 3 > b ) ans += z * 3 - b ;",
        "a >> a >> b ;",
        "int a = 0 ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        2,
        20,
        15
      ],
      "mod_code": [
        "if ( x * 3 > b ) ans += z * 3 - b ;",
        "a >> a >> b ;",
        "cout << ans ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        2,
        15
      ],
      "mod_code": [
        "if ( x * 3 > b ) ans += z * 3 - b ;",
        "a >> a >> b ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        8,
        20,
        15
      ],
      "mod_code": [
        "if ( x * 3 > b ) ans += z * 3 - b ;",
        "int a = 0 ;",
        "cout << ans ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        8,
        15
      ],
      "mod_code": [
        "if ( x * 3 > b ) ans += z * 3 - b ;",
        "int a = 0 ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        20,
        15
      ],
      "mod_code": [
        "if ( x * 3 > b ) ans += z * 3 - b ;",
        "cout << ans ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        15
      ],
      "mod_code": [
        "if ( x * 3 > b ) ans += z * 3 - b ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        2,
        8,
        15
      ],
      "mod_code": [
        "if ( x * 3 > b ) { ans += z * 3 - b ; }",
        "a >> a >> b ;",
        "int a = 0 ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        2,
        20,
        15
      ],
      "mod_code": [
        "if ( x * 3 > b ) { ans += z * 3 - b ; }",
        "a >> a >> b ;",
        "cout << ans ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        2,
        15
      ],
      "mod_code": [
        "if ( x * 3 > b ) { ans += z * 3 - b ; }",
        "a >> a >> b ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        8,
        20,
        15
      ],
      "mod_code": [
        "if ( x * 3 > b ) { ans += z * 3 - b ; }",
        "int a = 0 ;",
        "cout << ans ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        8,
        15
      ],
      "mod_code": [
        "if ( x * 3 > b ) { ans += z * 3 - b ; }",
        "int a = 0 ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        20,
        15
      ],
      "mod_code": [
        "if ( x * 3 > b ) { ans += z * 3 - b ; }",
        "cout << ans ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        15
      ],
      "mod_code": [
        "if ( x * 3 > b ) { ans += z * 3 - b ; }",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        8,
        20,
        15
      ],
      "mod_code": [
        "a >> a >> b ;",
        "int a = 0 ;",
        "cout << ans ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        8,
        15
      ],
      "mod_code": [
        "a >> a >> b ;",
        "int a = 0 ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        20,
        15
      ],
      "mod_code": [
        "a >> a >> b ;",
        "cout << ans ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "a >> a >> b ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        20,
        15
      ],
      "mod_code": [
        "int a = 0 ;",
        "cout << ans ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "int a = 0 ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        15
      ],
      "mod_code": [
        "cout << ans ;",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}