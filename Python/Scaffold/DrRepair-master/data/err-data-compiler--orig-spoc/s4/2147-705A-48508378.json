{
  "meta": {
    "index": 2147,
    "hitid": "3YZ7A3YHR5N47L5RXC48ITPCX3J5SR",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "705A",
    "subid": "48508378"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n > 0",
      "code": "if ( n > 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print I hate",
      "code": "cout << \" I hate \"",
      "indent": 2
    },
    {
      "line": 5,
      "text": "\" \"",
      "code": "<< \" \" ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "for i = 2 to n inclusive",
      "code": "for ( int i = 2 ; i <= n ; i ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if i is even",
      "code": "if ( i % 2 == 0 )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "print that I love",
      "code": "cout << \" that I love \"",
      "indent": 4
    },
    {
      "line": 9,
      "text": "\" \"",
      "code": "<< \" \" ;",
      "indent": 5
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 11,
      "text": "print that I hate",
      "code": "cout << \" that I hate \"",
      "indent": 4
    },
    {
      "line": 12,
      "text": "\" \"",
      "code": "<< \" \" ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print it and a newline",
      "code": "cout << \" it \" << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cout << \" I \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cout << \" I \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << \" I \" << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cout << it << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin read n ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cout << \" I \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "\" ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cout << \" I love << endl ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << \" I hate << endl ;"
      ],
      "err_line": 11,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "\" ;"
      ],
      "err_line": 12,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cout << it << \" \\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        16
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << it << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        6
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        9
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        16
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << \" I \" << endl ;",
        "cout << it << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        6
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << \" I \" << endl ;",
        "cout << it << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        9
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << \" I \" << endl ;",
        "cout << it << endl ;",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        6
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << \" I \" << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        6,
        9
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << \" I \" << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        8,
        9
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << \" I \" << endl ;",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        16
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << \" I \" << endl ;",
        "cout << it << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        6
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << \" I \" << endl ;",
        "cout << it << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        9
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << \" I \" << endl ;",
        "cout << it << endl ;",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        6
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << \" I \" << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        11,
        6,
        9
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << \" I \" << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        11,
        9
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << \" I \" << endl ;",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << it << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        6
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << it << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        16,
        6,
        9
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << it << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        16,
        9
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "cout << it << endl ;",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        9
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "cout << \" I \" ;",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        16
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << it << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        6
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << it << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        9
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "cout << it << endl ;",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        6
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        6,
        9
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11,
        9
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << it << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        16,
        6
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << it << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        16,
        6,
        9
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << it << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        16,
        9
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << it << endl ;",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        9
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        16
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << it << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        16,
        6
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << it << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        16,
        6,
        9
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << it << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        16,
        9
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << it << endl ;",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6,
        9
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        6
      ],
      "mod_code": [
        "cout << it << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6,
        9
      ],
      "mod_code": [
        "cout << it << endl ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        9
      ],
      "mod_code": [
        "cout << it << endl ;",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "\" ;"
      ],
      "err_line": 9,
      "err_msg": "missing terminating \" character"
    }
  ]
}