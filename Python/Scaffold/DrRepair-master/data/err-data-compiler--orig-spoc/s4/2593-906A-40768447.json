{
  "meta": {
    "index": 2593,
    "hitid": "3BJKPTD2QC6UR8G4JJM1VZQUR4MRTG",
    "workerid": "AIWEXPJAU66D9",
    "probid": "906A",
    "subid": "40768447"
  },
  "lines": [
    {
      "line": 0,
      "text": "create new set of unique characters called st",
      "code": "set < char > st ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare new integer variable n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read user input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create new boolean called ok with value true",
      "code": "bool ok = true ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "ans is a new integer variable with value 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for integer i = 0 to exclusive , insert ' a ' + i into st",
      "code": "for ( int i = 0 ; i < 26 ; i ++ ) st . insert ( ( char ) ( ' a ' + i ) ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while n ! = 0 , decrement it and continue the loop",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create character variable c",
      "code": "char c ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "read input to c",
      "code": "cin >> c ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": ";",
      "indent": 2
    },
    {
      "line": 11,
      "text": "create new string variable s",
      "code": "string s ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "read variable s from the input",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if n is equal to 0 , break the loop",
      "code": "if ( n == 0 ) break ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if ok is true",
      "code": "if ( ok )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if c is equal to ' ! '",
      "code": "if ( c == ' ! ' )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "sst is a set of unique characters",
      "code": "set < char > sst ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "for i = 0 to length of s exclusive incrementing i",
      "code": "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
      "indent": 4
    },
    {
      "line": 18,
      "text": "if st . count ( s [ i ] ) is true , sst . insert ( s [ i ] )",
      "code": "if ( st . count ( s [ i ] ) ) sst . insert ( s [ i ] ) ;",
      "indent": 5
    },
    {
      "line": 19,
      "text": "remove all elements from st",
      "code": "st . clear ( ) ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "move new set iterator it through sst and insert value at it into st on each iteratopn",
      "code": "for ( set < char > :: iterator it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) st . insert ( * it ) ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 22,
      "text": "for integer i = 0 to length of s exclusive incrementing i",
      "code": "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
      "indent": 4
    },
    {
      "line": 23,
      "text": "if st is not empty , clear it",
      "code": "if ( st . count ( s [ i ] ) ) st . erase ( s [ i ] ) ;",
      "indent": 5
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 25,
      "text": "if st has 1 element , change ok to false",
      "code": "if ( st . size ( ) == 1 ) ok = false ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 27,
      "text": "if c ! = ' . ' , increment ans by one",
      "code": "if ( c != ' . ' ) ans ++ ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }"
      ],
      "err_line": 20,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "bool ok ok ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘ok’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "char a ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "string a ;"
      ],
      "err_line": 12,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "set < unique > sst ;"
      ],
      "err_line": 16,
      "err_msg": "type/value mismatch at argument 1 in template parameter list for ‘template<class _Key, class _Compare, class _Alloc> class std::set’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "st . remove = 0 ;"
      ],
      "err_line": 19,
      "err_msg": "‘class std::set<char>’ has no member named ‘remove’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( it = sst . begin ( ) ; it != sst . insert ( it ) ; it ++ ) { st . insert ( * it ) ; }"
      ],
      "err_line": 20,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "if ( ! st . empty ( ) ) it . clear ( ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "if ( st [ i ] == 1 ) ok = false ;"
      ],
      "err_line": 25,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }"
      ],
      "err_line": 20,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        20,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }"
      ],
      "err_line": 20,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        20,
        23,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }",
        "if ( st . size ( ) ) ok = false ;"
      ],
      "err_line": 20,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        20,
        23,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }",
        "char a ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        20,
        23,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        20,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "if ( st . size ( ) ) ok = false ;"
      ],
      "err_line": 20,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        20,
        25,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "if ( st . size ( ) ) ok = false ;",
        "char a ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        20,
        25,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "if ( st . size ( ) ) ok = false ;",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        20,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "char a ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        20,
        8,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "char a ;",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        20,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        23,
        25,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }",
        "if ( st . size ( ) ) ok = false ;",
        "char a ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        23,
        25,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }",
        "if ( st . size ( ) ) ok = false ;",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        23,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }",
        "char a ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        23,
        8,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }",
        "char a ;",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        23,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        25,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "if ( st . size ( ) ) ok = false ;",
        "char a ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        25,
        8,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "if ( st . size ( ) ) ok = false ;",
        "char a ;",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        25,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "if ( st . size ( ) ) ok = false ;",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "char a ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "char a ;",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < i ; i ++ ) st . insert ( ' a ' + i ) ;",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23
      ],
      "mod_code": [
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }"
      ],
      "err_line": 20,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23,
        25
      ],
      "mod_code": [
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }",
        "if ( st . size ( ) ) ok = false ;"
      ],
      "err_line": 20,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23,
        25,
        8
      ],
      "mod_code": [
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }",
        "if ( st . size ( ) ) ok = false ;",
        "char a ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23,
        25,
        2
      ],
      "mod_code": [
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }",
        "if ( st . size ( ) ) ok = false ;",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23,
        8
      ],
      "mod_code": [
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }",
        "char a ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23,
        8,
        2
      ],
      "mod_code": [
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }",
        "char a ;",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23,
        2
      ],
      "mod_code": [
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25
      ],
      "mod_code": [
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "if ( st . size ( ) ) ok = false ;"
      ],
      "err_line": 20,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        8
      ],
      "mod_code": [
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "if ( st . size ( ) ) ok = false ;",
        "char a ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        8,
        2
      ],
      "mod_code": [
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "if ( st . size ( ) ) ok = false ;",
        "char a ;",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        2
      ],
      "mod_code": [
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "if ( st . size ( ) ) ok = false ;",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        8
      ],
      "mod_code": [
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "char a ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        8,
        2
      ],
      "mod_code": [
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "char a ;",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        2
      ],
      "mod_code": [
        "for ( it = sst . begin ( ) ; it != sst . end ( ) ; it ++ ) { st . insert ( * it ) ; }",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        8
      ],
      "mod_code": [
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }",
        "if ( st . size ( ) ) ok = false ;",
        "char a ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        8,
        2
      ],
      "mod_code": [
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }",
        "if ( st . size ( ) ) ok = false ;",
        "char a ;",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        2
      ],
      "mod_code": [
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }",
        "if ( st . size ( ) ) ok = false ;",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        8
      ],
      "mod_code": [
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }",
        "char a ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        8,
        2
      ],
      "mod_code": [
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }",
        "char a ;",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        2
      ],
      "mod_code": [
        "if ( ! st . empty ( ) ) { st . clear ( ) ; }",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        8
      ],
      "mod_code": [
        "if ( st . size ( ) ) ok = false ;",
        "char a ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        8,
        2
      ],
      "mod_code": [
        "if ( st . size ( ) ) ok = false ;",
        "char a ;",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        2
      ],
      "mod_code": [
        "if ( st . size ( ) ) ok = false ;",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "char a ;",
        "int n = s . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    }
  ]
}