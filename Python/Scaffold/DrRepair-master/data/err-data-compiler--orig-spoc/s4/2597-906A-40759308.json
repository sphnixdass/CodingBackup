{
  "meta": {
    "index": 2597,
    "hitid": "3FSEU3P2NRUHBT3CFUH6VKPC3JPRR3",
    "workerid": "AIWEXPJAU66D9",
    "probid": "906A",
    "subid": "40759308"
  },
  "lines": [
    {
      "line": 0,
      "text": "create bitsets ans and tmp with size 26",
      "code": "bitset < 26 > ans , tmp ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare int variables n and cnt with cnt = 0",
      "code": "int n , cnt = 0 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare char ch",
      "code": "char ch ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare string s",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "set all bits in ans to 1",
      "code": "ans . set ( ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read ch and s",
      "code": "cin >> ch >> s ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if count of 1s in ans = 1 and i < n and ch ! = ' . '",
      "code": "if ( ans . count ( ) == 1 && i < n && ch != ' . ' )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment cnt by one",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set all bits of tmp to 0",
      "code": "tmp . reset ( ) ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "for integer i = 0 to length of s inclusive , set tmp [ s [ i ] - ' a ' ] to 1",
      "code": "for ( int i = 0 ; i <= s . length ( ) ; i ++ ) tmp [ s [ i ] - ' a ' ] = 1 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "if ch is equal to ' ! '",
      "code": "if ( ch == ' ! ' )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "ans & = tmp",
      "code": "ans &= tmp ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 17,
      "text": "ans & = ~ tmp",
      "code": "ans &= ~ tmp ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print cnt",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int ans , tmp , tmp ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int tmp’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "ans += ~ tmp ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::bitset<26ul>’ and ‘std::bitset<26ul>’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int ans , tmp [ 26 ] ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘set’ in ‘ans’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char ch ch ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘ch’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "ans . clear ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘class std::bitset<26ul>’ has no member named ‘clear’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "ch >> s ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘char’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( count ( 1s ) == 1 && i < n && ch != ' . ' )"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "ans += tmp ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::bitset<26ul>’ and ‘std::bitset<26ul>’)"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "ans += tmp ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::bitset<26ul>’ and ‘std::bitset<26ul>’)"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int ans , tmp , tmp ;",
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        0,
        9,
        12
      ],
      "mod_code": [
        "int ans , tmp , tmp ;",
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )",
        "tmp . set ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        0,
        9,
        12,
        17
      ],
      "mod_code": [
        "int ans , tmp , tmp ;",
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )",
        "tmp . set ( ) ;",
        "ans += ~ tmp ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        0,
        9,
        12,
        20
      ],
      "mod_code": [
        "int ans , tmp , tmp ;",
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )",
        "tmp . set ( ) ;",
        "cout << cnt ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        0,
        9,
        17
      ],
      "mod_code": [
        "int ans , tmp , tmp ;",
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )",
        "ans += ~ tmp ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        0,
        9,
        17,
        20
      ],
      "mod_code": [
        "int ans , tmp , tmp ;",
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )",
        "ans += ~ tmp ;",
        "cout << cnt ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        0,
        9,
        20
      ],
      "mod_code": [
        "int ans , tmp , tmp ;",
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )",
        "cout << cnt ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "int ans , tmp , tmp ;",
        "tmp . set ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int tmp’"
    },
    {
      "mod_line": [
        0,
        12,
        17
      ],
      "mod_code": [
        "int ans , tmp , tmp ;",
        "tmp . set ( ) ;",
        "ans += ~ tmp ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int tmp’"
    },
    {
      "mod_line": [
        0,
        12,
        17,
        20
      ],
      "mod_code": [
        "int ans , tmp , tmp ;",
        "tmp . set ( ) ;",
        "ans += ~ tmp ;",
        "cout << cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int tmp’"
    },
    {
      "mod_line": [
        0,
        12,
        20
      ],
      "mod_code": [
        "int ans , tmp , tmp ;",
        "tmp . set ( ) ;",
        "cout << cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int tmp’"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "int ans , tmp , tmp ;",
        "ans += ~ tmp ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int tmp’"
    },
    {
      "mod_line": [
        0,
        17,
        20
      ],
      "mod_code": [
        "int ans , tmp , tmp ;",
        "ans += ~ tmp ;",
        "cout << cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int tmp’"
    },
    {
      "mod_line": [
        0,
        20
      ],
      "mod_code": [
        "int ans , tmp , tmp ;",
        "cout << cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int tmp’"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )",
        "tmp . set ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        9,
        12,
        17
      ],
      "mod_code": [
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )",
        "tmp . set ( ) ;",
        "ans += ~ tmp ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        9,
        12,
        17,
        0
      ],
      "mod_code": [
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )",
        "tmp . set ( ) ;",
        "ans += ~ tmp ;",
        "int ans , tmp [ 26 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        9,
        12,
        17,
        20
      ],
      "mod_code": [
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )",
        "tmp . set ( ) ;",
        "ans += ~ tmp ;",
        "cout << cnt ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        9,
        12,
        0
      ],
      "mod_code": [
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )",
        "tmp . set ( ) ;",
        "int ans , tmp [ 26 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        9,
        12,
        0,
        20
      ],
      "mod_code": [
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )",
        "tmp . set ( ) ;",
        "int ans , tmp [ 26 ] ;",
        "cout << cnt ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        9,
        12,
        20
      ],
      "mod_code": [
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )",
        "tmp . set ( ) ;",
        "cout << cnt ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )",
        "ans += ~ tmp ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        9,
        17,
        0
      ],
      "mod_code": [
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )",
        "ans += ~ tmp ;",
        "int ans , tmp [ 26 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        9,
        17,
        0,
        20
      ],
      "mod_code": [
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )",
        "ans += ~ tmp ;",
        "int ans , tmp [ 26 ] ;",
        "cout << cnt ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        9,
        17,
        20
      ],
      "mod_code": [
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )",
        "ans += ~ tmp ;",
        "cout << cnt ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )",
        "int ans , tmp [ 26 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        9,
        0,
        20
      ],
      "mod_code": [
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )",
        "int ans , tmp [ 26 ] ;",
        "cout << cnt ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        9,
        20
      ],
      "mod_code": [
        "if ( ans . count ( 1s ) == 1 && i < n && ch != ' . ' )",
        "cout << cnt ;"
      ],
      "err_line": 9,
      "err_msg": "invalid suffix \"s\" on integer constant"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "tmp . set ( ) ;",
        "ans += ~ tmp ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::bitset<26ul>’ and ‘std::bitset<26ul>’)"
    },
    {
      "mod_line": [
        12,
        17,
        0
      ],
      "mod_code": [
        "tmp . set ( ) ;",
        "ans += ~ tmp ;",
        "int ans , tmp [ 26 ] ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘set’ in ‘ans’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        12,
        17,
        0,
        20
      ],
      "mod_code": [
        "tmp . set ( ) ;",
        "ans += ~ tmp ;",
        "int ans , tmp [ 26 ] ;",
        "cout << cnt ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘set’ in ‘ans’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        12,
        17,
        20
      ],
      "mod_code": [
        "tmp . set ( ) ;",
        "ans += ~ tmp ;",
        "cout << cnt ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::bitset<26ul>’ and ‘std::bitset<26ul>’)"
    },
    {
      "mod_line": [
        12,
        0
      ],
      "mod_code": [
        "tmp . set ( ) ;",
        "int ans , tmp [ 26 ] ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘set’ in ‘ans’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        12,
        0,
        20
      ],
      "mod_code": [
        "tmp . set ( ) ;",
        "int ans , tmp [ 26 ] ;",
        "cout << cnt ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘set’ in ‘ans’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        17,
        0
      ],
      "mod_code": [
        "ans += ~ tmp ;",
        "int ans , tmp [ 26 ] ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘set’ in ‘ans’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        17,
        0,
        20
      ],
      "mod_code": [
        "ans += ~ tmp ;",
        "int ans , tmp [ 26 ] ;",
        "cout << cnt ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘set’ in ‘ans’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        17,
        20
      ],
      "mod_code": [
        "ans += ~ tmp ;",
        "cout << cnt ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::bitset<26ul>’ and ‘std::bitset<26ul>’)"
    },
    {
      "mod_line": [
        0,
        20
      ],
      "mod_code": [
        "int ans , tmp [ 26 ] ;",
        "cout << cnt ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘set’ in ‘ans’, which is of non-class type ‘int’"
    }
  ]
}