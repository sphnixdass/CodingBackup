{
  "meta": {
    "index": 264,
    "hitid": "3XWUWJ18TLK17DNANI7G56ZGHH1UUI",
    "workerid": "AIWEXPJAU66D9",
    "probid": "238A",
    "subid": "27326934"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant int64_t variable with name MOD = 1e9 + 9",
      "code": "const int64_t MOD = 1e9 + 9 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare int64_t N and M",
      "code": "int64_t N , M ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read from the input to N and M",
      "code": "cin >> N >> M ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create new int64_t pow with value 1",
      "code": "int64_t pow = 1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "in a for loop , change i from 0 to M exclusive , setting pow to ( pow * 2 ) % MOD on each iteration",
      "code": "for ( int64_t i = 0 ; i < M ; i ++ ) { pow = ( pow * 2 ) % MOD ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create new int64_t called ac with value 1",
      "code": "int64_t ac = 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "in a for loop , change i from 1 to N inclusive , changing ac to ( ac * ( pow + MOD - i ) ) % MOD",
      "code": "for ( int64_t i = 1 ; i <= N ; i ++ ) { ac = ( ac * ( pow + MOD - i ) ) % MOD ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print ac",
      "code": "cout << ac << endl ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int64_t N , M M ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int64_t ac called ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘called’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow - MOD - i ) ) % MOD ; }",
        "cin >> N >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow - MOD - i ) ) % MOD ; }",
        "cin >> N >> k ;",
        "int64_t pow = ' 1 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        4,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow - MOD - i ) ) % MOD ; }",
        "cin >> N >> k ;",
        "int64_t pow = ' 1 ' ;",
        "int64_t N , M M ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        7,
        3,
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow - MOD - i ) ) % MOD ; }",
        "cin >> N >> k ;",
        "int64_t pow = ' 1 ' ;",
        "int64_t ac called ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow - MOD - i ) ) % MOD ; }",
        "cin >> N >> k ;",
        "int64_t N , M M ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        7,
        3,
        2,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow - MOD - i ) ) % MOD ; }",
        "cin >> N >> k ;",
        "int64_t N , M M ;",
        "int64_t ac called ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        7,
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow - MOD - i ) ) % MOD ; }",
        "cin >> N >> k ;",
        "int64_t ac called ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow - MOD - i ) ) % MOD ; }",
        "int64_t pow = ' 1 ' ;",
        "int64_t N , M M ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        7,
        4,
        2,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow - MOD - i ) ) % MOD ; }",
        "int64_t pow = ' 1 ' ;",
        "int64_t N , M M ;",
        "int64_t ac called ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        7,
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow - MOD - i ) ) % MOD ; }",
        "int64_t pow = ' 1 ' ;",
        "int64_t ac called ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘called’"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow - MOD - i ) ) % MOD ; }",
        "int64_t N , M M ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        7,
        2,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow - MOD - i ) ) % MOD ; }",
        "int64_t N , M M ;",
        "int64_t ac called ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow - MOD - i ) ) % MOD ; }",
        "int64_t ac called ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘called’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "cin >> N >> k ;",
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow + MOD - i ) ) % MOD ; }"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        4
      ],
      "mod_code": [
        "cin >> N >> k ;",
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow + MOD - i ) ) % MOD ; }",
        "int64_t pow = ' 1 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        4,
        2
      ],
      "mod_code": [
        "cin >> N >> k ;",
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow + MOD - i ) ) % MOD ; }",
        "int64_t pow = ' 1 ' ;",
        "int64_t N , M M ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        3,
        7,
        4,
        6
      ],
      "mod_code": [
        "cin >> N >> k ;",
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow + MOD - i ) ) % MOD ; }",
        "int64_t pow = ' 1 ' ;",
        "int64_t ac called ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        2
      ],
      "mod_code": [
        "cin >> N >> k ;",
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow + MOD - i ) ) % MOD ; }",
        "int64_t N , M M ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        3,
        7,
        2,
        6
      ],
      "mod_code": [
        "cin >> N >> k ;",
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow + MOD - i ) ) % MOD ; }",
        "int64_t N , M M ;",
        "int64_t ac called ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        3,
        7,
        6
      ],
      "mod_code": [
        "cin >> N >> k ;",
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow + MOD - i ) ) % MOD ; }",
        "int64_t ac called ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "cin >> N >> k ;",
        "int64_t pow = ' 1 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "cin >> N >> k ;",
        "int64_t pow = ' 1 ' ;",
        "int64_t N , M M ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        3,
        4,
        2,
        6
      ],
      "mod_code": [
        "cin >> N >> k ;",
        "int64_t pow = ' 1 ' ;",
        "int64_t N , M M ;",
        "int64_t ac called ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "cin >> N >> k ;",
        "int64_t pow = ' 1 ' ;",
        "int64_t ac called ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "cin >> N >> k ;",
        "int64_t N , M M ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        3,
        2,
        6
      ],
      "mod_code": [
        "cin >> N >> k ;",
        "int64_t N , M M ;",
        "int64_t ac called ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "cin >> N >> k ;",
        "int64_t ac called ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow + MOD - i ) ) % MOD ; }",
        "int64_t pow = ' 1 ' ;",
        "int64_t N , M M ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        7,
        4,
        2,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow + MOD - i ) ) % MOD ; }",
        "int64_t pow = ' 1 ' ;",
        "int64_t N , M M ;",
        "int64_t ac called ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        7,
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow + MOD - i ) ) % MOD ; }",
        "int64_t pow = ' 1 ' ;",
        "int64_t ac called ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘called’"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow + MOD - i ) ) % MOD ; }",
        "int64_t N , M M ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        7,
        2,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow + MOD - i ) ) % MOD ; }",
        "int64_t N , M M ;",
        "int64_t ac called ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= N ; i ++ ) { ac * ( ac * ( pow + MOD - i ) ) % MOD ; }",
        "int64_t ac called ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘called’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "int64_t pow = ' 1 ' ;",
        "int64_t N , M M ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        4,
        2,
        6
      ],
      "mod_code": [
        "int64_t pow = ' 1 ' ;",
        "int64_t N , M M ;",
        "int64_t ac called ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "int64_t pow = ' 1 ' ;",
        "int64_t ac called ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘called’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "int64_t N , M M ;",
        "int64_t ac called ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘M’"
    }
  ]
}