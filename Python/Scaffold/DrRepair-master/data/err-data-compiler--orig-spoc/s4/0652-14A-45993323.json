{
  "meta": {
    "index": 652,
    "hitid": "3J9L0X0VDFGGFPOCK7RQRYXZOAMW97",
    "workerid": "AIWEXPJAU66D9",
    "probid": "14A",
    "subid": "45993323"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , m , i , j , imin , imax , jmin and jmax be long long ints with imin and jmin = 100 , imex and jmax = 0",
      "code": "long long int n , m , i , j , imin = 100 , imax = 0 , jmin = 100 , jmax = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare 2d array of chars str with size n + 5 by m + 5",
      "code": "char str [ n + 5 ] [ m + 5 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for j = 0 to m exclusive",
      "code": "for ( j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read str [ i ] [ j ]",
      "code": "cin >> str [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "{",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if str [ i ] [ j ] is ' * '",
      "code": "if ( str [ i ] [ j ] == ' * ' )",
      "indent": 4
    },
    {
      "line": 9,
      "text": "if i is less than imin , set imin to i",
      "code": "if ( i < imin ) imin = i ;",
      "indent": 5
    },
    {
      "line": 10,
      "text": "if i is greater than imax , set imax to i",
      "code": "if ( i > imax ) imax = i ;",
      "indent": 5
    },
    {
      "line": 11,
      "text": "if j is less than jmin , set jmin to j",
      "code": "if ( j < jmin ) jmin = j ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "if j is greater than jmax , set jmax to j",
      "code": "if ( j > jmax ) jmax = j ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i = imin to imax inclusive",
      "code": "for ( i = imin ; i <= imax ; i ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for j = jmin to jmax inclusive print str [ i ] [ j ]",
      "code": "for ( j = jmin ; j <= jmax ; j ++ ) { cout << str [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print \" \\ n \"",
      "code": "cout << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 100 , jmin , jmin , jmax = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "<< \" \\n \" ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 0 , jmin , jmin , jmax = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        19
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 100 , jmin , jmin , jmax = 0 ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        1,
        19,
        2
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 100 , jmin , jmin , jmax = 0 ;",
        "<< \" \\n \" ;",
        "cin >> n >> k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        1,
        19,
        2,
        6
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 100 , jmin , jmin , jmax = 0 ;",
        "<< \" \\n \" ;",
        "cin >> n >> k ;",
        "cout << str [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        1,
        19,
        2,
        8
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 100 , jmin , jmin , jmax = 0 ;",
        "<< \" \\n \" ;",
        "cin >> n >> k ;",
        "if ( ! str [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        1,
        19,
        6
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 100 , jmin , jmin , jmax = 0 ;",
        "<< \" \\n \" ;",
        "cout << str [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        1,
        19,
        6,
        8
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 100 , jmin , jmin , jmax = 0 ;",
        "<< \" \\n \" ;",
        "cout << str [ i ] [ j ] ;",
        "if ( ! str [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        1,
        19,
        8
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 100 , jmin , jmin , jmax = 0 ;",
        "<< \" \\n \" ;",
        "if ( ! str [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 100 , jmin , jmin , jmax = 0 ;",
        "cin >> n >> k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        1,
        2,
        6
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 100 , jmin , jmin , jmax = 0 ;",
        "cin >> n >> k ;",
        "cout << str [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        1,
        2,
        6,
        8
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 100 , jmin , jmin , jmax = 0 ;",
        "cin >> n >> k ;",
        "cout << str [ i ] [ j ] ;",
        "if ( ! str [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        1,
        2,
        8
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 100 , jmin , jmin , jmax = 0 ;",
        "cin >> n >> k ;",
        "if ( ! str [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 100 , jmin , jmin , jmax = 0 ;",
        "cout << str [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        1,
        6,
        8
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 100 , jmin , jmin , jmax = 0 ;",
        "cout << str [ i ] [ j ] ;",
        "if ( ! str [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 100 , jmin , jmin , jmax = 0 ;",
        "if ( ! str [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        19,
        1
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "long long int n , m , i , j , imin = 100 , imax = 0 , jmin , jmin , jmax = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        19,
        1,
        2
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "long long int n , m , i , j , imin = 100 , imax = 0 , jmin , jmin , jmax = 0 ;",
        "cin >> n >> k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        19,
        1,
        2,
        6
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "long long int n , m , i , j , imin = 100 , imax = 0 , jmin , jmin , jmax = 0 ;",
        "cin >> n >> k ;",
        "cout << str [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        19,
        1,
        2,
        8
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "long long int n , m , i , j , imin = 100 , imax = 0 , jmin , jmin , jmax = 0 ;",
        "cin >> n >> k ;",
        "if ( ! str [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        19,
        1,
        6
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "long long int n , m , i , j , imin = 100 , imax = 0 , jmin , jmin , jmax = 0 ;",
        "cout << str [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        19,
        1,
        6,
        8
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "long long int n , m , i , j , imin = 100 , imax = 0 , jmin , jmin , jmax = 0 ;",
        "cout << str [ i ] [ j ] ;",
        "if ( ! str [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        19,
        1,
        8
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "long long int n , m , i , j , imin = 100 , imax = 0 , jmin , jmin , jmax = 0 ;",
        "if ( ! str [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        19,
        2
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        2,
        6
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "cin >> n >> k ;",
        "cout << str [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        2,
        6,
        8
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "cin >> n >> k ;",
        "cout << str [ i ] [ j ] ;",
        "if ( ! str [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        2,
        8
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "cin >> n >> k ;",
        "if ( ! str [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        6
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "cout << str [ i ] [ j ] ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        19,
        6,
        8
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "cout << str [ i ] [ j ] ;",
        "if ( ! str [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        19,
        8
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "if ( ! str [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 0 , jmin , jmin , jmax = 0 ;",
        "cin >> n >> k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        1,
        2,
        6
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 0 , jmin , jmin , jmax = 0 ;",
        "cin >> n >> k ;",
        "cout << str [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        1,
        2,
        6,
        8
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 0 , jmin , jmin , jmax = 0 ;",
        "cin >> n >> k ;",
        "cout << str [ i ] [ j ] ;",
        "if ( ! str [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        1,
        2,
        8
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 0 , jmin , jmin , jmax = 0 ;",
        "cin >> n >> k ;",
        "if ( ! str [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 0 , jmin , jmin , jmax = 0 ;",
        "cout << str [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        1,
        6,
        8
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 0 , jmin , jmin , jmax = 0 ;",
        "cout << str [ i ] [ j ] ;",
        "if ( ! str [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "long long int n , m , i , j , imin = 100 , imax = 0 , jmin , jmin , jmax = 0 ;",
        "if ( ! str [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int jmin’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "cout << str [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        8
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "cout << str [ i ] [ j ] ;",
        "if ( ! str [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "if ( ! str [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    }
  ]
}