{
  "meta": {
    "index": 1407,
    "hitid": "3N2YPY1GI6SKVWFO282GXAFW90HEVB",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "876A",
    "subid": "48440802"
  },
  "lines": [
    {
      "line": 0,
      "text": "N , M , ans , a , b , c , k , x , y , z , l , r = integers",
      "code": "int N , M , ans , a , b , c , k , x , y , z , l , r ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read N , a , b , c",
      "code": "cin >> N >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if ( c < a and c < b )",
      "code": "if ( c < a && c < b )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if ( N is 1 )",
      "code": "if ( N == 1 )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "print 0",
      "code": "cout << 0 << ' \\n ' ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print min a and b + c * ( N - 2 )",
      "code": "cout << min ( a , b ) + c * ( N - 2 ) << ' \\n ' ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print min of a and b * ( N - 1 )",
      "code": "cout << min ( a , b ) * ( N - 1 ) << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int N , M , ans , a , b , c , c , x , x , z , z , r ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int N , M , ans , a , b , c , c , x , x , y , z , r ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout << min ( min ( b , b ) * ( N - 2 ) ) << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int N , M , ans , a , b , c , c , x , x , z , z , r ;",
        "cout << min ( a , b ) + ( N - 2 ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        7,
        6
      ],
      "mod_code": [
        "int N , M , ans , a , b , c , c , x , x , z , z , r ;",
        "cout << min ( a , b ) + ( N - 2 ) << endl ;",
        "else else"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        7,
        6,
        3
      ],
      "mod_code": [
        "int N , M , ans , a , b , c , c , x , x , z , z , r ;",
        "cout << min ( a , b ) + ( N - 2 ) << endl ;",
        "else else",
        "if ( c < ' a ' && c < b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        7,
        3
      ],
      "mod_code": [
        "int N , M , ans , a , b , c , c , x , x , z , z , r ;",
        "cout << min ( a , b ) + ( N - 2 ) << endl ;",
        "if ( c < ' a ' && c < b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "int N , M , ans , a , b , c , c , x , x , z , z , r ;",
        "else else"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        6,
        7
      ],
      "mod_code": [
        "int N , M , ans , a , b , c , c , x , x , z , z , r ;",
        "else else",
        "cout << min ( min ( b , b ) * ( N - 2 ) ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        6,
        7,
        3
      ],
      "mod_code": [
        "int N , M , ans , a , b , c , c , x , x , z , z , r ;",
        "else else",
        "cout << min ( min ( b , b ) * ( N - 2 ) ) << endl ;",
        "if ( c < ' a ' && c < b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        6,
        3
      ],
      "mod_code": [
        "int N , M , ans , a , b , c , c , x , x , z , z , r ;",
        "else else",
        "if ( c < ' a ' && c < b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int N , M , ans , a , b , c , c , x , x , z , z , r ;",
        "cout << min ( min ( b , b ) * ( N - 2 ) ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        7,
        3
      ],
      "mod_code": [
        "int N , M , ans , a , b , c , c , x , x , z , z , r ;",
        "cout << min ( min ( b , b ) * ( N - 2 ) ) << endl ;",
        "if ( c < ' a ' && c < b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int N , M , ans , a , b , c , c , x , x , z , z , r ;",
        "if ( c < ' a ' && c < b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "cout << min ( a , b ) + ( N - 2 ) << endl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        6,
        0
      ],
      "mod_code": [
        "cout << min ( a , b ) + ( N - 2 ) << endl ;",
        "else else",
        "int N , M , ans , a , b , c , c , x , x , y , z , r ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        7,
        6,
        0,
        3
      ],
      "mod_code": [
        "cout << min ( a , b ) + ( N - 2 ) << endl ;",
        "else else",
        "int N , M , ans , a , b , c , c , x , x , y , z , r ;",
        "if ( c < ' a ' && c < b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        7,
        6,
        3
      ],
      "mod_code": [
        "cout << min ( a , b ) + ( N - 2 ) << endl ;",
        "else else",
        "if ( c < ' a ' && c < b )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "cout << min ( a , b ) + ( N - 2 ) << endl ;",
        "int N , M , ans , a , b , c , c , x , x , y , z , r ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        7,
        0,
        3
      ],
      "mod_code": [
        "cout << min ( a , b ) + ( N - 2 ) << endl ;",
        "int N , M , ans , a , b , c , c , x , x , y , z , r ;",
        "if ( c < ' a ' && c < b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "else else",
        "int N , M , ans , a , b , c , c , x , x , y , z , r ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        6,
        0,
        7
      ],
      "mod_code": [
        "else else",
        "int N , M , ans , a , b , c , c , x , x , y , z , r ;",
        "cout << min ( min ( b , b ) * ( N - 2 ) ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        6,
        0,
        7,
        3
      ],
      "mod_code": [
        "else else",
        "int N , M , ans , a , b , c , c , x , x , y , z , r ;",
        "cout << min ( min ( b , b ) * ( N - 2 ) ) << endl ;",
        "if ( c < ' a ' && c < b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        6,
        0,
        3
      ],
      "mod_code": [
        "else else",
        "int N , M , ans , a , b , c , c , x , x , y , z , r ;",
        "if ( c < ' a ' && c < b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "else else",
        "cout << min ( min ( b , b ) * ( N - 2 ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        7,
        3
      ],
      "mod_code": [
        "else else",
        "cout << min ( min ( b , b ) * ( N - 2 ) ) << endl ;",
        "if ( c < ' a ' && c < b )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "else else",
        "if ( c < ' a ' && c < b )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int N , M , ans , a , b , c , c , x , x , y , z , r ;",
        "cout << min ( min ( b , b ) * ( N - 2 ) ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        7,
        3
      ],
      "mod_code": [
        "int N , M , ans , a , b , c , c , x , x , y , z , r ;",
        "cout << min ( min ( b , b ) * ( N - 2 ) ) << endl ;",
        "if ( c < ' a ' && c < b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int N , M , ans , a , b , c , c , x , x , y , z , r ;",
        "if ( c < ' a ' && c < b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "cout << min ( min ( b , b ) * ( N - 2 ) ) << endl ;",
        "if ( c < ' a ' && c < b )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(int)’"
    }
  ]
}