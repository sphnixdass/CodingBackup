{
  "meta": {
    "index": 2317,
    "hitid": "3DQYSJDTYL5CZLKJ2N3YLVCHOONXEK",
    "workerid": "A7Z6XB4WDJYSP",
    "probid": "891A",
    "subid": "48441911"
  },
  "lines": [
    {
      "line": 0,
      "text": "a = array of integers of length 10000",
      "code": "int a [ 10000 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in gcd function",
      "code": "int gcd ( int x , int y )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "return gcd function if y is true , return x in otherwise",
      "code": "return y ? gcd ( y , x % y ) : x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create integer len with len = 9999999",
      "code": "int len = 9999999 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to n exclusive read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "create integer ans with ans = a [ i ]",
      "code": "int ans = a [ i ] ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for j = i to n exclusive",
      "code": "for ( int j = i ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set ans = gcd ( ans , a [ j ] )",
      "code": "ans = gcd ( ans , a [ j ] ) ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if ans is equal to 1",
      "code": "if ( ans == 1 )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "set len = min ( len , j - i + 1 )",
      "code": "len = min ( len , j - i + 1 ) ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "stop loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if len is equal to 9999999",
      "code": "if ( len == 9999999 )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print - 1 and new line",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 22,
      "text": "create integer ans with ans = 0",
      "code": "int ans = 0 ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "if a [ i ] is equal to 1 increment ans",
      "code": "if ( a [ i ] == 1 ) ans ++ ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "if ans",
      "code": "if ( ans )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "print n - ans and new line",
      "code": "cout << n - ans << endl ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 28,
      "text": "print len - 2 + n and new line",
      "code": "cout << len - 2 + n << endl ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int gcd ( )"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "return y ? gcd ( x , x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int gcd ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "return y ? gcd ( x ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 14,
      "err_msg": "‘len’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "long int len = 9999999 ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(long int&, int)’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "ans = a [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( j = i ; j < n ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( ans == l )"
      ],
      "err_line": 13,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 15,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 23,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 27,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int gcd ( )",
        "return y ? gcd ( x , x ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        14
      ],
      "mod_code": [
        "int gcd ( )",
        "return y ? gcd ( x , x ) ;",
        "int len = min ( len , j - i + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        14,
        23
      ],
      "mod_code": [
        "int gcd ( )",
        "return y ? gcd ( x , x ) ;",
        "int len = min ( len , j - i + 1 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        14,
        12
      ],
      "mod_code": [
        "int gcd ( )",
        "return y ? gcd ( x , x ) ;",
        "int len = min ( len , j - i + 1 ) ;",
        "int ans = gcd ( ans , a [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        23
      ],
      "mod_code": [
        "int gcd ( )",
        "return y ? gcd ( x , x ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        23,
        12
      ],
      "mod_code": [
        "int gcd ( )",
        "return y ? gcd ( x , x ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int ans = gcd ( ans , a [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        12
      ],
      "mod_code": [
        "int gcd ( )",
        "return y ? gcd ( x , x ) ;",
        "int ans = gcd ( ans , a [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int gcd ( )",
        "int len = min ( len , j - i + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        2
      ],
      "mod_code": [
        "int gcd ( )",
        "int len = min ( len , j - i + 1 ) ;",
        "return y ? gcd ( x ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        2,
        23
      ],
      "mod_code": [
        "int gcd ( )",
        "int len = min ( len , j - i + 1 ) ;",
        "return y ? gcd ( x ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        2,
        12
      ],
      "mod_code": [
        "int gcd ( )",
        "int len = min ( len , j - i + 1 ) ;",
        "return y ? gcd ( x ) ;",
        "int ans = gcd ( ans , a [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        23
      ],
      "mod_code": [
        "int gcd ( )",
        "int len = min ( len , j - i + 1 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        23,
        12
      ],
      "mod_code": [
        "int gcd ( )",
        "int len = min ( len , j - i + 1 ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int ans = gcd ( ans , a [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        12
      ],
      "mod_code": [
        "int gcd ( )",
        "int len = min ( len , j - i + 1 ) ;",
        "int ans = gcd ( ans , a [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int gcd ( )",
        "return y ? gcd ( x ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        23
      ],
      "mod_code": [
        "int gcd ( )",
        "return y ? gcd ( x ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        23,
        12
      ],
      "mod_code": [
        "int gcd ( )",
        "return y ? gcd ( x ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int ans = gcd ( ans , a [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        12
      ],
      "mod_code": [
        "int gcd ( )",
        "return y ? gcd ( x ) ;",
        "int ans = gcd ( ans , a [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        23
      ],
      "mod_code": [
        "int gcd ( )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        23,
        12
      ],
      "mod_code": [
        "int gcd ( )",
        "for ( i = 0 ; i < n ; i ++ )",
        "int ans = gcd ( ans , a [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int gcd ( )",
        "int ans = gcd ( ans , a [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "return y ? gcd ( x , x ) ;",
        "int len = min ( len , j - i + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        2,
        14,
        23
      ],
      "mod_code": [
        "return y ? gcd ( x , x ) ;",
        "int len = min ( len , j - i + 1 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        2,
        14,
        23,
        12
      ],
      "mod_code": [
        "return y ? gcd ( x , x ) ;",
        "int len = min ( len , j - i + 1 ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int ans = gcd ( ans , a [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        2,
        14,
        12
      ],
      "mod_code": [
        "return y ? gcd ( x , x ) ;",
        "int len = min ( len , j - i + 1 ) ;",
        "int ans = gcd ( ans , a [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        2,
        23
      ],
      "mod_code": [
        "return y ? gcd ( x , x ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        2,
        23,
        12
      ],
      "mod_code": [
        "return y ? gcd ( x , x ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int ans = gcd ( ans , a [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "return y ? gcd ( x , x ) ;",
        "int ans = gcd ( ans , a [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "int len = min ( len , j - i + 1 ) ;",
        "return y ? gcd ( x ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        14,
        2,
        23
      ],
      "mod_code": [
        "int len = min ( len , j - i + 1 ) ;",
        "return y ? gcd ( x ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        14,
        2,
        23,
        12
      ],
      "mod_code": [
        "int len = min ( len , j - i + 1 ) ;",
        "return y ? gcd ( x ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int ans = gcd ( ans , a [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        14,
        2,
        12
      ],
      "mod_code": [
        "int len = min ( len , j - i + 1 ) ;",
        "return y ? gcd ( x ) ;",
        "int ans = gcd ( ans , a [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        14,
        23
      ],
      "mod_code": [
        "int len = min ( len , j - i + 1 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 23,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        23,
        12
      ],
      "mod_code": [
        "int len = min ( len , j - i + 1 ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int ans = gcd ( ans , a [ j ] ) ;"
      ],
      "err_line": 23,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        23
      ],
      "mod_code": [
        "return y ? gcd ( x ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        23,
        12
      ],
      "mod_code": [
        "return y ? gcd ( x ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int ans = gcd ( ans , a [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "return y ? gcd ( x ) ;",
        "int ans = gcd ( ans , a [ j ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        23,
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int ans = gcd ( ans , a [ j ] ) ;"
      ],
      "err_line": 23,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}