{
  "meta": {
    "index": 793,
    "hitid": "3GS542CVJVHM269SO64H1YKM5F295S",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "1036A",
    "subid": "48680310"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , k , h = integers",
      "code": "long long int n , k , h ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "Read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set h to k / n",
      "code": "h = ( k / n ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if h is not equal to 0",
      "code": "if ( h != 0 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if k modulo n is equal to 0",
      "code": "if ( k % n == 0 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "print h and a new line",
      "code": "cout << h << endl ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print h + 1 and a new line",
      "code": "cout << h + 1 << endl ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print 1 and a new line",
      "code": "cout << 1 << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "else else",
        "h /= n ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        3,
        7
      ],
      "mod_code": [
        "else else",
        "h /= n ;",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        3,
        7,
        2
      ],
      "mod_code": [
        "else else",
        "h /= n ;",
        "else else",
        "n >> n >> k ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        3,
        7,
        6
      ],
      "mod_code": [
        "else else",
        "h /= n ;",
        "else else",
        "cout << \" h \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        3,
        2
      ],
      "mod_code": [
        "else else",
        "h /= n ;",
        "n >> n >> k ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        3,
        2,
        6
      ],
      "mod_code": [
        "else else",
        "h /= n ;",
        "n >> n >> k ;",
        "cout << \" h \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        3,
        6
      ],
      "mod_code": [
        "else else",
        "h /= n ;",
        "cout << \" h \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "else else",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        7,
        2
      ],
      "mod_code": [
        "else else",
        "else else",
        "n >> n >> k ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        7,
        2,
        6
      ],
      "mod_code": [
        "else else",
        "else else",
        "n >> n >> k ;",
        "cout << \" h \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        7,
        6
      ],
      "mod_code": [
        "else else",
        "else else",
        "cout << \" h \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "else else",
        "n >> n >> k ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        2,
        6
      ],
      "mod_code": [
        "else else",
        "n >> n >> k ;",
        "cout << \" h \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "else else",
        "cout << \" h \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "h /= n ;",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        7,
        2
      ],
      "mod_code": [
        "h /= n ;",
        "else else",
        "n >> n >> k ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        7,
        2,
        6
      ],
      "mod_code": [
        "h /= n ;",
        "else else",
        "n >> n >> k ;",
        "cout << \" h \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        7,
        6
      ],
      "mod_code": [
        "h /= n ;",
        "else else",
        "cout << \" h \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "else else",
        "n >> n >> k ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        2,
        6
      ],
      "mod_code": [
        "else else",
        "n >> n >> k ;",
        "cout << \" h \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "else else",
        "cout << \" h \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}