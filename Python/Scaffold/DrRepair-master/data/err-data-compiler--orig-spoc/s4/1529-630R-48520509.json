{
  "meta": {
    "index": 1529,
    "hitid": "3IHWR4LC7D7Y0PLXQYHXQBTGQVJI8F",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "630R",
    "subid": "48520509"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant int INF = 0x3f3f3f3f",
      "code": "const int INF = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let long long integer mod = 10000000000LL",
      "code": "long long mod = 10000000000LL ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare cheng taking in long long integers a , b , and c and returning long long integer",
      "code": "long long cheng ( long long a , long long b , long long c )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "make long long int ret = 0",
      "code": "long long ret = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while b is truthy",
      "code": "while ( b )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if b & 1 are truthy",
      "code": "if ( b & 1 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set ret to ret + a",
      "code": "ret += a ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if ret is greater than or equal to c , set ret to ret - c",
      "code": "if ( ret >= c ) ret -= c ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set a to a + a",
      "code": "a += a ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if a is greater than or equal to c , set a to a - c",
      "code": "if ( a >= c ) a -= c ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "move bits of b 1 place to right",
      "code": "b >>= 1 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "return ret",
      "code": "return ret ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 16,
      "text": "create long long int n",
      "code": "long long n ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "make long long integer ans = cheng ( n , n , mod )",
      "code": "long long ans = cheng ( n , n , mod ) ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if ans modulo 2 is 0",
      "code": "if ( ans % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print 2",
      "code": "cout << 2 << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print 1",
      "code": "cout << 1 << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "while ( b -- )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 19,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "while ( b -- )",
        "if ( ! b & 1 )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        5,
        22
      ],
      "mod_code": [
        "while ( b -- )",
        "if ( ! b & 1 )",
        "cout << 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        5,
        22,
        17
      ],
      "mod_code": [
        "while ( b -- )",
        "if ( ! b & 1 )",
        "cout << 1 ;",
        "while ( cin >> n )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        5,
        22,
        21
      ],
      "mod_code": [
        "while ( b -- )",
        "if ( ! b & 1 )",
        "cout << 1 ;",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        5,
        22,
        4
      ],
      "mod_code": [
        "while ( b -- )",
        "if ( ! b & 1 )",
        "cout << 1 ;",
        "while ( 1 )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        5,
        17
      ],
      "mod_code": [
        "while ( b -- )",
        "if ( ! b & 1 )",
        "while ( cin >> n )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        5,
        17,
        21
      ],
      "mod_code": [
        "while ( b -- )",
        "if ( ! b & 1 )",
        "while ( cin >> n )",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        5,
        17,
        4
      ],
      "mod_code": [
        "while ( b -- )",
        "if ( ! b & 1 )",
        "while ( cin >> n )",
        "while ( 1 )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        5,
        21
      ],
      "mod_code": [
        "while ( b -- )",
        "if ( ! b & 1 )",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        5,
        21,
        4
      ],
      "mod_code": [
        "while ( b -- )",
        "if ( ! b & 1 )",
        "else else",
        "while ( 1 )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        5,
        4
      ],
      "mod_code": [
        "while ( b -- )",
        "if ( ! b & 1 )",
        "while ( 1 )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        22
      ],
      "mod_code": [
        "while ( b -- )",
        "cout << 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        22,
        17
      ],
      "mod_code": [
        "while ( b -- )",
        "cout << 1 ;",
        "while ( cin >> n )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        22,
        17,
        21
      ],
      "mod_code": [
        "while ( b -- )",
        "cout << 1 ;",
        "while ( cin >> n )",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        22,
        17,
        4
      ],
      "mod_code": [
        "while ( b -- )",
        "cout << 1 ;",
        "while ( cin >> n )",
        "while ( 1 )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        22,
        21
      ],
      "mod_code": [
        "while ( b -- )",
        "cout << 1 ;",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        22,
        21,
        4
      ],
      "mod_code": [
        "while ( b -- )",
        "cout << 1 ;",
        "else else",
        "while ( 1 )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        22,
        4
      ],
      "mod_code": [
        "while ( b -- )",
        "cout << 1 ;",
        "while ( 1 )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "while ( b -- )",
        "while ( cin >> n )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        17,
        21
      ],
      "mod_code": [
        "while ( b -- )",
        "while ( cin >> n )",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        17,
        21,
        4
      ],
      "mod_code": [
        "while ( b -- )",
        "while ( cin >> n )",
        "else else",
        "while ( 1 )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        17,
        4
      ],
      "mod_code": [
        "while ( b -- )",
        "while ( cin >> n )",
        "while ( 1 )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        21
      ],
      "mod_code": [
        "while ( b -- )",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        21,
        4
      ],
      "mod_code": [
        "while ( b -- )",
        "else else",
        "while ( 1 )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "while ( b -- )",
        "while ( 1 )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        22,
        17
      ],
      "mod_code": [
        "if ( ! b & 1 )",
        "cout << 1 ;",
        "while ( cin >> n )"
      ],
      "err_line": 19,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        22,
        17,
        21
      ],
      "mod_code": [
        "if ( ! b & 1 )",
        "cout << 1 ;",
        "while ( cin >> n )",
        "else else"
      ],
      "err_line": 19,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        22,
        17,
        4
      ],
      "mod_code": [
        "if ( ! b & 1 )",
        "cout << 1 ;",
        "while ( cin >> n )",
        "while ( 1 )"
      ],
      "err_line": 19,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        22,
        21
      ],
      "mod_code": [
        "if ( ! b & 1 )",
        "cout << 1 ;",
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        22,
        21,
        4
      ],
      "mod_code": [
        "if ( ! b & 1 )",
        "cout << 1 ;",
        "else else",
        "while ( 1 )"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "if ( ! b & 1 )",
        "while ( cin >> n )"
      ],
      "err_line": 19,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        21
      ],
      "mod_code": [
        "if ( ! b & 1 )",
        "while ( cin >> n )",
        "else else"
      ],
      "err_line": 19,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        21,
        4
      ],
      "mod_code": [
        "if ( ! b & 1 )",
        "while ( cin >> n )",
        "else else",
        "while ( 1 )"
      ],
      "err_line": 19,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        4
      ],
      "mod_code": [
        "if ( ! b & 1 )",
        "while ( cin >> n )",
        "while ( 1 )"
      ],
      "err_line": 19,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        21
      ],
      "mod_code": [
        "if ( ! b & 1 )",
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        21,
        4
      ],
      "mod_code": [
        "if ( ! b & 1 )",
        "else else",
        "while ( 1 )"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22,
        17
      ],
      "mod_code": [
        "cout << 1 ;",
        "while ( cin >> n )"
      ],
      "err_line": 19,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        17,
        21
      ],
      "mod_code": [
        "cout << 1 ;",
        "while ( cin >> n )",
        "else else"
      ],
      "err_line": 19,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        17,
        21,
        4
      ],
      "mod_code": [
        "cout << 1 ;",
        "while ( cin >> n )",
        "else else",
        "while ( 1 )"
      ],
      "err_line": 19,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        17,
        4
      ],
      "mod_code": [
        "cout << 1 ;",
        "while ( cin >> n )",
        "while ( 1 )"
      ],
      "err_line": 19,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        21
      ],
      "mod_code": [
        "cout << 1 ;",
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22,
        21,
        4
      ],
      "mod_code": [
        "cout << 1 ;",
        "else else",
        "while ( 1 )"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17,
        21
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else else"
      ],
      "err_line": 19,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        21,
        4
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else else",
        "while ( 1 )"
      ],
      "err_line": 19,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        4
      ],
      "mod_code": [
        "while ( cin >> n )",
        "while ( 1 )"
      ],
      "err_line": 19,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        4
      ],
      "mod_code": [
        "else else",
        "while ( 1 )"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}