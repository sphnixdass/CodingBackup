{
  "meta": {
    "index": 1655,
    "hitid": "3TRB893CSJ4G4KAJQ5PORZK50YNG70",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "997A",
    "subid": "48410130"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long long int n",
      "code": "long long n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "make long long x",
      "code": "long long x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let long long integer y",
      "code": "long long y ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n , x , and y",
      "code": "cin >> n >> x >> y ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "make char array s of size n",
      "code": "char s [ n ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive , read s [ i ]",
      "code": "for ( long long i = 0 ; i < n ; i ++ ) { cin >> s [ i ] ; }",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create long long min_cost = 100000000000",
      "code": "long long min_cost = 100000000000 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "make long long int block = 0",
      "code": "long long block = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create bool block_reached = true",
      "code": "bool block_reached = true ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to n exclusive",
      "code": "for ( long long i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if s [ i ] is ' 0 ' and block_reached is truthy",
      "code": "if ( s [ i ] == ' 0 ' && block_reached )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment block",
      "code": "block ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "set block_reached to false",
      "code": "block_reached = false ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else if s [ i ] is ' 1 '",
      "code": "else if ( s [ i ] == ' 1 ' )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "set block_reached to true",
      "code": "block_reached = true ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "set min_cost to y * block",
      "code": "min_cost = y * block ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for i = 1 to block , set min_cost to min ( min_cost , y * i + x * ( block - i ) )",
      "code": "for ( long long i = 1 ; i <= block ; i ++ ) { min_cost = min ( min_cost , y * i + x * ( block - i ) ) ; }",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print min_cost",
      "code": "cout << min_cost << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char a [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "bool block_reached = false ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        13,
        10
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "bool block_reached = false ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        13,
        10,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "bool block_reached = false ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char a [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        10,
        14
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "bool block_reached = false ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( s [ i ] == ' l ' )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        13,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "bool block_reached = false ;",
        "char a [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        5,
        14
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "bool block_reached = false ;",
        "char a [ n ] ;",
        "else if ( s [ i ] == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        14
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "bool block_reached = false ;",
        "else if ( s [ i ] == ' l ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        10,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "for ( i = 0 ; i < n ; i ++ )",
        "char a [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        10,
        5,
        14
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "for ( i = 0 ; i < n ; i ++ )",
        "char a [ n ] ;",
        "else if ( s [ i ] == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        10,
        14
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( s [ i ] == ' l ' )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "char a [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5,
        14
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "char a [ n ] ;",
        "else if ( s [ i ] == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "else if ( s [ i ] == ' l ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        10
      ],
      "mod_code": [
        "bool block_reached = false ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        10,
        11
      ],
      "mod_code": [
        "bool block_reached = false ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        10,
        11,
        5
      ],
      "mod_code": [
        "bool block_reached = false ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "char a [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        10,
        11,
        14
      ],
      "mod_code": [
        "bool block_reached = false ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "else if ( s [ i ] == ' l ' )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        10,
        5
      ],
      "mod_code": [
        "bool block_reached = false ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char a [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        10,
        5,
        14
      ],
      "mod_code": [
        "bool block_reached = false ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char a [ n ] ;",
        "else if ( s [ i ] == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        10,
        14
      ],
      "mod_code": [
        "bool block_reached = false ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( s [ i ] == ' l ' )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "bool block_reached = false ;",
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        11,
        5
      ],
      "mod_code": [
        "bool block_reached = false ;",
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "char a [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        11,
        5,
        14
      ],
      "mod_code": [
        "bool block_reached = false ;",
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "char a [ n ] ;",
        "else if ( s [ i ] == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        11,
        14
      ],
      "mod_code": [
        "bool block_reached = false ;",
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "else if ( s [ i ] == ' l ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "bool block_reached = false ;",
        "char a [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        5,
        14
      ],
      "mod_code": [
        "bool block_reached = false ;",
        "char a [ n ] ;",
        "else if ( s [ i ] == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        11,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "char a [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        5,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "char a [ n ] ;",
        "else if ( s [ i ] == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "else if ( s [ i ] == ' l ' )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "char a [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "char a [ n ] ;",
        "else if ( s [ i ] == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( s [ i ] == ' l ' )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "char a [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5,
        14
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "char a [ n ] ;",
        "else if ( s [ i ] == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' && block_reached [ i ] == ' 0 ' )",
        "else if ( s [ i ] == ' l ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "char a [ n ] ;",
        "else if ( s [ i ] == ' l ' )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    }
  ]
}