{
  "meta": {
    "index": 1743,
    "hitid": "3L7SUC0TTUO2EJ6LG92APPUFO6NM08",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "262A",
    "subid": "38590036"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "set integer n , k , i , a to 0 , len , y to 0 , j",
      "code": "int n , k , i , a = 0 , len , y = 0 , j ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create character variable r array of 1000",
      "code": "char str [ 10000 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "loop while i = 0 is less than n",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set len to the string length of str",
      "code": "len = strlen ( str ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for j = 0 to j less than len do",
      "code": "for ( j = 0 ; j < len ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if str [ j ] is ' 4 ' | | str [ j ] then add one to y",
      "code": "if ( str [ j ] == ' 4 ' || str [ j ] == ' 7 ' ) { y ++ ; }",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if y is less than or equal to k then add 1 to a",
      "code": "if ( y <= k ) { a ++ ; }",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set y to 0",
      "code": "y = 0 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "output a",
      "code": "cout << a << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char r [ 1000 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char r [ r ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "len = str . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [10000]’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "while ( i <= 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        8
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "while ( i <= 0 )",
        "if ( str [ j ] == ' 4 ' || str [ j ] == ' 4 ' ) y ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        8,
        11
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "while ( i <= 0 )",
        "if ( str [ j ] == ' 4 ' || str [ j ] == ' 4 ' ) y ++ ;",
        "int y = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        8,
        5
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "while ( i <= 0 )",
        "if ( str [ j ] == ' 4 ' || str [ j ] == ' 4 ' ) y ++ ;",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        8,
        6
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "while ( i <= 0 )",
        "if ( str [ j ] == ' 4 ' || str [ j ] == ' 4 ' ) y ++ ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        11
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "while ( i <= 0 )",
        "int y = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        11,
        5
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "while ( i <= 0 )",
        "int y = 0 ;",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        11,
        6
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "while ( i <= 0 )",
        "int y = 0 ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        5
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "while ( i <= 0 )",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        5,
        6
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "while ( i <= 0 )",
        "gets ( str ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        6
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "while ( i <= 0 )",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "if ( str [ j ] == ' 4 ' || str [ j ] == ' 4 ' ) y ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        11
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "if ( str [ j ] == ' 4 ' || str [ j ] == ' 4 ' ) y ++ ;",
        "int y = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        11,
        5
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "if ( str [ j ] == ' 4 ' || str [ j ] == ' 4 ' ) y ++ ;",
        "int y = 0 ;",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        11,
        6
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "if ( str [ j ] == ' 4 ' || str [ j ] == ' 4 ' ) y ++ ;",
        "int y = 0 ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        5
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "if ( str [ j ] == ' 4 ' || str [ j ] == ' 4 ' ) y ++ ;",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        5,
        6
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "if ( str [ j ] == ' 4 ' || str [ j ] == ' 4 ' ) y ++ ;",
        "gets ( str ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        6
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "if ( str [ j ] == ' 4 ' || str [ j ] == ' 4 ' ) y ++ ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "int y = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        5
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "int y = 0 ;",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        5,
        6
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "int y = 0 ;",
        "gets ( str ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        6
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "int y = 0 ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        6
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "gets ( str ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "char r [ 1000 ] ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        6
      ],
      "mod_code": [
        "while ( i <= 0 )",
        "if ( str [ j ] == ' 4 ' || str [ j ] == ' 4 ' ) y ++ ;",
        "int y = 0 ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [10000]’"
    },
    {
      "mod_line": [
        4,
        8,
        5,
        6
      ],
      "mod_code": [
        "while ( i <= 0 )",
        "if ( str [ j ] == ' 4 ' || str [ j ] == ' 4 ' ) y ++ ;",
        "gets ( str ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [10000]’"
    },
    {
      "mod_line": [
        4,
        8,
        6
      ],
      "mod_code": [
        "while ( i <= 0 )",
        "if ( str [ j ] == ' 4 ' || str [ j ] == ' 4 ' ) y ++ ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [10000]’"
    },
    {
      "mod_line": [
        4,
        11,
        5,
        6
      ],
      "mod_code": [
        "while ( i <= 0 )",
        "int y = 0 ;",
        "gets ( str ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [10000]’"
    },
    {
      "mod_line": [
        4,
        11,
        6
      ],
      "mod_code": [
        "while ( i <= 0 )",
        "int y = 0 ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [10000]’"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "while ( i <= 0 )",
        "gets ( str ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [10000]’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "while ( i <= 0 )",
        "len = str . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [10000]’"
    },
    {
      "mod_line": [
        8,
        11,
        5,
        6
      ],
      "mod_code": [
        "if ( str [ j ] == ' 4 ' || str [ j ] == ' 4 ' ) y ++ ;",
        "int y = 0 ;",
        "gets ( str ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [10000]’"
    },
    {
      "mod_line": [
        8,
        11,
        6
      ],
      "mod_code": [
        "if ( str [ j ] == ' 4 ' || str [ j ] == ' 4 ' ) y ++ ;",
        "int y = 0 ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [10000]’"
    },
    {
      "mod_line": [
        8,
        5,
        6
      ],
      "mod_code": [
        "if ( str [ j ] == ' 4 ' || str [ j ] == ' 4 ' ) y ++ ;",
        "gets ( str ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [10000]’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "if ( str [ j ] == ' 4 ' || str [ j ] == ' 4 ' ) y ++ ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [10000]’"
    },
    {
      "mod_line": [
        11,
        5,
        6
      ],
      "mod_code": [
        "int y = 0 ;",
        "gets ( str ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [10000]’"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "int y = 0 ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [10000]’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "gets ( str ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [10000]’"
    }
  ]
}