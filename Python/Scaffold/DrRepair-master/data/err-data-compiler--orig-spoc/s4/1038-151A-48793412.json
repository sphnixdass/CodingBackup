{
  "meta": {
    "index": 1038,
    "hitid": "3421H3BM9ABU95ODD88B283RNGP9J6",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "151A",
    "subid": "48793412"
  },
  "lines": [
    {
      "line": 0,
      "text": "create int n , k , l , c , d , nl , np , p , ans",
      "code": "int n , k , l , c , d , nl , np , p , ans ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n , k , l , c , d , p , nl , np",
      "code": "cin >> n >> k >> l >> c >> d >> p >> nl >> np ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set l to k * l",
      "code": "l = k * l ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "assign l / nl to l",
      "code": "l = l / ( nl ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set c = c * d",
      "code": "c = c * d ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "assign p / np to p",
      "code": "p = p / np ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set ans to min of l and c",
      "code": "ans = min ( l , c ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "assign min of ans and p to ans",
      "code": "ans = min ( ans , p ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "ans = ans / n",
      "code": "ans /= n ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , k , l , c , d , nl , np , np , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        7,
        2,
        8,
        0
      ],
      "mod_code": [
        "ans = __gcd ( l , c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int ans = min ( ans , p ) ;",
        "int n , k , l , c , d , nl , np , np , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        7,
        2,
        10,
        0
      ],
      "mod_code": [
        "ans = __gcd ( l , c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "cout << ans ;",
        "int n , k , l , c , d , nl , np , np , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        7,
        2,
        0
      ],
      "mod_code": [
        "ans = __gcd ( l , c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , nl , np , np , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        7,
        2,
        0,
        4
      ],
      "mod_code": [
        "ans = __gcd ( l , c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , nl , np , np , ans ;",
        "const int l = l / nl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        0
      ],
      "mod_code": [
        "ans = __gcd ( l , c ) ;",
        "int ans = min ( ans , p ) ;",
        "cout << ans ;",
        "int n , k , l , c , d , nl , np , np , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        7,
        8,
        0
      ],
      "mod_code": [
        "ans = __gcd ( l , c ) ;",
        "int ans = min ( ans , p ) ;",
        "int n , k , l , c , d , nl , np , np , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        7,
        8,
        0,
        4
      ],
      "mod_code": [
        "ans = __gcd ( l , c ) ;",
        "int ans = min ( ans , p ) ;",
        "int n , k , l , c , d , nl , np , np , ans ;",
        "const int l = l / nl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        7,
        10,
        0
      ],
      "mod_code": [
        "ans = __gcd ( l , c ) ;",
        "cout << ans ;",
        "int n , k , l , c , d , nl , np , np , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        7,
        10,
        0,
        4
      ],
      "mod_code": [
        "ans = __gcd ( l , c ) ;",
        "cout << ans ;",
        "int n , k , l , c , d , nl , np , np , ans ;",
        "const int l = l / nl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "ans = __gcd ( l , c ) ;",
        "int n , k , l , c , d , nl , np , np , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        7,
        0,
        4
      ],
      "mod_code": [
        "ans = __gcd ( l , c ) ;",
        "int n , k , l , c , d , nl , np , np , ans ;",
        "const int l = l / nl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        2,
        8,
        10,
        0
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int ans = min ( ans , p ) ;",
        "cout << ans ;",
        "int n , k , l , c , d , nl , np , np , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        2,
        8,
        0
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int ans = min ( ans , p ) ;",
        "int n , k , l , c , d , nl , np , np , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        2,
        8,
        0,
        4
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int ans = min ( ans , p ) ;",
        "int n , k , l , c , d , nl , np , np , ans ;",
        "const int l = l / nl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        2,
        10,
        0
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "cout << ans ;",
        "int n , k , l , c , d , nl , np , np , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        2,
        10,
        0,
        4
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "cout << ans ;",
        "int n , k , l , c , d , nl , np , np , ans ;",
        "const int l = l / nl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        2,
        0
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , nl , np , np , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        2,
        0,
        4
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , nl , np , np , ans ;",
        "const int l = l / nl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        8,
        10,
        0
      ],
      "mod_code": [
        "int ans = min ( ans , p ) ;",
        "cout << ans ;",
        "int n , k , l , c , d , nl , np , np , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        8,
        10,
        0,
        4
      ],
      "mod_code": [
        "int ans = min ( ans , p ) ;",
        "cout << ans ;",
        "int n , k , l , c , d , nl , np , np , ans ;",
        "const int l = l / nl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "int ans = min ( ans , p ) ;",
        "int n , k , l , c , d , nl , np , np , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        8,
        0,
        4
      ],
      "mod_code": [
        "int ans = min ( ans , p ) ;",
        "int n , k , l , c , d , nl , np , np , ans ;",
        "const int l = l / nl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "cout << ans ;",
        "int n , k , l , c , d , nl , np , np , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        10,
        0,
        4
      ],
      "mod_code": [
        "cout << ans ;",
        "int n , k , l , c , d , nl , np , np , ans ;",
        "const int l = l / nl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "int n , k , l , c , d , nl , np , np , ans ;",
        "const int l = l / nl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int np’"
    }
  ]
}