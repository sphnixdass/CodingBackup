{
  "meta": {
    "index": 1990,
    "hitid": "32TMVRKDGNS4SIMI59FTWAJXLDI84Q",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "389A",
    "subid": "41951945"
  },
  "lines": [
    {
      "line": 0,
      "text": "a , b = int array of size 101 each",
      "code": "int a [ 101 ] , b [ 101 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in function gcd taking int a , int b and returning int",
      "code": "int gcd ( int a , int b )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "return a if b is 0 else return gcd of b , a mod b",
      "code": "return b == 0 ? a : gcd ( b , a % b ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "n , i = long long int",
      "code": "long long int n , i ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read a [ 0 ]",
      "code": "cin >> a [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set b [ 0 ] to a [ 0 ]",
      "code": "b [ 0 ] = a [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 1 to n",
      "code": "for ( i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set b [ i ] to gcd of a [ i ] , b [ i - 1 ]",
      "code": "b [ i ] = gcd ( a [ i ] , b [ i - 1 ] ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print b [ n - 1 ] * n",
      "code": "cout << b [ n - 1 ] * n << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "char b [ 0 ] = a [ 0 ] ;"
      ],
      "err_line": 8,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "a >> a [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘int [101]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        10,
        6
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "a >> a [ i ] ;",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        10,
        6,
        1
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "a >> a [ i ] ;",
        "while ( cin >> n )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        10,
        6,
        8
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "a >> a [ i ] ;",
        "while ( cin >> n )",
        "char b [ 0 ] = a [ 0 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        10,
        6,
        11
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "a >> a [ i ] ;",
        "while ( cin >> n )",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        10,
        1
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "a >> a [ i ] ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        10,
        1,
        8
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "a >> a [ i ] ;",
        "int gcd ( int a , int b ) ;",
        "char b [ 0 ] = a [ 0 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        10,
        1,
        11
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "a >> a [ i ] ;",
        "int gcd ( int a , int b ) ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        10,
        8
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "a >> a [ i ] ;",
        "char b [ 0 ] = a [ 0 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        10,
        8,
        11
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "a >> a [ i ] ;",
        "char b [ 0 ] = a [ 0 ] ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        10,
        11
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "a >> a [ i ] ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        6,
        1
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "while ( cin >> n )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        6,
        1,
        8
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "while ( cin >> n )",
        "int gcd ( int a , int b ) ;",
        "char b [ 0 ] = a [ 0 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        6,
        1,
        11
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "while ( cin >> n )",
        "int gcd ( int a , int b ) ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        6,
        8
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "while ( cin >> n )",
        "char b [ 0 ] = a [ 0 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        6,
        8,
        11
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "while ( cin >> n )",
        "char b [ 0 ] = a [ 0 ] ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        6,
        11
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "while ( cin >> n )",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        1,
        8
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "int gcd ( int a , int b ) ;",
        "char b [ 0 ] = a [ 0 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        1,
        8,
        11
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "int gcd ( int a , int b ) ;",
        "char b [ 0 ] = a [ 0 ] ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        1,
        11
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "int gcd ( int a , int b ) ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "char b [ 0 ] = a [ 0 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        8,
        11
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "char b [ 0 ] = a [ 0 ] ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "int a [ 101 ] , a [ 101 ] ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int a [101]’"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "while ( cin >> n )"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘int [101]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        10,
        6,
        1
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "while ( cin >> n )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        6,
        1,
        8
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "while ( cin >> n )",
        "int gcd ( int a , int b ) ;",
        "char b [ 0 ] = a [ 0 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        6,
        1,
        11
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "while ( cin >> n )",
        "int gcd ( int a , int b ) ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        6,
        8
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "while ( cin >> n )",
        "char b [ 0 ] = a [ 0 ] ;"
      ],
      "err_line": 8,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        10,
        6,
        8,
        11
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "while ( cin >> n )",
        "char b [ 0 ] = a [ 0 ] ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 8,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        10,
        6,
        11
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "while ( cin >> n )",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘int [101]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        1,
        8
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "int gcd ( int a , int b ) ;",
        "char b [ 0 ] = a [ 0 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        1,
        8,
        11
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "int gcd ( int a , int b ) ;",
        "char b [ 0 ] = a [ 0 ] ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        1,
        11
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "int gcd ( int a , int b ) ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "char b [ 0 ] = a [ 0 ] ;"
      ],
      "err_line": 8,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        10,
        8,
        11
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "char b [ 0 ] = a [ 0 ] ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 8,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘int [101]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "while ( cin >> n )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        1,
        8
      ],
      "mod_code": [
        "while ( cin >> n )",
        "int gcd ( int a , int b ) ;",
        "char b [ 0 ] = a [ 0 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        1,
        8,
        11
      ],
      "mod_code": [
        "while ( cin >> n )",
        "int gcd ( int a , int b ) ;",
        "char b [ 0 ] = a [ 0 ] ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        1,
        11
      ],
      "mod_code": [
        "while ( cin >> n )",
        "int gcd ( int a , int b ) ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "while ( cin >> n )",
        "char b [ 0 ] = a [ 0 ] ;"
      ],
      "err_line": 8,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        6,
        8,
        11
      ],
      "mod_code": [
        "while ( cin >> n )",
        "char b [ 0 ] = a [ 0 ] ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 8,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "while ( cin >> n )",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;",
        "char b [ 0 ] = a [ 0 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        11
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;",
        "char b [ 0 ] = a [ 0 ] ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "char b [ 0 ] = a [ 0 ] ;",
        "b [ i ] = gcd ( a [ i ] ) , b [ i - 1 ] ;"
      ],
      "err_line": 8,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    }
  ]
}