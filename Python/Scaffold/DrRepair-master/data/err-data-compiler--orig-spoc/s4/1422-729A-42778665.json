{
  "meta": {
    "index": 1422,
    "hitid": "36AZSFEYZ4UMOT34SH0QW29B5G6BVZ",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "729A",
    "subid": "42778665"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if s starting at s [ i ] contains \" ogo \"",
      "code": "if ( s [ i ] == ' o ' && s [ i + 1 ] == ' g ' && s [ i + 2 ] == ' o ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print \" * * * \"",
      "code": "cout << \" *** \" ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "add 3 to i",
      "code": "i = i + 3 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "while s starting at s [ i ] contains \" go \" add 2 to i",
      "code": "while ( s [ i ] == ' g ' && s [ i + 1 ] == ' o ' ) { i = i + 2 ; }",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print s [ i ]",
      "code": "cout << s [ i ] ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "increment i",
      "code": "i = i + 1 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( s . at ( s [ i ] ) == \" ogo \" )"
      ],
      "err_line": 6,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;"
      ],
      "err_line": 9,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( s . at ( s [ i ] ) != \" ogo \" )"
      ],
      "err_line": 6,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "while ( s . find ( s [ i ] ) != \" go \" ) i += 2 ;"
      ],
      "err_line": 9,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( s . at ( s [ i ] ) == \" ogo \" )"
      ],
      "err_line": 6,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "cout << \" -1 \" << endl ;",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;"
      ],
      "err_line": 6,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "cout << \" -1 \" << endl ;",
        "cout << s [ i ] << endl ;"
      ],
      "err_line": 6,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "cout << \" -1 \" << endl ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;"
      ],
      "err_line": 6,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;",
        "cout << s [ i ] << endl ;"
      ],
      "err_line": 6,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        6,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "cout << s [ i ] << endl ;"
      ],
      "err_line": 6,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "cout << s [ i ] << endl ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        6,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" -1 \" << endl ;",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;"
      ],
      "err_line": 9,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" -1 \" << endl ;",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;",
        "cout << s [ i ] << endl ;"
      ],
      "err_line": 9,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" -1 \" << endl ;",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        7,
        11,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" -1 \" << endl ;",
        "cout << s [ i ] << endl ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        7,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << \" -1 \" << endl ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;"
      ],
      "err_line": 9,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;",
        "cout << s [ i ] << endl ;"
      ],
      "err_line": 9,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;",
        "cout << s [ i ] << endl ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        9,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        11,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cout << s [ i ] << endl ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        9
      ],
      "mod_code": [
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "cout << \" -1 \" << endl ;",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;"
      ],
      "err_line": 6,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        11
      ],
      "mod_code": [
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "cout << \" -1 \" << endl ;",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;",
        "cout << s [ i ] << endl ;"
      ],
      "err_line": 6,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        4
      ],
      "mod_code": [
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "cout << \" -1 \" << endl ;",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        7,
        11
      ],
      "mod_code": [
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "cout << \" -1 \" << endl ;",
        "cout << s [ i ] << endl ;"
      ],
      "err_line": 6,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        4
      ],
      "mod_code": [
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "cout << \" -1 \" << endl ;",
        "cout << s [ i ] << endl ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        7,
        4
      ],
      "mod_code": [
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "cout << \" -1 \" << endl ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;"
      ],
      "err_line": 6,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9,
        11
      ],
      "mod_code": [
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;",
        "cout << s [ i ] << endl ;"
      ],
      "err_line": 6,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        4
      ],
      "mod_code": [
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;",
        "cout << s [ i ] << endl ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        9,
        4
      ],
      "mod_code": [
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "cout << s [ i ] << endl ;"
      ],
      "err_line": 6,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        11,
        4
      ],
      "mod_code": [
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "cout << s [ i ] << endl ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "if ( s . at ( s [ i ] ) == \" ogo \" )",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;"
      ],
      "err_line": 9,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        9,
        11
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;",
        "cout << s [ i ] << endl ;"
      ],
      "err_line": 9,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        4
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;",
        "cout << s [ i ] << endl ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        9,
        4
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        11,
        4
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "cout << s [ i ] << endl ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;",
        "cout << s [ i ] << endl ;"
      ],
      "err_line": 9,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        11,
        4
      ],
      "mod_code": [
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;",
        "cout << s [ i ] << endl ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "while ( s . at ( s [ i ] ) != \" go \" ) i += 2 ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "cout << s [ i ] << endl ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    }
  ]
}