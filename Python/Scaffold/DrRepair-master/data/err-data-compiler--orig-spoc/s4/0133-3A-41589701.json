{
  "meta": {
    "index": 133,
    "hitid": "3K3G488TR22SU5QE58F3NTABEDMQ56",
    "workerid": "AIWEXPJAU66D9",
    "probid": "3A",
    "subid": "41589701"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare strings called current and destination",
      "code": "string current , destination ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read current and destination from the input",
      "code": "cin >> current >> destination ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set integer udmoves to current [ 1 ] - destination [ 1 ]",
      "code": "int udmoves = current [ 1 ] - destination [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set integer rlmoves to current [ 0 ] - destination [ 0 ]",
      "code": "int rlmoves = current [ 0 ] - destination [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print max of abs ( udmoves ) and abs ( rlmoves ) and \" \\ n \"",
      "code": "cout << max ( abs ( udmoves ) , abs ( rlmoves ) ) << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while udmoves ! = 0 | | rlmoves ! = 0",
      "code": "while ( udmoves != 0 || rlmoves != 0 )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if udmoves > 0 & & rlmoves < 0",
      "code": "if ( udmoves > 0 && rlmoves < 0 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print \" RD \\ n \"",
      "code": "cout << \" RD\\n \" ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "decrement udmoves",
      "code": "udmoves -- ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increase rlmoves by one",
      "code": "rlmoves ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else if udmoves < 0 and rlmoves is greater than 0",
      "code": "else if ( udmoves < 0 && rlmoves > 0 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print \" LU \\ n \"",
      "code": "cout << \" LU\\n \" ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "increment udmoves",
      "code": "udmoves ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "decrease rlmoves",
      "code": "rlmoves -- ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else if udmoves < 0 & & rlmoves < 0",
      "code": "else if ( udmoves < 0 && rlmoves < 0 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print \" RU \\ n \"",
      "code": "cout << \" RU\\n \" ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "increase udmoves by one",
      "code": "udmoves ++ ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "increase rlmoves by one",
      "code": "rlmoves ++ ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "else if udmoves > 0 and rlmoves > 0",
      "code": "else if ( udmoves > 0 && rlmoves > 0 )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print \" LD \\ n \"",
      "code": "cout << \" LD\\n \" ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "decrement udmoves",
      "code": "udmoves -- ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "decrease rlmoves by one",
      "code": "rlmoves -- ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "else if udmoves > 0 and rlmoves = 0",
      "code": "else if ( udmoves > 0 && rlmoves == 0 )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "print \" D \\ n \"",
      "code": "cout << \" D\\n \" ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "decrease udmoves by one",
      "code": "udmoves -- ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "else if udmoves < 0 and rlmoves = 0",
      "code": "else if ( udmoves < 0 && rlmoves == 0 )",
      "indent": 2
    },
    {
      "line": 27,
      "text": "print \" U \\ n \"",
      "code": "cout << \" U\\n \" ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "increment udmoves",
      "code": "udmoves ++ ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "else if udmoves = 0 and rlmoves > 0",
      "code": "else if ( udmoves == 0 && rlmoves > 0 )",
      "indent": 2
    },
    {
      "line": 30,
      "text": "print \" L \\ n \"",
      "code": "cout << \" L\\n \" ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "decrease rlmoves by one",
      "code": "rlmoves -- ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "else if udmoves = 0 and rlmoves < 0",
      "code": "else if ( udmoves == 0 && rlmoves < 0 )",
      "indent": 2
    },
    {
      "line": 33,
      "text": "print \" R \\ n \"",
      "code": "cout << \" R\\n \" ;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "increase rlmoves by one",
      "code": "rlmoves ++ ;",
      "indent": 3
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char current , destination ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> current >> destination )"
      ],
      "err_line": 5,
      "err_msg": "‘udmoves’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "udmoves = current [ 1 ] - destination [ 1 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘udmoves’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "rlmoves = current [ 0 ] - destination [ 0 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘rlmoves’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cout << max ( abs ( udmoves ) ) << abs ( rlmoves ) << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else if ( udmoves < l && rlmoves < 0 )"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        27,
        15
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "else if ( udmoves < l && rlmoves < 0 )"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        33,
        15
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" L\\n \" ;",
        "else if ( udmoves < l && rlmoves < 0 )"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        15
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "else if ( udmoves < l && rlmoves < 0 )"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        27
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "else if ( udmoves < l && rlmoves < 0 )",
        "cout << \" L\\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        27,
        33,
        15
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" L\\n \" ;",
        "else if ( udmoves < l && rlmoves < 0 )"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        27,
        15
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "else if ( udmoves < l && rlmoves < 0 )"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        33,
        15
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "cout << \" L\\n \" ;",
        "else if ( udmoves < l && rlmoves < 0 )"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        33,
        15,
        27
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "cout << \" L\\n \" ;",
        "else if ( udmoves < l && rlmoves < 0 )",
        "cout << \" L\\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "else if ( udmoves < l && rlmoves < 0 )"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        27
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "else if ( udmoves < l && rlmoves < 0 )",
        "cout << \" L\\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        27,
        33,
        15
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" L\\n \" ;",
        "else if ( udmoves < l && rlmoves < 0 )"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        27,
        15
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "else if ( udmoves < l && rlmoves < 0 )"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        33,
        15
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "cout << \" L\\n \" ;",
        "else if ( udmoves < l && rlmoves < 0 )"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        33,
        15,
        27
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "cout << \" L\\n \" ;",
        "else if ( udmoves < l && rlmoves < 0 )",
        "cout << \" L\\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "else if ( udmoves < l && rlmoves < 0 )"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        15,
        27
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "else if ( udmoves < l && rlmoves < 0 )",
        "cout << \" L\\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        33,
        15
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "cout << \" L\\n \" ;",
        "else if ( udmoves < l && rlmoves < 0 )"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        15
      ],
      "mod_code": [
        "cout << \" R\\n \" ;",
        "else if ( udmoves < l && rlmoves < 0 )"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        15
      ],
      "mod_code": [
        "cout << \" L\\n \" ;",
        "else if ( udmoves < l && rlmoves < 0 )"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        15,
        27
      ],
      "mod_code": [
        "cout << \" L\\n \" ;",
        "else if ( udmoves < l && rlmoves < 0 )",
        "cout << \" L\\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        27
      ],
      "mod_code": [
        "else if ( udmoves < l && rlmoves < 0 )",
        "cout << \" L\\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "‘l’ was not declared in this scope"
    }
  ]
}