{
  "meta": {
    "index": 2035,
    "hitid": "3HYV4299H0QMKKJBUFR65WVOXFIE8X",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "220A",
    "subid": "48506539"
  },
  "lines": [
    {
      "line": 0,
      "text": "adj [ ] = boolean of size 1005",
      "code": "bool adj [ 1005 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "A = integer vector with size n , B = integer vector with size n",
      "code": "vector < int > A ( n ) , B ( n ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i - 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read A [ i ]",
      "code": "cin >> A [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "B [ i ] = A [ i ]",
      "code": "B [ i ] = A [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "sort vector B in ascending order",
      "code": "sort ( B . begin ( ) , B . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "diff = integer vector",
      "code": "vector < int > diff ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if A [ i ] is not B [ i ] , then add a new element to vector diff with i being the new element",
      "code": "if ( A [ i ] != B [ i ] ) diff . push_back ( i ) ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "rem = integer - size of diff",
      "code": "int rem = diff . size ( ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if rem is 0",
      "code": "if ( rem == 0 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print YES",
      "code": "cout << \" YES\\n \" ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else if rem is 2",
      "code": "else if ( rem == 2 )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "can = boolean = A [ diff [ 0 ] ] is B [ diff [ 1 ] ] and B [ diff [ 0 ] ] is A [ diff [ 1 ] ]",
      "code": "bool can = A [ diff [ 0 ] ] == B [ diff [ 1 ] ] && B [ diff [ 0 ] ] == A [ diff [ 1 ] ] ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print YES if can is true else print NO",
      "code": "cout << ( can ? \" YES\\n \" : \" NO\\n \" ) ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print NO",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "int rem = int - diff . size ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;"
      ],
      "err_line": 18,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 6,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "vector < int > A ( n , B [ n ] ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "{ A [ i ] ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "char B [ i ] = A [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff . push ( i ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "int rem = int - diff ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "bool can = A [ diff [ 0 ] ] == B [ diff ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "int rem = int - diff . size ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        14,
        18
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "int rem = int - diff . size ( ) ;",
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        14,
        18,
        19
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "int rem = int - diff . size ( ) ;",
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        14,
        18,
        20
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "int rem = int - diff . size ( ) ;",
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "else ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        14,
        18,
        5
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "int rem = int - diff . size ( ) ;",
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        19
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "int rem = int - diff . size ( ) ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        14,
        19,
        20
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "int rem = int - diff . size ( ) ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;",
        "else ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        14,
        19,
        5
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "int rem = int - diff . size ( ) ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        20
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "int rem = int - diff . size ( ) ;",
        "else ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        14,
        20,
        5
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "int rem = int - diff . size ( ) ;",
        "else ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        5
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "int rem = int - diff . size ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        18
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        18,
        19
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        20
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;",
        "else ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        5
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        18,
        20
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "else ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        18,
        20,
        5
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "else ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        18,
        5
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        19
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        19,
        20
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;",
        "else ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        19,
        20,
        5
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;",
        "else ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        19,
        5
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        20
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "else ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        20,
        5
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "else ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "if ( A [ i ] != B [ i ] ) diff += diff ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18
      ],
      "mod_code": [
        "int rem = int - diff . size ( ) ;",
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        14,
        18,
        19
      ],
      "mod_code": [
        "int rem = int - diff . size ( ) ;",
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        14,
        18,
        19,
        20
      ],
      "mod_code": [
        "int rem = int - diff . size ( ) ;",
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;",
        "else ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        14,
        18,
        19,
        5
      ],
      "mod_code": [
        "int rem = int - diff . size ( ) ;",
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        20
      ],
      "mod_code": [
        "int rem = int - diff . size ( ) ;",
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "else ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        14,
        18,
        20,
        5
      ],
      "mod_code": [
        "int rem = int - diff . size ( ) ;",
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "else ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        5
      ],
      "mod_code": [
        "int rem = int - diff . size ( ) ;",
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "int rem = int - diff . size ( ) ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        14,
        19,
        20
      ],
      "mod_code": [
        "int rem = int - diff . size ( ) ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;",
        "else ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        14,
        19,
        20,
        5
      ],
      "mod_code": [
        "int rem = int - diff . size ( ) ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;",
        "else ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        5
      ],
      "mod_code": [
        "int rem = int - diff . size ( ) ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20
      ],
      "mod_code": [
        "int rem = int - diff . size ( ) ;",
        "else ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        14,
        20,
        5
      ],
      "mod_code": [
        "int rem = int - diff . size ( ) ;",
        "else ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        5
      ],
      "mod_code": [
        "int rem = int - diff . size ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19
      ],
      "mod_code": [
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;"
      ],
      "err_line": 18,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        18,
        19,
        20
      ],
      "mod_code": [
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;",
        "else ;"
      ],
      "err_line": 18,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        18,
        19,
        20,
        5
      ],
      "mod_code": [
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;",
        "else ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        5
      ],
      "mod_code": [
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20
      ],
      "mod_code": [
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "else ;"
      ],
      "err_line": 18,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        18,
        20,
        5
      ],
      "mod_code": [
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "else ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        5
      ],
      "mod_code": [
        "bool can [ diff [ 0 ] ] = A [ diff [ 1 ] ] = B [ diff [ 1 ] ] = A [ diff [ 1 ] ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        5
      ],
      "mod_code": [
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;",
        "else ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        5
      ],
      "mod_code": [
        "cout << ( can ? \" YES\\n \" : \" NO \" ) << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        5
      ],
      "mod_code": [
        "else ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}