{
  "meta": {
    "index": 921,
    "hitid": "301KG0KX9CFNIF8O4ZQBG8FY4IB2H2",
    "workerid": "AIWEXPJAU66D9",
    "probid": "275A",
    "subid": "35452407"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare 2d integer array arr with size 3 by 3",
      "code": "int arr [ 3 ] [ 3 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare 2d char array out with size 3 by 3",
      "code": "char out [ 3 ] [ 3 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "for i from 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for j from 0 to 3 exclusive , read arr [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < 3 ; j ++ ) { cin >> arr [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i from 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j from 0 to 3 exclusive",
      "code": "for ( int j = 0 ; j < 3 ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "create integer ans = arr [ i ] [ j ]",
      "code": "int ans = arr [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if i - 1 > = 0 , add arr [ i - 1 ] [ j ] to ans",
      "code": "if ( i - 1 >= 0 ) ans += arr [ i - 1 ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if i + 1 < = 2 , add arr [ i + 1 ] [ j ] to ans",
      "code": "if ( i + 1 <= 2 ) ans += arr [ i + 1 ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if j - 1 > = 0 , add arr [ i ] [ j - 1 ] to ans",
      "code": "if ( j - 1 >= 0 ) ans += arr [ i ] [ j - 1 ] ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if j + 1 < = 2 , add arr [ i ] [ j + 1 ] to ans",
      "code": "if ( j + 1 <= 2 ) ans += arr [ i ] [ j + 1 ] ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if ans is even",
      "code": "if ( ans % 2 == 0 )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "change out [ i ] [ j ] to ' 1 '",
      "code": "out [ i ] [ j ] = ' 1 ' ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 16,
      "text": "change out [ i ] [ j ] to ' 0 '",
      "code": "out [ i ] [ j ] = ' 0 ' ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for j = 0 to 3 exclusive , print out [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < 3 ; j ++ ) { cout << out [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char out [ 3 ] [ 3 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        19
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        19,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "out [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        19,
        14,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "out [ i ] [ j ] = ' \\0 ' ;",
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        19,
        14,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "out [ i ] [ j ] = ' \\0 ' ;",
        "char out [ 3 ] [ 3 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        19,
        14,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "out [ i ] [ j ] = ' \\0 ' ;",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        19,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        19,
        7,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "char out [ 3 ] [ 3 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        19,
        7,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        19,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "char out [ 3 ] [ 3 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        19,
        1,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "char out [ 3 ] [ 3 3 ] ;",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        19,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "out [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        14,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "out [ i ] [ j ] = ' \\0 ' ;",
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        14,
        7,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "out [ i ] [ j ] = ' \\0 ' ;",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "char out [ 3 ] [ 3 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        7,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "out [ i ] [ j ] = ' \\0 ' ;",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        14,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "out [ i ] [ j ] = ' \\0 ' ;",
        "char out [ 3 ] [ 3 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        1,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "out [ i ] [ j ] = ' \\0 ' ;",
        "char out [ 3 ] [ 3 3 ] ;",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        14,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "out [ i ] [ j ] = ' \\0 ' ;",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "char out [ 3 ] [ 3 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        7,
        1,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "char out [ 3 ] [ 3 3 ] ;",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        7,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "char out [ 3 ] [ 3 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        1,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "char out [ 3 ] [ 3 3 ] ;",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "out [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 19,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        14,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "out [ i ] [ j ] = ' \\0 ' ;",
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        14,
        7,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "out [ i ] [ j ] = ' \\0 ' ;",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "char out [ 3 ] [ 3 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        19,
        14,
        7,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "out [ i ] [ j ] = ' \\0 ' ;",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        14,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "out [ i ] [ j ] = ' \\0 ' ;",
        "char out [ 3 ] [ 3 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        19,
        14,
        1,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "out [ i ] [ j ] = ' \\0 ' ;",
        "char out [ 3 ] [ 3 3 ] ;",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        19,
        14,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "out [ i ] [ j ] = ' \\0 ' ;",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        7,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "char out [ 3 ] [ 3 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        19,
        7,
        1,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "char out [ 3 ] [ 3 3 ] ;",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        19,
        7,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "char out [ 3 ] [ 3 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        19,
        1,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "char out [ 3 ] [ 3 3 ] ;",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        19,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "out [ i ] [ j ] = ' \\0 ' ;",
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        7,
        1
      ],
      "mod_code": [
        "out [ i ] [ j ] = ' \\0 ' ;",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "char out [ 3 ] [ 3 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        7,
        1,
        8
      ],
      "mod_code": [
        "out [ i ] [ j ] = ' \\0 ' ;",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "char out [ 3 ] [ 3 3 ] ;",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        7,
        8
      ],
      "mod_code": [
        "out [ i ] [ j ] = ' \\0 ' ;",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "out [ i ] [ j ] = ' \\0 ' ;",
        "char out [ 3 ] [ 3 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        1,
        8
      ],
      "mod_code": [
        "out [ i ] [ j ] = ' \\0 ' ;",
        "char out [ 3 ] [ 3 3 ] ;",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        8
      ],
      "mod_code": [
        "out [ i ] [ j ] = ' \\0 ' ;",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )",
        "char out [ 3 ] [ 3 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        7,
        1,
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )",
        "char out [ 3 ] [ 3 3 ] ;",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "char out [ 3 ] [ 3 3 ] ;",
        "ans = arr [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    }
  ]
}