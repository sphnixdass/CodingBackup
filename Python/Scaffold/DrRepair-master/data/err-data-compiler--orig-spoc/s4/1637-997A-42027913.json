{
  "meta": {
    "index": 1637,
    "hitid": "341YLJU21ITNEAJ8AH8WGKGD4VTI2E",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "997A",
    "subid": "42027913"
  },
  "lines": [
    {
      "line": 0,
      "text": "s = array of 300005 char",
      "code": "char s [ 300005 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n , x , y = int",
      "code": "int n , x , y ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , x , y",
      "code": "cin >> n >> x >> y ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "p = 0",
      "code": "int p = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s [ i ] is ' 0 ' increment p",
      "code": "if ( s [ i ] == ' 0 ' ) p ++ ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if p is 0",
      "code": "if ( p == 0 )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print \" 0 \"",
      "code": "cout << \" 0 \" << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "ans = 0",
      "code": "long long ans = 0 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if x > = y",
      "code": "if ( x >= y )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if s [ i - 1 ] is ' 0 ' and s [ i ] is ' 1 ' add y to ans",
      "code": "if ( s [ i - 1 ] == ' 0 ' && s [ i ] == ' 1 ' ) ans += y ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if s [ n - 1 ] is ' 0 ' add y to ans",
      "code": "if ( s [ n - 1 ] == ' 0 ' ) ans += y ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if s [ 0 ] is ' 0 '",
      "code": "if ( s [ 0 ] == ' 0 ' )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "p = 1",
      "code": "p = 1 ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 24,
      "text": "p = 0",
      "code": "p = 0 ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "for i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "if s [ i ] is ' 0 '",
      "code": "if ( s [ i ] == ' 0 ' )",
      "indent": 3
    },
    {
      "line": 27,
      "text": "increment p",
      "code": "p ++ ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "if p > 1 and s [ i - 1 ] is ' 1 ' add x to ans",
      "code": "if ( p > 1 && s [ i - 1 ] == ' 1 ' ) ans += x ;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 30,
      "text": "add y to ans",
      "code": "ans += y ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "p = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘p’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [300005]’ and ‘char [300005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "ans = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        23
      ],
      "mod_code": [
        "p = 0 ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "‘p’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        23,
        26
      ],
      "mod_code": [
        "p = 0 ;",
        "else else",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 5,
      "err_msg": "‘p’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        23,
        26,
        4
      ],
      "mod_code": [
        "p = 0 ;",
        "else else",
        "if ( s [ i ] == ' l ' )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [300005]’ and ‘char [300005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        23,
        26,
        21
      ],
      "mod_code": [
        "p = 0 ;",
        "else else",
        "if ( s [ i ] == ' l ' )",
        "if ( s [ 0 ] == ' l ' )"
      ],
      "err_line": 5,
      "err_msg": "‘p’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        23,
        26,
        2
      ],
      "mod_code": [
        "p = 0 ;",
        "else else",
        "if ( s [ i ] == ' l ' )",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        5,
        23,
        4
      ],
      "mod_code": [
        "p = 0 ;",
        "else else",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [300005]’ and ‘char [300005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        23,
        4,
        21
      ],
      "mod_code": [
        "p = 0 ;",
        "else else",
        "s >> s ;",
        "if ( s [ 0 ] == ' l ' )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [300005]’ and ‘char [300005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        23,
        4,
        2
      ],
      "mod_code": [
        "p = 0 ;",
        "else else",
        "s >> s ;",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        5,
        23,
        21
      ],
      "mod_code": [
        "p = 0 ;",
        "else else",
        "if ( s [ 0 ] == ' l ' )"
      ],
      "err_line": 5,
      "err_msg": "‘p’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        23,
        21,
        2
      ],
      "mod_code": [
        "p = 0 ;",
        "else else",
        "if ( s [ 0 ] == ' l ' )",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        5,
        23,
        2
      ],
      "mod_code": [
        "p = 0 ;",
        "else else",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        5,
        26
      ],
      "mod_code": [
        "p = 0 ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 5,
      "err_msg": "‘p’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        26,
        4
      ],
      "mod_code": [
        "p = 0 ;",
        "if ( s [ i ] == ' l ' )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [300005]’ and ‘char [300005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        26,
        4,
        21
      ],
      "mod_code": [
        "p = 0 ;",
        "if ( s [ i ] == ' l ' )",
        "s >> s ;",
        "if ( s [ 0 ] == ' l ' )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [300005]’ and ‘char [300005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        26,
        4,
        2
      ],
      "mod_code": [
        "p = 0 ;",
        "if ( s [ i ] == ' l ' )",
        "s >> s ;",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        5,
        26,
        21
      ],
      "mod_code": [
        "p = 0 ;",
        "if ( s [ i ] == ' l ' )",
        "if ( s [ 0 ] == ' l ' )"
      ],
      "err_line": 5,
      "err_msg": "‘p’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        26,
        21,
        2
      ],
      "mod_code": [
        "p = 0 ;",
        "if ( s [ i ] == ' l ' )",
        "if ( s [ 0 ] == ' l ' )",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        5,
        26,
        2
      ],
      "mod_code": [
        "p = 0 ;",
        "if ( s [ i ] == ' l ' )",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "p = 0 ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [300005]’ and ‘char [300005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        4,
        21
      ],
      "mod_code": [
        "p = 0 ;",
        "s >> s ;",
        "if ( s [ 0 ] == ' l ' )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [300005]’ and ‘char [300005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        4,
        21,
        2
      ],
      "mod_code": [
        "p = 0 ;",
        "s >> s ;",
        "if ( s [ 0 ] == ' l ' )",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        5,
        4,
        2
      ],
      "mod_code": [
        "p = 0 ;",
        "s >> s ;",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        5,
        21
      ],
      "mod_code": [
        "p = 0 ;",
        "if ( s [ 0 ] == ' l ' )"
      ],
      "err_line": 5,
      "err_msg": "‘p’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        21,
        2
      ],
      "mod_code": [
        "p = 0 ;",
        "if ( s [ 0 ] == ' l ' )",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "p = 0 ;",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        23,
        26
      ],
      "mod_code": [
        "else else",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        23,
        26,
        4
      ],
      "mod_code": [
        "else else",
        "if ( s [ i ] == ' l ' )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [300005]’ and ‘char [300005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        23,
        26,
        4,
        21
      ],
      "mod_code": [
        "else else",
        "if ( s [ i ] == ' l ' )",
        "s >> s ;",
        "if ( s [ 0 ] == ' l ' )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [300005]’ and ‘char [300005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        23,
        26,
        4,
        2
      ],
      "mod_code": [
        "else else",
        "if ( s [ i ] == ' l ' )",
        "s >> s ;",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        23,
        26,
        21
      ],
      "mod_code": [
        "else else",
        "if ( s [ i ] == ' l ' )",
        "if ( s [ 0 ] == ' l ' )"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        23,
        26,
        21,
        2
      ],
      "mod_code": [
        "else else",
        "if ( s [ i ] == ' l ' )",
        "if ( s [ 0 ] == ' l ' )",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        23,
        26,
        2
      ],
      "mod_code": [
        "else else",
        "if ( s [ i ] == ' l ' )",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        23,
        4
      ],
      "mod_code": [
        "else else",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [300005]’ and ‘char [300005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        23,
        4,
        21
      ],
      "mod_code": [
        "else else",
        "s >> s ;",
        "if ( s [ 0 ] == ' l ' )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [300005]’ and ‘char [300005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        23,
        4,
        21,
        2
      ],
      "mod_code": [
        "else else",
        "s >> s ;",
        "if ( s [ 0 ] == ' l ' )",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        23,
        4,
        2
      ],
      "mod_code": [
        "else else",
        "s >> s ;",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        23,
        21
      ],
      "mod_code": [
        "else else",
        "if ( s [ 0 ] == ' l ' )"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        23,
        21,
        2
      ],
      "mod_code": [
        "else else",
        "if ( s [ 0 ] == ' l ' )",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        23,
        2
      ],
      "mod_code": [
        "else else",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        26,
        4
      ],
      "mod_code": [
        "if ( s [ i ] == ' l ' )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [300005]’ and ‘char [300005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        26,
        4,
        21
      ],
      "mod_code": [
        "if ( s [ i ] == ' l ' )",
        "s >> s ;",
        "if ( s [ 0 ] == ' l ' )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [300005]’ and ‘char [300005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        26,
        4,
        21,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' l ' )",
        "s >> s ;",
        "if ( s [ 0 ] == ' l ' )",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        26,
        4,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' l ' )",
        "s >> s ;",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        26,
        21,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' l ' )",
        "if ( s [ 0 ] == ' l ' )",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        26,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' l ' )",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        4,
        21
      ],
      "mod_code": [
        "s >> s ;",
        "if ( s [ 0 ] == ' l ' )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [300005]’ and ‘char [300005]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        21,
        2
      ],
      "mod_code": [
        "s >> s ;",
        "if ( s [ 0 ] == ' l ' )",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "s >> s ;",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        21,
        2
      ],
      "mod_code": [
        "if ( s [ 0 ] == ' l ' )",
        "int n , x , y , y ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int y’"
    }
  ]
}