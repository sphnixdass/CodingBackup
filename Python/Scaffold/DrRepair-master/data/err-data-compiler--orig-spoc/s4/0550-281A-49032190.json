{
  "meta": {
    "index": 550,
    "hitid": "34R0BODSP1T3X209WHK3TCLXVPGE5U",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "281A",
    "subid": "49032190"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string word",
      "code": "string word ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read word",
      "code": "cin >> word ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set a to word [ 0 ]",
      "code": "int a = word [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if a > 99",
      "code": "if ( a > 90 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "a = a - 32",
      "code": "a = a - 32 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "assign a to word [ 0 ]",
      "code": "word [ 0 ] = a ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print word",
      "code": "cout << word << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print word and a new line",
      "code": "cout << word << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "a = word [ 0 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char word ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "if ( a > 99 )"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        1
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "if ( a > 99 )",
        "char word ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        1,
        2
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "if ( a > 99 )",
        "char word ;",
        "cout << word << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        1,
        8
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "if ( a > 99 )",
        "char word ;",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "if ( a > 99 )",
        "cout << word << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        2,
        8
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "if ( a > 99 )",
        "cout << word << endl ;",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        8
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "if ( a > 99 )",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "char word ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        4
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "char word ;",
        "if ( ( a > 99 ) )"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        4,
        2
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "char word ;",
        "if ( ( a > 99 ) )",
        "cout << word << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        4,
        8
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "char word ;",
        "if ( ( a > 99 ) )",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        2
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "char word ;",
        "cout << word << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        2,
        8
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "char word ;",
        "cout << word << endl ;",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        8
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "char word ;",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "if ( ( a > 99 ) )"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "if ( ( a > 99 ) )",
        "cout << word << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        2,
        8
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "if ( ( a > 99 ) )",
        "cout << word << endl ;",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        8
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "if ( ( a > 99 ) )",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "cout << word << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        8
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "cout << word << endl ;",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "a = word [ 0 ] ;",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "if ( a > 99 )",
        "char word ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        1,
        2
      ],
      "mod_code": [
        "if ( a > 99 )",
        "char word ;",
        "cout << word << endl ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        1,
        2,
        8
      ],
      "mod_code": [
        "if ( a > 99 )",
        "char word ;",
        "cout << word << endl ;",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        1,
        8
      ],
      "mod_code": [
        "if ( a > 99 )",
        "char word ;",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "char word ;",
        "if ( ( a > 99 ) )"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        4,
        2
      ],
      "mod_code": [
        "char word ;",
        "if ( ( a > 99 ) )",
        "cout << word << endl ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        4,
        2,
        8
      ],
      "mod_code": [
        "char word ;",
        "if ( ( a > 99 ) )",
        "cout << word << endl ;",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        4,
        8
      ],
      "mod_code": [
        "char word ;",
        "if ( ( a > 99 ) )",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "char word ;",
        "cout << word << endl ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        2,
        8
      ],
      "mod_code": [
        "char word ;",
        "cout << word << endl ;",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "char word ;",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    }
  ]
}