{
  "meta": {
    "index": 1398,
    "hitid": "3I01FDIL6M266Z3MI37LPN00CQN2DY",
    "workerid": "A1APYLD4DUK33J",
    "probid": "876A",
    "subid": "46929374"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant integer mod = 1e9 + 7",
      "code": "const int mod = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare constant integer mxn = 1e6",
      "code": "const int maxn = 1e6 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare long longs n , m",
      "code": "long long n , m ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare long long array dp size 120 by 4",
      "code": "long long dp [ 120 ] [ 4 ] ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "declare integers a , b , c",
      "code": "int a , b , c ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n , a , b , c",
      "code": "cin >> n >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set bytes from dp to size of dp to value 0",
      "code": "memset ( dp , 0 , sizeof dp ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "let dp [ 1 ] [ 2 ] be maxn",
      "code": "dp [ 1 ] [ 2 ] = maxn ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "let dp [ 1 ] [ 3 ] be maxn",
      "code": "dp [ 1 ] [ 3 ] = maxn ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 2 to n inclusive",
      "code": "for ( int i = 2 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "let dp [ i ] [ 1 ] be minimum of dp [ i - 1 ] [ 2 ] + a and dp [ i - 1 ] [ 3 ] + b",
      "code": "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 2 ] + a , dp [ i - 1 ] [ 3 ] + b ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "let dp [ i ] [ 2 ] be minimum of dp [ i - 1 ] [ 1 ] + a and dp [ i - 1 ] [ 3 ] + c",
      "code": "dp [ i ] [ 2 ] = min ( dp [ i - 1 ] [ 1 ] + a , dp [ i - 1 ] [ 3 ] + c ) ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "let dp [ i ] [ 3 ] be minimum of dp [ i - 1 ] [ 1 ] + b and dp [ i - 1 ] [ 2 ] + c",
      "code": "dp [ i ] [ 3 ] = min ( dp [ i - 1 ] [ 1 ] + b , dp [ i - 1 ] [ 2 ] + c ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print minimum of ( dp [ n ] [ 1 ] and minimum of ( dp [ n ] [ 2 ] and dp [ n ] [ 3 ] ) ) , newline",
      "code": "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) ) << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "const int mxn = 1e6 ;"
      ],
      "err_line": 8,
      "err_msg": "‘maxn’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "const long int mxn = 1e6 ;"
      ],
      "err_line": 8,
      "err_msg": "‘maxn’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "long long dp [ 120 + 4 ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "dp [ 1 ] [ 2 ] ] = maxn ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "dp [ 1 ] [ 3 ] ] = maxn ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 2 ] + a [ i - 1 ] [ 3 ] + b ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "dp [ i ] [ 2 ] = min ( dp [ i - 1 ] [ 1 ] + a [ i - 1 ] [ 3 ] + c ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "dp [ i ] [ 3 ] = min ( dp [ i - 1 ] [ 1 ] + b [ i - 1 ] [ 2 ] + c ) ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "invalid operands of types ‘const long long int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘maxn’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        15
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘maxn’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        15,
        3
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "long long dp [ 120 + 4 ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        10,
        15,
        8
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "dp [ 1 ] [ 2 ] ] = maxn ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        1,
        10,
        15,
        5
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        10,
        3
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "long long dp [ 120 + 4 ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        10,
        3,
        8
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "long long dp [ 120 + 4 ] ;",
        "dp [ 1 ] [ 2 ] ] = maxn ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        10,
        3,
        5
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "long long dp [ 120 + 4 ] ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        10,
        8
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "dp [ 1 ] [ 2 ] ] = maxn ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        1,
        10,
        8,
        5
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "dp [ 1 ] [ 2 ] ] = maxn ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        10,
        5
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "for ( i = 2 ; i <= n ; i ++ )",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘maxn’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15,
        3
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "long long dp [ 120 + 4 ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        15,
        3,
        8
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "long long dp [ 120 + 4 ] ;",
        "dp [ 1 ] [ 2 ] ] = maxn ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        15,
        3,
        5
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "long long dp [ 120 + 4 ] ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        15,
        8
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "dp [ 1 ] [ 2 ] ] = maxn ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        1,
        15,
        8,
        5
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "dp [ 1 ] [ 2 ] ] = maxn ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        15,
        5
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "long long dp [ 120 + 4 ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        3,
        8
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "long long dp [ 120 + 4 ] ;",
        "dp [ 1 ] [ 2 ] ] = maxn ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        3,
        8,
        5
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "long long dp [ 120 + 4 ] ;",
        "dp [ 1 ] [ 2 ] ] = maxn ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "long long dp [ 120 + 4 ] ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "dp [ 1 ] [ 2 ] ] = maxn ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        1,
        8,
        5
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "dp [ 1 ] [ 2 ] ] = maxn ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "const int mxn = 1e6 ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        10,
        15
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        15,
        3
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "long long dp [ 120 + 4 ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        15,
        3,
        8
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "long long dp [ 120 + 4 ] ;",
        "dp [ 1 ] [ 2 ] ] = maxn ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        15,
        3,
        5
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "long long dp [ 120 + 4 ] ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        10,
        15,
        8
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "dp [ 1 ] [ 2 ] ] = maxn ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        10,
        15,
        8,
        5
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "dp [ 1 ] [ 2 ] ] = maxn ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        10,
        15,
        5
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "long long dp [ 120 + 4 ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        3,
        8
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "long long dp [ 120 + 4 ] ;",
        "dp [ 1 ] [ 2 ] ] = maxn ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        3,
        8,
        5
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "long long dp [ 120 + 4 ] ;",
        "dp [ 1 ] [ 2 ] ] = maxn ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        10,
        3,
        5
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "long long dp [ 120 + 4 ] ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "dp [ 1 ] [ 2 ] ] = maxn ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        10,
        8,
        5
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "dp [ 1 ] [ 2 ] ] = maxn ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        15,
        3
      ],
      "mod_code": [
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "long long dp [ 120 + 4 ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        3,
        8
      ],
      "mod_code": [
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "long long dp [ 120 + 4 ] ;",
        "dp [ 1 ] [ 2 ] ] = maxn ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        3,
        8,
        5
      ],
      "mod_code": [
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "long long dp [ 120 + 4 ] ;",
        "dp [ 1 ] [ 2 ] ] = maxn ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        15,
        3,
        5
      ],
      "mod_code": [
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "long long dp [ 120 + 4 ] ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        15,
        8
      ],
      "mod_code": [
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "dp [ 1 ] [ 2 ] ] = maxn ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        15,
        8,
        5
      ],
      "mod_code": [
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "dp [ 1 ] [ 2 ] ] = maxn ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        15,
        5
      ],
      "mod_code": [
        "cout << min ( dp [ n ] [ 1 ] , min ( dp [ n ] [ 2 ] , dp [ n ] [ 3 ] ) << endl ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "long long dp [ 120 + 4 ] ;",
        "dp [ 1 ] [ 2 ] ] = maxn ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        8,
        5
      ],
      "mod_code": [
        "long long dp [ 120 + 4 ] ;",
        "dp [ 1 ] [ 2 ] ] = maxn ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "long long dp [ 120 + 4 ] ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "dp [ 1 ] [ 2 ] ] = maxn ;",
        "int a , b , c , c ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int c’"
    }
  ]
}