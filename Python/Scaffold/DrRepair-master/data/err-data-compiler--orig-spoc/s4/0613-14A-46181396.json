{
  "meta": {
    "index": 613,
    "hitid": "3WA2XVDZEMBZG60N10U8LIZXR5A6ER",
    "workerid": "AIWEXPJAU66D9",
    "probid": "14A",
    "subid": "46181396"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers called r and c",
      "code": "int r , c ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let arr be a 2d array of characters with size 50 by 50",
      "code": "char arr [ 50 ] [ 50 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let mni , mnj , mxi and mxj be integers with mni = INT_MAX , mnj = INT_MAX , mxi = 0 and mxj = 0",
      "code": "int mni = INT_MAX , mnj = INT_MAX , mxi = 0 , mxj = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let s be character",
      "code": "char s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read r and c",
      "code": "cin >> r >> c ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to r exclusive",
      "code": "for ( int i = 0 ; i < r ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j = 0 to c exclusive",
      "code": "for ( int j = 0 ; j < c ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "set arr [ i ] [ j ] to s",
      "code": "arr [ i ] [ j ] = s ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if s is ' * '",
      "code": "if ( s == ' * ' )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "set value of mxi to max of i and mxi",
      "code": "mxi = max ( i , mxi ) ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "set value of max of j and mxj to the mxj",
      "code": "mxj = max ( j , mxj ) ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "set value of mni to min of i and mni",
      "code": "mni = min ( i , mni ) ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "mnj = min of j and mnj",
      "code": "mnj = min ( j , mnj ) ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for i = mni to mxi inclusive",
      "code": "for ( int i = mni ; i <= mxi ; i ++ )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for integer j = mnj to mxj inclusive print arr [ i ] [ j ]",
      "code": "for ( int j = mnj ; j <= mxj ; j ++ ) { cout << arr [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char arr [ 50 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "be = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘be’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else if ( s == ' * ' )"
      ],
      "err_line": 10,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "* mxi = max ( i , mxi ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "* mni = min ( i , mni ) ;"
      ],
      "err_line": 13,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "else if ( s == ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        10,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "else if ( s == ' * ' )",
        "char arr [ 50 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        10,
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "else if ( s == ' * ' )",
        "max ( j , mxj ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        10,
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "else if ( s == ' * ' )",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "char arr [ 50 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        2,
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "char arr [ 50 ] ;",
        "max ( j , mxj ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        2,
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "char arr [ 50 ] ;",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "max ( j , mxj ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        12,
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "max ( j , mxj ) ;",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "else if ( s == ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "else if ( s == ' * ' )",
        "char arr [ 50 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        2,
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "else if ( s == ' * ' )",
        "char arr [ 50 ] ;",
        "max ( j , mxj ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        2,
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "else if ( s == ' * ' )",
        "char arr [ 50 ] ;",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "else if ( s == ' * ' )",
        "max ( j , mxj ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        12,
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "else if ( s == ' * ' )",
        "max ( j , mxj ) ;",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "else if ( s == ' * ' )",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "char arr [ 50 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "char arr [ 50 ] ;",
        "max ( j , mxj ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        12,
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "char arr [ 50 ] ;",
        "max ( j , mxj ) ;",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "char arr [ 50 ] ;",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "max ( j , mxj ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        12,
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "max ( j , mxj ) ;",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "else if ( s == ' * ' )"
      ],
      "err_line": 10,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        10,
        2
      ],
      "mod_code": [
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "else if ( s == ' * ' )",
        "char arr [ 50 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        10,
        2,
        12
      ],
      "mod_code": [
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "else if ( s == ' * ' )",
        "char arr [ 50 ] ;",
        "max ( j , mxj ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        10,
        2,
        18
      ],
      "mod_code": [
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "else if ( s == ' * ' )",
        "char arr [ 50 ] ;",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        10,
        12
      ],
      "mod_code": [
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "else if ( s == ' * ' )",
        "max ( j , mxj ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        10,
        12,
        18
      ],
      "mod_code": [
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "else if ( s == ' * ' )",
        "max ( j , mxj ) ;",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        10,
        18
      ],
      "mod_code": [
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "else if ( s == ' * ' )",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "char arr [ 50 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        2,
        12
      ],
      "mod_code": [
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "char arr [ 50 ] ;",
        "max ( j , mxj ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        2,
        12,
        18
      ],
      "mod_code": [
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "char arr [ 50 ] ;",
        "max ( j , mxj ) ;",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        2,
        18
      ],
      "mod_code": [
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "char arr [ 50 ] ;",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        12,
        18
      ],
      "mod_code": [
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "max ( j , mxj ) ;",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        18
      ],
      "mod_code": [
        "int mni = INT_MAX , mnj = 0 , mxi = 0 , mxj = 0 ;",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "else if ( s == ' * ' )",
        "char arr [ 50 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        2,
        12
      ],
      "mod_code": [
        "else if ( s == ' * ' )",
        "char arr [ 50 ] ;",
        "max ( j , mxj ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        2,
        12,
        18
      ],
      "mod_code": [
        "else if ( s == ' * ' )",
        "char arr [ 50 ] ;",
        "max ( j , mxj ) ;",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        2,
        18
      ],
      "mod_code": [
        "else if ( s == ' * ' )",
        "char arr [ 50 ] ;",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "else if ( s == ' * ' )",
        "max ( j , mxj ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        12,
        18
      ],
      "mod_code": [
        "else if ( s == ' * ' )",
        "max ( j , mxj ) ;",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        18
      ],
      "mod_code": [
        "else if ( s == ' * ' )",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "char arr [ 50 ] ;",
        "max ( j , mxj ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        12,
        18
      ],
      "mod_code": [
        "char arr [ 50 ] ;",
        "max ( j , mxj ) ;",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        18
      ],
      "mod_code": [
        "char arr [ 50 ] ;",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        18
      ],
      "mod_code": [
        "max ( j , mxj ) ;",
        "for ( i = mni ; i <= mxi ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}