{
  "meta": {
    "index": 2393,
    "hitid": "34OWYT6U3WBYEU47VQNBQ7ORA17I9A",
    "workerid": "A1AYVATMT88U1W",
    "probid": "392A",
    "subid": "48280707"
  },
  "lines": [
    {
      "line": 0,
      "text": "Eu_distance is a function that returns a long value by taking in two long values",
      "code": "long long Eu_distance ( long long x , long long y )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return x * x + y * y",
      "code": "return x * x + y * y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "n is a long integer",
      "code": "long long n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if n equals 0",
      "code": "if ( n == 0 )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "put string 1",
      "code": "puts ( \" 1 \" ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else if n equals 1",
      "code": "else if ( n == 1 )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "put string 4",
      "code": "puts ( \" 4 \" ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 11,
      "text": "x and y are long integers with y = n",
      "code": "long long x , y = n ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "res is a long integer 0",
      "code": "long long res = 0 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "for x = 0 to n , y + 1 exclusive",
      "code": "for ( x = 0 ; x < n , x <= y ; x ++ )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "while Eu_distance ( x , y ) is greater than n * n , decrease y by 1",
      "code": "while ( Eu_distance ( x , y ) > n * n ) { y -- ; }",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if x is greater than y , stop",
      "code": "if ( x > y ) { break ; }",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if x is not equal to y",
      "code": "if ( x != y )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "increase res by 2",
      "code": "res += 2 ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 19,
      "text": "increase res by 1",
      "code": "res ++ ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "decrease res by 2",
      "code": "res -= 2 ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "res equals res * 4 + 4",
      "code": "res = res * 4 + 4 ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "print res and endline",
      "code": "cout << res << endl ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "string 1 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "string 4 ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long Eu_distance ( long long values )"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout . put ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::basic_ostream<char>::put()’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else if ( n == l )"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "char 4 ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "string 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        9
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "string 1 ;",
        "string 4 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        9,
        17
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "string 1 ;",
        "string 4 ;",
        "res += ' 2 ' ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        9,
        10
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "string 1 ;",
        "string 4 ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        9,
        23
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "string 1 ;",
        "string 4 ;",
        "res += 4 + 4 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        17
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "string 1 ;",
        "res += ' 2 ' ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        17,
        10
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "string 1 ;",
        "res += ' 2 ' ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        17,
        23
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "string 1 ;",
        "res += ' 2 ' ;",
        "res += 4 + 4 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        10
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "string 1 ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        10,
        23
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "string 1 ;",
        "else else",
        "res += 4 + 4 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        23
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "string 1 ;",
        "res += 4 + 4 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "string 4 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9,
        17
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "string 4 ;",
        "res += ' 2 ' ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9,
        17,
        10
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "string 4 ;",
        "res += ' 2 ' ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9,
        17,
        23
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "string 4 ;",
        "res += ' 2 ' ;",
        "res += 4 + 4 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9,
        10
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "string 4 ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9,
        10,
        23
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "string 4 ;",
        "else else",
        "res += 4 + 4 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9,
        23
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "string 4 ;",
        "res += 4 + 4 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "res += ' 2 ' ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        17,
        10
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "res += ' 2 ' ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        17,
        10,
        23
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "res += ' 2 ' ;",
        "else else",
        "res += 4 + 4 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        17,
        23
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "res += ' 2 ' ;",
        "res += 4 + 4 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        10,
        23
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "else else",
        "res += 4 + 4 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        23
      ],
      "mod_code": [
        "long long Eu_distance ( long long ) ;",
        "res += 4 + 4 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "string 1 ;",
        "string 4 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        9,
        17
      ],
      "mod_code": [
        "string 1 ;",
        "string 4 ;",
        "res += ' 2 ' ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        9,
        17,
        10
      ],
      "mod_code": [
        "string 1 ;",
        "string 4 ;",
        "res += ' 2 ' ;",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        9,
        17,
        23
      ],
      "mod_code": [
        "string 1 ;",
        "string 4 ;",
        "res += ' 2 ' ;",
        "res += 4 + 4 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        9,
        10
      ],
      "mod_code": [
        "string 1 ;",
        "string 4 ;",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        9,
        10,
        23
      ],
      "mod_code": [
        "string 1 ;",
        "string 4 ;",
        "else else",
        "res += 4 + 4 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        9,
        23
      ],
      "mod_code": [
        "string 1 ;",
        "string 4 ;",
        "res += 4 + 4 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        17
      ],
      "mod_code": [
        "string 1 ;",
        "res += ' 2 ' ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        17,
        10
      ],
      "mod_code": [
        "string 1 ;",
        "res += ' 2 ' ;",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        17,
        10,
        23
      ],
      "mod_code": [
        "string 1 ;",
        "res += ' 2 ' ;",
        "else else",
        "res += 4 + 4 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        17,
        23
      ],
      "mod_code": [
        "string 1 ;",
        "res += ' 2 ' ;",
        "res += 4 + 4 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "string 1 ;",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        10,
        23
      ],
      "mod_code": [
        "string 1 ;",
        "else else",
        "res += 4 + 4 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        23
      ],
      "mod_code": [
        "string 1 ;",
        "res += 4 + 4 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "string 4 ;",
        "res += ' 2 ' ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        17,
        10
      ],
      "mod_code": [
        "string 4 ;",
        "res += ' 2 ' ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        17,
        10,
        23
      ],
      "mod_code": [
        "string 4 ;",
        "res += ' 2 ' ;",
        "else else",
        "res += 4 + 4 ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        17,
        23
      ],
      "mod_code": [
        "string 4 ;",
        "res += ' 2 ' ;",
        "res += 4 + 4 ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "string 4 ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        10,
        23
      ],
      "mod_code": [
        "string 4 ;",
        "else else",
        "res += 4 + 4 ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        23
      ],
      "mod_code": [
        "string 4 ;",
        "res += 4 + 4 ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        17,
        10
      ],
      "mod_code": [
        "res += ' 2 ' ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17,
        10,
        23
      ],
      "mod_code": [
        "res += ' 2 ' ;",
        "else else",
        "res += 4 + 4 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        23
      ],
      "mod_code": [
        "else else",
        "res += 4 + 4 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}