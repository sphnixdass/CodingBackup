{
  "meta": {
    "index": 1547,
    "hitid": "3Z3R5YC0P3HXOIBVSOM7EACBOGCFTA",
    "workerid": "A1APYLD4DUK33J",
    "probid": "630R",
    "subid": "40901896"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant integer maxn = 1e5 + 10",
      "code": "const int maxn = 1e5 + 10 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare constant integer maxm = 1e6 + 10",
      "code": "const int maxm = 1e6 + 10 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare constant integer INF = 0x3f3f3f3f",
      "code": "const int INF = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare long longs casn , n , m , k",
      "code": "long long casn , n , m , k ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare long long array num size maxn",
      "code": "long long num [ maxn ] ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "declare cal with long long x as argument , returning lon glong",
      "code": "long long cal ( long long x )",
      "indent": 0
    },
    {
      "line": 6,
      "text": "declare long long ans = 1",
      "code": "long long ans = 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to x inclusive , let ans be ans * i",
      "code": "for ( long long i = 1 ; i <= x ; i ++ ) { ans *= i ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return ans from function",
      "code": "return ans ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 11,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print 1 + ( n % 2 is 0 ) , newline",
      "code": "cout << 1 + ( n % 2 == 0 ) << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "glong ( long long x ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected constructor, destructor, or type conversion before ‘;’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "const maxm = 1e6 + 10 ;"
      ],
      "err_line": 1,
      "err_msg": "‘maxm’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "const INF = 0x3f3f3f3f ;"
      ],
      "err_line": 2,
      "err_msg": "‘INF’ does not name a type"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "glong = long long ) cal ;"
      ],
      "err_line": 5,
      "err_msg": "‘glong’ does not name a type"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "return ans ans ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘ans’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "glong ( long long x ) ;",
        "const maxm = 1e6 + 10 ;"
      ],
      "err_line": 1,
      "err_msg": "‘maxm’ does not name a type"
    },
    {
      "mod_line": [
        5,
        1,
        2
      ],
      "mod_code": [
        "glong ( long long x ) ;",
        "const maxm = 1e6 + 10 ;",
        "const INF = 0x3f3f3f3f ;"
      ],
      "err_line": 1,
      "err_msg": "‘maxm’ does not name a type"
    },
    {
      "mod_line": [
        5,
        1,
        2,
        8
      ],
      "mod_code": [
        "glong ( long long x ) ;",
        "const maxm = 1e6 + 10 ;",
        "const INF = 0x3f3f3f3f ;",
        "return ans ans ;"
      ],
      "err_line": 1,
      "err_msg": "‘maxm’ does not name a type"
    },
    {
      "mod_line": [
        5,
        1,
        8
      ],
      "mod_code": [
        "glong ( long long x ) ;",
        "const maxm = 1e6 + 10 ;",
        "return ans ans ;"
      ],
      "err_line": 1,
      "err_msg": "‘maxm’ does not name a type"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "glong ( long long x ) ;",
        "const INF = 0x3f3f3f3f ;"
      ],
      "err_line": 2,
      "err_msg": "‘INF’ does not name a type"
    },
    {
      "mod_line": [
        5,
        2,
        8
      ],
      "mod_code": [
        "glong ( long long x ) ;",
        "const INF = 0x3f3f3f3f ;",
        "return ans ans ;"
      ],
      "err_line": 2,
      "err_msg": "‘INF’ does not name a type"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "glong ( long long x ) ;",
        "return ans ans ;"
      ],
      "err_line": 5,
      "err_msg": "expected constructor, destructor, or type conversion before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "glong = long long ) cal ;",
        "const maxm = 1e6 + 10 ;"
      ],
      "err_line": 1,
      "err_msg": "‘maxm’ does not name a type"
    },
    {
      "mod_line": [
        5,
        1,
        2
      ],
      "mod_code": [
        "glong = long long ) cal ;",
        "const maxm = 1e6 + 10 ;",
        "const INF = 0x3f3f3f3f ;"
      ],
      "err_line": 1,
      "err_msg": "‘maxm’ does not name a type"
    },
    {
      "mod_line": [
        5,
        1,
        2,
        8
      ],
      "mod_code": [
        "glong = long long ) cal ;",
        "const maxm = 1e6 + 10 ;",
        "const INF = 0x3f3f3f3f ;",
        "return ans ans ;"
      ],
      "err_line": 1,
      "err_msg": "‘maxm’ does not name a type"
    },
    {
      "mod_line": [
        5,
        1,
        8
      ],
      "mod_code": [
        "glong = long long ) cal ;",
        "const maxm = 1e6 + 10 ;",
        "return ans ans ;"
      ],
      "err_line": 1,
      "err_msg": "‘maxm’ does not name a type"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "glong = long long ) cal ;",
        "const INF = 0x3f3f3f3f ;"
      ],
      "err_line": 2,
      "err_msg": "‘INF’ does not name a type"
    },
    {
      "mod_line": [
        5,
        2,
        8
      ],
      "mod_code": [
        "glong = long long ) cal ;",
        "const INF = 0x3f3f3f3f ;",
        "return ans ans ;"
      ],
      "err_line": 2,
      "err_msg": "‘INF’ does not name a type"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "glong = long long ) cal ;",
        "return ans ans ;"
      ],
      "err_line": 5,
      "err_msg": "‘glong’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "const maxm = 1e6 + 10 ;",
        "const INF = 0x3f3f3f3f ;"
      ],
      "err_line": 1,
      "err_msg": "‘maxm’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        8
      ],
      "mod_code": [
        "const maxm = 1e6 + 10 ;",
        "const INF = 0x3f3f3f3f ;",
        "return ans ans ;"
      ],
      "err_line": 1,
      "err_msg": "‘maxm’ does not name a type"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "const maxm = 1e6 + 10 ;",
        "return ans ans ;"
      ],
      "err_line": 1,
      "err_msg": "‘maxm’ does not name a type"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "const INF = 0x3f3f3f3f ;",
        "return ans ans ;"
      ],
      "err_line": 2,
      "err_msg": "‘INF’ does not name a type"
    }
  ]
}