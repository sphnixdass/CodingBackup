{
  "meta": {
    "index": 900,
    "hitid": "3PZDSVZ3J5BPVP9MBB4CE79S9LK4N2",
    "workerid": "A7Z6XB4WDJYSP",
    "probid": "820A",
    "subid": "30252873"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "c , v0 , v1 , a , l , ans = integers",
      "code": "int c , v0 , v1 , a , l , ans ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read c , v0 , v1 , a and l",
      "code": "cin >> c >> v0 >> v1 >> a >> l ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "ans = 1",
      "code": "ans = 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "c = ( c - v0 ) * ( c > = v0 )",
      "code": "c = ( c - v0 ) * ( c >= v0 ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while c",
      "code": "while ( c )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if v1 is greater or equal than v0 + a",
      "code": "if ( v1 >= v0 + a )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "v0 = v0 + a",
      "code": "v0 = v0 + a ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "v0 = v1",
      "code": "v0 = v1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "c = ( c + l - v0 ) * ( c + l > = v0 )",
      "code": "c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print ans and new line",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int c = ( c - v0 ) * ( c >= v0 ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "else else",
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        11,
        4
      ],
      "mod_code": [
        "else else",
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "int c = ( c - v0 ) * ( c >= v0 ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        8,
        11,
        4,
        5
      ],
      "mod_code": [
        "else else",
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "while ( 1 )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        8,
        11,
        4,
        2
      ],
      "mod_code": [
        "else else",
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "cin >> c >> v0 >> v1 >> l >> l ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        8,
        11,
        4,
        3
      ],
      "mod_code": [
        "else else",
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        11,
        5
      ],
      "mod_code": [
        "else else",
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "while ( 1 )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        11,
        5,
        2
      ],
      "mod_code": [
        "else else",
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "while ( 1 )",
        "cin >> c >> v0 >> v1 >> l >> l ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        11,
        5,
        3
      ],
      "mod_code": [
        "else else",
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "while ( 1 )",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        11,
        2
      ],
      "mod_code": [
        "else else",
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "cin >> c >> v0 >> v1 >> l >> l ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        11,
        2,
        3
      ],
      "mod_code": [
        "else else",
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        11,
        3
      ],
      "mod_code": [
        "else else",
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "else else",
        "int c = ( c - v0 ) * ( c >= v0 ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        8,
        4,
        5
      ],
      "mod_code": [
        "else else",
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "while ( 1 )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        8,
        4,
        5,
        2
      ],
      "mod_code": [
        "else else",
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "while ( 1 )",
        "cin >> c >> v0 >> v1 >> l >> l ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        8,
        4,
        5,
        3
      ],
      "mod_code": [
        "else else",
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "while ( 1 )",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        4,
        2
      ],
      "mod_code": [
        "else else",
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "cin >> c >> v0 >> v1 >> l >> l ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        8,
        4,
        2,
        3
      ],
      "mod_code": [
        "else else",
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        4,
        3
      ],
      "mod_code": [
        "else else",
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "else else",
        "while ( 1 )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        5,
        2
      ],
      "mod_code": [
        "else else",
        "while ( 1 )",
        "cin >> c >> v0 >> v1 >> l >> l ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        5,
        2,
        3
      ],
      "mod_code": [
        "else else",
        "while ( 1 )",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        5,
        3
      ],
      "mod_code": [
        "else else",
        "while ( 1 )",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "else else",
        "cin >> c >> v0 >> v1 >> l >> l ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        2,
        3
      ],
      "mod_code": [
        "else else",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "else else",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "int c = ( c - v0 ) * ( c >= v0 ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        11,
        4,
        5
      ],
      "mod_code": [
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "while ( 1 )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        11,
        4,
        5,
        2
      ],
      "mod_code": [
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "while ( 1 )",
        "cin >> c >> v0 >> v1 >> l >> l ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        11,
        4,
        5,
        3
      ],
      "mod_code": [
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "while ( 1 )",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        11,
        4,
        2
      ],
      "mod_code": [
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "cin >> c >> v0 >> v1 >> l >> l ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        11,
        4,
        2,
        3
      ],
      "mod_code": [
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        11,
        4,
        3
      ],
      "mod_code": [
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        11,
        5,
        2,
        3
      ],
      "mod_code": [
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "while ( 1 )",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        11,
        5,
        3
      ],
      "mod_code": [
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "while ( 1 )",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        11,
        2,
        3
      ],
      "mod_code": [
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "int c = ( c + l - v0 ) * ( c + l >= v0 ) ;",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "while ( 1 )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        4,
        5,
        2
      ],
      "mod_code": [
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "while ( 1 )",
        "cin >> c >> v0 >> v1 >> l >> l ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        4,
        5,
        2,
        3
      ],
      "mod_code": [
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "while ( 1 )",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        5,
        3
      ],
      "mod_code": [
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "while ( 1 )",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "cin >> c >> v0 >> v1 >> l >> l ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        4,
        2,
        3
      ],
      "mod_code": [
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "int c = ( c - v0 ) * ( c >= v0 ) ;",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        5,
        2,
        3
      ],
      "mod_code": [
        "while ( 1 )",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "while ( 1 )",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int ans = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans’"
    }
  ]
}