{
  "meta": {
    "index": 130,
    "hitid": "3K3G488TR22SU5QE58F3NTABEDN5QM",
    "workerid": "AIWEXPJAU66D9",
    "probid": "3A",
    "subid": "47610425"
  },
  "lines": [
    {
      "line": 0,
      "text": "q and t = strings",
      "code": "string q , t ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long ints v , z , b , n , c , w , u , R , D , L and U",
      "code": "long long int v , z , b , n , c , w , u , R , D , L , U ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read t and q",
      "code": "cin >> t >> q ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set c to the absolute value of q [ 0 ] - t [ 0 ]",
      "code": "c = abs ( q [ 0 ] - t [ 0 ] ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set value of n to the absolute value of q [ 1 ] - t [ 1 ]",
      "code": "n = abs ( q [ 1 ] - t [ 1 ] ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "b = minimal of c and n",
      "code": "b = min ( c , n ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "decrease c by b",
      "code": "c -= b ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "decrease n by b",
      "code": "n -= b ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "w = b",
      "code": "w = b ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if q [ 0 ] is less than t [ 0 ]",
      "code": "if ( q [ 0 ] < t [ 0 ] )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set value of L to 1",
      "code": "L = 1 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "R = 1",
      "code": "R = 1 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if q [ 1 ] is less than t [ 1 ]",
      "code": "if ( q [ 1 ] < t [ 1 ] )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "set value of D to 1",
      "code": "D = 1 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 17,
      "text": "set U to 1",
      "code": "U = 1 ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "increase b by sum of n and c",
      "code": "b += n + c ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print b and \" \\ n \"",
      "code": "cout << b << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "declare string variable G",
      "code": "string G ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if L & & D",
      "code": "if ( L && D )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "set value of G to \" LD \"",
      "code": "G = \" LD \" ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "else if L & & U",
      "code": "else if ( L && U )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "set value of G to \" LU \"",
      "code": "G = \" LU \" ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "else if R & & D",
      "code": "else if ( R && D )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "set value of G to \" RD \"",
      "code": "G = \" RD \" ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "else if R & & U",
      "code": "else if ( R && U )",
      "indent": 1
    },
    {
      "line": 28,
      "text": "set value of G to \" RU \"",
      "code": "G = \" RU \" ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "print G and \" \\ n \" w - 1 times",
      "code": "for ( int i = 1 ; i <= w ; i ++ ) cout << G << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "if n",
      "code": "if ( n )",
      "indent": 1
    },
    {
      "line": 31,
      "text": "if U",
      "code": "if ( U )",
      "indent": 2
    },
    {
      "line": 32,
      "text": "G = \" U \"",
      "code": "G = \" U \" ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 34,
      "text": "G = \" D \"",
      "code": "G = \" D \" ;",
      "indent": 3
    },
    {
      "line": 35,
      "text": "else if b",
      "code": "else if ( b )",
      "indent": 1
    },
    {
      "line": 36,
      "text": "if R",
      "code": "if ( R )",
      "indent": 2
    },
    {
      "line": 37,
      "text": "G = \" R \"",
      "code": "G = \" R \" ;",
      "indent": 3
    },
    {
      "line": 38,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 39,
      "text": "set value of G to \" L \"",
      "code": "G = \" L \" ;",
      "indent": 3
    },
    {
      "line": 40,
      "text": "print G and \" \\ n \" b - w - 1 times",
      "code": "for ( int i = 1 ; i <= b - w ; i ++ ) cout << G << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "b += sum ( n , c ) ;"
      ],
      "err_line": 18,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long int v , z , b , n , c , w , R , R , D , L , U ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘long int R’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "t >> t >> q ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "c = abs ( c [ 0 ] - t [ 0 ] ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "* n = abs ( q [ 1 ] - t [ 1 ] ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "* L = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "* D = 1 ;"
      ],
      "err_line": 15,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 22,
      "err_msg": "‘G’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 22,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "G [ 0 ] = \" LU \" ;"
      ],
      "err_line": 24,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "G [ 0 ] = \" RD \" ;"
      ],
      "err_line": 26,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "G [ 0 ] = \" RU \" ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 33,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        38
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 38,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "G [ 0 ] = \" L \" ;"
      ],
      "err_line": 39,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        18
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "b += sum ( n , c ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        18,
        29
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "b += sum ( n , c ) ;",
        "cout << G << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        18,
        29,
        40
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "b += sum ( n , c ) ;",
        "cout << G << \" \\n \" ;",
        "cout << G << \" \\n \" - w - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        18,
        29,
        37
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "b += sum ( n , c ) ;",
        "cout << G << \" \\n \" ;",
        "string G = \" R \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        18,
        29,
        22
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "b += sum ( n , c ) ;",
        "cout << G << \" \\n \" ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        18,
        40
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "b += sum ( n , c ) ;",
        "cout << G << \" \\n \" - w - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        18,
        40,
        37
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "b += sum ( n , c ) ;",
        "cout << G << \" \\n \" - w - 1 ;",
        "string G = \" R \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        18,
        40,
        22
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "b += sum ( n , c ) ;",
        "cout << G << \" \\n \" - w - 1 ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        18,
        37
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "b += sum ( n , c ) ;",
        "string G = \" R \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        18,
        37,
        22
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "b += sum ( n , c ) ;",
        "string G = \" R \" ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        18,
        22
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "b += sum ( n , c ) ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        29
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "cout << G << \" \\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        29,
        40
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "cout << G << \" \\n \" ;",
        "cout << G << \" \\n \" - w - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        29,
        40,
        37
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "cout << G << \" \\n \" ;",
        "cout << G << \" \\n \" - w - 1 ;",
        "string G = \" R \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        29,
        40,
        22
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "cout << G << \" \\n \" ;",
        "cout << G << \" \\n \" - w - 1 ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        29,
        37
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "cout << G << \" \\n \" ;",
        "string G = \" R \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        29,
        37,
        22
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "cout << G << \" \\n \" ;",
        "string G = \" R \" ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        29,
        22
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "cout << G << \" \\n \" ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        40
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "cout << G << \" \\n \" - w - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        40,
        37
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "cout << G << \" \\n \" - w - 1 ;",
        "string G = \" R \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        40,
        37,
        22
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "cout << G << \" \\n \" - w - 1 ;",
        "string G = \" R \" ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        40,
        22
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "cout << G << \" \\n \" - w - 1 ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        37
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "string G = \" R \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        37,
        22
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "string G = \" R \" ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        22
      ],
      "mod_code": [
        "b = minimal ( c , n ) ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘minimal’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        29
      ],
      "mod_code": [
        "b += sum ( n , c ) ;",
        "cout << G << \" \\n \" ;"
      ],
      "err_line": 18,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        29,
        40
      ],
      "mod_code": [
        "b += sum ( n , c ) ;",
        "cout << G << \" \\n \" ;",
        "cout << G << \" \\n \" - w - 1 ;"
      ],
      "err_line": 18,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        29,
        40,
        37
      ],
      "mod_code": [
        "b += sum ( n , c ) ;",
        "cout << G << \" \\n \" ;",
        "cout << G << \" \\n \" - w - 1 ;",
        "string G = \" R \" ;"
      ],
      "err_line": 18,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        29,
        40,
        22
      ],
      "mod_code": [
        "b += sum ( n , c ) ;",
        "cout << G << \" \\n \" ;",
        "cout << G << \" \\n \" - w - 1 ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 18,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        29,
        37
      ],
      "mod_code": [
        "b += sum ( n , c ) ;",
        "cout << G << \" \\n \" ;",
        "string G = \" R \" ;"
      ],
      "err_line": 18,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        29,
        37,
        22
      ],
      "mod_code": [
        "b += sum ( n , c ) ;",
        "cout << G << \" \\n \" ;",
        "string G = \" R \" ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 18,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        29,
        22
      ],
      "mod_code": [
        "b += sum ( n , c ) ;",
        "cout << G << \" \\n \" ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 18,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        40
      ],
      "mod_code": [
        "b += sum ( n , c ) ;",
        "cout << G << \" \\n \" - w - 1 ;"
      ],
      "err_line": 18,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        40,
        37
      ],
      "mod_code": [
        "b += sum ( n , c ) ;",
        "cout << G << \" \\n \" - w - 1 ;",
        "string G = \" R \" ;"
      ],
      "err_line": 18,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        40,
        37,
        22
      ],
      "mod_code": [
        "b += sum ( n , c ) ;",
        "cout << G << \" \\n \" - w - 1 ;",
        "string G = \" R \" ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 18,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        40,
        22
      ],
      "mod_code": [
        "b += sum ( n , c ) ;",
        "cout << G << \" \\n \" - w - 1 ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 18,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        37
      ],
      "mod_code": [
        "b += sum ( n , c ) ;",
        "string G = \" R \" ;"
      ],
      "err_line": 18,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        37,
        22
      ],
      "mod_code": [
        "b += sum ( n , c ) ;",
        "string G = \" R \" ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 18,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        22
      ],
      "mod_code": [
        "b += sum ( n , c ) ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 18,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        40,
        37,
        22
      ],
      "mod_code": [
        "cout << G << \" \\n \" ;",
        "cout << G << \" \\n \" - w - 1 ;",
        "string G = \" R \" ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 22,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        40,
        22
      ],
      "mod_code": [
        "cout << G << \" \\n \" ;",
        "cout << G << \" \\n \" - w - 1 ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 22,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        37,
        22
      ],
      "mod_code": [
        "cout << G << \" \\n \" ;",
        "string G = \" R \" ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 22,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        22
      ],
      "mod_code": [
        "cout << G << \" \\n \" ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 22,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        40,
        37,
        22
      ],
      "mod_code": [
        "cout << G << \" \\n \" - w - 1 ;",
        "string G = \" R \" ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 22,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        40,
        22
      ],
      "mod_code": [
        "cout << G << \" \\n \" - w - 1 ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 22,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        37,
        22
      ],
      "mod_code": [
        "string G = \" R \" ;",
        "G [ 0 ] = \" LD \" ;"
      ],
      "err_line": 22,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    }
  ]
}