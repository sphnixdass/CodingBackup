{
  "meta": {
    "index": 2445,
    "hitid": "3M47JKRKCXVI75QWOX88T83BH4M687",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "553A",
    "subid": "45592810"
  },
  "lines": [
    {
      "line": 0,
      "text": "a = long long array 1000100 , flag = long long array 1000100",
      "code": "long long a [ 1000000 + 100 ] , flag [ 1000000 + 100 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "mod = constant long long = 1e9 + 7",
      "code": "const long long mod = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "dp = long long array of size 1008 and width 1008",
      "code": "long long dp [ 1007 + 1 ] [ 1007 + 1 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "for i = 0 to 1007 exclusive , then dp [ i ] [ 0 ] = 1",
      "code": "for ( int i = 0 ; i < 1007 ; i ++ ) dp [ i ] [ 0 ] = 1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to 1007 exclusive",
      "code": "for ( int i = 1 ; i < 1007 ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 1 to 1007 exclusive , then dp [ i ] [ j ] = ( dp [ i ] [ j - 1 ] + dp [ i - 1 ] [ j ] ) modulo mod",
      "code": "for ( int j = 1 ; j < 1007 ; j ++ ) dp [ i ] [ j ] = ( dp [ i ] [ j - 1 ] + dp [ i - 1 ] [ j ] ) % mod ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "k = integer",
      "code": "int k ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read k",
      "code": "cin >> k ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "sum = long long = 1",
      "code": "long long sum = 1 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "x = long long = 1",
      "code": "long long x = 1 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to k exclusive",
      "code": "for ( int i = 0 ; i < k ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "sum = ( sum * dp [ x ] [ a [ i ] - 1 ] ) modulo mod",
      "code": "sum = ( sum * dp [ x ] [ a [ i ] - 1 ] ) % mod ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "x = x + a [ i ]",
      "code": "x += a [ i ] ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long dp [ 1008 ] = { 0 } ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < 1007 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "a >> a [ i ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘long long int [1000100]’ and ‘long long int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "long long dp [ 1008 ] = { 0 } ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        2,
        5
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "long long dp [ 1008 ] = { 0 } ;",
        "for ( int i = 0 ; i < 1007 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        16
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "long long dp [ 1008 ] = { 0 } ;",
        "for ( int i = 0 ; i < 1007 ; i ++ )",
        "cout << sum ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        8
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "long long dp [ 1008 ] = { 0 } ;",
        "for ( int i = 0 ; i < 1007 ; i ++ )",
        "cin >> n ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        2,
        5
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "long long dp [ 1008 ] = { 0 } ;",
        "for ( i = 0 ; i < 1007 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        16
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "long long dp [ 1008 ] = { 0 } ;",
        "for ( i = 0 ; i < 1007 ; i ++ )",
        "cout << sum ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        8
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "long long dp [ 1008 ] = { 0 } ;",
        "for ( i = 0 ; i < 1007 ; i ++ )",
        "cin >> n ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        2,
        16
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "long long dp [ 1008 ] = { 0 } ;",
        "cout << sum ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        2,
        16,
        8
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "long long dp [ 1008 ] = { 0 } ;",
        "cout << sum ;",
        "cin >> n ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        2,
        8
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "long long dp [ 1008 ] = { 0 } ;",
        "cin >> n ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "for ( int i = 0 ; i < 1007 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        16
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "for ( int i = 0 ; i < 1007 ; i ++ )",
        "cout << sum ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        16,
        8
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "for ( int i = 0 ; i < 1007 ; i ++ )",
        "cout << sum ;",
        "cin >> n ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        8
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "for ( int i = 0 ; i < 1007 ; i ++ )",
        "cin >> n ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "for ( i = 0 ; i < 1007 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        16
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "for ( i = 0 ; i < 1007 ; i ++ )",
        "cout << sum ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        16,
        8
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "for ( i = 0 ; i < 1007 ; i ++ )",
        "cout << sum ;",
        "cin >> n ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        5,
        8
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "for ( i = 0 ; i < 1007 ; i ++ )",
        "cin >> n ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "cout << sum ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        16,
        8
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "cout << sum ;",
        "cin >> n ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "long long 1000100 , 1000100 , 1000100 ;",
        "cin >> n ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "long long dp [ 1008 ] = { 0 } ;",
        "for ( int i = 0 ; i < 1007 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        5,
        16
      ],
      "mod_code": [
        "long long dp [ 1008 ] = { 0 } ;",
        "for ( int i = 0 ; i < 1007 ; i ++ )",
        "cout << sum ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        5,
        16,
        8
      ],
      "mod_code": [
        "long long dp [ 1008 ] = { 0 } ;",
        "for ( int i = 0 ; i < 1007 ; i ++ )",
        "cout << sum ;",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        5,
        8
      ],
      "mod_code": [
        "long long dp [ 1008 ] = { 0 } ;",
        "for ( int i = 0 ; i < 1007 ; i ++ )",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "long long dp [ 1008 ] = { 0 } ;",
        "for ( i = 0 ; i < 1007 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        5,
        16
      ],
      "mod_code": [
        "long long dp [ 1008 ] = { 0 } ;",
        "for ( i = 0 ; i < 1007 ; i ++ )",
        "cout << sum ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        5,
        16,
        8
      ],
      "mod_code": [
        "long long dp [ 1008 ] = { 0 } ;",
        "for ( i = 0 ; i < 1007 ; i ++ )",
        "cout << sum ;",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        5,
        8
      ],
      "mod_code": [
        "long long dp [ 1008 ] = { 0 } ;",
        "for ( i = 0 ; i < 1007 ; i ++ )",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "long long dp [ 1008 ] = { 0 } ;",
        "cout << sum ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        16,
        8
      ],
      "mod_code": [
        "long long dp [ 1008 ] = { 0 } ;",
        "cout << sum ;",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "long long dp [ 1008 ] = { 0 } ;",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        16,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 1007 ; i ++ )",
        "cout << sum ;",
        "cin >> n ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 1007 ; i ++ )",
        "cin >> n ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < 1007 ; i ++ )",
        "cout << sum ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        16,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 1007 ; i ++ )",
        "cout << sum ;",
        "cin >> n ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 1007 ; i ++ )",
        "cin >> n ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "cout << sum ;",
        "cin >> n ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    }
  ]
}