{
  "meta": {
    "index": 1685,
    "hitid": "3NQUW096N6204VCDGTKOINGJR509LE",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "992A",
    "subid": "48577248"
  },
  "lines": [
    {
      "line": 0,
      "text": "N , Cnt = int",
      "code": "int N , Cnt ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let vis be a bool array of length 2 * 100005",
      "code": "bool vis [ 2 * 100005 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read N",
      "code": "cin >> N ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "Ai = int",
      "code": "int Ai ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to N - 1 inclusive",
      "code": "for ( int i = 0 ; i <= N - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read Ai",
      "code": "cin >> Ai ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if Ai = 0 then go to next iteration",
      "code": "if ( Ai == 0 ) continue ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment Ai by 100000",
      "code": "Ai += 100000 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if vis at Ai is 0",
      "code": "if ( ! vis [ Ai ] )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment Cnt",
      "code": "Cnt ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "set vis [ Ai ] = true",
      "code": "vis [ Ai ] = true ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print Cnt",
      "code": "cout << Cnt << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int N , Cnt , Cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i <= N - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "gets ( Ai ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "Cnt Cnt ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘Cnt’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        0
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "cin >> n ;",
        "int N , Cnt , Cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        6,
        3,
        0,
        5
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "cin >> n ;",
        "int N , Cnt , Cnt ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        6,
        3,
        0,
        11
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "cin >> n ;",
        "int N , Cnt , Cnt ;",
        "vis [ ' Ai ' ] = true ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        6,
        3,
        0,
        1
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "cin >> n ;",
        "int N , Cnt , Cnt ;",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        6,
        3,
        5
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "cin >> n ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        5,
        11
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "cin >> n ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )",
        "vis [ ' Ai ' ] = true ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        5,
        1
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "cin >> n ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        11
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "cin >> n ;",
        "vis [ ' Ai ' ] = true ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        11,
        1
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "cin >> n ;",
        "vis [ ' Ai ' ] = true ;",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        1
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "cin >> n ;",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "int N , Cnt , Cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        6,
        0,
        5
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "int N , Cnt , Cnt ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        6,
        0,
        5,
        11
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "int N , Cnt , Cnt ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )",
        "vis [ ' Ai ' ] = true ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        6,
        0,
        5,
        1
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "int N , Cnt , Cnt ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        6,
        0,
        11
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "int N , Cnt , Cnt ;",
        "vis [ ' Ai ' ] = true ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        6,
        0,
        11,
        1
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "int N , Cnt , Cnt ;",
        "vis [ ' Ai ' ] = true ;",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        6,
        0,
        1
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "int N , Cnt , Cnt ;",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        11
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )",
        "vis [ ' Ai ' ] = true ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        11,
        1
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )",
        "vis [ ' Ai ' ] = true ;",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        1
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "vis [ ' Ai ' ] = true ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        11,
        1
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "vis [ ' Ai ' ] = true ;",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "gets ( Ai ) ;",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "cin >> n ;",
        "int N , Cnt , Cnt ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        3,
        0,
        5
      ],
      "mod_code": [
        "cin >> n ;",
        "int N , Cnt , Cnt ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        3,
        0,
        5,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "int N , Cnt , Cnt ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )",
        "vis [ ' Ai ' ] = true ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        3,
        0,
        5,
        1
      ],
      "mod_code": [
        "cin >> n ;",
        "int N , Cnt , Cnt ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        3,
        0,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "int N , Cnt , Cnt ;",
        "vis [ ' Ai ' ] = true ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        3,
        0,
        11,
        1
      ],
      "mod_code": [
        "cin >> n ;",
        "int N , Cnt , Cnt ;",
        "vis [ ' Ai ' ] = true ;",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        3,
        0,
        1
      ],
      "mod_code": [
        "cin >> n ;",
        "int N , Cnt , Cnt ;",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )",
        "vis [ ' Ai ' ] = true ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        11,
        1
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )",
        "vis [ ' Ai ' ] = true ;",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        1
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "vis [ ' Ai ' ] = true ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        1
      ],
      "mod_code": [
        "cin >> n ;",
        "vis [ ' Ai ' ] = true ;",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "cin >> n ;",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "int N , Cnt , Cnt ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        0,
        5,
        11
      ],
      "mod_code": [
        "int N , Cnt , Cnt ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )",
        "vis [ ' Ai ' ] = true ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        0,
        5,
        11,
        1
      ],
      "mod_code": [
        "int N , Cnt , Cnt ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )",
        "vis [ ' Ai ' ] = true ;",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        0,
        5,
        1
      ],
      "mod_code": [
        "int N , Cnt , Cnt ;",
        "for ( i = 0 ; i <= N - 1 ; i ++ )",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "int N , Cnt , Cnt ;",
        "vis [ ' Ai ' ] = true ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        0,
        11,
        1
      ],
      "mod_code": [
        "int N , Cnt , Cnt ;",
        "vis [ ' Ai ' ] = true ;",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int N , Cnt , Cnt ;",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Cnt’"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i <= N - 1 ; i ++ )",
        "vis [ ' Ai ' ] = true ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i <= N - 1 ; i ++ )",
        "vis [ ' Ai ' ] = true ;",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i <= N - 1 ; i ++ )",
        "bool vis [ 2 * 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}