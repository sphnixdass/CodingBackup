{
  "meta": {
    "index": 116,
    "hitid": "3L21G7IH47Q2FPGHVVULXP0W16YY1Z",
    "workerid": "A1APYLD4DUK33J",
    "probid": "3A",
    "subid": "47104934"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create character arrays c1 , c2 with c1 size 3 , c2 size 3",
      "code": "char c1 [ 3 ] , c2 [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read c1",
      "code": "cin >> c1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read c2",
      "code": "cin >> c2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integers x1 , x2 , x , y1 , y2 , y , i , j , ans , xx , yy",
      "code": "int x1 , x2 , x , y1 , y2 , y , i , j , ans , xx , yy ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set x1 to c1 [ 0 ] - ' a ' + 1",
      "code": "x1 = c1 [ 0 ] - ' a ' + 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set y1 to c1 [ 1 ] - ' 0 '",
      "code": "y1 = c1 [ 1 ] - ' 0 ' ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set x2 to c2 [ 0 ] - ' a ' + 1",
      "code": "x2 = c2 [ 0 ] - ' a ' + 1 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set y2 to c2 [ 1 ] - ' 0 '",
      "code": "y2 = c2 [ 1 ] - ' 0 ' ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set x to x1 - x2",
      "code": "x = x1 - x2 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set xx to absolute value of x",
      "code": "xx = abs ( x ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set y to y1 - y2",
      "code": "y = y1 - y2 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "set yy to absolute value of y",
      "code": "yy = abs ( y ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "set ans to maximum of xx and yy",
      "code": "ans = max ( xx , yy ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print ans print newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "while x is not 0",
      "code": "while ( x != 0 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if x is less than 0",
      "code": "if ( x < 0 )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if y is less than 0",
      "code": "if ( y < 0 )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "print \" RU \" print newline",
      "code": "cout << \" RU \" << endl ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "increment x",
      "code": "x ++ ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "increment y",
      "code": "y ++ ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "else if y is greater than 0",
      "code": "else if ( y > 0 )",
      "indent": 3
    },
    {
      "line": 22,
      "text": "print \" RD \" print newline",
      "code": "cout << \" RD \" << endl ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "increment x",
      "code": "x ++ ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "decrement y",
      "code": "y -- ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "else if y is 0",
      "code": "else if ( y == 0 )",
      "indent": 3
    },
    {
      "line": 26,
      "text": "print \" R \" print newline",
      "code": "cout << \" R \" << endl ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "increment x",
      "code": "x ++ ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 30,
      "text": "if x is greater than 0",
      "code": "if ( x > 0 )",
      "indent": 2
    },
    {
      "line": 31,
      "text": "if y is less than 0",
      "code": "if ( y < 0 )",
      "indent": 3
    },
    {
      "line": 32,
      "text": "print \" LU \" print newline",
      "code": "cout << \" LU \" << endl ;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "decrement x",
      "code": "x -- ;",
      "indent": 4
    },
    {
      "line": 34,
      "text": "increment y",
      "code": "y ++ ;",
      "indent": 4
    },
    {
      "line": 35,
      "text": "else if y is greater than 0",
      "code": "else if ( y > 0 )",
      "indent": 3
    },
    {
      "line": 36,
      "text": "print \" LD \" print newline",
      "code": "cout << \" LD \" << endl ;",
      "indent": 4
    },
    {
      "line": 37,
      "text": "decrement x",
      "code": "x -- ;",
      "indent": 4
    },
    {
      "line": 38,
      "text": "decrement y",
      "code": "y -- ;",
      "indent": 4
    },
    {
      "line": 39,
      "text": "else if y is 0",
      "code": "else if ( y == 0 )",
      "indent": 3
    },
    {
      "line": 40,
      "text": "print \" L \" print newline",
      "code": "cout << \" L \" << endl ;",
      "indent": 4
    },
    {
      "line": 41,
      "text": "decrement x",
      "code": "x -- ;",
      "indent": 4
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 45,
      "text": "while y is not 0",
      "code": "while ( y != 0 )",
      "indent": 1
    },
    {
      "line": 46,
      "text": "if y is greater than 0",
      "code": "if ( y > 0 )",
      "indent": 2
    },
    {
      "line": 47,
      "text": "print \" D \" print newline",
      "code": "cout << \" D \" << endl ;",
      "indent": 3
    },
    {
      "line": 48,
      "text": "decrement y",
      "code": "y -- ;",
      "indent": 3
    },
    {
      "line": 49,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 50,
      "text": "if y is less than 0",
      "code": "if ( y < 0 )",
      "indent": 2
    },
    {
      "line": 51,
      "text": "print \" U \" print newline",
      "code": "cout << \" U \" << endl ;",
      "indent": 3
    },
    {
      "line": 52,
      "text": "increment y",
      "code": "y ++ ;",
      "indent": 3
    },
    {
      "line": 53,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 54,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 55,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 56,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char c1 [ 3 ] , c2 [ 3 ] , c2 [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char c2 [3]’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int y1 = c1 [ 1 ] - ' 0 ' ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        22
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        22,
        31
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "cout << \" -1 \" << endl ;",
        "if ( y <= 0 )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        22,
        31,
        6
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "cout << \" -1 \" << endl ;",
        "if ( y <= 0 )",
        "int y1 = c1 [ 1 ] - ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        22,
        31,
        40
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "cout << \" -1 \" << endl ;",
        "if ( y <= 0 )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        22,
        31,
        10
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "cout << \" -1 \" << endl ;",
        "if ( y <= 0 )",
        "xx = abs ( xx ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        22,
        6
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "cout << \" -1 \" << endl ;",
        "int y1 = c1 [ 1 ] - ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        22,
        6,
        40
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "cout << \" -1 \" << endl ;",
        "int y1 = c1 [ 1 ] - ' 0 ' ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        22,
        6,
        10
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "cout << \" -1 \" << endl ;",
        "int y1 = c1 [ 1 ] - ' 0 ' ;",
        "xx = abs ( xx ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        22,
        40
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "cout << \" -1 \" << endl ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        22,
        40,
        10
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "cout << \" -1 \" << endl ;",
        "cout << \" -1 \" << endl ;",
        "xx = abs ( xx ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        22,
        10
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "cout << \" -1 \" << endl ;",
        "xx = abs ( xx ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        31
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "if ( y <= 0 )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        31,
        6
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "if ( y <= 0 )",
        "int y1 = c1 [ 1 ] - ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        31,
        6,
        40
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "if ( y <= 0 )",
        "int y1 = c1 [ 1 ] - ' 0 ' ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        31,
        6,
        10
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "if ( y <= 0 )",
        "int y1 = c1 [ 1 ] - ' 0 ' ;",
        "xx = abs ( xx ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        31,
        40
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "if ( y <= 0 )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        31,
        40,
        10
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "if ( y <= 0 )",
        "cout << \" -1 \" << endl ;",
        "xx = abs ( xx ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        31,
        10
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "if ( y <= 0 )",
        "xx = abs ( xx ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "int y1 = c1 [ 1 ] - ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        6,
        40
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "int y1 = c1 [ 1 ] - ' 0 ' ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        6,
        40,
        10
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "int y1 = c1 [ 1 ] - ' 0 ' ;",
        "cout << \" -1 \" << endl ;",
        "xx = abs ( xx ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        6,
        10
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "int y1 = c1 [ 1 ] - ' 0 ' ;",
        "xx = abs ( xx ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        40
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        40,
        10
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "cout << \" -1 \" << endl ;",
        "xx = abs ( xx ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "int x1 , x2 , x , y1 , y2 , y , i , i , ans , xx , yy ;",
        "xx = abs ( xx ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        22,
        31,
        6
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "if ( y <= 0 )",
        "int y1 = c1 [ 1 ] - ' 0 ' ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        22,
        31,
        6,
        40
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "if ( y <= 0 )",
        "int y1 = c1 [ 1 ] - ' 0 ' ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        22,
        31,
        6,
        10
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "if ( y <= 0 )",
        "int y1 = c1 [ 1 ] - ' 0 ' ;",
        "xx = abs ( xx ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        22,
        6
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "int y1 = c1 [ 1 ] - ' 0 ' ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        22,
        6,
        40
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "int y1 = c1 [ 1 ] - ' 0 ' ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        22,
        6,
        40,
        10
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "int y1 = c1 [ 1 ] - ' 0 ' ;",
        "cout << \" -1 \" << endl ;",
        "xx = abs ( xx ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        22,
        6,
        10
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "int y1 = c1 [ 1 ] - ' 0 ' ;",
        "xx = abs ( xx ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        31,
        6
      ],
      "mod_code": [
        "if ( y <= 0 )",
        "int y1 = c1 [ 1 ] - ' 0 ' ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        31,
        6,
        40
      ],
      "mod_code": [
        "if ( y <= 0 )",
        "int y1 = c1 [ 1 ] - ' 0 ' ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        31,
        6,
        40,
        10
      ],
      "mod_code": [
        "if ( y <= 0 )",
        "int y1 = c1 [ 1 ] - ' 0 ' ;",
        "cout << \" -1 \" << endl ;",
        "xx = abs ( xx ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        31,
        6,
        10
      ],
      "mod_code": [
        "if ( y <= 0 )",
        "int y1 = c1 [ 1 ] - ' 0 ' ;",
        "xx = abs ( xx ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        6,
        40
      ],
      "mod_code": [
        "int y1 = c1 [ 1 ] - ' 0 ' ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        6,
        40,
        10
      ],
      "mod_code": [
        "int y1 = c1 [ 1 ] - ' 0 ' ;",
        "cout << \" -1 \" << endl ;",
        "xx = abs ( xx ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "int y1 = c1 [ 1 ] - ' 0 ' ;",
        "xx = abs ( xx ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int y1’"
    }
  ]
}