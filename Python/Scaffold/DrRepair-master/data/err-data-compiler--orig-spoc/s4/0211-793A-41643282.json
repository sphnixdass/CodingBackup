{
  "meta": {
    "index": 211,
    "hitid": "3MA5N0ATTC50WL73O4IFH7BFZJDWKA",
    "workerid": "AIWEXPJAU66D9",
    "probid": "793A",
    "subid": "41643282"
  },
  "lines": [
    {
      "line": 0,
      "text": "array of long long called dx with values 1 , 0 , - 1 , 0",
      "code": "long long dx [ ] = { 1 , 0 , - 1 , 0 } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "array of long long called dy with values 0 , 1 , 0 , - 1",
      "code": "long long dy [ ] = { 0 , 1 , 0 , - 1 } ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "gcd is a long long function with long long arguments x and y",
      "code": "long long gcd ( long long x , long long y )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "if y = 0",
      "code": "if ( y == 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return x",
      "code": "return x ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 6,
      "text": "return gcd ( y , x % y )",
      "code": "return gcd ( y , x % y ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 8,
      "text": "expo is a long long function with long long arguments n , m and p",
      "code": "long long expo ( long long n , long long m , long long p )",
      "indent": 0
    },
    {
      "line": 9,
      "text": "declare long long variable r = 1",
      "code": "long long r = 1 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "n = n % p",
      "code": "n = n % p ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "while m is greater than 0",
      "code": "while ( m > 0 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if m % 2 is not 0 , set r = ( r * n ) % p",
      "code": "if ( m % 2 ) r = ( r * n ) % p ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "n = ( n * n ) % p",
      "code": "n = ( n * n ) % p ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "m = m / 2",
      "code": "m = m / 2 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "return r % p",
      "code": "return r % p ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 18,
      "text": "bool function isPrime with long long argument n",
      "code": "bool isPrime ( long long n )",
      "indent": 0
    },
    {
      "line": 19,
      "text": "if n < = 1 return false",
      "code": "if ( n <= 1 ) return false ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if n < = 3 return true",
      "code": "if ( n <= 3 ) return true ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if n % 2 = 0 or n % 3 = 0 return false",
      "code": "if ( n % 2 == 0 || n % 3 == 0 ) return false ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for long long i = 5 increment i by 6 while i * i < = n",
      "code": "for ( long long i = 5 ; i * i <= n ; i = i + 6 )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "return false if n % i = 0 or n % ( i + 2 ) = 0",
      "code": "if ( n % i == 0 || n % ( i + 2 ) == 0 ) return false ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "return true",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 26,
      "text": "z_function with return type of vector < long long > and a string argument",
      "code": "vector < long long > z_function ( string s )",
      "indent": 0
    },
    {
      "line": 27,
      "text": "declare long long n = length of s",
      "code": "long long n = ( long long ) s . length ( ) ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "z is a vector of long long with n elements",
      "code": "vector < long long > z ( n ) ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "for long long i = 1 , l = 0 , r = 0 while i < n",
      "code": "for ( long long i = 1 , l = 0 , r = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "if i < = r , set z [ i ] = min ( r - i + 1 , z [ i - l ] )",
      "code": "if ( i <= r ) z [ i ] = min ( r - i + 1 , z [ i - l ] ) ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "while i + z [ i ] < n and s [ z [ i ] ] = s [ i + z [ i ] ] increment z [ i ]",
      "code": "while ( i + z [ i ] < n && s [ z [ i ] ] == s [ i + z [ i ] ] ) ++ z [ i ] ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "if i + z [ i ] - 1 is greater than r , set l = i and r = i + z [ i ] - 1",
      "code": "if ( i + z [ i ] - 1 > r ) l = i , r = i + z [ i ] - 1 ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 34,
      "text": "return z",
      "code": "return z ;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 37,
      "text": "let n , k , s and ma be long longs where s = 0 and ma = ( 1 LL < < 61 )",
      "code": "long long n , k , s = 0 , ma = ( 1LL << 61 ) ;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "a is a vector of long long with n elements",
      "code": "vector < long long > a ( n ) ;",
      "indent": 1
    },
    {
      "line": 40,
      "text": "for long long i = 0 to n exclusive",
      "code": "for ( long long i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 41,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 42,
      "text": "assign value of s + a [ i ] to s",
      "code": "s = s + a [ i ] ;",
      "indent": 2
    },
    {
      "line": 43,
      "text": "ma = min of ma and a [ i ]",
      "code": "ma = min ( ma , a [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 45,
      "text": "declare long long ans = 0",
      "code": "long long ans = 0 ;",
      "indent": 1
    },
    {
      "line": 46,
      "text": "for long long i = 0 to n exclusive",
      "code": "for ( long long i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 47,
      "text": "declare long long s = a [ i ] - ma",
      "code": "long long s = a [ i ] - ma ;",
      "indent": 2
    },
    {
      "line": 48,
      "text": "if s % k ! = 0",
      "code": "if ( s % k != 0 )",
      "indent": 2
    },
    {
      "line": 49,
      "text": "print - 1 and ' \\ n '",
      "code": "cout << - 1 << ' \\n ' ;",
      "indent": 3
    },
    {
      "line": 50,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 51,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 52,
      "text": "ans = ans + s / k",
      "code": "ans = ans + s / k ;",
      "indent": 2
    },
    {
      "line": 53,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 54,
      "text": "print ans and ' \\ n '",
      "code": "cout << ans << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 55,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long gcd ( long long x , long long y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "long long expo ( long long n , long long m , long long p ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "bool isPrime ( long long n ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "vector < string > z_function ( string > a ) ;"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘>’ token"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 30,
      "err_msg": "no matching function for call to ‘min(long long int, std::vector<long long int>&)’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "for ( long long i = 1 , l = 0 ; i < n , r = n ; i ++ )"
      ],
      "err_line": 29,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "return ' z ' ;"
      ],
      "err_line": 34,
      "err_msg": "could not convert ‘'z'’ from ‘char’ to ‘std::vector<long long int>’"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "long long n , k , s = 0 , ma = 0 , ma = 0 ;"
      ],
      "err_line": 37,
      "err_msg": "redeclaration of ‘long long int ma’"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "vector < long long > a [ n ] ;"
      ],
      "err_line": 41,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "a >> a [ i ] ;"
      ],
      "err_line": 41,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "int ma = min ( ma , a [ i ] ) ;"
      ],
      "err_line": 43,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        49
      ],
      "mod_code": [
        "cout << \" -1 ' << ' \\n ' ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        54
      ],
      "mod_code": [
        "print ( ans ) ;"
      ],
      "err_line": 54,
      "err_msg": "‘print’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        37
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "long long n , k , s = 0 , ma = 0 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        37,
        41
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "long long n , k , s = 0 , ma = 0 ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        37,
        41,
        18
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "long long n , k , s = 0 , ma = 0 ;",
        "a >> a [ i ] ;",
        "bool isPrime ( long long n ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        37,
        41,
        49
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "long long n , k , s = 0 , ma = 0 ;",
        "a >> a [ i ] ;",
        "cout << \" -1 ' << ' \\n ' ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        26,
        37,
        41,
        28
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "long long n , k , s = 0 , ma = 0 ;",
        "a >> a [ i ] ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        37,
        18
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "long long n , k , s = 0 , ma = 0 ;",
        "bool isPrime ( long long n ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        37,
        18,
        49
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "long long n , k , s = 0 , ma = 0 ;",
        "bool isPrime ( long long n ) ;",
        "cout << \" -1 ' << ' \\n ' ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        26,
        37,
        18,
        28
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "long long n , k , s = 0 , ma = 0 ;",
        "bool isPrime ( long long n ) ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        37,
        49
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "long long n , k , s = 0 , ma = 0 ;",
        "cout << \" -1 ' << ' \\n ' ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        26,
        37,
        49,
        28
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "long long n , k , s = 0 , ma = 0 ;",
        "cout << \" -1 ' << ' \\n ' ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        26,
        37,
        28
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "long long n , k , s = 0 , ma = 0 ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        41
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        41,
        18
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "a >> a [ i ] ;",
        "bool isPrime ( long long n ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        41,
        18,
        49
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "a >> a [ i ] ;",
        "bool isPrime ( long long n ) ;",
        "cout << \" -1 ' << ' \\n ' ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        26,
        41,
        18,
        28
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "a >> a [ i ] ;",
        "bool isPrime ( long long n ) ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        41,
        49
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "a >> a [ i ] ;",
        "cout << \" -1 ' << ' \\n ' ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        26,
        41,
        49,
        28
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "a >> a [ i ] ;",
        "cout << \" -1 ' << ' \\n ' ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        26,
        41,
        28
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "a >> a [ i ] ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        18
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "bool isPrime ( long long n ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        18,
        49
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "bool isPrime ( long long n ) ;",
        "cout << \" -1 ' << ' \\n ' ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        26,
        18,
        49,
        28
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "bool isPrime ( long long n ) ;",
        "cout << \" -1 ' << ' \\n ' ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        26,
        18,
        28
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "bool isPrime ( long long n ) ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        49
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "cout << \" -1 ' << ' \\n ' ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        26,
        49,
        28
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "cout << \" -1 ' << ' \\n ' ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        26,
        28
      ],
      "mod_code": [
        "vector < string > z_function ( string ) ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        37,
        41
      ],
      "mod_code": [
        "long long n , k , s = 0 , ma = 0 ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 41,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        37,
        41,
        18
      ],
      "mod_code": [
        "long long n , k , s = 0 , ma = 0 ;",
        "a >> a [ i ] ;",
        "bool isPrime ( long long n ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        37,
        41,
        18,
        49
      ],
      "mod_code": [
        "long long n , k , s = 0 , ma = 0 ;",
        "a >> a [ i ] ;",
        "bool isPrime ( long long n ) ;",
        "cout << \" -1 ' << ' \\n ' ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        37,
        41,
        18,
        28
      ],
      "mod_code": [
        "long long n , k , s = 0 , ma = 0 ;",
        "a >> a [ i ] ;",
        "bool isPrime ( long long n ) ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        37,
        41,
        49
      ],
      "mod_code": [
        "long long n , k , s = 0 , ma = 0 ;",
        "a >> a [ i ] ;",
        "cout << \" -1 ' << ' \\n ' ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        37,
        41,
        49,
        28
      ],
      "mod_code": [
        "long long n , k , s = 0 , ma = 0 ;",
        "a >> a [ i ] ;",
        "cout << \" -1 ' << ' \\n ' ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        37,
        41,
        28
      ],
      "mod_code": [
        "long long n , k , s = 0 , ma = 0 ;",
        "a >> a [ i ] ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 30,
      "err_msg": "no matching function for call to ‘min(long long int, std::vector<long long int>&)’"
    },
    {
      "mod_line": [
        37,
        18
      ],
      "mod_code": [
        "long long n , k , s = 0 , ma = 0 ;",
        "bool isPrime ( long long n ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        37,
        18,
        49
      ],
      "mod_code": [
        "long long n , k , s = 0 , ma = 0 ;",
        "bool isPrime ( long long n ) ;",
        "cout << \" -1 ' << ' \\n ' ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        37,
        18,
        49,
        28
      ],
      "mod_code": [
        "long long n , k , s = 0 , ma = 0 ;",
        "bool isPrime ( long long n ) ;",
        "cout << \" -1 ' << ' \\n ' ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        37,
        18,
        28
      ],
      "mod_code": [
        "long long n , k , s = 0 , ma = 0 ;",
        "bool isPrime ( long long n ) ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        37,
        49
      ],
      "mod_code": [
        "long long n , k , s = 0 , ma = 0 ;",
        "cout << \" -1 ' << ' \\n ' ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        37,
        49,
        28
      ],
      "mod_code": [
        "long long n , k , s = 0 , ma = 0 ;",
        "cout << \" -1 ' << ' \\n ' ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        37,
        28
      ],
      "mod_code": [
        "long long n , k , s = 0 , ma = 0 ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 30,
      "err_msg": "no matching function for call to ‘min(long long int, std::vector<long long int>&)’"
    },
    {
      "mod_line": [
        41,
        18
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "bool isPrime ( long long n ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        41,
        18,
        49
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "bool isPrime ( long long n ) ;",
        "cout << \" -1 ' << ' \\n ' ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        41,
        18,
        49,
        28
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "bool isPrime ( long long n ) ;",
        "cout << \" -1 ' << ' \\n ' ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        41,
        18,
        28
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "bool isPrime ( long long n ) ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        41,
        49
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "cout << \" -1 ' << ' \\n ' ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        41,
        49,
        28
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "cout << \" -1 ' << ' \\n ' ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        41,
        28
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 30,
      "err_msg": "no matching function for call to ‘min(long long int, std::vector<long long int>&)’"
    },
    {
      "mod_line": [
        18,
        49
      ],
      "mod_code": [
        "bool isPrime ( long long n ) ;",
        "cout << \" -1 ' << ' \\n ' ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        18,
        49,
        28
      ],
      "mod_code": [
        "bool isPrime ( long long n ) ;",
        "cout << \" -1 ' << ' \\n ' ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        18,
        28
      ],
      "mod_code": [
        "bool isPrime ( long long n ) ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        28
      ],
      "mod_code": [
        "cout << \" -1 ' << ' \\n ' ;",
        "vector < long long > z [ n ] ;"
      ],
      "err_line": 49,
      "err_msg": "missing terminating \" character"
    }
  ]
}