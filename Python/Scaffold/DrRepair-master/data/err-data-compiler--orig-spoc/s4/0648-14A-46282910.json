{
  "meta": {
    "index": 648,
    "hitid": "3X7837UUADS7RMMFF15ZIYCPWD66JC",
    "workerid": "AIWEXPJAU66D9",
    "probid": "14A",
    "subid": "46282910"
  },
  "lines": [
    {
      "line": 0,
      "text": "integers m , n , u = - 2019 , d = - 2019 , r = - 2019 , l = - 2019",
      "code": "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , l = - 2019 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a = 2d array of characters with size 100 by 100",
      "code": "char a [ 100 ] [ 100 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for j = 0 to m exclusive read a [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < m ; j ++ ) { cin >> a [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for integer j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if a [ i ] [ j ] = ' * ' and u is equal to - 2019",
      "code": "if ( a [ i ] [ j ] == ' * ' and u == - 2019 )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "u = i",
      "code": "u = i ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "loop through i from n - 1 while i > - 1 , decrementing i",
      "code": "for ( int i = n - 1 ; i > - 1 ; i -- )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if a [ i ] [ j ] = ' * ' and d is equal to - 2019",
      "code": "if ( a [ i ] [ j ] == ' * ' and d == - 2019 )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "set d to i",
      "code": "d = i ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 25,
      "text": "if a [ j ] [ i ] = ' * ' and l is equal to - 2019",
      "code": "if ( a [ j ] [ i ] == ' * ' and l == - 2019 )",
      "indent": 3
    },
    {
      "line": 26,
      "text": "l = i",
      "code": "l = i ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "loop through i from m - 1 while i > - 1 , decrementing i",
      "code": "for ( int i = m - 1 ; i > - 1 ; i -- )",
      "indent": 1
    },
    {
      "line": 32,
      "text": "for integer j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 33,
      "text": "if a [ j ] [ i ] = ' * ' and r is equal to - 2019",
      "code": "if ( a [ j ] [ i ] == ' * ' and r == - 2019 )",
      "indent": 3
    },
    {
      "line": 34,
      "text": "set r to i",
      "code": "r = i ;",
      "indent": 4
    },
    {
      "line": 35,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 39,
      "text": "for integer i = u to d inclusive",
      "code": "for ( int i = u ; i <= d ; i ++ )",
      "indent": 1
    },
    {
      "line": 40,
      "text": "for integer j = l to r inclusive print a [ i ] [ j ]",
      "code": "for ( int j = l ; j <= r ; j ++ ) { cout << a [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 41,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char a [ 100 ] = { 0 } ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 23,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 24,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "for ( i = m - 1 ; i >= - 1 ; i -- )"
      ],
      "err_line": 31,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        17
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        17,
        26
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "int l = i ;"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        17,
        26,
        11
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "int l = i ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        15,
        17,
        26,
        0
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "int l = i ;",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        15,
        17,
        26,
        16
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "int l = i ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        17,
        11
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        15,
        17,
        11,
        0
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "break break ;",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        15,
        17,
        11,
        16
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "break break ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        15,
        17,
        0
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        15,
        17,
        0,
        16
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        15,
        17,
        16
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        26
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "int l = i ;"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        26,
        11
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "int l = i ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        15,
        26,
        11,
        0
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "int l = i ;",
        "break break ;",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        15,
        26,
        11,
        16
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "int l = i ;",
        "break break ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        15,
        26,
        0
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "int l = i ;",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        15,
        26,
        0,
        16
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "int l = i ;",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        15,
        26,
        16
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "int l = i ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        11
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        15,
        11,
        0
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "break break ;",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        15,
        11,
        0,
        16
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "break break ;",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        15,
        11,
        16
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "break break ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        15,
        0
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        15,
        0,
        16
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        15,
        16
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= - 1 ; i -- )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        26,
        11
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "int l = i ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        17,
        26,
        11,
        0
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "int l = i ;",
        "break break ;",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        17,
        26,
        11,
        16
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "int l = i ;",
        "break break ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        17,
        26,
        0
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "int l = i ;",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        17,
        26,
        0,
        16
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "int l = i ;",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        17,
        26,
        16
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "int l = i ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        11
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        17,
        11,
        0
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "break break ;",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        17,
        11,
        0,
        16
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "break break ;",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        17,
        11,
        16
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "break break ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        17,
        0
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        17,
        0,
        16
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        17,
        16
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == ' * ' && d == - 1 )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        11
      ],
      "mod_code": [
        "int l = i ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        26,
        11,
        0
      ],
      "mod_code": [
        "int l = i ;",
        "break break ;",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        26,
        11,
        0,
        16
      ],
      "mod_code": [
        "int l = i ;",
        "break break ;",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        26,
        11,
        16
      ],
      "mod_code": [
        "int l = i ;",
        "break break ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        26,
        0
      ],
      "mod_code": [
        "int l = i ;",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        26,
        0,
        16
      ],
      "mod_code": [
        "int l = i ;",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        26,
        16
      ],
      "mod_code": [
        "int l = i ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        0
      ],
      "mod_code": [
        "break break ;",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        11,
        0,
        16
      ],
      "mod_code": [
        "break break ;",
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    },
    {
      "mod_line": [
        11,
        16
      ],
      "mod_code": [
        "break break ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "int m , n , u = - 2019 , d = - 2019 , r = - 2019 , r = - 2019 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int r’"
    }
  ]
}