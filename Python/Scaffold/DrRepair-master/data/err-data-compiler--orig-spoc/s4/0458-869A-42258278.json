{
  "meta": {
    "index": 458,
    "hitid": "3P6ENY9P79QRT0MQT2B33OMFTE9IHU",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "869A",
    "subid": "42258278"
  },
  "lines": [
    {
      "line": 0,
      "text": "a = long long array of size 2001",
      "code": "long long a [ 2001 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "b = long long array of size 2001",
      "code": "long long b [ 2001 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "s = long long set",
      "code": "set < long long > s ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n values into a",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read n values into b",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> b [ i ] ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "insert a [ i ] into s",
      "code": "s . insert ( a [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "insert b [ i ] into s",
      "code": "s . insert ( b [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "cnt = int with cnt = 0",
      "code": "int cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for j = 0 to n",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "temp = int with temp = a [ i ] bitwise - xor b [ j ]",
      "code": "int temp = a [ i ] ^ b [ j ] ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if s contains temp increment cnt",
      "code": "if ( s . find ( temp ) != s . end ( ) ) { cnt ++ ; }",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if cnt is even",
      "code": "if ( cnt % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print \" Karen \"",
      "code": "cout << \" Karen \" << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print \" Koyomi \"",
      "code": "cout << \" Koyomi \" << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;"
      ],
      "err_line": 16,
      "err_msg": "could not convert ‘s.std::set<_Key, _Compare, _Alloc>::find<long long int, std::less<long long int>, std::allocator<long long int> >(((std::set<long long int>::key_type)temp))’ from ‘std::set<long long int>::iterator {aka std::_Rb_tree_const_iterator<long long int>}’ to ‘bool’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "set < long long s ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "s . push ( a [ i ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘class std::set<long long int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "s . push ( b [ i ] ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘class std::set<long long int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "if ( s . find ( temp ) == temp ) cnt ++ ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::set<long long int>::iterator {aka std::_Rb_tree_const_iterator<long long int>}’ and ‘int’)"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        5
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "while ( cin >> n )"
      ],
      "err_line": 16,
      "err_msg": "could not convert ‘s.std::set<_Key, _Compare, _Alloc>::find<long long int, std::less<long long int>, std::allocator<long long int> >(((std::set<long long int>::key_type)temp))’ from ‘std::set<long long int>::iterator {aka std::_Rb_tree_const_iterator<long long int>}’ to ‘bool’"
    },
    {
      "mod_line": [
        16,
        5,
        20
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "while ( cin >> n )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "could not convert ‘s.std::set<_Key, _Compare, _Alloc>::find<long long int, std::less<long long int>, std::allocator<long long int> >(((std::set<long long int>::key_type)temp))’ from ‘std::set<long long int>::iterator {aka std::_Rb_tree_const_iterator<long long int>}’ to ‘bool’"
    },
    {
      "mod_line": [
        16,
        5,
        20,
        12
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "while ( cin >> n )",
        "cout << \" -1 \" << endl ;",
        "int cnt = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "could not convert ‘s.std::set<_Key, _Compare, _Alloc>::find<long long int, std::less<long long int>, std::allocator<long long int> >(((std::set<long long int>::key_type)temp))’ from ‘std::set<long long int>::iterator {aka std::_Rb_tree_const_iterator<long long int>}’ to ‘bool’"
    },
    {
      "mod_line": [
        16,
        5,
        20,
        13
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "while ( cin >> n )",
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        5,
        20,
        8
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "while ( cin >> n )",
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        5,
        12
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "while ( cin >> n )",
        "int cnt = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "could not convert ‘s.std::set<_Key, _Compare, _Alloc>::find<long long int, std::less<long long int>, std::allocator<long long int> >(((std::set<long long int>::key_type)temp))’ from ‘std::set<long long int>::iterator {aka std::_Rb_tree_const_iterator<long long int>}’ to ‘bool’"
    },
    {
      "mod_line": [
        16,
        5,
        12,
        13
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "while ( cin >> n )",
        "int cnt = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        5,
        12,
        8
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "while ( cin >> n )",
        "int cnt = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        5,
        13
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        5,
        13,
        8
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        5,
        8
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        20
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "could not convert ‘s.std::set<_Key, _Compare, _Alloc>::find<long long int, std::less<long long int>, std::allocator<long long int> >(((std::set<long long int>::key_type)temp))’ from ‘std::set<long long int>::iterator {aka std::_Rb_tree_const_iterator<long long int>}’ to ‘bool’"
    },
    {
      "mod_line": [
        16,
        20,
        12
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "cout << \" -1 \" << endl ;",
        "int cnt = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "could not convert ‘s.std::set<_Key, _Compare, _Alloc>::find<long long int, std::less<long long int>, std::allocator<long long int> >(((std::set<long long int>::key_type)temp))’ from ‘std::set<long long int>::iterator {aka std::_Rb_tree_const_iterator<long long int>}’ to ‘bool’"
    },
    {
      "mod_line": [
        16,
        20,
        12,
        13
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "cout << \" -1 \" << endl ;",
        "int cnt = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        20,
        12,
        8
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "cout << \" -1 \" << endl ;",
        "int cnt = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        20,
        13
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        20,
        13,
        8
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        20,
        8
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        12
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "int cnt = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "could not convert ‘s.std::set<_Key, _Compare, _Alloc>::find<long long int, std::less<long long int>, std::allocator<long long int> >(((std::set<long long int>::key_type)temp))’ from ‘std::set<long long int>::iterator {aka std::_Rb_tree_const_iterator<long long int>}’ to ‘bool’"
    },
    {
      "mod_line": [
        16,
        12,
        13
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "int cnt = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        12,
        13,
        8
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "int cnt = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        12,
        8
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "int cnt = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        13
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        13,
        8
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "if ( s . find ( temp ) ) cnt ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        20,
        12,
        13
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cout << \" -1 \" << endl ;",
        "int cnt = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        20,
        12,
        8
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cout << \" -1 \" << endl ;",
        "int cnt = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        20,
        13
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        20,
        13,
        8
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        20,
        8
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        13
      ],
      "mod_code": [
        "while ( cin >> n )",
        "int cnt = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        13,
        8
      ],
      "mod_code": [
        "while ( cin >> n )",
        "int cnt = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        8
      ],
      "mod_code": [
        "while ( cin >> n )",
        "int cnt = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        13,
        8
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        12,
        13
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "int cnt = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        12,
        13,
        8
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "int cnt = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        12,
        8
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "int cnt = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        13
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        13,
        8
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        8
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        8
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}