{
  "meta": {
    "index": 1724,
    "hitid": "338431Z1FL9EEGBWN2021PK7SW2ORO",
    "workerid": "AIWEXPJAU66D9",
    "probid": "262A",
    "subid": "39810274"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integers n , k and ans and integer array a with 101 element",
      "code": "int n , k , ans , a [ 101 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "integer function check with int arguments x and xk",
      "code": "int check ( int x , int xk )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare int ret = 0",
      "code": "int ret = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while x > 0",
      "code": "while ( x )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if x % 10 = 4 or x % 10 = 7 , increment ret",
      "code": "if ( x % 10 == 4 || x % 10 == 7 ) ret ++ ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "divide x by 10",
      "code": "x /= 10 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if ret < = xk return 1",
      "code": "if ( ret <= xk ) { return 1 ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 11,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "loop i from 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increase ans by check ( a [ i ] , k )",
      "code": "ans += check ( a [ i ] , k ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , k , ans [ 101 ] , ans ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "a >> a [ i ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int [101]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "int ret = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        13
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "int ret = 1 ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        13,
        12
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "int ret = 1 ;",
        "a >> a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        13,
        16
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "int ret = 1 ;",
        "a >> a [ i ] ;",
        "cout << ans ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        13,
        7
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "int ret = 1 ;",
        "a >> a [ i ] ;",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        12
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "int ret = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        12,
        16
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "int ret = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << ans ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        12,
        7
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "int ret = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        16
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "int ret = 1 ;",
        "cout << ans ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        16,
        7
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "int ret = 1 ;",
        "cout << ans ;",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        7
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "int ret = 1 ;",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        13,
        12
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "a >> a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        13,
        12,
        16
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "a >> a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << ans ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        13,
        12,
        7
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "a >> a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        13,
        16
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "a >> a [ i ] ;",
        "cout << ans ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        13,
        16,
        7
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "a >> a [ i ] ;",
        "cout << ans ;",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        13,
        7
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "a >> a [ i ] ;",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        16
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << ans ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        16,
        7
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << ans ;",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        7
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "cout << ans ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        7
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "cout << ans ;",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int check ( int x , int xk ) ;",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "int ret = 1 ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int [101]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        2,
        13,
        12
      ],
      "mod_code": [
        "int ret = 1 ;",
        "a >> a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        12,
        16
      ],
      "mod_code": [
        "int ret = 1 ;",
        "a >> a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << ans ;"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        12,
        7
      ],
      "mod_code": [
        "int ret = 1 ;",
        "a >> a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        16
      ],
      "mod_code": [
        "int ret = 1 ;",
        "a >> a [ i ] ;",
        "cout << ans ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int [101]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        2,
        13,
        16,
        7
      ],
      "mod_code": [
        "int ret = 1 ;",
        "a >> a [ i ] ;",
        "cout << ans ;",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int [101]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        2,
        13,
        7
      ],
      "mod_code": [
        "int ret = 1 ;",
        "a >> a [ i ] ;",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int [101]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "int ret = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        16
      ],
      "mod_code": [
        "int ret = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << ans ;"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        16,
        7
      ],
      "mod_code": [
        "int ret = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << ans ;",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        7
      ],
      "mod_code": [
        "int ret = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        12,
        16
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << ans ;"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        12,
        16,
        7
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << ans ;",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        12,
        7
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "cout << ans ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int [101]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        13,
        16,
        7
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "cout << ans ;",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int [101]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int [101]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        12,
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << ans ;"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        16,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << ans ;",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( ret <= 1 ) return 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}