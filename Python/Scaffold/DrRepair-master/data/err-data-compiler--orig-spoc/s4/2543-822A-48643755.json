{
  "meta": {
    "index": 2543,
    "hitid": "3VGET1QSZ0TC160J5AT6D26TUME7WR",
    "workerid": "A2M1CVZZJAN4T4",
    "probid": "822A",
    "subid": "48643755"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long long ints a and b",
      "code": "long long int a , b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read a and b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let i and f = 1 be long long integers",
      "code": "long long int i , f = 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "loop until break",
      "code": "for ( i = 1 ; ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "f = f * i",
      "code": "f *= i ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if i is equal to a or i is equal to b",
      "code": "if ( i == a || i == b )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print f",
      "code": "cout << f << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "break ;"
      ],
      "err_line": 4,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "break ;",
        "a >> a >> b ;"
      ],
      "err_line": 4,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        4,
        2,
        8
      ],
      "mod_code": [
        "break ;",
        "a >> a >> b ;",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        4,
        2,
        8,
        6
      ],
      "mod_code": [
        "break ;",
        "a >> a >> b ;",
        "break break ;",
        "if ( i == ' a ' || i == ' b ' )"
      ],
      "err_line": 4,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        4,
        2,
        6
      ],
      "mod_code": [
        "break ;",
        "a >> a >> b ;",
        "if ( i == ' a ' || i == ' b ' )"
      ],
      "err_line": 4,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "break ;",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        4,
        8,
        6
      ],
      "mod_code": [
        "break ;",
        "break break ;",
        "if ( i == ' a ' || i == ' b ' )"
      ],
      "err_line": 4,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "break ;",
        "if ( i == ' a ' || i == ' b ' )"
      ],
      "err_line": 4,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "a >> a >> b ;",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        2,
        8,
        6
      ],
      "mod_code": [
        "a >> a >> b ;",
        "break break ;",
        "if ( i == ' a ' || i == ' b ' )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        2,
        8,
        6,
        4
      ],
      "mod_code": [
        "a >> a >> b ;",
        "break break ;",
        "if ( i == ' a ' || i == ' b ' )",
        "while ( 1 )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        2,
        8,
        4
      ],
      "mod_code": [
        "a >> a >> b ;",
        "break break ;",
        "while ( 1 )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "break break ;",
        "if ( i == ' a ' || i == ' b ' )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        6,
        4
      ],
      "mod_code": [
        "break break ;",
        "if ( i == ' a ' || i == ' b ' )",
        "while ( 1 )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "break break ;",
        "while ( 1 )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    }
  ]
}