{
  "meta": {
    "index": 2357,
    "hitid": "3XT3KXP24ZSBWB29XJKZ6XXPK0PI6P",
    "workerid": "A1APYLD4DUK33J",
    "probid": "464A",
    "subid": "48366914"
  },
  "lines": [
    {
      "line": 0,
      "text": "create string s",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long longs n , p",
      "code": "long long n , p ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create constant long long MAX with MAX = 2000",
      "code": "const long long MAX = 2000 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create constant long long ALPH with ALPH = 31",
      "code": "const long long ALPH = 31 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "create 4d boolean array used with size MAX by 2 by ALPH by ALPH",
      "code": "bool used [ MAX ] [ 2 ] [ ALPH ] [ ALPH ] ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "create boolean termina with termina = false",
      "code": "bool termina = false ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "create string resp with resp = \" \"",
      "code": "string resp = \" \" ;",
      "indent": 0
    },
    {
      "line": 7,
      "text": "declare getChar with long long x as argument , returning character",
      "code": "char getChar ( long long x )",
      "indent": 0
    },
    {
      "line": 8,
      "text": "create character c with c = x + ' a '",
      "code": "char c = x + ' a ' ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "return c from function",
      "code": "return c ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 11,
      "text": "declare f with long longs pos , upper , ant1 , ant2 with pos default to 0 , upper default to 0 , ant1 default to 30 , ant2 default to 30",
      "code": "bool f ( long long pos = 0 , long long upper = 0 , long long ant1 = 30 , long long ant2 = 30 )",
      "indent": 0
    },
    {
      "line": 12,
      "text": "if termina is true , return false from function",
      "code": "if ( termina ) { return false ; }",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if pos is n",
      "code": "if ( pos == n )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if upper is 1",
      "code": "if ( upper == 1 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "set termina to true",
      "code": "termina = true ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "return true from function",
      "code": "return true ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 18,
      "text": "return false from function",
      "code": "return false ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if used [ pos ] [ upper ] [ ant1 ] [ ant2 ] return false from function",
      "code": "if ( used [ pos ] [ upper ] [ ant1 ] [ ant2 ] ) { return false ; }",
      "indent": 1
    },
    {
      "line": 22,
      "text": "set used [ pos ] [ upper ] [ ant1 ] [ ant2 ] to true",
      "code": "used [ pos ] [ upper ] [ ant1 ] [ ant2 ] = true ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "create long long d with d = s [ pos ] - ' a '",
      "code": "long long d = s [ pos ] - ' a ' ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "if upper is 0",
      "code": "if ( upper == 0 )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "for i = d to p exclusive",
      "code": "for ( long long i = d ; i < p ; i ++ )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "if i is ant1 or i is ant2 , break current loop iteration",
      "code": "if ( i == ant1 || i == ant2 ) { continue ; }",
      "indent": 3
    },
    {
      "line": 27,
      "text": "if i is d",
      "code": "if ( i == d )",
      "indent": 3
    },
    {
      "line": 28,
      "text": "if result of run f with pos + 1 , 0 , ant2 , i as arguments is true",
      "code": "if ( f ( pos + 1 , 0 , ant2 , i ) )",
      "indent": 4
    },
    {
      "line": 29,
      "text": "increment resp by result of run getChar with i as argument",
      "code": "resp += getChar ( i ) ;",
      "indent": 5
    },
    {
      "line": 30,
      "text": "return true efrom function",
      "code": "return true ;",
      "indent": 5
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 32,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 33,
      "text": "if result of run f with pos + 1 , 1 , ant2 , i as arguments is true",
      "code": "if ( f ( pos + 1 , 1 , ant2 , i ) )",
      "indent": 4
    },
    {
      "line": 34,
      "text": "increment resp by result of run getChar with i as argument",
      "code": "resp += getChar ( i ) ;",
      "indent": 5
    },
    {
      "line": 35,
      "text": "return true from function",
      "code": "return true ;",
      "indent": 5
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 39,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 40,
      "text": "for i = 0 to p exclusive",
      "code": "for ( long long i = 0 ; i < p ; i ++ )",
      "indent": 2
    },
    {
      "line": 41,
      "text": "if i is ant1 or i is ant2 , break current loop iteration",
      "code": "if ( i == ant1 || i == ant2 ) { continue ; }",
      "indent": 3
    },
    {
      "line": 42,
      "text": "if result of run f with pos + 1 , 1 , ant2 , i as arguments is true",
      "code": "if ( f ( pos + 1 , 1 , ant2 , i ) )",
      "indent": 3
    },
    {
      "line": 43,
      "text": "increment resp by result of run getChar with i as argument",
      "code": "resp += getChar ( i ) ;",
      "indent": 4
    },
    {
      "line": 44,
      "text": "return true from function",
      "code": "return true ;",
      "indent": 4
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 47,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 48,
      "text": "return false from function",
      "code": "return false ;",
      "indent": 1
    },
    {
      "line": 49,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 50,
      "text": "declare doit with no arguments , returning void",
      "code": "void doit ( )",
      "indent": 0
    },
    {
      "line": 51,
      "text": "read n read p",
      "code": "cin >> n >> p ;",
      "indent": 1
    },
    {
      "line": 52,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 53,
      "text": "if result of run f is true",
      "code": "if ( f ( ) )",
      "indent": 1
    },
    {
      "line": 54,
      "text": "for i = size of resp - 1 to 0 inclusive , decrementing i , print resp [ i ]",
      "code": "for ( long long i = resp . size ( ) - 1 ; i >= 0 ; i -- ) { cout << resp [ i ] ; }",
      "indent": 2
    },
    {
      "line": 55,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 56,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 57,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 58,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 59,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 60,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 61,
      "text": "create long long T with T = 1",
      "code": "long long T = 1 ;",
      "indent": 1
    },
    {
      "line": 62,
      "text": "while decrement T is true , run doit",
      "code": "while ( T -- ) { doit ( ) ; }",
      "indent": 1
    },
    {
      "line": 63,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 64,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;"
      ],
      "err_line": 21,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "used [ pos ] [ upper ] [ ant1 ] = true ;"
      ],
      "err_line": 22,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [31]’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int n’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long MAX = 2000 ;"
      ],
      "err_line": 4,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "long long ALPH = 31 ;"
      ],
      "err_line": 4,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ 2 ] ;"
      ],
      "err_line": 21,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "termina = false ;"
      ],
      "err_line": 5,
      "err_msg": "‘termina’ does not name a type"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "const string resp = \" \" ;"
      ],
      "err_line": 29,
      "err_msg": "passing ‘const string {aka const std::__cxx11::basic_string<char>}’ as ‘this’ argument discards qualifiers [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "char getChar ( long long x ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "c = x + ' a ' ;"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "long long f = 0 , upper = 0 , ant1 = 0 , ant1 = 30 , ant2 = 30 ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant1’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( upper == l )"
      ],
      "err_line": 14,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "for ( i = d ; i < p ; i ++ )"
      ],
      "err_line": 25,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "for ( i = 0 ; i < p ; i ++ )"
      ],
      "err_line": 40,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        50
      ],
      "mod_code": [
        "void doit ( ) ;"
      ],
      "err_line": 51,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        51
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 51,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        52
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 52,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        53
      ],
      "mod_code": [
        "if ( f ( f ) )"
      ],
      "err_line": 53,
      "err_msg": "invalid conversion from ‘bool (*)(long long int, long long int, long long int, long long int)’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        56
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 56,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "string resp = \" \" ;"
      ],
      "err_line": 21,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        6,
        11
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "string resp = \" \" ;",
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        22
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "string resp = \" \" ;",
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        40
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "string resp = \" \" ;",
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "for ( i = 0 ; i < p ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        51
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "string resp = \" \" ;",
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "cin >> n >> k ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        4,
        6,
        22
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "string resp = \" \" ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;"
      ],
      "err_line": 21,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        6,
        22,
        40
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "string resp = \" \" ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;",
        "for ( i = 0 ; i < p ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        6,
        22,
        51
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "string resp = \" \" ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;",
        "cin >> n >> k ;"
      ],
      "err_line": 21,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        6,
        40
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "string resp = \" \" ;",
        "for ( i = 0 ; i < p ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        6,
        40,
        51
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "string resp = \" \" ;",
        "for ( i = 0 ; i < p ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 21,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        6,
        51
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "string resp = \" \" ;",
        "cin >> n >> k ;"
      ],
      "err_line": 21,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        4,
        11,
        22
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        4,
        11,
        22,
        40
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;",
        "for ( i = 0 ; i < p ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        4,
        11,
        22,
        51
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;",
        "cin >> n >> k ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        4,
        11,
        40
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "for ( i = 0 ; i < p ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        4,
        11,
        40,
        51
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "for ( i = 0 ; i < p ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        4,
        11,
        51
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "cin >> n >> k ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        4,
        22
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;"
      ],
      "err_line": 21,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        22,
        40
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;",
        "for ( i = 0 ; i < p ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        22,
        40,
        51
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;",
        "for ( i = 0 ; i < p ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 21,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        22,
        51
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;",
        "cin >> n >> k ;"
      ],
      "err_line": 21,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        40
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "for ( i = 0 ; i < p ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        40,
        51
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "for ( i = 0 ; i < p ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 21,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        51
      ],
      "mod_code": [
        "bool used [ MAX ] [ 2 ] [ ALPH ] ;",
        "cin >> n >> k ;"
      ],
      "err_line": 21,
      "err_msg": "invalid types ‘bool[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "string resp = \" \" ;",
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        6,
        11,
        22
      ],
      "mod_code": [
        "string resp = \" \" ;",
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        6,
        11,
        22,
        40
      ],
      "mod_code": [
        "string resp = \" \" ;",
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;",
        "for ( i = 0 ; i < p ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        6,
        11,
        22,
        51
      ],
      "mod_code": [
        "string resp = \" \" ;",
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;",
        "cin >> n >> k ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        6,
        11,
        40
      ],
      "mod_code": [
        "string resp = \" \" ;",
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "for ( i = 0 ; i < p ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        6,
        11,
        40,
        51
      ],
      "mod_code": [
        "string resp = \" \" ;",
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "for ( i = 0 ; i < p ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        6,
        11,
        51
      ],
      "mod_code": [
        "string resp = \" \" ;",
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "cin >> n >> k ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        6,
        22
      ],
      "mod_code": [
        "string resp = \" \" ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;"
      ],
      "err_line": 22,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [31]’"
    },
    {
      "mod_line": [
        6,
        22,
        40
      ],
      "mod_code": [
        "string resp = \" \" ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;",
        "for ( i = 0 ; i < p ; i ++ )"
      ],
      "err_line": 22,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [31]’"
    },
    {
      "mod_line": [
        6,
        22,
        40,
        51
      ],
      "mod_code": [
        "string resp = \" \" ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;",
        "for ( i = 0 ; i < p ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 22,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [31]’"
    },
    {
      "mod_line": [
        6,
        22,
        51
      ],
      "mod_code": [
        "string resp = \" \" ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;",
        "cin >> n >> k ;"
      ],
      "err_line": 22,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [31]’"
    },
    {
      "mod_line": [
        6,
        40
      ],
      "mod_code": [
        "string resp = \" \" ;",
        "for ( i = 0 ; i < p ; i ++ )"
      ],
      "err_line": 40,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        40,
        51
      ],
      "mod_code": [
        "string resp = \" \" ;",
        "for ( i = 0 ; i < p ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 40,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        51
      ],
      "mod_code": [
        "string resp = \" \" ;",
        "cin >> n >> k ;"
      ],
      "err_line": 51,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        22
      ],
      "mod_code": [
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        11,
        22,
        40
      ],
      "mod_code": [
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;",
        "for ( i = 0 ; i < p ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        11,
        22,
        40,
        51
      ],
      "mod_code": [
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;",
        "for ( i = 0 ; i < p ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        11,
        22,
        51
      ],
      "mod_code": [
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "used [ pos ] [ upper ] [ ant1 ] = true ;",
        "cin >> n >> k ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        11,
        40
      ],
      "mod_code": [
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "for ( i = 0 ; i < p ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        11,
        40,
        51
      ],
      "mod_code": [
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "for ( i = 0 ; i < p ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        11,
        51
      ],
      "mod_code": [
        "long long f = 0 , upper = 0 , ant1 = 0 , ant2 = 30 , ant2 = 30 ;",
        "cin >> n >> k ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int ant2’"
    },
    {
      "mod_line": [
        22,
        40
      ],
      "mod_code": [
        "used [ pos ] [ upper ] [ ant1 ] = true ;",
        "for ( i = 0 ; i < p ; i ++ )"
      ],
      "err_line": 22,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [31]’"
    },
    {
      "mod_line": [
        22,
        40,
        51
      ],
      "mod_code": [
        "used [ pos ] [ upper ] [ ant1 ] = true ;",
        "for ( i = 0 ; i < p ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 22,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [31]’"
    },
    {
      "mod_line": [
        22,
        51
      ],
      "mod_code": [
        "used [ pos ] [ upper ] [ ant1 ] = true ;",
        "cin >> n >> k ;"
      ],
      "err_line": 22,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [31]’"
    },
    {
      "mod_line": [
        40,
        51
      ],
      "mod_code": [
        "for ( i = 0 ; i < p ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 40,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}