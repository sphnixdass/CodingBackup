{
  "meta": {
    "index": 1508,
    "hitid": "3ZVPAMTJWNXQM3UYZJNUWGB51ALGR3",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "837A",
    "subid": "45210971"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let i , n , Ans = , cnt = 0 be ints",
      "code": "int i , n , Ans = 0 , cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while reading s",
      "code": "while ( cin >> s )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "reset cnt to 0",
      "code": "cnt = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 0 to size of s",
      "code": "for ( i = 0 ; i < s . size ( ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if s at i is between 65 and 91 both inclusive then increment cnt",
      "code": "if ( s [ i ] >= 65 && s [ i ] <= 65 + 26 ) cnt ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set Ans to the max of Ans and cnt",
      "code": "Ans = max ( Ans , cnt ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print Ans",
      "code": "cout << Ans << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( s >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        11,
        4
      ],
      "mod_code": [
        "if ( s [ i ] >= 65 && s [ i ] >= 65 ) cnt ++ ;",
        "cout << Ans ;",
        "while ( s >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        11,
        4,
        2
      ],
      "mod_code": [
        "if ( s [ i ] >= 65 && s [ i ] >= 65 ) cnt ++ ;",
        "cout << Ans ;",
        "while ( s >> s )",
        "int i , n , Ans , cnt = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "if ( s [ i ] >= 65 && s [ i ] >= 65 ) cnt ++ ;",
        "while ( s >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        4,
        2
      ],
      "mod_code": [
        "if ( s [ i ] >= 65 && s [ i ] >= 65 ) cnt ++ ;",
        "while ( s >> s )",
        "int i , n , Ans , cnt = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "cout << Ans ;",
        "while ( s >> s )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        4,
        2
      ],
      "mod_code": [
        "cout << Ans ;",
        "while ( s >> s )",
        "int i , n , Ans , cnt = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "while ( s >> s )",
        "int i , n , Ans , cnt = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}