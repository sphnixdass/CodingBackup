{
  "meta": {
    "index": 1836,
    "hitid": "3GV1I4SEO9JDMCAFIMHCYDPH0HPL61",
    "workerid": "A1APYLD4DUK33J",
    "probid": "443A",
    "subid": "48878230"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create character c",
      "code": "char c ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create static integer array b of size 26",
      "code": "static int b [ 26 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integers n , m with n = 0",
      "code": "int n = 0 , m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read c",
      "code": "cin . get ( c ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for c is not ' } '",
      "code": "for ( ; c != ' } ' ; )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if c is greater than or equal to ' a ' and c is less than or equal to ' z ' , set b [ ( c - ' a ' ) ] to 1",
      "code": "if ( c >= ' a ' && c <= ' z ' ) b [ ( c - ' a ' ) ] = 1 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read c",
      "code": "cin . get ( c ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to 26 exclusive , increment n by b [ i ]",
      "code": "for ( int i = 0 ; i < 26 ; i ++ ) { n += b [ i ] ; }",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print n print newline",
      "code": "cout << n << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( ; c != ' } ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "character = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( c ; c != ' } ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( c >= ' a ' && c <= ' z ' ) b [ ( c - ' a ' a ' a ' ) ] = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘a’"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "for ( ; c != ' } ;",
        "cout << n ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        10,
        6
      ],
      "mod_code": [
        "for ( ; c != ' } ;",
        "cout << n ;",
        "if ( c >= ' a ' && c <= ' z ' ) b [ ( c - ' a ' a ' a ' ) ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        10,
        6,
        1
      ],
      "mod_code": [
        "for ( ; c != ' } ;",
        "cout << n ;",
        "if ( c >= ' a ' && c <= ' z ' ) b [ ( c - ' a ' a ' a ' ) ] = 1 ;",
        "character = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        10,
        1
      ],
      "mod_code": [
        "for ( ; c != ' } ;",
        "cout << n ;",
        "character = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( ; c != ' } ;",
        "if ( c >= ' a ' && c <= ' z ' ) b [ ( c - ' a ' a ' a ' ) ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        6,
        1
      ],
      "mod_code": [
        "for ( ; c != ' } ;",
        "if ( c >= ' a ' && c <= ' z ' ) b [ ( c - ' a ' a ' a ' ) ] = 1 ;",
        "character = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "for ( ; c != ' } ;",
        "character = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "cout << n ;",
        "for ( c ; c != ' } ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        10,
        5,
        6
      ],
      "mod_code": [
        "cout << n ;",
        "for ( c ; c != ' } ;",
        "if ( c >= ' a ' && c <= ' z ' ) b [ ( c - ' a ' a ' a ' ) ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        10,
        5,
        6,
        1
      ],
      "mod_code": [
        "cout << n ;",
        "for ( c ; c != ' } ;",
        "if ( c >= ' a ' && c <= ' z ' ) b [ ( c - ' a ' a ' a ' ) ] = 1 ;",
        "character = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        10,
        5,
        1
      ],
      "mod_code": [
        "cout << n ;",
        "for ( c ; c != ' } ;",
        "character = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "cout << n ;",
        "if ( c >= ' a ' && c <= ' z ' ) b [ ( c - ' a ' a ' a ' ) ] = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘a’"
    },
    {
      "mod_line": [
        10,
        6,
        1
      ],
      "mod_code": [
        "cout << n ;",
        "if ( c >= ' a ' && c <= ' z ' ) b [ ( c - ' a ' a ' a ' ) ] = 1 ;",
        "character = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "cout << n ;",
        "character = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( c ; c != ' } ;",
        "if ( c >= ' a ' && c <= ' z ' ) b [ ( c - ' a ' a ' a ' ) ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        6,
        1
      ],
      "mod_code": [
        "for ( c ; c != ' } ;",
        "if ( c >= ' a ' && c <= ' z ' ) b [ ( c - ' a ' a ' a ' ) ] = 1 ;",
        "character = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "for ( c ; c != ' } ;",
        "character = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "if ( c >= ' a ' && c <= ' z ' ) b [ ( c - ' a ' a ' a ' ) ] = 1 ;",
        "character = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    }
  ]
}