{
  "meta": {
    "index": 2516,
    "hitid": "32W3UF2EZOF64LCVMLVYYWFGB46C43",
    "workerid": "A36Q5TAZ7L6HOS",
    "probid": "822A",
    "subid": "42294444"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function fact which accepts integer n and returns long long integer",
      "code": "long long int fact ( int n )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if n < = 0",
      "code": "if ( n <= 0 )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return 1",
      "code": "return 1 ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return n * fact ( n - 1 )",
      "code": "return n * fact ( n - 1 ) ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 7,
      "text": "a , b = long long integers",
      "code": "long long int a , b ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read a and b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "x = long long integer set to min ( a , b )",
      "code": "long long int x = min ( a , b ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print fact ( x )",
      "code": "cout << fact ( x ) << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "a >> a >> b ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        3,
        10
      ],
      "mod_code": [
        "a >> a >> b ;",
        "else else",
        "cout << fact ( x ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "else else",
        "cout << fact ( x ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}