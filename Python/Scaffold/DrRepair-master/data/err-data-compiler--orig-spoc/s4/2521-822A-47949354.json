{
  "meta": {
    "index": 2521,
    "hitid": "38XPGNCKHTU23UIVD2Q3OO35WBMV4L",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "822A",
    "subid": "47949354"
  },
  "lines": [
    {
      "line": 0,
      "text": "function fact ( get long long n , return long long )",
      "code": "long long fact ( long long n )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if n is 0 or 1",
      "code": "if ( ( n == 0 ) || ( n == 1 ) )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return 1",
      "code": "return 1 ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return n * fact ( n - 1 )",
      "code": "return n * fact ( n - 1 ) ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "function gcd ( get long long a and b , return long long )",
      "code": "long long gcd ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 7,
      "text": "if b is 0",
      "code": "if ( b == 0 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return a",
      "code": "return a ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "return gcd ( b , a modulo b )",
      "code": "return gcd ( b , a % b ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 13,
      "text": "a , b = long long",
      "code": "long long a , b ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "read a , b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "c = min ( a , b )",
      "code": "long long c = min ( a , b ) ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print fact ( c )",
      "code": "cout << fact ( c ) << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "c = min ( a , b ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long fact ( long long n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        6
      ],
      "mod_code": [
        "c = min ( a , b ) ;",
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        6,
        0
      ],
      "mod_code": [
        "c = min ( a , b ) ;",
        "long long gcd ( long long a , long long b ) ;",
        "long long fact ( long long n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        6,
        0,
        14
      ],
      "mod_code": [
        "c = min ( a , b ) ;",
        "long long gcd ( long long a , long long b ) ;",
        "long long fact ( long long n ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        6,
        0,
        16
      ],
      "mod_code": [
        "c = min ( a , b ) ;",
        "long long gcd ( long long a , long long b ) ;",
        "long long fact ( long long n ) ;",
        "cout << fact ( c ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        6,
        14
      ],
      "mod_code": [
        "c = min ( a , b ) ;",
        "long long gcd ( long long a , long long b ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        6,
        14,
        16
      ],
      "mod_code": [
        "c = min ( a , b ) ;",
        "long long gcd ( long long a , long long b ) ;",
        "cin >> a , b ;",
        "cout << fact ( c ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        6,
        16
      ],
      "mod_code": [
        "c = min ( a , b ) ;",
        "long long gcd ( long long a , long long b ) ;",
        "cout << fact ( c ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        0
      ],
      "mod_code": [
        "c = min ( a , b ) ;",
        "long long fact ( long long n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        0,
        14
      ],
      "mod_code": [
        "c = min ( a , b ) ;",
        "long long fact ( long long n ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        0,
        14,
        16
      ],
      "mod_code": [
        "c = min ( a , b ) ;",
        "long long fact ( long long n ) ;",
        "cin >> a , b ;",
        "cout << fact ( c ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        0,
        16
      ],
      "mod_code": [
        "c = min ( a , b ) ;",
        "long long fact ( long long n ) ;",
        "cout << fact ( c ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        14
      ],
      "mod_code": [
        "c = min ( a , b ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 15,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        14,
        16
      ],
      "mod_code": [
        "c = min ( a , b ) ;",
        "cin >> a , b ;",
        "cout << fact ( c ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16
      ],
      "mod_code": [
        "c = min ( a , b ) ;",
        "cout << fact ( c ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "long long fact ( long long n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        0,
        14
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "long long fact ( long long n ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        0,
        14,
        16
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "long long fact ( long long n ) ;",
        "cin >> a , b ;",
        "cout << fact ( c ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        0,
        16
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "long long fact ( long long n ) ;",
        "cout << fact ( c ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        16
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "cin >> a , b ;",
        "cout << fact ( c ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;",
        "cout << fact ( c ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "long long fact ( long long n ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14,
        16
      ],
      "mod_code": [
        "long long fact ( long long n ) ;",
        "cin >> a , b ;",
        "cout << fact ( c ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "long long fact ( long long n ) ;",
        "cout << fact ( c ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}