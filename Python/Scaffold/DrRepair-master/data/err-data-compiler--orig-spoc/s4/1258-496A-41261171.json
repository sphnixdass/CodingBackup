{
  "meta": {
    "index": 1258,
    "hitid": "3PEG1BH7AEL88I9STDMJUTYUQ5TKBR",
    "workerid": "A2M1CVZZJAN4T4",
    "probid": "496A",
    "subid": "41261171"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer n and array of ints a of size 110",
      "code": "int n , a [ 110 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n values into array a",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer ans and assign 1000 to it",
      "code": "int ans = 1000 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to i < n - 1",
      "code": "for ( int i = 1 ; i < n - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "let m be an integer equal to 0",
      "code": "int m = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for j = 1 to j = n exclusive",
      "code": "for ( int j = 1 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if j and i are equal",
      "code": "if ( j == i )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "continue",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "else if j is equal to i + 1",
      "code": "else if ( j == i + 1 )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "set m to a [ j ] - a [ i - 1 ] if m is less than or equal to a [ j ] - a [ i - 1 ]",
      "code": "m = m > ( a [ j ] - a [ i - 1 ] ) ? m : ( a [ j ] - a [ i - 1 ] ) ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if m is not greater than a [ j ] - a [ j - 1 ] assign a [ j ] - a [ j - 1 ] to m",
      "code": "m = m > ( a [ j ] - a [ j - 1 ] ) ? m : ( a [ j ] - a [ j - 1 ] ) ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "ans = m if ans is greater than or equal to m",
      "code": "ans = ans < m ? ans : m ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int ans create = 1000 ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int m an = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘an’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( m > a [ j ] - a [ j - 1 ] ) m [ j - 1 ] = a [ j ] - 1 ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        13,
        6
      ],
      "mod_code": [
        "if ( j % i == 0 )",
        "if ( m > a [ j ] - a [ j - 1 ] ) m = a [ j ] - a [ j - 1 ] ;",
        "int m an = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘an’"
    },
    {
      "mod_line": [
        8,
        13,
        6,
        5
      ],
      "mod_code": [
        "if ( j % i == 0 )",
        "if ( m > a [ j ] - a [ j - 1 ] ) m = a [ j ] - a [ j - 1 ] ;",
        "int m an = 0 ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        5
      ],
      "mod_code": [
        "if ( j % i == 0 )",
        "if ( m > a [ j ] - a [ j - 1 ] ) m = a [ j ] - a [ j - 1 ] ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "if ( j % i == 0 )",
        "int m an = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘an’"
    },
    {
      "mod_line": [
        8,
        6,
        13
      ],
      "mod_code": [
        "if ( j % i == 0 )",
        "int m an = 0 ;",
        "if ( m > a [ j ] - a [ j - 1 ] ) m [ j - 1 ] = a [ j ] - 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘an’"
    },
    {
      "mod_line": [
        8,
        6,
        13,
        5
      ],
      "mod_code": [
        "if ( j % i == 0 )",
        "int m an = 0 ;",
        "if ( m > a [ j ] - a [ j - 1 ] ) m [ j - 1 ] = a [ j ] - 1 ] ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        6,
        5
      ],
      "mod_code": [
        "if ( j % i == 0 )",
        "int m an = 0 ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "if ( j % i == 0 )",
        "if ( m > a [ j ] - a [ j - 1 ] ) m [ j - 1 ] = a [ j ] - 1 ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        13,
        5
      ],
      "mod_code": [
        "if ( j % i == 0 )",
        "if ( m > a [ j ] - a [ j - 1 ] ) m [ j - 1 ] = a [ j ] - 1 ] ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "if ( j % i == 0 )",
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        8,
        6
      ],
      "mod_code": [
        "if ( m > a [ j ] - a [ j - 1 ] ) m = a [ j ] - a [ j - 1 ] ;",
        "if ( j & i )",
        "int m an = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘an’"
    },
    {
      "mod_line": [
        13,
        8,
        6,
        5
      ],
      "mod_code": [
        "if ( m > a [ j ] - a [ j - 1 ] ) m = a [ j ] - a [ j - 1 ] ;",
        "if ( j & i )",
        "int m an = 0 ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        8,
        5
      ],
      "mod_code": [
        "if ( m > a [ j ] - a [ j - 1 ] ) m = a [ j ] - a [ j - 1 ] ;",
        "if ( j & i )",
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "if ( m > a [ j ] - a [ j - 1 ] ) m = a [ j ] - a [ j - 1 ] ;",
        "int m an = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘an’"
    },
    {
      "mod_line": [
        13,
        6,
        5
      ],
      "mod_code": [
        "if ( m > a [ j ] - a [ j - 1 ] ) m = a [ j ] - a [ j - 1 ] ;",
        "int m an = 0 ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "if ( m > a [ j ] - a [ j - 1 ] ) m = a [ j ] - a [ j - 1 ] ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "if ( j & i )",
        "int m an = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘an’"
    },
    {
      "mod_line": [
        8,
        6,
        13
      ],
      "mod_code": [
        "if ( j & i )",
        "int m an = 0 ;",
        "if ( m > a [ j ] - a [ j - 1 ] ) m [ j - 1 ] = a [ j ] - 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘an’"
    },
    {
      "mod_line": [
        8,
        6,
        13,
        5
      ],
      "mod_code": [
        "if ( j & i )",
        "int m an = 0 ;",
        "if ( m > a [ j ] - a [ j - 1 ] ) m [ j - 1 ] = a [ j ] - 1 ] ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        6,
        5
      ],
      "mod_code": [
        "if ( j & i )",
        "int m an = 0 ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "if ( j & i )",
        "if ( m > a [ j ] - a [ j - 1 ] ) m [ j - 1 ] = a [ j ] - 1 ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        13,
        5
      ],
      "mod_code": [
        "if ( j & i )",
        "if ( m > a [ j ] - a [ j - 1 ] ) m [ j - 1 ] = a [ j ] - 1 ] ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "if ( j & i )",
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "int m an = 0 ;",
        "if ( m > a [ j ] - a [ j - 1 ] ) m [ j - 1 ] = a [ j ] - 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘an’"
    },
    {
      "mod_line": [
        6,
        13,
        5
      ],
      "mod_code": [
        "int m an = 0 ;",
        "if ( m > a [ j ] - a [ j - 1 ] ) m [ j - 1 ] = a [ j ] - 1 ] ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "int m an = 0 ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "if ( m > a [ j ] - a [ j - 1 ] ) m [ j - 1 ] = a [ j ] - 1 ] ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}