{
  "meta": {
    "index": 2159,
    "hitid": "3I01FDIL6M266Z3MI37LPN00CQI2DT",
    "workerid": "A1APYLD4DUK33J",
    "probid": "484A",
    "subid": "47658738"
  },
  "lines": [
    {
      "line": 0,
      "text": "create long longs l , r",
      "code": "long long l , r ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer t",
      "code": "int t ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while decrement t is true",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read l read r",
      "code": "cin >> l >> r ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 0 to 64 exclusive",
      "code": "for ( int i = 0 ; i < 64 ; ++ i )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if ( l bitwise and ( 1LL bitshift left long long casted ( i ) ) ) is 0",
      "code": "if ( ( l & ( 1LL << ( long long ) i ) ) == 0 )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if ( l bitwise or ( 1LL bitshift left long long casted ( i ) ) ) is less than or equal to r",
      "code": "if ( ( l | ( 1LL << ( long long ) i ) ) <= r )",
      "indent": 4
    },
    {
      "line": 9,
      "text": "set l to l bitwise or ( 1LL bitshift left long long casted ( i ) )",
      "code": "l = ( l | ( 1LL << ( long long ) i ) ) ;",
      "indent": 5
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 11,
      "text": "break loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print l print ' \\ n '",
      "code": "cout << l << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin read t ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( t t )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘t’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < 64 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( l & ( long long ) ( 1LL << ( long long ) i ) ) == 0 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘==’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "for ( i = 0 ; i < 64 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        3
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "for ( i = 0 ; i < 64 ; i ++ )",
        "cin read t ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8,
        6,
        3,
        14
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "for ( i = 0 ; i < 64 ; i ++ )",
        "cin read t ;",
        "l << l << ' \\n ' ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8,
        6,
        3,
        10
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "for ( i = 0 ; i < 64 ; i ++ )",
        "cin read t ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8,
        6,
        3,
        11
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "for ( i = 0 ; i < 64 ; i ++ )",
        "cin read t ;",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8,
        6,
        14
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "for ( i = 0 ; i < 64 ; i ++ )",
        "l << l << ' \\n ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        14,
        10
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "for ( i = 0 ; i < 64 ; i ++ )",
        "l << l << ' \\n ' ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        14,
        11
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "for ( i = 0 ; i < 64 ; i ++ )",
        "l << l << ' \\n ' ;",
        "break break ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        10
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "for ( i = 0 ; i < 64 ; i ++ )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        10,
        11
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "for ( i = 0 ; i < 64 ; i ++ )",
        "else else",
        "break break ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        11
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "for ( i = 0 ; i < 64 ; i ++ )",
        "break break ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "cin read t ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8,
        3,
        14
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "cin read t ;",
        "l << l << ' \\n ' ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8,
        3,
        14,
        10
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "cin read t ;",
        "l << l << ' \\n ' ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8,
        3,
        14,
        11
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "cin read t ;",
        "l << l << ' \\n ' ;",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8,
        3,
        10
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "cin read t ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8,
        3,
        10,
        11
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "cin read t ;",
        "else else",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8,
        3,
        11
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "cin read t ;",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        8,
        14,
        10
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "l << l << ' \\n ' ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        14,
        10,
        11
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "l << l << ' \\n ' ;",
        "else else",
        "break break ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        14,
        11
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "l << l << ' \\n ' ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        10,
        11
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "else else",
        "break break ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "if ( ( l ^ ( long long ) ( 1LL << ( long long ) i ) <= r ) )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < 64 ; i ++ )",
        "cin read t ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        3,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < 64 ; i ++ )",
        "cin read t ;",
        "l << l << ' \\n ' ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        3,
        14,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < 64 ; i ++ )",
        "cin read t ;",
        "l << l << ' \\n ' ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        3,
        14,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 64 ; i ++ )",
        "cin read t ;",
        "l << l << ' \\n ' ;",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        3,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < 64 ; i ++ )",
        "cin read t ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        3,
        10,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 64 ; i ++ )",
        "cin read t ;",
        "else else",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        3,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 64 ; i ++ )",
        "cin read t ;",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < 64 ; i ++ )",
        "l << l << ' \\n ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < 64 ; i ++ )",
        "l << l << ' \\n ' ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        10,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 64 ; i ++ )",
        "l << l << ' \\n ' ;",
        "else else",
        "break break ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 64 ; i ++ )",
        "l << l << ' \\n ' ;",
        "break break ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < 64 ; i ++ )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 64 ; i ++ )",
        "else else",
        "break break ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 64 ; i ++ )",
        "break break ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "cin read t ;",
        "l << l << ' \\n ' ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        3,
        14,
        10
      ],
      "mod_code": [
        "cin read t ;",
        "l << l << ' \\n ' ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        3,
        14,
        10,
        11
      ],
      "mod_code": [
        "cin read t ;",
        "l << l << ' \\n ' ;",
        "else else",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        3,
        14,
        11
      ],
      "mod_code": [
        "cin read t ;",
        "l << l << ' \\n ' ;",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "cin read t ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        3,
        10,
        11
      ],
      "mod_code": [
        "cin read t ;",
        "else else",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "cin read t ;",
        "break break ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        14,
        10
      ],
      "mod_code": [
        "l << l << ' \\n ' ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        10,
        11
      ],
      "mod_code": [
        "l << l << ' \\n ' ;",
        "else else",
        "break break ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        11
      ],
      "mod_code": [
        "l << l << ' \\n ' ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "else else",
        "break break ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}