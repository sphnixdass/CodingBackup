{
  "meta": {
    "index": 1125,
    "hitid": "3VCK0Q0PO588W1RLSAHA24JFS94N05",
    "workerid": "ACI8PUCF5OPDC",
    "probid": "1085A",
    "subid": "48763726"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "get s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integers l and r with l = 0 and r = size of s - 1",
      "code": "int l = 0 , r = s . size ( ) - 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create string q",
      "code": "string q ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create bool re with re = false",
      "code": "bool re = false ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if size of s mod 2 is equal to 0 do the following",
      "code": "if ( s . size ( ) % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "add s [ r ] to q",
      "code": "q . push_back ( s [ r ] ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "decrement r",
      "code": "r -- ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "add s [ l ] to q",
      "code": "q . push_back ( s [ l ] ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increment l",
      "code": "l ++ ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set re to true",
      "code": "re = true ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "while r greater than or equal to 1 do the following",
      "code": "while ( r >= l )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if re is true then do the following",
      "code": "if ( re )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "add s [ r ] to q",
      "code": "q . push_back ( s [ r ] ) ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "decrement r",
      "code": "r -- ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "set re to false",
      "code": "re = false ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 20,
      "text": "add s [ l ] to q",
      "code": "q . push_back ( s [ l ] ) ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "increment l",
      "code": "l ++ ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "set re to true",
      "code": "re = true ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "reverse q",
      "code": "reverse ( q . begin ( ) , q . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print q and a new line",
      "code": "cout << q << endl ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 7,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "while ( re )"
      ],
      "err_line": 19,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "while ( r >= 1 )",
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        19
      ],
      "mod_code": [
        "while ( r >= 1 )",
        "string n ;",
        "else else"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        19,
        3
      ],
      "mod_code": [
        "while ( r >= 1 )",
        "string n ;",
        "else else",
        "int l = 0 , r = s . size ( ) - r ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        19,
        25
      ],
      "mod_code": [
        "while ( r >= 1 )",
        "string n ;",
        "else else",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        3
      ],
      "mod_code": [
        "while ( r >= 1 )",
        "string n ;",
        "int l = 0 , r = s . size ( ) - r ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        3,
        25
      ],
      "mod_code": [
        "while ( r >= 1 )",
        "string n ;",
        "int l = 0 , r = s . size ( ) - r ;",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        25
      ],
      "mod_code": [
        "while ( r >= 1 )",
        "string n ;",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "while ( r >= 1 )",
        "else else"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        19,
        3
      ],
      "mod_code": [
        "while ( r >= 1 )",
        "else else",
        "int l = 0 , r = s . size ( ) - r ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        19,
        3,
        25
      ],
      "mod_code": [
        "while ( r >= 1 )",
        "else else",
        "int l = 0 , r = s . size ( ) - r ;",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        19,
        25
      ],
      "mod_code": [
        "while ( r >= 1 )",
        "else else",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        3,
        25
      ],
      "mod_code": [
        "while ( r >= 1 )",
        "int l = 0 , r = s . size ( ) - r ;",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        25
      ],
      "mod_code": [
        "while ( r >= 1 )",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "while ( r -- >= 1 )",
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        19
      ],
      "mod_code": [
        "while ( r -- >= 1 )",
        "string n ;",
        "else else"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        19,
        3
      ],
      "mod_code": [
        "while ( r -- >= 1 )",
        "string n ;",
        "else else",
        "int l = 0 , r = s . size ( ) - r ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        19,
        25
      ],
      "mod_code": [
        "while ( r -- >= 1 )",
        "string n ;",
        "else else",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        3
      ],
      "mod_code": [
        "while ( r -- >= 1 )",
        "string n ;",
        "int l = 0 , r = s . size ( ) - r ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        3,
        25
      ],
      "mod_code": [
        "while ( r -- >= 1 )",
        "string n ;",
        "int l = 0 , r = s . size ( ) - r ;",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        25
      ],
      "mod_code": [
        "while ( r -- >= 1 )",
        "string n ;",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "while ( r -- >= 1 )",
        "else else"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        19,
        3
      ],
      "mod_code": [
        "while ( r -- >= 1 )",
        "else else",
        "int l = 0 , r = s . size ( ) - r ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        19,
        3,
        25
      ],
      "mod_code": [
        "while ( r -- >= 1 )",
        "else else",
        "int l = 0 , r = s . size ( ) - r ;",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        19,
        25
      ],
      "mod_code": [
        "while ( r -- >= 1 )",
        "else else",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        3,
        25
      ],
      "mod_code": [
        "while ( r -- >= 1 )",
        "int l = 0 , r = s . size ( ) - r ;",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        25
      ],
      "mod_code": [
        "while ( r -- >= 1 )",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        19
      ],
      "mod_code": [
        "string n ;",
        "else else"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        19,
        3
      ],
      "mod_code": [
        "string n ;",
        "else else",
        "int l = 0 , r = s . size ( ) - r ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        19,
        3,
        25
      ],
      "mod_code": [
        "string n ;",
        "else else",
        "int l = 0 , r = s . size ( ) - r ;",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        19,
        25
      ],
      "mod_code": [
        "string n ;",
        "else else",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "string n ;",
        "int l = 0 , r = s . size ( ) - r ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        25
      ],
      "mod_code": [
        "string n ;",
        "int l = 0 , r = s . size ( ) - r ;",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        25
      ],
      "mod_code": [
        "string n ;",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        3
      ],
      "mod_code": [
        "else else",
        "int l = 0 , r = s . size ( ) - r ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        3,
        25
      ],
      "mod_code": [
        "else else",
        "int l = 0 , r = s . size ( ) - r ;",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        25
      ],
      "mod_code": [
        "else else",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        25
      ],
      "mod_code": [
        "int l = 0 , r = s . size ( ) - r ;",
        "reverse ( q . begin ( ) , q . end ( ) + q ) ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::basic_string<char>::iterator {aka __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}