{
  "meta": {
    "index": 1120,
    "hitid": "3PKJ68EHDNQNOB6WBKW3FP1F561HJX",
    "workerid": "A1APYLD4DUK33J",
    "probid": "1085A",
    "subid": "48973064"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integers l , index",
      "code": "int l , index ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set l to size of s",
      "code": "l = s . size ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if l is 1",
      "code": "if ( l == 1 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print s print newline",
      "code": "cout << s << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if l % 2 is 0",
      "code": "if ( l % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set index to ( l / 2 ) - 1",
      "code": "index = ( l / 2 ) - 1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set index to ( l / 2 )",
      "code": "index = ( l / 2 ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print s [ index ]",
      "code": "cout << s [ index ] ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "create integer i with i = index + 1",
      "code": "int i = index + 1 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "create integer j with j = index - 1",
      "code": "int j = index - 1 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "while 1 is true",
      "code": "while ( 1 )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if i is less than l and j is greater than or equal to 0",
      "code": "if ( i < l && j >= 0 )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "print s [ i ] print s [ j ]",
      "code": "cout << s [ i ] << s [ j ] ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "else if i is greater than or equal to l and j is greater than or equal to 0",
      "code": "else if ( i > l && j >= 0 )",
      "indent": 3
    },
    {
      "line": 20,
      "text": "print s [ j ]",
      "code": "cout << s [ j ] ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "else if i is less than l and j is less than 0",
      "code": "else if ( i < l && j < 0 )",
      "indent": 3
    },
    {
      "line": 22,
      "text": "print s [ i ]",
      "code": "cout << s [ i ] ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 24,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 26,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "decrement j",
      "code": "j -- ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 29,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int l = s . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        13,
        18,
        22,
        23
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "cout << s [ i ] << endl ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13,
        18,
        22,
        24
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "cout << s [ i ] << endl ;",
        "break break ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        13,
        18,
        22,
        14
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "cout << s [ i ] << endl ;",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        23
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13,
        18,
        23,
        24
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "else else",
        "break break ;"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13,
        18,
        23,
        14
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "else else",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        24
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "break break ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        13,
        18,
        24,
        14
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "break break ;",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        14
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22,
        23
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "cout << s [ i ] << endl ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13,
        22,
        23,
        24
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "cout << s [ i ] << endl ;",
        "else else",
        "break break ;"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13,
        22,
        23,
        14
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "cout << s [ i ] << endl ;",
        "else else",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22,
        24
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "cout << s [ i ] << endl ;",
        "break break ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        13,
        22,
        24,
        14
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "cout << s [ i ] << endl ;",
        "break break ;",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22,
        14
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "cout << s [ i ] << endl ;",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        23
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13,
        23,
        24
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "else else",
        "break break ;"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13,
        23,
        24,
        14
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "else else",
        "break break ;",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        23,
        14
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "else else",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "break break ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        13,
        24,
        14
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "break break ;",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "cout << s [ index ] << endl ;",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        22,
        23
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "cout << s [ i ] << endl ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        22,
        23,
        24
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "cout << s [ i ] << endl ;",
        "else else",
        "break break ;"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        22,
        23,
        14
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "cout << s [ i ] << endl ;",
        "else else",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        22,
        24
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "cout << s [ i ] << endl ;",
        "break break ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        18,
        22,
        24,
        14
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "cout << s [ i ] << endl ;",
        "break break ;",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        22,
        14
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "cout << s [ i ] << endl ;",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        23
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        23,
        24
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "else else",
        "break break ;"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        23,
        24,
        14
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "else else",
        "break break ;",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        23,
        14
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "else else",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "break break ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        18,
        24,
        14
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "break break ;",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        14
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ j ] << endl ;",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23
      ],
      "mod_code": [
        "cout << s [ i ] << endl ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22,
        23,
        24
      ],
      "mod_code": [
        "cout << s [ i ] << endl ;",
        "else else",
        "break break ;"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22,
        23,
        24,
        14
      ],
      "mod_code": [
        "cout << s [ i ] << endl ;",
        "else else",
        "break break ;",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        14
      ],
      "mod_code": [
        "cout << s [ i ] << endl ;",
        "else else",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        24
      ],
      "mod_code": [
        "cout << s [ i ] << endl ;",
        "break break ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        22,
        24,
        14
      ],
      "mod_code": [
        "cout << s [ i ] << endl ;",
        "break break ;",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        14
      ],
      "mod_code": [
        "cout << s [ i ] << endl ;",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        24
      ],
      "mod_code": [
        "else else",
        "break break ;"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        23,
        24,
        14
      ],
      "mod_code": [
        "else else",
        "break break ;",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        14
      ],
      "mod_code": [
        "else else",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        14
      ],
      "mod_code": [
        "break break ;",
        "i = index + 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}