{
  "meta": {
    "index": 2235,
    "hitid": "3ZQA3IO31BLQLBCFP8LNVY2UOYAO1U",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "556A",
    "subid": "48981494"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "n0 = integer",
      "code": "int n0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "n1 = integer",
      "code": "int n1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "n0 = 0",
      "code": "n0 = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "n1 = 0",
      "code": "n1 = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if s [ i ] is 0",
      "code": "if ( s [ i ] == ' 0 ' )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increase n0 by 1",
      "code": "n0 ++ ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increase n1 by 1",
      "code": "n1 ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print absolute value of the result of n0 - n1",
      "code": "cout << abs ( n0 - n1 ) << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int n0 = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int n1 = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n1’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "if ( s [ i ] == 0 )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        10,
        6
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "if ( s [ i ] == 0 )",
        "int n1 = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        10,
        6,
        15
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "if ( s [ i ] == 0 )",
        "int n1 = 0 ;",
        "cout << abs ( n0 - n1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        10,
        6,
        12
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "if ( s [ i ] == 0 )",
        "int n1 = 0 ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        10,
        6,
        9
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "if ( s [ i ] == 0 )",
        "int n1 = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        10,
        15
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "if ( s [ i ] == 0 )",
        "cout << abs ( n0 - n1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        10,
        15,
        12
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "if ( s [ i ] == 0 )",
        "cout << abs ( n0 - n1 ) ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        10,
        15,
        9
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "if ( s [ i ] == 0 )",
        "cout << abs ( n0 - n1 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        10,
        12
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "if ( s [ i ] == 0 )",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        10,
        12,
        9
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "if ( s [ i ] == 0 )",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        10,
        9
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "if ( s [ i ] == 0 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "int n1 = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        6,
        15
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "int n1 = 0 ;",
        "cout << abs ( n0 - n1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        6,
        15,
        12
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "int n1 = 0 ;",
        "cout << abs ( n0 - n1 ) ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        6,
        15,
        9
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "int n1 = 0 ;",
        "cout << abs ( n0 - n1 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        6,
        12
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "int n1 = 0 ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        6,
        12,
        9
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "int n1 = 0 ;",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "int n1 = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "cout << abs ( n0 - n1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        15,
        12
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "cout << abs ( n0 - n1 ) ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        15,
        12,
        9
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "cout << abs ( n0 - n1 ) ;",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        15,
        9
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "cout << abs ( n0 - n1 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        12,
        9
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "int n0 = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n0’"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "int n1 = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n1’"
    },
    {
      "mod_line": [
        10,
        6,
        15
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "int n1 = 0 ;",
        "cout << abs ( n0 - n1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n1’"
    },
    {
      "mod_line": [
        10,
        6,
        15,
        12
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "int n1 = 0 ;",
        "cout << abs ( n0 - n1 ) ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n1’"
    },
    {
      "mod_line": [
        10,
        6,
        15,
        9
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "int n1 = 0 ;",
        "cout << abs ( n0 - n1 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n1’"
    },
    {
      "mod_line": [
        10,
        6,
        12
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "int n1 = 0 ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n1’"
    },
    {
      "mod_line": [
        10,
        6,
        12,
        9
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "int n1 = 0 ;",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n1’"
    },
    {
      "mod_line": [
        10,
        6,
        9
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "int n1 = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n1’"
    },
    {
      "mod_line": [
        10,
        15,
        12
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "cout << abs ( n0 - n1 ) ;",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        15,
        12,
        9
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "cout << abs ( n0 - n1 ) ;",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        15,
        9
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "cout << abs ( n0 - n1 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        12,
        9
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "int n1 = 0 ;",
        "cout << abs ( n0 - n1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n1’"
    },
    {
      "mod_line": [
        6,
        15,
        12
      ],
      "mod_code": [
        "int n1 = 0 ;",
        "cout << abs ( n0 - n1 ) ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n1’"
    },
    {
      "mod_line": [
        6,
        15,
        12,
        9
      ],
      "mod_code": [
        "int n1 = 0 ;",
        "cout << abs ( n0 - n1 ) ;",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n1’"
    },
    {
      "mod_line": [
        6,
        15,
        9
      ],
      "mod_code": [
        "int n1 = 0 ;",
        "cout << abs ( n0 - n1 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n1’"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "int n1 = 0 ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n1’"
    },
    {
      "mod_line": [
        6,
        12,
        9
      ],
      "mod_code": [
        "int n1 = 0 ;",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n1’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "int n1 = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n1’"
    },
    {
      "mod_line": [
        15,
        12
      ],
      "mod_code": [
        "cout << abs ( n0 - n1 ) ;",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        12,
        9
      ],
      "mod_code": [
        "cout << abs ( n0 - n1 ) ;",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        9
      ],
      "mod_code": [
        "cout << abs ( n0 - n1 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}