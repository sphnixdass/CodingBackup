{
  "meta": {
    "index": 482,
    "hitid": "3FW4EL5A3LIJ3P56LEN4T49WECY22E",
    "workerid": "AIWEXPJAU66D9",
    "probid": "408A",
    "subid": "18168973"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integer size_n",
      "code": "int size_n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "len and el are vectors of int of size 0",
      "code": "vector < int > len ( 0 ) , el ( 0 ) ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integers ii and jj",
      "code": "int ii , jj ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integer variables tmp and mn where mn = 0",
      "code": "int tmp , mn = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read size_n",
      "code": "cin >> size_n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "change size of len to size_n",
      "code": "len . resize ( size_n ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "change size of el to size_n",
      "code": "el . resize ( size_n ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for ii = 0 to size_n exclusive read len [ ii ]",
      "code": "for ( ii = 0 ; ii < size_n ; ii ++ ) cin >> len [ ii ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for ii = 0 to size_n exclusive",
      "code": "for ( ii = 0 ; ii < size_n ; ii ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for jj = 0 to len [ ii ] exclusive",
      "code": "for ( jj = 0 ; jj < len [ ii ] ; jj ++ )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "read tmp",
      "code": "cin >> tmp ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "increase el [ ii ] by tmp",
      "code": "el [ ii ] += tmp ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if ( len [ ii ] * 15 + el [ ii ] * 5 ) is less than ( len [ mn ] * 15 + el [ mn ] * 5 ) , change value of mn to li",
      "code": "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = ii ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print len [ mn ] * 15 + el [ mn ] * 5",
      "code": "cout << ( len [ mn ] * 15 + el [ mn ] * 5 ) << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "el = size_n ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;"
      ],
      "err_line": 14,
      "err_msg": "‘li’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int size_n size_n ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "vector < int > len , el [ 0 ] ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘resize’ in ‘el’, which is of non-class type ‘std::vector<int> [0]’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "size_n size_n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘size_n’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "len . resize ( len ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::vector<int>::resize(std::vector<int>&)’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "el [ ii ] [ tmp ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) { mn = li ; }"
      ],
      "err_line": 14,
      "err_msg": "‘li’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "len . size ( ) ;",
        "el = size_n ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        7,
        14
      ],
      "mod_code": [
        "len . size ( ) ;",
        "el = size_n ;",
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        7,
        14,
        0
      ],
      "mod_code": [
        "len . size ( ) ;",
        "el = size_n ;",
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;",
        "int size_n size_n ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        6,
        7,
        14,
        12
      ],
      "mod_code": [
        "len . size ( ) ;",
        "el = size_n ;",
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;",
        "el [ ii ] [ tmp ] ++ ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        7,
        0
      ],
      "mod_code": [
        "len . size ( ) ;",
        "el = size_n ;",
        "int size_n size_n ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        6,
        7,
        0,
        12
      ],
      "mod_code": [
        "len . size ( ) ;",
        "el = size_n ;",
        "int size_n size_n ;",
        "el [ ii ] [ tmp ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        6,
        7,
        12
      ],
      "mod_code": [
        "len . size ( ) ;",
        "el = size_n ;",
        "el [ ii ] [ tmp ] ++ ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "len . size ( ) ;",
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;"
      ],
      "err_line": 14,
      "err_msg": "‘li’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        0
      ],
      "mod_code": [
        "len . size ( ) ;",
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;",
        "int size_n size_n ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        6,
        14,
        0,
        12
      ],
      "mod_code": [
        "len . size ( ) ;",
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;",
        "int size_n size_n ;",
        "el [ ii ] [ tmp ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        6,
        14,
        0,
        7
      ],
      "mod_code": [
        "len . size ( ) ;",
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;",
        "int size_n size_n ;",
        "el . size ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        6,
        14,
        12
      ],
      "mod_code": [
        "len . size ( ) ;",
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;",
        "el [ ii ] [ tmp ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        14,
        12,
        7
      ],
      "mod_code": [
        "len . size ( ) ;",
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;",
        "el [ ii ] [ tmp ] ++ ;",
        "el . size ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        14,
        7
      ],
      "mod_code": [
        "len . size ( ) ;",
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;",
        "el . size ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘li’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "len . size ( ) ;",
        "int size_n size_n ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        6,
        0,
        12
      ],
      "mod_code": [
        "len . size ( ) ;",
        "int size_n size_n ;",
        "el [ ii ] [ tmp ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        6,
        0,
        12,
        7
      ],
      "mod_code": [
        "len . size ( ) ;",
        "int size_n size_n ;",
        "el [ ii ] [ tmp ] ++ ;",
        "el . size ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        6,
        0,
        7
      ],
      "mod_code": [
        "len . size ( ) ;",
        "int size_n size_n ;",
        "el . size ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "len . size ( ) ;",
        "el [ ii ] [ tmp ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        12,
        7
      ],
      "mod_code": [
        "len . size ( ) ;",
        "el [ ii ] [ tmp ] ++ ;",
        "el . size ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "el = size_n ;",
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        14,
        0
      ],
      "mod_code": [
        "el = size_n ;",
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;",
        "int size_n size_n ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        7,
        14,
        0,
        12
      ],
      "mod_code": [
        "el = size_n ;",
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;",
        "int size_n size_n ;",
        "el [ ii ] [ tmp ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        7,
        14,
        12
      ],
      "mod_code": [
        "el = size_n ;",
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;",
        "el [ ii ] [ tmp ] ++ ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "el = size_n ;",
        "int size_n size_n ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        7,
        0,
        12
      ],
      "mod_code": [
        "el = size_n ;",
        "int size_n size_n ;",
        "el [ ii ] [ tmp ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "el = size_n ;",
        "el [ ii ] [ tmp ] ++ ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        14,
        0
      ],
      "mod_code": [
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;",
        "int size_n size_n ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        14,
        0,
        12
      ],
      "mod_code": [
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;",
        "int size_n size_n ;",
        "el [ ii ] [ tmp ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        14,
        0,
        12,
        7
      ],
      "mod_code": [
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;",
        "int size_n size_n ;",
        "el [ ii ] [ tmp ] ++ ;",
        "el . size ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        14,
        0,
        7
      ],
      "mod_code": [
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;",
        "int size_n size_n ;",
        "el . size ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        14,
        12
      ],
      "mod_code": [
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;",
        "el [ ii ] [ tmp ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        12,
        7
      ],
      "mod_code": [
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;",
        "el [ ii ] [ tmp ] ++ ;",
        "el . size ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "if ( ( len [ ii ] * 15 + el [ ii ] * 5 ) < ( len [ mn ] * 15 + el [ mn ] * 5 ) ) mn = li ;",
        "el . size ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘li’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "int size_n size_n ;",
        "el [ ii ] [ tmp ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        0,
        12,
        7
      ],
      "mod_code": [
        "int size_n size_n ;",
        "el [ ii ] [ tmp ] ++ ;",
        "el . size ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int size_n size_n ;",
        "el . size ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘size_n’"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "el [ ii ] [ tmp ] ++ ;",
        "el . size ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    }
  ]
}