{
  "meta": {
    "index": 2246,
    "hitid": "3DTJ4WT8BD914GKY35RJIGSSXBGEZ4",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "336A",
    "subid": "48299307"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "integers = x , y",
      "code": "int x , y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read x , y",
      "code": "cin >> x >> y ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if x and y are both greater than 0 then do the following",
      "code": "if ( x > 0 && y > 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "output 0 , , x + y , , x + y , , 0 , endl",
      "code": "cout << 0 << \" \" << x + y << \" \" << x + y << \" \" << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if x is less than 0 and y > 0 then do the following",
      "code": "if ( x < 0 && y > 0 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "output x - y , , 0 , , 0 , , - 1 * ( x - y ) , endl",
      "code": "cout << x - y << \" \" << 0 << \" \" << 0 << \" \" << - 1 * ( x - y ) << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if x and y are both less than 0 then do the following",
      "code": "if ( x < 0 && y < 0 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "output x + y , , 0 , , 0 , , x + y , endl",
      "code": "cout << x + y << \" \" << 0 << \" \" << 0 << \" \" << x + y << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if x > 0 and y is less than 0 then do the following",
      "code": "if ( x > 0 && y < 0 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "output 0 , , y - x , , - 1 * ( y - x ) , , 0 , endl",
      "code": "cout << 0 << \" \" << y - x << \" \" << - 1 * ( y - x ) << \" \" << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << x + y << \" \" << x + y , x + y << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cout << 0 << y - x << - 1 * ( y - x ) , ( y - x ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cout << 0 << \" \" << x + y , x + y , x + y << endl ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << x + y << 0 << \" \" << x + y , x + y << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cout << 0 << \" \" << y - x * ( y - x ) , ( y - x ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        8,
        12
      ],
      "mod_code": [
        "cout << 0 << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x - y << endl << 0 << \" \" << - 1 * ( x - y ) << endl ;",
        "cout << x + y << \" \" << x + y , x + y << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        8,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x - y << endl << 0 << \" \" << - 1 * ( x - y ) << endl ;",
        "cout << x + y << \" \" << x + y , x + y << endl ;",
        "cout << 0 << y - x << - 1 * ( y - x ) , ( y - x ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        8,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x - y << endl << 0 << \" \" << - 1 * ( x - y ) << endl ;",
        "cout << x + y << \" \" << x + y , x + y << endl ;",
        "cout << 0 << \" \" << y - x * ( y - x ) , ( y - x ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        8,
        16
      ],
      "mod_code": [
        "cout << 0 << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x - y << endl << 0 << \" \" << - 1 * ( x - y ) << endl ;",
        "cout << 0 << y - x << - 1 * ( y - x ) , ( y - x ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        12
      ],
      "mod_code": [
        "cout << 0 << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x - y << endl << 0 << \" \" << - 1 * ( x - y ) << endl ;",
        "cout << 0 << y - x << - 1 * ( y - x ) , ( y - x ) << endl ;",
        "cout << x + y << 0 << \" \" << x + y , x + y << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        8,
        16
      ],
      "mod_code": [
        "cout << 0 << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x - y << endl << 0 << \" \" << - 1 * ( x - y ) << endl ;",
        "cout << 0 << \" \" << y - x * ( y - x ) , ( y - x ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        12
      ],
      "mod_code": [
        "cout << 0 << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x - y << endl << 0 << \" \" << - 1 * ( x - y ) << endl ;",
        "cout << 0 << \" \" << y - x * ( y - x ) , ( y - x ) << endl ;",
        "cout << x + y << 0 << \" \" << x + y , x + y << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        8,
        12
      ],
      "mod_code": [
        "cout << 0 << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x - y << endl << 0 << \" \" << - 1 * ( x - y ) << endl ;",
        "cout << x + y << 0 << \" \" << x + y , x + y << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "cout << 0 << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x + y << \" \" << x + y , x + y << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x + y << \" \" << x + y , x + y << endl ;",
        "cout << 0 << y - x << - 1 * ( y - x ) , ( y - x ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        12,
        16
      ],
      "mod_code": [
        "cout << 0 << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x + y << \" \" << x + y , x + y << endl ;",
        "cout << 0 << \" \" << y - x * ( y - x ) , ( y - x ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "cout << 0 << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << y - x << - 1 * ( y - x ) , ( y - x ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        16,
        12
      ],
      "mod_code": [
        "cout << 0 << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << y - x << - 1 * ( y - x ) , ( y - x ) << endl ;",
        "cout << x + y << 0 << \" \" << x + y , x + y << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "cout << 0 << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << \" \" << y - x * ( y - x ) , ( y - x ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        16,
        12
      ],
      "mod_code": [
        "cout << 0 << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << 0 << \" \" << y - x * ( y - x ) , ( y - x ) << endl ;",
        "cout << x + y << 0 << \" \" << x + y , x + y << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "cout << 0 << \" \" << x + y << \" \" << x + y << endl ;",
        "cout << x + y << 0 << \" \" << x + y , x + y << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "cout << x - y << endl << 0 << \" \" << - 1 * ( x - y ) << endl ;",
        "cout << x + y << \" \" << x + y , x + y << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        8,
        12,
        16
      ],
      "mod_code": [
        "cout << x - y << endl << 0 << \" \" << - 1 * ( x - y ) << endl ;",
        "cout << x + y << \" \" << x + y , x + y << endl ;",
        "cout << 0 << y - x << - 1 * ( y - x ) , ( y - x ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        8,
        12,
        16
      ],
      "mod_code": [
        "cout << x - y << endl << 0 << \" \" << - 1 * ( x - y ) << endl ;",
        "cout << x + y << \" \" << x + y , x + y << endl ;",
        "cout << 0 << \" \" << y - x * ( y - x ) , ( y - x ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "cout << x - y << endl << 0 << \" \" << - 1 * ( x - y ) << endl ;",
        "cout << 0 << y - x << - 1 * ( y - x ) , ( y - x ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        8,
        16,
        12
      ],
      "mod_code": [
        "cout << x - y << endl << 0 << \" \" << - 1 * ( x - y ) << endl ;",
        "cout << 0 << y - x << - 1 * ( y - x ) , ( y - x ) << endl ;",
        "cout << x + y << 0 << \" \" << x + y , x + y << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "cout << x - y << endl << 0 << \" \" << - 1 * ( x - y ) << endl ;",
        "cout << 0 << \" \" << y - x * ( y - x ) , ( y - x ) << endl ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        8,
        16,
        12
      ],
      "mod_code": [
        "cout << x - y << endl << 0 << \" \" << - 1 * ( x - y ) << endl ;",
        "cout << 0 << \" \" << y - x * ( y - x ) , ( y - x ) << endl ;",
        "cout << x + y << 0 << \" \" << x + y , x + y << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "cout << x - y << endl << 0 << \" \" << - 1 * ( x - y ) << endl ;",
        "cout << x + y << 0 << \" \" << x + y , x + y << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        12,
        16
      ],
      "mod_code": [
        "cout << x + y << \" \" << x + y , x + y << endl ;",
        "cout << 0 << y - x << - 1 * ( y - x ) , ( y - x ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        12,
        16
      ],
      "mod_code": [
        "cout << x + y << \" \" << x + y , x + y << endl ;",
        "cout << 0 << \" \" << y - x * ( y - x ) , ( y - x ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        16,
        12
      ],
      "mod_code": [
        "cout << 0 << y - x << - 1 * ( y - x ) , ( y - x ) << endl ;",
        "cout << x + y << 0 << \" \" << x + y , x + y << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        16,
        12
      ],
      "mod_code": [
        "cout << 0 << \" \" << y - x * ( y - x ) , ( y - x ) << endl ;",
        "cout << x + y << 0 << \" \" << x + y , x + y << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    }
  ]
}