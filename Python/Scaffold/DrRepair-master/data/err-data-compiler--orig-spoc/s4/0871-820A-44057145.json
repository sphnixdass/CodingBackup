{
  "meta": {
    "index": 871,
    "hitid": "34OWYT6U3WBYEU47VQNBQ7OR9E3I9V",
    "workerid": "AIWEXPJAU66D9",
    "probid": "820A",
    "subid": "44057145"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers c , v0 , v1 , a , l and res , with res = 1",
      "code": "int c , v0 , v1 , a , l , res = 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read c , v0 , v1 , a and l",
      "code": "cin >> c >> v0 >> v1 >> a >> l ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "decrease c by v0",
      "code": "c -= v0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while c is greater than 0",
      "code": "while ( c > 0 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "increase res by one",
      "code": "res ++ ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "v0 = v1 if v0 + a > = v1 or v0 + a if it is not",
      "code": "v0 = v0 + a >= v1 ? v1 : v0 + a ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "decrease c by v0 - l",
      "code": "c -= v0 - l ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print res and a new line",
      "code": "cout << res << endl ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int c , v0 , v1 , a , l , l = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        6,
        4,
        2,
        1
      ],
      "mod_code": [
        "v0 = ( v0 + a >= v1 ? v1 + a : v0 ) ;",
        "while ( c >= 0 )",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int c , v0 , v1 , a , l , l = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        6,
        4,
        3,
        1
      ],
      "mod_code": [
        "v0 = ( v0 + a >= v1 ? v1 + a : v0 ) ;",
        "while ( c >= 0 )",
        "c -= ' v0 ' ;",
        "int c , v0 , v1 , a , l , l = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        6,
        4,
        1
      ],
      "mod_code": [
        "v0 = ( v0 + a >= v1 ? v1 + a : v0 ) ;",
        "while ( c >= 0 )",
        "int c , v0 , v1 , a , l , l = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        6,
        2,
        3,
        1
      ],
      "mod_code": [
        "v0 = ( v0 + a >= v1 ? v1 + a : v0 ) ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "c -= ' v0 ' ;",
        "int c , v0 , v1 , a , l , l = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        6,
        2,
        1
      ],
      "mod_code": [
        "v0 = ( v0 + a >= v1 ? v1 + a : v0 ) ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int c , v0 , v1 , a , l , l = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        6,
        3,
        1
      ],
      "mod_code": [
        "v0 = ( v0 + a >= v1 ? v1 + a : v0 ) ;",
        "c -= ' v0 ' ;",
        "int c , v0 , v1 , a , l , l = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "v0 = ( v0 + a >= v1 ? v1 + a : v0 ) ;",
        "int c , v0 , v1 , a , l , l = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        4,
        2,
        3,
        1
      ],
      "mod_code": [
        "while ( c >= 0 )",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "c -= ' v0 ' ;",
        "int c , v0 , v1 , a , l , l = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        4,
        2,
        1
      ],
      "mod_code": [
        "while ( c >= 0 )",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int c , v0 , v1 , a , l , l = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        4,
        3,
        1
      ],
      "mod_code": [
        "while ( c >= 0 )",
        "c -= ' v0 ' ;",
        "int c , v0 , v1 , a , l , l = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "while ( c >= 0 )",
        "int c , v0 , v1 , a , l , l = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        2,
        3,
        1
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "c -= ' v0 ' ;",
        "int c , v0 , v1 , a , l , l = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "int c , v0 , v1 , a , l , l = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "c -= ' v0 ' ;",
        "int c , v0 , v1 , a , l , l = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    }
  ]
}