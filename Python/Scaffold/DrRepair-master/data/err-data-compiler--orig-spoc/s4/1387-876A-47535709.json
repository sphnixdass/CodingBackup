{
  "meta": {
    "index": 1387,
    "hitid": "3A9LA2FRWS8OJVBLSOB46Y9UHRGXHC",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "876A",
    "subid": "47535709"
  },
  "lines": [
    {
      "line": 0,
      "text": "in the function print that takes long long integer array a , long long integer n",
      "code": "void print ( long long int a [ ] , long long int n )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "for ( i = 0 to n exclusive ) , print a [ i ]",
      "code": "for ( long long int i = 0 ; i < n ; i ++ ) { cout << a [ i ] << \" \" ; }",
      "indent": 1
    },
    {
      "line": 2,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "in the functin m that takes long long integer x and returns long long integer",
      "code": "long long int m ( long long int x )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "return x modulo 1000000007",
      "code": "return x % 1000000007 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "in the function gcd that takes long long integer a , b and returns long long integer",
      "code": "long long int gcd ( long long int a , long long int b )",
      "indent": 0
    },
    {
      "line": 8,
      "text": "if ( a is 0 ) , return b",
      "code": "if ( a == 0 ) return b ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "return gcd of b modulo a and a",
      "code": "return gcd ( b % a , a ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 11,
      "text": "in the function p that takes long long integer a , b and returns long long integer",
      "code": "long long int p ( long long int a , long long int b )",
      "indent": 0
    },
    {
      "line": 12,
      "text": "if ( b is 0 ) , return 1",
      "code": "if ( b == 0 ) return 1 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "t = long long integer with t = p ( a , b / 2 )",
      "code": "long long int t = p ( a , b / 2 ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if ( b modulo 2 is 0 )",
      "code": "if ( b % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "return t * t",
      "code": "return t * t ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 17,
      "text": "return a * t * t",
      "code": "return a * t * t ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 20,
      "text": "n = long long integer",
      "code": "long long int n ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "a , b , c = long long integers",
      "code": "long long int a , b , c ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "read n , a , b , c",
      "code": "cin >> n >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "v = long long integer with v = 0",
      "code": "long long int v = 0 ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "if ( n > = 2 ) , v = v + min ( a , b )",
      "code": "if ( n >= 2 ) v += min ( a , b ) ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "vv = long long integer with vv = min ( a , min ( b , c ) )",
      "code": "long long int vv = min ( a , min ( b , c ) ) ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "if ( n > = 2 ) , v = v + ( n - 2 ) * vv",
      "code": "if ( n >= 2 ) v += ( n - 2 ) * vv ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print v",
      "code": "cout << v << endl ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void print ( long long int a [ ] , long long int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( b % 2 == 0 ) )"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        0,
        22
      ],
      "mod_code": [
        "void print ( long long int a [ ] , long long int n ) ;",
        "cin >> n >> a , b >> c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        22,
        16
      ],
      "mod_code": [
        "void print ( long long int a [ ] , long long int n ) ;",
        "cin >> n >> a , b >> c ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        22,
        16,
        14
      ],
      "mod_code": [
        "void print ( long long int a [ ] , long long int n ) ;",
        "cin >> n >> a , b >> c ;",
        "else else",
        "if ( b % 2 == 0 ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        22,
        14
      ],
      "mod_code": [
        "void print ( long long int a [ ] , long long int n ) ;",
        "cin >> n >> a , b >> c ;",
        "if ( b % 2 == 0 ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "void print ( long long int a [ ] , long long int n ) ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        14
      ],
      "mod_code": [
        "void print ( long long int a [ ] , long long int n ) ;",
        "else else",
        "if ( b % 2 == 0 ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "void print ( long long int a [ ] , long long int n ) ;",
        "if ( b % 2 == 0 ) )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        16
      ],
      "mod_code": [
        "cin >> n >> a , b >> c ;",
        "else else"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22,
        16,
        14
      ],
      "mod_code": [
        "cin >> n >> a , b >> c ;",
        "else else",
        "if ( b % 2 == 0 ) )"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        22,
        14
      ],
      "mod_code": [
        "cin >> n >> a , b >> c ;",
        "if ( b % 2 == 0 ) )"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        14
      ],
      "mod_code": [
        "else else",
        "if ( b % 2 == 0 ) )"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘)’ token"
    }
  ]
}