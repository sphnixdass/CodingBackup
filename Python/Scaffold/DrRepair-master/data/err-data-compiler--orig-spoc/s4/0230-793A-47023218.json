{
  "meta": {
    "index": 230,
    "hitid": "3P520RYKCH0KMYXVMHZ8XU70I025U5",
    "workerid": "A1APYLD4DUK33J",
    "probid": "793A",
    "subid": "47023218"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long longs n , , rate , min with min = INT_MAX , create long long array price with size 100005",
      "code": "long long n , rate , price [ 100005 ] , min = INT_MAX ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create long long has with has = 0",
      "code": "long long has = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n read rate",
      "code": "cin >> n >> rate ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for x = 1 to n inclusive",
      "code": "for ( int x = 1 ; x <= n ; x ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read price [ x ]",
      "code": "cin >> price [ x ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if price [ x ] is less than min , set min to price [ x ]",
      "code": "if ( price [ x ] < min ) { min = price [ x ] ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for x = 1 to n inclusive",
      "code": "for ( int x = 1 ; x <= n ; x ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if ( price [ x ] - min ) % rate is 0",
      "code": "if ( ( price [ x ] - min ) % rate == 0 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set price [ x ] to ( price [ x ] - min ) / rate",
      "code": "price [ x ] = ( price [ x ] - min ) / rate ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "set has to has + price [ x ]",
      "code": "has = has + price [ x ] ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print \" - 1 \" print newline",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print has print newline",
      "code": "cout << has << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long n , rate , price [ 100005 ] , rate [ 100005 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int rate [100005]’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( x = 1 ; x <= n ; x ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> price [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( x = 1 ; x <= n ; x ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘x’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘min’ cannot be used as a function"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        12,
        4
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "else else",
        "for ( x = 1 ; x <= n ; x ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        12,
        4,
        5
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "else else",
        "for ( x = 1 ; x <= n ; x ++ )",
        "cin >> price [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        12,
        4,
        10
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "else else",
        "for ( x = 1 ; x <= n ; x ++ )",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        12,
        4,
        3
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "else else",
        "for ( x = 1 ; x <= n ; x ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        12,
        5
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "else else",
        "cin >> price [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        12,
        5,
        10
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "else else",
        "cin >> price [ i ] ;",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        12,
        5,
        3
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "else else",
        "cin >> price [ i ] ;",
        "cin >> n >> k ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        12,
        10
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "else else",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        12,
        10,
        3
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "else else",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        12,
        3
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "else else",
        "cin >> n >> k ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "for ( x = 1 ; x <= n ; x ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        4,
        5
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "for ( x = 1 ; x <= n ; x ++ )",
        "cin >> price [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        10
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "for ( x = 1 ; x <= n ; x ++ )",
        "cin >> price [ i ] ;",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        3
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "for ( x = 1 ; x <= n ; x ++ )",
        "cin >> price [ i ] ;",
        "cin >> n >> k ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        4,
        10
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "for ( x = 1 ; x <= n ; x ++ )",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        4,
        10,
        3
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "for ( x = 1 ; x <= n ; x ++ )",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        4,
        3
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "for ( x = 1 ; x <= n ; x ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "cin >> price [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        5,
        10
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "cin >> price [ i ] ;",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        5,
        10,
        3
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "cin >> price [ i ] ;",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        5,
        3
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "cin >> price [ i ] ;",
        "cin >> n >> k ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        10,
        3
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "long long n , rate , price , price [ 100005 ] , min = INT_MAX ;",
        "cin >> n >> k ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int price [100005]’"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "else else",
        "for ( x = 1 ; x <= n ; x ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        5
      ],
      "mod_code": [
        "else else",
        "for ( x = 1 ; x <= n ; x ++ )",
        "cin >> price [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        5,
        10
      ],
      "mod_code": [
        "else else",
        "for ( x = 1 ; x <= n ; x ++ )",
        "cin >> price [ i ] ;",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        5,
        3
      ],
      "mod_code": [
        "else else",
        "for ( x = 1 ; x <= n ; x ++ )",
        "cin >> price [ i ] ;",
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        10
      ],
      "mod_code": [
        "else else",
        "for ( x = 1 ; x <= n ; x ++ )",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        10,
        3
      ],
      "mod_code": [
        "else else",
        "for ( x = 1 ; x <= n ; x ++ )",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        3
      ],
      "mod_code": [
        "else else",
        "for ( x = 1 ; x <= n ; x ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "else else",
        "cin >> price [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        10
      ],
      "mod_code": [
        "else else",
        "cin >> price [ i ] ;",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        10,
        3
      ],
      "mod_code": [
        "else else",
        "cin >> price [ i ] ;",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        3
      ],
      "mod_code": [
        "else else",
        "cin >> price [ i ] ;",
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "else else",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘min’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        10,
        3
      ],
      "mod_code": [
        "else else",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "else else",
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( x = 1 ; x <= n ; x ++ )",
        "cin >> price [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        10
      ],
      "mod_code": [
        "for ( x = 1 ; x <= n ; x ++ )",
        "cin >> price [ i ] ;",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        3
      ],
      "mod_code": [
        "for ( x = 1 ; x <= n ; x ++ )",
        "cin >> price [ i ] ;",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        3
      ],
      "mod_code": [
        "for ( x = 1 ; x <= n ; x ++ )",
        "cin >> price [ i ] ;",
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "for ( x = 1 ; x <= n ; x ++ )",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        3
      ],
      "mod_code": [
        "for ( x = 1 ; x <= n ; x ++ )",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "for ( x = 1 ; x <= n ; x ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "cin >> price [ i ] ;",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        3
      ],
      "mod_code": [
        "cin >> price [ i ] ;",
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "cin >> price [ i ] ;",
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "price [ x ] = ( price [ x ] - min ( ) / rate ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    }
  ]
}