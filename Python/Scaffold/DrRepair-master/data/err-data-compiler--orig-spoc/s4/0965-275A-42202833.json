{
  "meta": {
    "index": 965,
    "hitid": "3O71U79SRBJ2FSQXPBLUZV0YJY9MSY",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "275A",
    "subid": "42202833"
  },
  "lines": [
    {
      "line": 0,
      "text": "res = integer 2d array of size [ 3 ] [ 3 ]",
      "code": "int res [ 3 ] [ 3 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in the function toggle that takes integer p 2d array of size [ 3 ] [ 3 ] , integer a , b",
      "code": "void toggle ( int p [ 3 ] [ 3 ] , int a , int b )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "if p [ a ] [ b ] is 1",
      "code": "if ( p [ a ] [ b ] == 1 )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "p [ a ] [ b ] = 0",
      "code": "p [ a ] [ b ] = 0 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "else if p [ a ] [ b ] is 0",
      "code": "else if ( p [ a ] [ b ] == 0 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "p [ a ] [ b ] = 1",
      "code": "p [ a ] [ b ] = 1 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "for i = 0 to 2",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for j = 0 to 2 , res [ i ] [ j ] = 1",
      "code": "for ( int j = 0 ; j < 3 ; j ++ ) res [ i ] [ j ] = 1 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "c = integer",
      "code": "int c ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to 2",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for j = 0 to 2",
      "code": "for ( int j = 0 ; j < 3 ; j ++ )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "read c",
      "code": "cin >> c ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "if c > 0 bitwise and c modulo 2 is 1",
      "code": "if ( c > 0 & c % 2 == 1 )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "toggle on res , i , j",
      "code": "toggle ( res , i , j ) ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "if i + 1 < 3 , toggle on res , i + 1 , j",
      "code": "if ( i + 1 < 3 ) toggle ( res , i + 1 , j ) ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "if j + 1 < 3 , toggle on res , i , j + 1",
      "code": "if ( j + 1 < 3 ) toggle ( res , i , j + 1 ) ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "if i - 1 > = 0 , toggle res , i - 1 , j",
      "code": "if ( i - 1 >= 0 ) toggle ( res , i - 1 , j ) ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "if j - 1 > = 0 , toggle res , i , j - 1",
      "code": "if ( j - 1 >= 0 ) toggle ( res , i , j - 1 ) ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for i = 0 to 2",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "for j = 0 to 2 , print res [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < 3 ; j ++ ) cout << res [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool toggle [ 3 ] [ 3 ] , a [ 3 ] [ 3 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "p [ ' a ' ] = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3]’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "p [ ' a ' ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3]’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < 2 ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "toggle = res - i , j -- ;"
      ],
      "err_line": 15,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle += i , i + 1 , j ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( j + 1 < 3 ) toggle = res + i , j + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "if ( i - 1 >= 0 ) { res = res , i - 1 , j ; }"
      ],
      "err_line": 18,
      "err_msg": "invalid array assignment"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( j - 1 >= 0 ) { res = res , i - 1 , j - 1 ; }"
      ],
      "err_line": 19,
      "err_msg": "invalid array assignment"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 23,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        9
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        11
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        12
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        16
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        17
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        11
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        11,
        12
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        11,
        16
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        11,
        17
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        11,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        11,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        11,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        11,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        12
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        12,
        16
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        12,
        17
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        12,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        12,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        12,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        12,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        16
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        16,
        17
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        16,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        16,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        16,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        16,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        17
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        17,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        17,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        17,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        17,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        18,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        18,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        18,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        19,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        19,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        23,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        11
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        11,
        12
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        11,
        16
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        11,
        17
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        11,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        11,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        11,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        11,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        12
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        12,
        16
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        12,
        17
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        12,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        12,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        12,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        12,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        16
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        16,
        17
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        16,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        16,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        16,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        16,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        17
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        17,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        17,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        17,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        17,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        18,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        18,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        18,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        19,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        19,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        23,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        12
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        12,
        16
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        12,
        17
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        12,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        12,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        12,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        12,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        16
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        16,
        17
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        16,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        16,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        16,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        16,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        17
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        17,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        17,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        17,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        17,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        18,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        18,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        18,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        19,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        19,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        23,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        16
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        16,
        17
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        16,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        16,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        16,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        16,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        17
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        17,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        17,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        17,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        17,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        18,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        18,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        18,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        19,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        19,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        23,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        17
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        17,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        17,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        17,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        17,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        18,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        18,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        18,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        19,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        19,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        23,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        17
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        17,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        17,
        18,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        17,
        18,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        17,
        18,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        17,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        17,
        19,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        17,
        19,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        17,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        17,
        23,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        17,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        18,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        18,
        19,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        18,
        19,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        18,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        18,
        23,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        18,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        19
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        19,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        19,
        23,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        19,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        23
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        23,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        24
      ],
      "mod_code": [
        "bool toggle [ 3 ] , a [ 3 ] [ 3 ] , b ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        9,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        9,
        16,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        9,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        9,
        17,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        9,
        17,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        9,
        17,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        9,
        17,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        9,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        9,
        18,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        9,
        18,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        9,
        18,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        9,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        9,
        19,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        9,
        19,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        11,
        12,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        11,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        11,
        16,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        11,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        11,
        17,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        11,
        17,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        11,
        17,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        11,
        17,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        11,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        11,
        18,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        11,
        18,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        11,
        18,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        11,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        11,
        19,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        11,
        19,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        12,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        12,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        12,
        17,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        12,
        17,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        12,
        17,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        12,
        17,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        12,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        12,
        18,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        12,
        18,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        12,
        18,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        12,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        12,
        19,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        12,
        19,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        16,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        16,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        16,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        16,
        19,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        16,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        16,
        23,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        16,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        17,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        17,
        18,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        17,
        18,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        17,
        18,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        17,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        17,
        19,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        17,
        19,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        17,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        17,
        23,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        17,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        8,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        18,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        18,
        19,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        18,
        19,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        18,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        18,
        23,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        18,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        19,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        19,
        23,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        8,
        19,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        16
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        17
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        18
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        11,
        16
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        17
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        18
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        11,
        17
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        18
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        11,
        18
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        11,
        18,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        11,
        18,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        11,
        18,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        11,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        11,
        19,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        11,
        19,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        12,
        16
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        12,
        16,
        17
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        12,
        16,
        18
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        12,
        16,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        12,
        16,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        12,
        16,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        12,
        17
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        12,
        17,
        18
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        12,
        17,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        12,
        17,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        12,
        17,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        12,
        18
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        12,
        18,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        12,
        18,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        12,
        18,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        12,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        12,
        19,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        12,
        19,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        16,
        17
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        16,
        17,
        18
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        16,
        17,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        16,
        17,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        16,
        17,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        16,
        18
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        16,
        18,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        16,
        18,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        16,
        18,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        16,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        16,
        19,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        16,
        19,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        16,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        16,
        23,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        16,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        17,
        18
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        17,
        18,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        17,
        18,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        17,
        18,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        17,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        17,
        19,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        17,
        19,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        17,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        17,
        23,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        17,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        9,
        18
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        18,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        18,
        19,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        18,
        19,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        18,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        18,
        23,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        18,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        19,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        19,
        23,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        9,
        19,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ ) { res [ i ] [ j ] = 1 ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        11,
        12,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        12,
        16,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        12,
        16,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        12,
        16,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        12,
        16,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        12,
        16,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        12,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        11,
        12,
        17,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        11,
        12,
        17,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        11,
        12,
        17,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        11,
        12,
        17,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        11,
        12,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        11,
        12,
        18,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        11,
        12,
        18,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        11,
        12,
        18,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        11,
        12,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        11,
        12,
        19,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        11,
        12,
        19,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        11,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        16,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        16,
        17,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        16,
        17,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        16,
        17,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        16,
        17,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        16,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        16,
        18,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        16,
        18,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        16,
        18,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        16,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        16,
        19,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        16,
        19,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        16,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        16,
        23,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        16,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        11,
        17,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        11,
        17,
        18,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        11,
        17,
        18,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        11,
        17,
        18,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        11,
        17,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        11,
        17,
        19,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        11,
        17,
        19,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        11,
        17,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        11,
        17,
        23,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        11,
        17,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        11,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        11,
        18,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        11,
        18,
        19,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        11,
        18,
        19,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        11,
        18,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        11,
        18,
        23,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        11,
        18,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        11,
        19,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        11,
        19,
        23,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        11,
        19,
        24
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        12,
        16
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        12,
        16,
        17
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        12,
        16,
        17,
        18
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        12,
        16,
        17,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        12,
        16,
        17,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        12,
        16,
        17,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        12,
        16,
        18
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        12,
        16,
        18,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        12,
        16,
        18,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        12,
        16,
        18,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        12,
        16,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        12,
        16,
        19,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        12,
        16,
        19,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        12,
        16,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        12,
        16,
        23,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        12,
        16,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        12,
        17,
        18
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        12,
        17,
        18,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        12,
        17,
        18,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        12,
        17,
        18,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        12,
        17,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        12,
        17,
        19,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        12,
        17,
        19,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        12,
        17,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        12,
        17,
        23,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        12,
        17,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        12,
        18
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        12,
        18,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        12,
        18,
        19,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        12,
        18,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        12,
        18,
        23,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        12,
        18,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        12,
        19
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        12,
        19,
        23
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        12,
        19,
        23,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        12,
        19,
        24
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 2 ; j ++ )",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        16,
        17
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        17,
        18
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        17,
        18,
        19
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        17,
        18,
        23
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        17,
        18,
        24
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        17,
        19
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        17,
        19,
        23
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        17,
        19,
        24
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        17,
        23
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        17,
        23,
        24
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        17,
        24
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        18,
        19
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        18,
        19,
        23
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        18,
        19,
        24
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        18,
        23
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        18,
        23,
        24
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        18,
        24
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        19
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        19,
        23
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        19,
        23,
        24
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        19,
        24
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        23
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        23,
        24
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        16,
        24
      ],
      "mod_code": [
        "if ( i + 1 < 3 ) toggle = res , i + 1 , j ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "assignment of function ‘void toggle(int (*)[3], int, int)’"
    },
    {
      "mod_line": [
        17,
        18
      ],
      "mod_code": [
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        17,
        18,
        19
      ],
      "mod_code": [
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        17,
        18,
        19,
        23
      ],
      "mod_code": [
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        17,
        18,
        19,
        24
      ],
      "mod_code": [
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        17,
        18,
        23
      ],
      "mod_code": [
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        17,
        18,
        23,
        24
      ],
      "mod_code": [
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        17,
        18,
        24
      ],
      "mod_code": [
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        17,
        19
      ],
      "mod_code": [
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        17,
        19,
        23
      ],
      "mod_code": [
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        17,
        19,
        23,
        24
      ],
      "mod_code": [
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        17,
        19,
        24
      ],
      "mod_code": [
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        17,
        23
      ],
      "mod_code": [
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        17,
        23,
        24
      ],
      "mod_code": [
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        17,
        24
      ],
      "mod_code": [
        "if ( j + 1 < 3 ) toggle += res , i + 1 , j + 1 ;",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        18,
        19
      ],
      "mod_code": [
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        18,
        19,
        23
      ],
      "mod_code": [
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        18,
        19,
        23,
        24
      ],
      "mod_code": [
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        18,
        19,
        24
      ],
      "mod_code": [
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        18,
        23
      ],
      "mod_code": [
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        18,
        23,
        24
      ],
      "mod_code": [
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        18,
        24
      ],
      "mod_code": [
        "if ( i - 1 >= 0 ) { res += i - 1 , j -- ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 18,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        19,
        23
      ],
      "mod_code": [
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        19,
        23,
        24
      ],
      "mod_code": [
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int i = 0 ; i < 2 ; i ++ )",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    },
    {
      "mod_line": [
        19,
        24
      ],
      "mod_code": [
        "if ( j - 1 >= 0 ) { res += i , i - 1 ; }",
        "for ( int j = 0 ; j < 2 ; j ++ ) cout << res [ i ] [ j ] ;"
      ],
      "err_line": 19,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3][3]’"
    }
  ]
}