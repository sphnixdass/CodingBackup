{
  "meta": {
    "index": 2193,
    "hitid": "30U1YOGZGAQZBYKKCIMRG5D4AKGSDL",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "556A",
    "subid": "42425787"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , count = integers",
      "code": "int n , count ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "a = character",
      "code": "char a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while n is read as a valid integer",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "count = 0",
      "code": "count = 0 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if a is 1 , then increase count by 1",
      "code": "if ( a == ' 1 ' ) count ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print the result of the absolute value of ( n - count - count )",
      "code": "cout << fabs ( n - count - count ) << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "set < char > a ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "gets ( a ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "if ( a == 1 ) count ++ ;",
        "gets ( a ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        6,
        9
      ],
      "mod_code": [
        "if ( a == 1 ) count ++ ;",
        "gets ( a ) ;",
        "cout << abs ( n - count - count ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        6,
        9,
        5
      ],
      "mod_code": [
        "if ( a == 1 ) count ++ ;",
        "gets ( a ) ;",
        "cout << abs ( n - count - count ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        9,
        3
      ],
      "mod_code": [
        "if ( a == 1 ) count ++ ;",
        "gets ( a ) ;",
        "cout << abs ( n - count - count ) ;",
        "while ( cin >> n == 0 )"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        6,
        5
      ],
      "mod_code": [
        "if ( a == 1 ) count ++ ;",
        "gets ( a ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        5,
        3
      ],
      "mod_code": [
        "if ( a == 1 ) count ++ ;",
        "gets ( a ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n == 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        3
      ],
      "mod_code": [
        "if ( a == 1 ) count ++ ;",
        "gets ( a ) ;",
        "while ( cin >> n == 0 )"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        9,
        5
      ],
      "mod_code": [
        "if ( a == 1 ) count ++ ;",
        "cout << abs ( n - count - count ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        5,
        3
      ],
      "mod_code": [
        "if ( a == 1 ) count ++ ;",
        "cout << abs ( n - count - count ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n == 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "if ( a == 1 ) count ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        3
      ],
      "mod_code": [
        "if ( a == 1 ) count ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n == 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "gets ( a ) ;",
        "cout << abs ( n - count - count ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9,
        7
      ],
      "mod_code": [
        "gets ( a ) ;",
        "cout << abs ( n - count - count ) ;",
        "if ( a == 1 ) { count ++ ; }"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9,
        7,
        5
      ],
      "mod_code": [
        "gets ( a ) ;",
        "cout << abs ( n - count - count ) ;",
        "if ( a == 1 ) { count ++ ; }",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        7,
        3
      ],
      "mod_code": [
        "gets ( a ) ;",
        "cout << abs ( n - count - count ) ;",
        "if ( a == 1 ) { count ++ ; }",
        "while ( cin >> n == 0 )"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9,
        5
      ],
      "mod_code": [
        "gets ( a ) ;",
        "cout << abs ( n - count - count ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        5,
        3
      ],
      "mod_code": [
        "gets ( a ) ;",
        "cout << abs ( n - count - count ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n == 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        3
      ],
      "mod_code": [
        "gets ( a ) ;",
        "cout << abs ( n - count - count ) ;",
        "while ( cin >> n == 0 )"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "gets ( a ) ;",
        "if ( a == 1 ) { count ++ ; }"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        5
      ],
      "mod_code": [
        "gets ( a ) ;",
        "if ( a == 1 ) { count ++ ; }",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        5,
        3
      ],
      "mod_code": [
        "gets ( a ) ;",
        "if ( a == 1 ) { count ++ ; }",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n == 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        3
      ],
      "mod_code": [
        "gets ( a ) ;",
        "if ( a == 1 ) { count ++ ; }",
        "while ( cin >> n == 0 )"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "gets ( a ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        3
      ],
      "mod_code": [
        "gets ( a ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n == 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "gets ( a ) ;",
        "while ( cin >> n == 0 )"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        7,
        5
      ],
      "mod_code": [
        "cout << abs ( n - count - count ) ;",
        "if ( a == 1 ) { count ++ ; }",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7,
        5,
        3
      ],
      "mod_code": [
        "cout << abs ( n - count - count ) ;",
        "if ( a == 1 ) { count ++ ; }",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n == 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "cout << abs ( n - count - count ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        3
      ],
      "mod_code": [
        "cout << abs ( n - count - count ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n == 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "if ( a == 1 ) { count ++ ; }",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        3
      ],
      "mod_code": [
        "if ( a == 1 ) { count ++ ; }",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n == 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n == 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}