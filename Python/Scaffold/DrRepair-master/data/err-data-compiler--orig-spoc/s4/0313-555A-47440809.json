{
  "meta": {
    "index": 313,
    "hitid": "37VHPF5VYCX7NMZXYOLBF8VLC33C80",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "555A",
    "subid": "47440809"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m = integer",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "res = m - 1",
      "code": "int res = m - 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "aux = vector of int",
      "code": "vector < int > aux ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "k = integer",
      "code": "int k ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read k",
      "code": "cin >> k ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for j = 0 to k",
      "code": "for ( int j = 0 ; j < k ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "x = integer",
      "code": "int x ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "append x to aux",
      "code": "aux . push_back ( x ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if aux [ 0 ] is 1",
      "code": "if ( aux [ 0 ] == 1 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "j = integer",
      "code": "int j ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "for j = 1 to aux . size ( )",
      "code": "for ( j = 1 ; j < aux . size ( ) ; j ++ )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if not aux [ j ] is aux [ j - 1 ] + 1 break loop",
      "code": "if ( aux [ j ] != aux [ j - 1 ] + 1 ) break ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "res = res + ( aux . size ( ) - j ) * 2",
      "code": "res += ( aux . size ( ) - j ) * 2 ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 19,
      "text": "res = res + ( k - 1 ) * 2",
      "code": "res += ( k - 1 ) * 2 ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print res",
      "code": "cout << res << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "res = m - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "aux . push ( x ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "res = m - 1 ;",
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        16
      ],
      "mod_code": [
        "res = m - 1 ;",
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "if ( ! aux [ j ] ) break ;"
      ],
      "err_line": 3,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        16,
        2
      ],
      "mod_code": [
        "res = m - 1 ;",
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "if ( ! aux [ j ] ) break ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        16,
        17
      ],
      "mod_code": [
        "res = m - 1 ;",
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "if ( ! aux [ j ] ) break ;",
        "res -= ( aux . size ( ) - j ) * 2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        16,
        8
      ],
      "mod_code": [
        "res = m - 1 ;",
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "if ( ! aux [ j ] ) break ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        2
      ],
      "mod_code": [
        "res = m - 1 ;",
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        2,
        17
      ],
      "mod_code": [
        "res = m - 1 ;",
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "cin >> n >> k ;",
        "res -= ( aux . size ( ) - j ) * 2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        2,
        8
      ],
      "mod_code": [
        "res = m - 1 ;",
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "cin >> n >> k ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        17
      ],
      "mod_code": [
        "res = m - 1 ;",
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "res -= ( aux . size ( ) - j ) * 2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        17,
        8
      ],
      "mod_code": [
        "res = m - 1 ;",
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "res -= ( aux . size ( ) - j ) * 2 ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        8
      ],
      "mod_code": [
        "res = m - 1 ;",
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "res = m - 1 ;",
        "if ( ! aux [ j ] ) break ;"
      ],
      "err_line": 3,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        16,
        2
      ],
      "mod_code": [
        "res = m - 1 ;",
        "if ( ! aux [ j ] ) break ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        16,
        2,
        17
      ],
      "mod_code": [
        "res = m - 1 ;",
        "if ( ! aux [ j ] ) break ;",
        "cin >> n >> k ;",
        "res -= ( aux . size ( ) - j ) * 2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        16,
        2,
        8
      ],
      "mod_code": [
        "res = m - 1 ;",
        "if ( ! aux [ j ] ) break ;",
        "cin >> n >> k ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        16,
        17
      ],
      "mod_code": [
        "res = m - 1 ;",
        "if ( ! aux [ j ] ) break ;",
        "res -= ( aux . size ( ) - j ) * 2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        16,
        17,
        8
      ],
      "mod_code": [
        "res = m - 1 ;",
        "if ( ! aux [ j ] ) break ;",
        "res -= ( aux . size ( ) - j ) * 2 ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        16,
        8
      ],
      "mod_code": [
        "res = m - 1 ;",
        "if ( ! aux [ j ] ) break ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "res = m - 1 ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        17
      ],
      "mod_code": [
        "res = m - 1 ;",
        "cin >> n >> k ;",
        "res -= ( aux . size ( ) - j ) * 2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        17,
        8
      ],
      "mod_code": [
        "res = m - 1 ;",
        "cin >> n >> k ;",
        "res -= ( aux . size ( ) - j ) * 2 ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        8
      ],
      "mod_code": [
        "res = m - 1 ;",
        "cin >> n >> k ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        17
      ],
      "mod_code": [
        "res = m - 1 ;",
        "res -= ( aux . size ( ) - j ) * 2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        17,
        8
      ],
      "mod_code": [
        "res = m - 1 ;",
        "res -= ( aux . size ( ) - j ) * 2 ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "res = m - 1 ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        2
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "if ( ! aux [ j ] ) break ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        2,
        17
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "if ( ! aux [ j ] ) break ;",
        "cin >> n >> k ;",
        "res -= ( aux . size ( ) - j ) * 2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        2,
        8
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "if ( ! aux [ j ] ) break ;",
        "cin >> n >> k ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        8
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "if ( ! aux [ j ] ) break ;",
        "res -= ( aux . size ( ) - j ) * 2 ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        8
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "if ( ! aux [ j ] ) break ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        2
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        2,
        17
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "cin >> n >> k ;",
        "res -= ( aux . size ( ) - j ) * 2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        2,
        17,
        8
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "cin >> n >> k ;",
        "res -= ( aux . size ( ) - j ) * 2 ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        2,
        8
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "cin >> n >> k ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        17,
        8
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "res -= ( aux . size ( ) - j ) * 2 ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        8
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= aux . size ( ) ; j ++ )",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2
      ],
      "mod_code": [
        "if ( ! aux [ j ] ) break ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2,
        17
      ],
      "mod_code": [
        "if ( ! aux [ j ] ) break ;",
        "cin >> n >> k ;",
        "res -= ( aux . size ( ) - j ) * 2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2,
        17,
        8
      ],
      "mod_code": [
        "if ( ! aux [ j ] ) break ;",
        "cin >> n >> k ;",
        "res -= ( aux . size ( ) - j ) * 2 ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2,
        8
      ],
      "mod_code": [
        "if ( ! aux [ j ] ) break ;",
        "cin >> n >> k ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        8
      ],
      "mod_code": [
        "if ( ! aux [ j ] ) break ;",
        "res -= ( aux . size ( ) - j ) * 2 ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "if ( ! aux [ j ] ) break ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "res -= ( aux . size ( ) - j ) * 2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        17,
        8
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "res -= ( aux . size ( ) - j ) * 2 ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        8
      ],
      "mod_code": [
        "res -= ( aux . size ( ) - j ) * 2 ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    }
  ]
}