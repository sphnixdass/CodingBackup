{
  "meta": {
    "index": 987,
    "hitid": "3X55NP42EOA4GE2VRCCL8RMHWNLP35",
    "workerid": "A1APYLD4DUK33J",
    "probid": "275A",
    "subid": "40677632"
  },
  "lines": [
    {
      "line": 0,
      "text": "create 2d integer arrays b with size 5 by 5",
      "code": "int b [ 5 ] [ 5 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create 2d integer array a with size 5 by 5",
      "code": "int a [ 5 ] [ 5 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for j = 0 to 3 exclusive",
      "code": "for ( int j = 0 ; j < 3 ; j ++ )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read a [ i ] [ j ]",
      "code": "cin >> a [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "set b [ i ] [ j ] to 1",
      "code": "b [ i ] [ j ] = 1 ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for j = 0 to 3 exclusive",
      "code": "for ( int j = 0 ; j < 3 ; j ++ )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if a [ i ] [ j ] % 2 is 1",
      "code": "if ( a [ i ] [ j ] % 2 == 1 )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if b [ i ] [ j ] is 1",
      "code": "if ( b [ i ] [ j ] == 1 )",
      "indent": 4
    },
    {
      "line": 13,
      "text": "set b [ i ] [ j ] to 0",
      "code": "b [ i ] [ j ] = 0 ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 15,
      "text": "set b [ i ] [ j ] to 1",
      "code": "b [ i ] [ j ] = 1 ;",
      "indent": 5
    },
    {
      "line": 16,
      "text": "if b [ i ] [ j - 1 ] is 1",
      "code": "if ( b [ i ] [ j - 1 ] == 1 )",
      "indent": 4
    },
    {
      "line": 17,
      "text": "set b [ i ] [ j - 1 ] to 0",
      "code": "b [ i ] [ j - 1 ] = 0 ;",
      "indent": 5
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 19,
      "text": "set b [ i ] [ j - 1 ] to 1",
      "code": "b [ i ] [ j - 1 ] = 1 ;",
      "indent": 5
    },
    {
      "line": 20,
      "text": "if b [ i ] [ j + 1 ] is 1",
      "code": "if ( b [ i ] [ j + 1 ] == 1 )",
      "indent": 4
    },
    {
      "line": 21,
      "text": "set b [ i ] [ j + 1 ] to 0",
      "code": "b [ i ] [ j + 1 ] = 0 ;",
      "indent": 5
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 23,
      "text": "set b [ i ] [ j + 1 ] to 1",
      "code": "b [ i ] [ j + 1 ] = 1 ;",
      "indent": 5
    },
    {
      "line": 24,
      "text": "if b [ i - 1 ] [ j ] is 1",
      "code": "if ( b [ i - 1 ] [ j ] == 1 )",
      "indent": 4
    },
    {
      "line": 25,
      "text": "set b [ i - 1 ] [ j ] to 0",
      "code": "b [ i - 1 ] [ j ] = 0 ;",
      "indent": 5
    },
    {
      "line": 26,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 27,
      "text": "set b [ i - 1 ] [ j ] to 1",
      "code": "b [ i - 1 ] [ j ] = 1 ;",
      "indent": 5
    },
    {
      "line": 28,
      "text": "if b [ i + 1 ] [ j ] is 1",
      "code": "if ( b [ i + 1 ] [ j ] == 1 )",
      "indent": 4
    },
    {
      "line": 29,
      "text": "set b [ i + 1 ] [ j ] to 0",
      "code": "b [ i + 1 ] [ j ] = 0 ;",
      "indent": 5
    },
    {
      "line": 30,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 31,
      "text": "set b [ i + 1 ] [ j ] to 1",
      "code": "b [ i + 1 ] [ j ] = 1 ;",
      "indent": 5
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 35,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 36,
      "text": "for j = 0 to 3 exclusive , print b [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < 3 ; j ++ ) { cout << b [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 37,
      "text": "print \" \\ n \"",
      "code": "cout << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "<< \" \\n \" ;"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "b [ i ] [ j + 1 ] ] = 1 ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        37,
        30
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "else ;"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        37,
        30,
        21
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "else ;",
        "b [ i ] [ j + 1 ] = ' 0 ' ;"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        37,
        30,
        21,
        18
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "else ;",
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        37,
        30,
        21,
        35
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "else ;",
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        37,
        30,
        21,
        14
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "else ;",
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        37,
        30,
        18
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "else ;",
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        37,
        30,
        18,
        35
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "else ;",
        "else else",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        37,
        30,
        18,
        14
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "else ;",
        "else else",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        37,
        30,
        35
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "else ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        37,
        30,
        35,
        14
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "else ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        37,
        30,
        14
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "else ;",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        37,
        21
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "b [ i ] [ j + 1 ] = ' 0 ' ;"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        37,
        21,
        18
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        37,
        21,
        18,
        35
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "else else",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        37,
        21,
        18,
        14
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "else else",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        37,
        21,
        35
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        37,
        21,
        35,
        14
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        37,
        21,
        14
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        37,
        18
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        37,
        18,
        35
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "else else",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        37,
        18,
        35,
        14
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "else else",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        37,
        18,
        14
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "else else",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        37,
        35
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        37,
        35,
        14
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        37,
        14
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        30,
        21,
        18
      ],
      "mod_code": [
        "else ;",
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        30,
        21,
        18,
        35
      ],
      "mod_code": [
        "else ;",
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "else else",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        30,
        21,
        18,
        14
      ],
      "mod_code": [
        "else ;",
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "else else",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        30,
        21,
        35
      ],
      "mod_code": [
        "else ;",
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        21,
        35,
        14
      ],
      "mod_code": [
        "else ;",
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        30,
        21,
        14
      ],
      "mod_code": [
        "else ;",
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        30,
        18
      ],
      "mod_code": [
        "else ;",
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        30,
        18,
        35
      ],
      "mod_code": [
        "else ;",
        "else else",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        30,
        18,
        35,
        14
      ],
      "mod_code": [
        "else ;",
        "else else",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        30,
        18,
        14
      ],
      "mod_code": [
        "else ;",
        "else else",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        30,
        35
      ],
      "mod_code": [
        "else ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        35,
        14
      ],
      "mod_code": [
        "else ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        30,
        14
      ],
      "mod_code": [
        "else ;",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        21,
        18
      ],
      "mod_code": [
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        21,
        18,
        35
      ],
      "mod_code": [
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "else else",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        21,
        18,
        35,
        14
      ],
      "mod_code": [
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "else else",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        21,
        18,
        14
      ],
      "mod_code": [
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "else else",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        21,
        35
      ],
      "mod_code": [
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        35,
        14
      ],
      "mod_code": [
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        21,
        14
      ],
      "mod_code": [
        "b [ i ] [ j + 1 ] = ' 0 ' ;",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        35
      ],
      "mod_code": [
        "else else",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        35,
        14
      ],
      "mod_code": [
        "else else",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        14
      ],
      "mod_code": [
        "else else",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        35,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}