{
  "meta": {
    "index": 207,
    "hitid": "3ICOHX7ENC542VE8ZBERCHP6EH3E07",
    "workerid": "AIWEXPJAU66D9",
    "probid": "793A",
    "subid": "41073154"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create boolean b = false",
      "code": "bool b = false ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create long longs m , k and l where m = 1000000000000 and long long array a with 100005 elements",
      "code": "long long a [ 100005 ] , m = 1000000000000 , k , l ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read n and l",
      "code": "cin >> n >> l ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set value of m to min of m and a [ i ]",
      "code": "m = min ( m , a [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if a [ i ] ! = m",
      "code": "if ( a [ i ] != m )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set value of k to a [ i ] - m",
      "code": "k = a [ i ] - m ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if k % l is not 0",
      "code": "if ( k % l )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "set b to true",
      "code": "b = true ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if b is false",
      "code": "if ( ! b )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "set value of k to 0",
      "code": "k = 0 ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if a [ i ] ! = m increment k by ( a [ i ] - m / l",
      "code": "if ( a [ i ] != m ) { k += ( ( a [ i ] - m ) / l ) ; }",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "print k and \" \\ n \"",
      "code": "cout << k << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "if b is true , print - 1 and \" \\ n \"",
      "code": "if ( b ) cout << - 1 << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long m , k , a [ 100005 ] , l , l ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "b = false ;"
      ],
      "err_line": 1,
      "err_msg": "‘b’ does not name a type"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "a >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘long long int [100005]’ and ‘long long int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "* m = min ( m , a [ i ] ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "* k = 0 ;"
      ],
      "err_line": 19,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        21
      ],
      "mod_code": [
        "long long m , k , a [ 100005 ] , l , l ;",
        "if ( a [ i ] != m ) k += ( a [ i ] - m / l ) ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        2,
        21,
        7
      ],
      "mod_code": [
        "long long m , k , a [ 100005 ] , l , l ;",
        "if ( a [ i ] != m ) k += ( a [ i ] - m / l ) ;",
        "* m = min ( m , a [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        2,
        21,
        7,
        5
      ],
      "mod_code": [
        "long long m , k , a [ 100005 ] , l , l ;",
        "if ( a [ i ] != m ) k += ( a [ i ] - m / l ) ;",
        "* m = min ( m , a [ i ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        2,
        21,
        7,
        13
      ],
      "mod_code": [
        "long long m , k , a [ 100005 ] , l , l ;",
        "if ( a [ i ] != m ) k += ( a [ i ] - m / l ) ;",
        "* m = min ( m , a [ i ] ) ;",
        "bool b = true ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        2,
        21,
        5
      ],
      "mod_code": [
        "long long m , k , a [ 100005 ] , l , l ;",
        "if ( a [ i ] != m ) k += ( a [ i ] - m / l ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        2,
        21,
        5,
        13
      ],
      "mod_code": [
        "long long m , k , a [ 100005 ] , l , l ;",
        "if ( a [ i ] != m ) k += ( a [ i ] - m / l ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "bool b = true ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        2,
        21,
        13
      ],
      "mod_code": [
        "long long m , k , a [ 100005 ] , l , l ;",
        "if ( a [ i ] != m ) k += ( a [ i ] - m / l ) ;",
        "bool b = true ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "long long m , k , a [ 100005 ] , l , l ;",
        "* m = min ( m , a [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        2,
        7,
        5
      ],
      "mod_code": [
        "long long m , k , a [ 100005 ] , l , l ;",
        "* m = min ( m , a [ i ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        2,
        7,
        5,
        13
      ],
      "mod_code": [
        "long long m , k , a [ 100005 ] , l , l ;",
        "* m = min ( m , a [ i ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "bool b = true ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        2,
        7,
        13
      ],
      "mod_code": [
        "long long m , k , a [ 100005 ] , l , l ;",
        "* m = min ( m , a [ i ] ) ;",
        "bool b = true ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "long long m , k , a [ 100005 ] , l , l ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        2,
        5,
        13
      ],
      "mod_code": [
        "long long m , k , a [ 100005 ] , l , l ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "bool b = true ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "long long m , k , a [ 100005 ] , l , l ;",
        "bool b = true ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘long long int l’"
    },
    {
      "mod_line": [
        21,
        7
      ],
      "mod_code": [
        "if ( a [ i ] != m ) k += ( a [ i ] - m / l ) ;",
        "* m = min ( m , a [ i ] ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        21,
        7,
        5
      ],
      "mod_code": [
        "if ( a [ i ] != m ) k += ( a [ i ] - m / l ) ;",
        "* m = min ( m , a [ i ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        7,
        5,
        13
      ],
      "mod_code": [
        "if ( a [ i ] != m ) k += ( a [ i ] - m / l ) ;",
        "* m = min ( m , a [ i ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "bool b = true ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        7,
        5,
        2
      ],
      "mod_code": [
        "if ( a [ i ] != m ) k += ( a [ i ] - m / l ) ;",
        "* m = min ( m , a [ i ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "long long m , k , a [ 100005 ] , l = 1000000000000 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        7,
        13
      ],
      "mod_code": [
        "if ( a [ i ] != m ) k += ( a [ i ] - m / l ) ;",
        "* m = min ( m , a [ i ] ) ;",
        "bool b = true ;"
      ],
      "err_line": 7,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        21,
        7,
        13,
        2
      ],
      "mod_code": [
        "if ( a [ i ] != m ) k += ( a [ i ] - m / l ) ;",
        "* m = min ( m , a [ i ] ) ;",
        "bool b = true ;",
        "long long m , k , a [ 100005 ] , l = 1000000000000 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        21,
        7,
        2
      ],
      "mod_code": [
        "if ( a [ i ] != m ) k += ( a [ i ] - m / l ) ;",
        "* m = min ( m , a [ i ] ) ;",
        "long long m , k , a [ 100005 ] , l = 1000000000000 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        21,
        5
      ],
      "mod_code": [
        "if ( a [ i ] != m ) k += ( a [ i ] - m / l ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        5,
        13
      ],
      "mod_code": [
        "if ( a [ i ] != m ) k += ( a [ i ] - m / l ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "bool b = true ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        5,
        13,
        2
      ],
      "mod_code": [
        "if ( a [ i ] != m ) k += ( a [ i ] - m / l ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "bool b = true ;",
        "long long m , k , a [ 100005 ] , l = 1000000000000 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        5,
        2
      ],
      "mod_code": [
        "if ( a [ i ] != m ) k += ( a [ i ] - m / l ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "long long m , k , a [ 100005 ] , l = 1000000000000 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "* m = min ( m , a [ i ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        13
      ],
      "mod_code": [
        "* m = min ( m , a [ i ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "bool b = true ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        13,
        2
      ],
      "mod_code": [
        "* m = min ( m , a [ i ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "bool b = true ;",
        "long long m , k , a [ 100005 ] , l = 1000000000000 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        2
      ],
      "mod_code": [
        "* m = min ( m , a [ i ] ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "long long m , k , a [ 100005 ] , l = 1000000000000 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "* m = min ( m , a [ i ] ) ;",
        "bool b = true ;"
      ],
      "err_line": 7,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        7,
        13,
        2
      ],
      "mod_code": [
        "* m = min ( m , a [ i ] ) ;",
        "bool b = true ;",
        "long long m , k , a [ 100005 ] , l = 1000000000000 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "* m = min ( m , a [ i ] ) ;",
        "long long m , k , a [ 100005 ] , l = 1000000000000 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "bool b = true ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "bool b = true ;",
        "long long m , k , a [ 100005 ] , l = 1000000000000 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "long long m , k , a [ 100005 ] , l = 1000000000000 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}