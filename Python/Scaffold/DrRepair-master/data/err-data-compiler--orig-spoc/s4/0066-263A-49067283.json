{
  "meta": {
    "index": 66,
    "hitid": "3IH9TRB0FBTGPP1CRD8IB168CPD1IE",
    "workerid": "A1APYLD4DUK33J",
    "probid": "263A",
    "subid": "49067283"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer array arr size 5 by 5 , integer counter = 0",
      "code": "int arr [ 5 ] [ 5 ] , counter = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "for i = 0 to 5 exclusive",
      "code": "for ( int i = 0 ; i < 5 ; i ++ )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for j = 0 to 5 exclusive , read arr [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < 5 ; j ++ ) { cin >> arr [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to 5 exclusive",
      "code": "for ( int i = 0 ; i < 5 ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to 5 exclusive",
      "code": "for ( int j = 0 ; j < 5 ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if arr [ i ] [ j ] is 1",
      "code": "if ( arr [ i ] [ j ] == 1 )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if i is less than or equal to 2 , increment counter by 2 - i",
      "code": "if ( i <= 2 ) counter += ( 2 - i ) ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "if j is less than or equal to 2 , increment counter by 2 - j",
      "code": "if ( j <= 2 ) counter += ( 2 - j ) ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "if i is greater than 2 , increment counter by i - 2",
      "code": "if ( i > 2 ) counter += ( i - 2 ) ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "if j is greater than 2 , increment counter by j - 2",
      "code": "if ( j > 2 ) counter += ( j - 2 ) ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print counter , newline",
      "code": "cout << counter << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int arr [ 5 ] , counter = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cout << counter , endl ;"
      ],
      "err_line": 16,
      "err_msg": "no context to resolve type of ‘std::endl’"
    },
    {
      "mod_line": [
        16,
        12
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "break break ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        16,
        12,
        6
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "break break ;",
        "for ( j = 0 ; j < 5 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        12,
        6,
        2
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "break break ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        12,
        6,
        1
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "break break ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "int arr [ 5 ] , counter = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        12,
        6,
        7
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "break break ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        12,
        2
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "break break ;",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        12,
        2,
        1
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "break break ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int arr [ 5 ] , counter = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        12,
        2,
        7
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "break break ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        12,
        1
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "break break ;",
        "int arr [ 5 ] , counter = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        12,
        1,
        7
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "break break ;",
        "int arr [ 5 ] , counter = 0 ;",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        12,
        7
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "break break ;",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        16,
        6
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "for ( j = 0 ; j < 5 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6,
        2
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6,
        2,
        1
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int arr [ 5 ] , counter = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6,
        2,
        7
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6,
        1
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "int arr [ 5 ] , counter = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        6,
        1,
        7
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "int arr [ 5 ] , counter = 0 ;",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        6,
        7
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2,
        1
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int arr [ 5 ] , counter = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2,
        1,
        7
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int arr [ 5 ] , counter = 0 ;",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2,
        7
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        1
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "int arr [ 5 ] , counter = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        1,
        7
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "int arr [ 5 ] , counter = 0 ;",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        7
      ],
      "mod_code": [
        "cout << counter , endl ;",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 16,
      "err_msg": "no context to resolve type of ‘std::endl’"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "break break ;",
        "for ( j = 0 ; j < 5 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        2
      ],
      "mod_code": [
        "break break ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        2,
        1
      ],
      "mod_code": [
        "break break ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int arr [ 5 ] , counter = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        2,
        7
      ],
      "mod_code": [
        "break break ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        1
      ],
      "mod_code": [
        "break break ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "int arr [ 5 ] , counter = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        6,
        1,
        7
      ],
      "mod_code": [
        "break break ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "int arr [ 5 ] , counter = 0 ;",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        6,
        7
      ],
      "mod_code": [
        "break break ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "break break ;",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        1
      ],
      "mod_code": [
        "break break ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int arr [ 5 ] , counter = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        1,
        7
      ],
      "mod_code": [
        "break break ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int arr [ 5 ] , counter = 0 ;",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        7
      ],
      "mod_code": [
        "break break ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "break break ;",
        "int arr [ 5 ] , counter = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        1,
        7
      ],
      "mod_code": [
        "break break ;",
        "int arr [ 5 ] , counter = 0 ;",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "break break ;",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int arr [ 5 ] , counter = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        1,
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int arr [ 5 ] , counter = 0 ;",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )",
        "int arr [ 5 ] , counter = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        1,
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )",
        "int arr [ 5 ] , counter = 0 ;",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int arr [ 5 ] , counter = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int arr [ 5 ] , counter = 0 ;",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int arr [ 5 ] , counter = 0 ;",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    }
  ]
}