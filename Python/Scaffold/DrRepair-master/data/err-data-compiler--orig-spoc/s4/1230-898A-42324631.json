{
  "meta": {
    "index": 1230,
    "hitid": "3UZUVSO3P7P159LFOG1PAEWJI7YEMN",
    "workerid": "AIWEXPJAU66D9",
    "probid": "898A",
    "subid": "42324631"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer variable n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integer variables k , a , l and m where l and m = 0",
      "code": "int k , a , l = 0 , m = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set k to n",
      "code": "k = n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "assign n to a",
      "code": "a = n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if n is even and n modulo 5 is 0",
      "code": "if ( n % 2 == 0 && n % 5 == 0 )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print n",
      "code": "cout << n << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 9,
      "text": "loop i from 0 to 8 exclusive",
      "code": "for ( int i = 0 ; i < 8 ; i ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment l by one",
      "code": "l ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if k is even and k modulo 5 = 0 , stop the loop",
      "code": "if ( k % 2 == 0 && k % 5 == 0 ) { break ; }",
      "indent": 3
    },
    {
      "line": 12,
      "text": "decrement k",
      "code": "k -- ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "loop j from 0 to 8 exclusive",
      "code": "for ( int j = 0 ; j < 8 ; j ++ )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increment m by one",
      "code": "m ++ ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if a is even and a modulo 5 = 0 , break the loop",
      "code": "if ( a % 2 == 0 && a % 5 == 0 ) { break ; }",
      "indent": 3
    },
    {
      "line": 17,
      "text": "increment a",
      "code": "a ++ ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if l is equal to m",
      "code": "if ( l == m )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print k",
      "code": "cout << k << endl ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else if l is greater than m",
      "code": "else if ( l > m )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print a",
      "code": "cout << a << endl ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 24,
      "text": "print k",
      "code": "cout << k << endl ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int k = n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int a = n ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        22,
        4
      ],
      "mod_code": [
        "n = n ;",
        "cout << a ;",
        "int k = n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        2,
        22,
        4,
        8
      ],
      "mod_code": [
        "n = n ;",
        "cout << a ;",
        "int k = n ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        2,
        22,
        4,
        23
      ],
      "mod_code": [
        "n = n ;",
        "cout << a ;",
        "int k = n ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        2,
        22,
        4,
        5
      ],
      "mod_code": [
        "n = n ;",
        "cout << a ;",
        "int k = n ;",
        "int a = n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        2,
        22,
        8
      ],
      "mod_code": [
        "n = n ;",
        "cout << a ;",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        22,
        8,
        23
      ],
      "mod_code": [
        "n = n ;",
        "cout << a ;",
        "else else",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        22,
        8,
        5
      ],
      "mod_code": [
        "n = n ;",
        "cout << a ;",
        "else else",
        "int a = n ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        2,
        22,
        23
      ],
      "mod_code": [
        "n = n ;",
        "cout << a ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        22,
        23,
        5
      ],
      "mod_code": [
        "n = n ;",
        "cout << a ;",
        "else else",
        "int a = n ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        2,
        22,
        5
      ],
      "mod_code": [
        "n = n ;",
        "cout << a ;",
        "int a = n ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "n = n ;",
        "int k = n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        2,
        4,
        8
      ],
      "mod_code": [
        "n = n ;",
        "int k = n ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        2,
        4,
        8,
        23
      ],
      "mod_code": [
        "n = n ;",
        "int k = n ;",
        "else else",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        2,
        4,
        8,
        5
      ],
      "mod_code": [
        "n = n ;",
        "int k = n ;",
        "else else",
        "int a = n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        2,
        4,
        23
      ],
      "mod_code": [
        "n = n ;",
        "int k = n ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        2,
        4,
        23,
        5
      ],
      "mod_code": [
        "n = n ;",
        "int k = n ;",
        "else else",
        "int a = n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        2,
        4,
        5
      ],
      "mod_code": [
        "n = n ;",
        "int k = n ;",
        "int a = n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "n = n ;",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        8,
        23
      ],
      "mod_code": [
        "n = n ;",
        "else else",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        8,
        23,
        5
      ],
      "mod_code": [
        "n = n ;",
        "else else",
        "else else",
        "int a = n ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        2,
        8,
        5
      ],
      "mod_code": [
        "n = n ;",
        "else else",
        "int a = n ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        2,
        23
      ],
      "mod_code": [
        "n = n ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        23,
        5
      ],
      "mod_code": [
        "n = n ;",
        "else else",
        "int a = n ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "n = n ;",
        "int a = n ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        22,
        4
      ],
      "mod_code": [
        "cout << a ;",
        "int k = n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        22,
        4,
        8
      ],
      "mod_code": [
        "cout << a ;",
        "int k = n ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        22,
        4,
        8,
        23
      ],
      "mod_code": [
        "cout << a ;",
        "int k = n ;",
        "else else",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        22,
        4,
        8,
        5
      ],
      "mod_code": [
        "cout << a ;",
        "int k = n ;",
        "else else",
        "int a = n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        22,
        4,
        23
      ],
      "mod_code": [
        "cout << a ;",
        "int k = n ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        22,
        4,
        23,
        5
      ],
      "mod_code": [
        "cout << a ;",
        "int k = n ;",
        "else else",
        "int a = n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        22,
        4,
        5
      ],
      "mod_code": [
        "cout << a ;",
        "int k = n ;",
        "int a = n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        22,
        8
      ],
      "mod_code": [
        "cout << a ;",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22,
        8,
        23
      ],
      "mod_code": [
        "cout << a ;",
        "else else",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22,
        8,
        23,
        5
      ],
      "mod_code": [
        "cout << a ;",
        "else else",
        "else else",
        "int a = n ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        22,
        8,
        5
      ],
      "mod_code": [
        "cout << a ;",
        "else else",
        "int a = n ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        22,
        23
      ],
      "mod_code": [
        "cout << a ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        22,
        23,
        5
      ],
      "mod_code": [
        "cout << a ;",
        "else else",
        "int a = n ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        22,
        5
      ],
      "mod_code": [
        "cout << a ;",
        "int a = n ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "int k = n ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        4,
        8,
        23
      ],
      "mod_code": [
        "int k = n ;",
        "else else",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        4,
        8,
        23,
        5
      ],
      "mod_code": [
        "int k = n ;",
        "else else",
        "else else",
        "int a = n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        4,
        8,
        5
      ],
      "mod_code": [
        "int k = n ;",
        "else else",
        "int a = n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        4,
        23
      ],
      "mod_code": [
        "int k = n ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        4,
        23,
        5
      ],
      "mod_code": [
        "int k = n ;",
        "else else",
        "int a = n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "int k = n ;",
        "int a = n ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        8,
        23
      ],
      "mod_code": [
        "else else",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        23,
        5
      ],
      "mod_code": [
        "else else",
        "else else",
        "int a = n ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "else else",
        "int a = n ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        23,
        5
      ],
      "mod_code": [
        "else else",
        "int a = n ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int a’"
    }
  ]
}