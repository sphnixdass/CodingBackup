{
  "meta": {
    "index": 320,
    "hitid": "3RIHDBQ1NESDPJCHEH9VVHTW90XHM2",
    "workerid": "AIWEXPJAU66D9",
    "probid": "555A",
    "subid": "47307913"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare long long variable MOD = 1000000007",
      "code": "long long MOD = 1000000007 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare long long variables N and K",
      "code": "long long N , K ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read N and K",
      "code": "cin >> N >> K ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare long long variable res = 0",
      "code": "long long res = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare long longs a and X",
      "code": "long long a , X ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare long long variable c = 0",
      "code": "long long c = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for long long i = 0 to K exclusive",
      "code": "for ( long long i = 0 ; i < K ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for long long j = 0 to a exclusive",
      "code": "for ( long long j = 0 ; j < a ; j ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "read X",
      "code": "cin >> X ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if X = j + 1 , increase cnt by one",
      "code": "if ( X == j + 1 ) { c ++ ; }",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print N - c + 1 - K + N - c",
      "code": "cout << N - c + 1 - K + N - c << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( X == j + 1 ) cnt ++ ;"
      ],
      "err_line": 11,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> N >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "gets ( a ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "gets ( X ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( X == j + 1 ) { cnt ++ ; }"
      ],
      "err_line": 11,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "if ( X == j + 1 ) cnt ++ ;",
        "gets ( X ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        10,
        8
      ],
      "mod_code": [
        "if ( X == j + 1 ) cnt ++ ;",
        "gets ( X ) ;",
        "gets ( a ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        10,
        8,
        3
      ],
      "mod_code": [
        "if ( X == j + 1 ) cnt ++ ;",
        "gets ( X ) ;",
        "gets ( a ) ;",
        "cin >> N >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        10,
        3
      ],
      "mod_code": [
        "if ( X == j + 1 ) cnt ++ ;",
        "gets ( X ) ;",
        "cin >> N >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "if ( X == j + 1 ) cnt ++ ;",
        "gets ( a ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        8,
        3
      ],
      "mod_code": [
        "if ( X == j + 1 ) cnt ++ ;",
        "gets ( a ) ;",
        "cin >> N >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "if ( X == j + 1 ) cnt ++ ;",
        "cin >> N >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "gets ( X ) ;",
        "gets ( a ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        8,
        3
      ],
      "mod_code": [
        "gets ( X ) ;",
        "gets ( a ) ;",
        "cin >> N >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8,
        3,
        11
      ],
      "mod_code": [
        "gets ( X ) ;",
        "gets ( a ) ;",
        "cin >> N >> k ;",
        "if ( X == j + 1 ) { cnt ++ ; }"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8,
        11
      ],
      "mod_code": [
        "gets ( X ) ;",
        "gets ( a ) ;",
        "if ( X == j + 1 ) { cnt ++ ; }"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "gets ( X ) ;",
        "cin >> N >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        11
      ],
      "mod_code": [
        "gets ( X ) ;",
        "cin >> N >> k ;",
        "if ( X == j + 1 ) { cnt ++ ; }"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "gets ( X ) ;",
        "if ( X == j + 1 ) { cnt ++ ; }"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "gets ( a ) ;",
        "cin >> N >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3,
        11
      ],
      "mod_code": [
        "gets ( a ) ;",
        "cin >> N >> k ;",
        "if ( X == j + 1 ) { cnt ++ ; }"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "gets ( a ) ;",
        "if ( X == j + 1 ) { cnt ++ ; }"
      ],
      "err_line": 8,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "cin >> N >> k ;",
        "if ( X == j + 1 ) { cnt ++ ; }"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    }
  ]
}