{
  "meta": {
    "index": 1405,
    "hitid": "3MDWE879UHWORMQ1PGVU4KKEFBL9BQ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "876A",
    "subid": "46926218"
  },
  "lines": [
    {
      "line": 0,
      "text": "in the function minx with int arguments a and b , and int pointer argument x",
      "code": "int minx ( int a , int b , int * x )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if a is less than b",
      "code": "if ( a < b )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "set the value at * x to 0",
      "code": "* x = 0 ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "return a",
      "code": "return a ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set the value at * x to 1",
      "code": "* x = 1 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "return b",
      "code": "return b ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 10,
      "text": "new character variable x with value ' r '",
      "code": "char x = ' r ' ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "let n and l be ints where l = 0",
      "code": "int n , l = 0 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "a is a new array of integers with size 3",
      "code": "int a [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "read variables a [ 0 ] , a [ 1 ] and a [ 2 ] from the input",
      "code": "cin >> a [ 0 ] >> a [ 1 ] >> a [ 2 ] ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "while n - = 1 is not 0 and n ! = 0",
      "code": "while ( n -= 1 && n != 0 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if x = ' r '",
      "code": "if ( x == ' r ' )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "declare new integer called t",
      "code": "int t ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "change l to the sum of l and minx ( a [ 0 ] , a [ 1 ] , & t )",
      "code": "l += minx ( a [ 0 ] , a [ 1 ] , & t ) ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "if t is true",
      "code": "if ( t )",
      "indent": 3
    },
    {
      "line": 20,
      "text": "change the value of x to ' e '",
      "code": "x = ' e ' ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 22,
      "text": "assign ' o ' to x",
      "code": "x = ' o ' ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "else if x is equal to ' e '",
      "code": "else if ( x == ' e ' )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "declare new integer t",
      "code": "int t ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "increase l by minx ( a [ 1 ] , a [ 2 ] , & t )",
      "code": "l += minx ( a [ 1 ] , a [ 2 ] , & t ) ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "if t is true",
      "code": "if ( t )",
      "indent": 3
    },
    {
      "line": 27,
      "text": "change x to ' o '",
      "code": "x = ' o ' ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 29,
      "text": "change the value of x to ' r '",
      "code": "x = ' r ' ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "else if x is equal to ' o '",
      "code": "else if ( x == ' o ' )",
      "indent": 2
    },
    {
      "line": 31,
      "text": "declare new integer called t",
      "code": "int t ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "change l to l + minx ( a [ 0 ] , a [ 2 ] , & t )",
      "code": "l += minx ( a [ 0 ] , a [ 2 ] , & t ) ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "if t is true",
      "code": "if ( t )",
      "indent": 3
    },
    {
      "line": 34,
      "text": "change the value of x to ' e '",
      "code": "x = ' e ' ;",
      "indent": 4
    },
    {
      "line": 35,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 36,
      "text": "change x to ' r '",
      "code": "x = ' r ' ;",
      "indent": 4
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 39,
      "text": "print l",
      "code": "cout << l << endl ;",
      "indent": 1
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "* * x = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "x = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 25,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 32,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void minx ( int a , int * b , int x )"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "* * x = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 14,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "long int t ;"
      ],
      "err_line": 18,
      "err_msg": "cannot convert ‘long int*’ to ‘int*’ for argument ‘3’ to ‘int minx(int, int, int*)’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "l += minx ( l [ 0 ] , a [ 1 ] , & t ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "long int t ;"
      ],
      "err_line": 25,
      "err_msg": "cannot convert ‘long int*’ to ‘int*’ for argument ‘3’ to ‘int minx(int, int, int*)’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "x -= ' ;"
      ],
      "err_line": 27,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 28,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "long int t ;"
      ],
      "err_line": 32,
      "err_msg": "cannot convert ‘long int*’ to ‘int*’ for argument ‘3’ to ‘int minx(int, int, int*)’"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 35,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "x -= ' ;"
      ],
      "err_line": 36,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "* * x = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        5
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "* * x = 0 ;",
        "x = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        15
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "* * x = 0 ;",
        "x = 1 ;",
        "while ( n -- )"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        18
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "* * x = 0 ;",
        "x = 1 ;",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        25
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "* * x = 0 ;",
        "x = 1 ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        32
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "* * x = 0 ;",
        "x = 1 ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        15
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "* * x = 0 ;",
        "while ( n -- )"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        15,
        18
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "* * x = 0 ;",
        "while ( n -- )",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        15,
        25
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "* * x = 0 ;",
        "while ( n -- )",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        15,
        32
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "* * x = 0 ;",
        "while ( n -- )",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        18
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "* * x = 0 ;",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        18,
        25
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "* * x = 0 ;",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        18,
        32
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "* * x = 0 ;",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        25
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "* * x = 0 ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        25,
        32
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "* * x = 0 ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2,
        32
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "* * x = 0 ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "x = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        15
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "x = 1 ;",
        "while ( n -- )"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        15,
        18
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "x = 1 ;",
        "while ( n -- )",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        15,
        25
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "x = 1 ;",
        "while ( n -- )",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        15,
        32
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "x = 1 ;",
        "while ( n -- )",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        18
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "x = 1 ;",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        18,
        25
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "x = 1 ;",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        18,
        32
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "x = 1 ;",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        25
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "x = 1 ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        25,
        32
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "x = 1 ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        5,
        32
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "x = 1 ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "while ( n -- )"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        15,
        18
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "while ( n -- )",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        15,
        18,
        25
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "while ( n -- )",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        15,
        18,
        32
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "while ( n -- )",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        15,
        25
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "while ( n -- )",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        15,
        25,
        32
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "while ( n -- )",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        15,
        32
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "while ( n -- )",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        18
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        18,
        25
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        18,
        25,
        32
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        18,
        32
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        25
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        25,
        32
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        32
      ],
      "mod_code": [
        "void minx ( int a , int * b , int * x )",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 1,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "* * x = 0 ;",
        "x = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        5,
        15
      ],
      "mod_code": [
        "* * x = 0 ;",
        "x = 1 ;",
        "while ( n -- )"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        5,
        15,
        18
      ],
      "mod_code": [
        "* * x = 0 ;",
        "x = 1 ;",
        "while ( n -- )",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        5,
        15,
        25
      ],
      "mod_code": [
        "* * x = 0 ;",
        "x = 1 ;",
        "while ( n -- )",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        5,
        15,
        32
      ],
      "mod_code": [
        "* * x = 0 ;",
        "x = 1 ;",
        "while ( n -- )",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        5,
        18
      ],
      "mod_code": [
        "* * x = 0 ;",
        "x = 1 ;",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        5,
        18,
        25
      ],
      "mod_code": [
        "* * x = 0 ;",
        "x = 1 ;",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        5,
        18,
        32
      ],
      "mod_code": [
        "* * x = 0 ;",
        "x = 1 ;",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        5,
        25
      ],
      "mod_code": [
        "* * x = 0 ;",
        "x = 1 ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        5,
        25,
        32
      ],
      "mod_code": [
        "* * x = 0 ;",
        "x = 1 ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        5,
        32
      ],
      "mod_code": [
        "* * x = 0 ;",
        "x = 1 ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "* * x = 0 ;",
        "while ( n -- )"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        15,
        18
      ],
      "mod_code": [
        "* * x = 0 ;",
        "while ( n -- )",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        15,
        18,
        25
      ],
      "mod_code": [
        "* * x = 0 ;",
        "while ( n -- )",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        15,
        18,
        32
      ],
      "mod_code": [
        "* * x = 0 ;",
        "while ( n -- )",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        15,
        25
      ],
      "mod_code": [
        "* * x = 0 ;",
        "while ( n -- )",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        15,
        25,
        32
      ],
      "mod_code": [
        "* * x = 0 ;",
        "while ( n -- )",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        15,
        32
      ],
      "mod_code": [
        "* * x = 0 ;",
        "while ( n -- )",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        18
      ],
      "mod_code": [
        "* * x = 0 ;",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        18,
        25
      ],
      "mod_code": [
        "* * x = 0 ;",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        18,
        25,
        32
      ],
      "mod_code": [
        "* * x = 0 ;",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        18,
        32
      ],
      "mod_code": [
        "* * x = 0 ;",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        25
      ],
      "mod_code": [
        "* * x = 0 ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        25,
        32
      ],
      "mod_code": [
        "* * x = 0 ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        32
      ],
      "mod_code": [
        "* * x = 0 ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "x = 1 ;",
        "while ( n -- )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        15,
        18
      ],
      "mod_code": [
        "x = 1 ;",
        "while ( n -- )",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        15,
        18,
        25
      ],
      "mod_code": [
        "x = 1 ;",
        "while ( n -- )",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        15,
        18,
        32
      ],
      "mod_code": [
        "x = 1 ;",
        "while ( n -- )",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        15,
        25
      ],
      "mod_code": [
        "x = 1 ;",
        "while ( n -- )",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        15,
        25,
        32
      ],
      "mod_code": [
        "x = 1 ;",
        "while ( n -- )",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        15,
        32
      ],
      "mod_code": [
        "x = 1 ;",
        "while ( n -- )",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        18
      ],
      "mod_code": [
        "x = 1 ;",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        18,
        25
      ],
      "mod_code": [
        "x = 1 ;",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        18,
        25,
        32
      ],
      "mod_code": [
        "x = 1 ;",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        18,
        32
      ],
      "mod_code": [
        "x = 1 ;",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        25
      ],
      "mod_code": [
        "x = 1 ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        25,
        32
      ],
      "mod_code": [
        "x = 1 ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        32
      ],
      "mod_code": [
        "x = 1 ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        18
      ],
      "mod_code": [
        "while ( n -- )",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        18,
        25
      ],
      "mod_code": [
        "while ( n -- )",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        18,
        25,
        32
      ],
      "mod_code": [
        "while ( n -- )",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        18,
        32
      ],
      "mod_code": [
        "while ( n -- )",
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        25
      ],
      "mod_code": [
        "while ( n -- )",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 25,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        25,
        32
      ],
      "mod_code": [
        "while ( n -- )",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 25,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        32
      ],
      "mod_code": [
        "while ( n -- )",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 32,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        25
      ],
      "mod_code": [
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        25,
        32
      ],
      "mod_code": [
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        32
      ],
      "mod_code": [
        "l += minx ( l [ 0 ] , a [ 1 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        25,
        32
      ],
      "mod_code": [
        "l += minx ( a [ 1 ] , a [ 2 ] , t ) ;",
        "l += minx ( a [ 0 ] , a [ 2 ] , t ) ;"
      ],
      "err_line": 25,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    }
  ]
}