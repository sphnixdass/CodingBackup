{
  "meta": {
    "index": 141,
    "hitid": "3Y3CZJSZ9KNS665EIN43SJKGAZP5RN",
    "workerid": "AIWEXPJAU66D9",
    "probid": "3A",
    "subid": "45217669"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a , b , c and d be characters",
      "code": "char a , b , c , d ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read a , b , c and d",
      "code": "cin >> a >> b >> c >> d ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer m with value = absolute value of a - c",
      "code": "int m = abs ( a - c ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set integer n to absolute value of b - d",
      "code": "int n = abs ( b - d ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "k = integer",
      "code": "int k ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if m is greater than n",
      "code": "if ( m > n )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print m and a new line",
      "code": "cout << m << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "k = m",
      "code": "k = m ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print n and a new line",
      "code": "cout << n << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "assign value of n to the k",
      "code": "k = n ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to k exclusive",
      "code": "for ( int i = 0 ; i < k ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if m is greater than 0",
      "code": "if ( m > 0 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "decrease m by one",
      "code": "m -- ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if a is greater than c",
      "code": "if ( a > c )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "print ' L '",
      "code": "cout << ' L ' ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 19,
      "text": "print ' R '",
      "code": "cout << ' R ' ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "if n is greater than 0",
      "code": "if ( n > 0 )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "decrease n",
      "code": "n -- ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "if b is greater than d",
      "code": "if ( b > d )",
      "indent": 3
    },
    {
      "line": 25,
      "text": "print ' D '",
      "code": "cout << ' D ' ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 27,
      "text": "print ' U '",
      "code": "cout << ' U ' ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 30,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char a , b , c , d , d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17,
        19,
        27,
        1
      ],
      "mod_code": [
        "cout << ' L ' << endl ;",
        "cout << ' R ' << endl ;",
        "cout << ' U ' << endl ;",
        "char a , b , c , d , d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        17,
        19,
        4,
        1
      ],
      "mod_code": [
        "cout << ' L ' << endl ;",
        "cout << ' R ' << endl ;",
        "int n = abs ( b ) - d ;",
        "char a , b , c , d , d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        17,
        19,
        1
      ],
      "mod_code": [
        "cout << ' L ' << endl ;",
        "cout << ' R ' << endl ;",
        "char a , b , c , d , d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        17,
        19,
        1,
        14
      ],
      "mod_code": [
        "cout << ' L ' << endl ;",
        "cout << ' R ' << endl ;",
        "char a , b , c , d , d ;",
        "if ( m >= 0 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        17,
        27,
        4,
        1
      ],
      "mod_code": [
        "cout << ' L ' << endl ;",
        "cout << ' U ' << endl ;",
        "int n = abs ( b ) - d ;",
        "char a , b , c , d , d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        17,
        27,
        1
      ],
      "mod_code": [
        "cout << ' L ' << endl ;",
        "cout << ' U ' << endl ;",
        "char a , b , c , d , d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        17,
        27,
        1,
        14
      ],
      "mod_code": [
        "cout << ' L ' << endl ;",
        "cout << ' U ' << endl ;",
        "char a , b , c , d , d ;",
        "if ( m >= 0 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        17,
        4,
        1
      ],
      "mod_code": [
        "cout << ' L ' << endl ;",
        "int n = abs ( b ) - d ;",
        "char a , b , c , d , d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        17,
        4,
        1,
        14
      ],
      "mod_code": [
        "cout << ' L ' << endl ;",
        "int n = abs ( b ) - d ;",
        "char a , b , c , d , d ;",
        "if ( m >= 0 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        17,
        1
      ],
      "mod_code": [
        "cout << ' L ' << endl ;",
        "char a , b , c , d , d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        17,
        1,
        14
      ],
      "mod_code": [
        "cout << ' L ' << endl ;",
        "char a , b , c , d , d ;",
        "if ( m >= 0 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        19,
        27,
        4,
        1
      ],
      "mod_code": [
        "cout << ' R ' << endl ;",
        "cout << ' U ' << endl ;",
        "int n = abs ( b ) - d ;",
        "char a , b , c , d , d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        19,
        27,
        1
      ],
      "mod_code": [
        "cout << ' R ' << endl ;",
        "cout << ' U ' << endl ;",
        "char a , b , c , d , d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        19,
        27,
        1,
        14
      ],
      "mod_code": [
        "cout << ' R ' << endl ;",
        "cout << ' U ' << endl ;",
        "char a , b , c , d , d ;",
        "if ( m >= 0 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        19,
        4,
        1
      ],
      "mod_code": [
        "cout << ' R ' << endl ;",
        "int n = abs ( b ) - d ;",
        "char a , b , c , d , d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        19,
        4,
        1,
        14
      ],
      "mod_code": [
        "cout << ' R ' << endl ;",
        "int n = abs ( b ) - d ;",
        "char a , b , c , d , d ;",
        "if ( m >= 0 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        19,
        1
      ],
      "mod_code": [
        "cout << ' R ' << endl ;",
        "char a , b , c , d , d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        19,
        1,
        14
      ],
      "mod_code": [
        "cout << ' R ' << endl ;",
        "char a , b , c , d , d ;",
        "if ( m >= 0 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        27,
        4,
        1
      ],
      "mod_code": [
        "cout << ' U ' << endl ;",
        "int n = abs ( b ) - d ;",
        "char a , b , c , d , d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        27,
        4,
        1,
        14
      ],
      "mod_code": [
        "cout << ' U ' << endl ;",
        "int n = abs ( b ) - d ;",
        "char a , b , c , d , d ;",
        "if ( m >= 0 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        27,
        1
      ],
      "mod_code": [
        "cout << ' U ' << endl ;",
        "char a , b , c , d , d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        27,
        1,
        14
      ],
      "mod_code": [
        "cout << ' U ' << endl ;",
        "char a , b , c , d , d ;",
        "if ( m >= 0 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "int n = abs ( b ) - d ;",
        "char a , b , c , d , d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        4,
        1,
        14
      ],
      "mod_code": [
        "int n = abs ( b ) - d ;",
        "char a , b , c , d , d ;",
        "if ( m >= 0 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "char a , b , c , d , d ;",
        "if ( m >= 0 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘char d’"
    }
  ]
}