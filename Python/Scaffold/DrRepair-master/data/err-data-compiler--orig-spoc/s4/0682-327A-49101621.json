{
  "meta": {
    "index": 682,
    "hitid": "35NNO802AVQJ3W81W06G88JBFQNIN8",
    "workerid": "A1AYVATMT88U1W",
    "probid": "327A",
    "subid": "49101621"
  },
  "lines": [
    {
      "line": 0,
      "text": "let n be a integer",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "the integer value of ans = - 1",
      "code": "int ans = - 1 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "the integer value of res = 0",
      "code": "int res = 0 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "a = array of integers of length n",
      "code": "int a [ n ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if a [ i ] is equal to 1 , increment res by 1",
      "code": "if ( a [ i ] == 1 ) res ++ ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if res is equal to n",
      "code": "if ( res == n )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print n - 1 and newline",
      "code": "cout << n - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if n is equal to 1 and a [ 0 ] is equal to 1",
      "code": "if ( n == 1 && a [ 0 ] == 1 )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print 0 and newline",
      "code": "cout << \" 0 \" << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for k = 0 to n exclusive",
      "code": "for ( int k = 0 ; k < n ; k ++ )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "the integer value of cnt = 0",
      "code": "int cnt = 0 ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "for l = 0 to n exclusive",
      "code": "for ( int l = 0 ; l < n ; l ++ )",
      "indent": 3
    },
    {
      "line": 22,
      "text": "if l > = k and l < = j",
      "code": "if ( l >= k && l <= j )",
      "indent": 4
    },
    {
      "line": 23,
      "text": "increment cnt by ( 1 - a [ l ] )",
      "code": "cnt = cnt + ( 1 - a [ l ] ) ;",
      "indent": 5
    },
    {
      "line": 24,
      "text": "else do the following",
      "code": "else",
      "indent": 4
    },
    {
      "line": 25,
      "text": "increment cnt by a [ l ]",
      "code": "cnt = cnt + a [ l ] ;",
      "indent": 5
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 27,
      "text": "ans is equal to maximum of ans and cnt",
      "code": "ans = max ( ans , cnt ) ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "print ans and newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "ans = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "a >> a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( n == l && a [ 0 ] == 1 )"
      ],
      "err_line": 14,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 18,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "cnt = 0 ;"
      ],
      "err_line": 20,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "for ( l = 0 ; l < n ; l ++ )"
      ],
      "err_line": 21,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        20
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "cnt = 0 ;"
      ],
      "err_line": 19,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        24
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "cnt = 0 ;",
        "else else"
      ],
      "err_line": 19,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        24,
        7
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "cnt = 0 ;",
        "else else",
        "a >> a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        19,
        20,
        24,
        27
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "cnt = 0 ;",
        "else else",
        "ans += cnt ;"
      ],
      "err_line": 19,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        24,
        2
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "cnt = 0 ;",
        "else else",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        19,
        20,
        7
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "cnt = 0 ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        19,
        20,
        7,
        27
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "cnt = 0 ;",
        "a >> a [ i ] ;",
        "ans += cnt ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        19,
        20,
        7,
        2
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "cnt = 0 ;",
        "a >> a [ i ] ;",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        19,
        20,
        27
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "cnt = 0 ;",
        "ans += cnt ;"
      ],
      "err_line": 19,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        27,
        2
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "cnt = 0 ;",
        "ans += cnt ;",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        19,
        20,
        2
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "cnt = 0 ;",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        19,
        24
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "else else"
      ],
      "err_line": 19,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        7
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "else else",
        "a >> a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        19,
        24,
        7,
        27
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "else else",
        "a >> a [ i ] ;",
        "ans += cnt ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        19,
        24,
        7,
        2
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "else else",
        "a >> a [ i ] ;",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        19,
        24,
        27
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "else else",
        "ans += cnt ;"
      ],
      "err_line": 19,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        27,
        2
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "else else",
        "ans += cnt ;",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        19,
        24,
        2
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "else else",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        19,
        7
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "a >> a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        19,
        7,
        27
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "a >> a [ i ] ;",
        "ans += cnt ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        19,
        7,
        27,
        2
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "a >> a [ i ] ;",
        "ans += cnt ;",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        19,
        7,
        2
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "a >> a [ i ] ;",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        19,
        27
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "ans += cnt ;"
      ],
      "err_line": 19,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        27,
        2
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "ans += cnt ;",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        19,
        2
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        20,
        24
      ],
      "mod_code": [
        "cnt = 0 ;",
        "else else"
      ],
      "err_line": 20,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        7
      ],
      "mod_code": [
        "cnt = 0 ;",
        "else else",
        "a >> a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        20,
        24,
        7,
        27
      ],
      "mod_code": [
        "cnt = 0 ;",
        "else else",
        "a >> a [ i ] ;",
        "ans += cnt ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        20,
        24,
        7,
        2
      ],
      "mod_code": [
        "cnt = 0 ;",
        "else else",
        "a >> a [ i ] ;",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        20,
        24,
        27
      ],
      "mod_code": [
        "cnt = 0 ;",
        "else else",
        "ans += cnt ;"
      ],
      "err_line": 20,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        27,
        2
      ],
      "mod_code": [
        "cnt = 0 ;",
        "else else",
        "ans += cnt ;",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        20,
        24,
        2
      ],
      "mod_code": [
        "cnt = 0 ;",
        "else else",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        20,
        7
      ],
      "mod_code": [
        "cnt = 0 ;",
        "a >> a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        20,
        7,
        27
      ],
      "mod_code": [
        "cnt = 0 ;",
        "a >> a [ i ] ;",
        "ans += cnt ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        20,
        7,
        27,
        2
      ],
      "mod_code": [
        "cnt = 0 ;",
        "a >> a [ i ] ;",
        "ans += cnt ;",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        20,
        7,
        2
      ],
      "mod_code": [
        "cnt = 0 ;",
        "a >> a [ i ] ;",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        20,
        27
      ],
      "mod_code": [
        "cnt = 0 ;",
        "ans += cnt ;"
      ],
      "err_line": 20,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27,
        2
      ],
      "mod_code": [
        "cnt = 0 ;",
        "ans += cnt ;",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        20,
        2
      ],
      "mod_code": [
        "cnt = 0 ;",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        24,
        7
      ],
      "mod_code": [
        "else else",
        "a >> a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        24,
        7,
        27
      ],
      "mod_code": [
        "else else",
        "a >> a [ i ] ;",
        "ans += cnt ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        24,
        7,
        27,
        2
      ],
      "mod_code": [
        "else else",
        "a >> a [ i ] ;",
        "ans += cnt ;",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        24,
        7,
        2
      ],
      "mod_code": [
        "else else",
        "a >> a [ i ] ;",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        24,
        27
      ],
      "mod_code": [
        "else else",
        "ans += cnt ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        24,
        27,
        2
      ],
      "mod_code": [
        "else else",
        "ans += cnt ;",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        24,
        2
      ],
      "mod_code": [
        "else else",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        7,
        27
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "ans += cnt ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7,
        27,
        2
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "ans += cnt ;",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "a >> a [ i ] ;",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    },
    {
      "mod_line": [
        27,
        2
      ],
      "mod_code": [
        "ans += cnt ;",
        "res = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ does not name a type"
    }
  ]
}