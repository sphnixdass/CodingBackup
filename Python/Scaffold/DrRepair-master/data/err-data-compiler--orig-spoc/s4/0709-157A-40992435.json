{
  "meta": {
    "index": 709,
    "hitid": "3B0MCRZMBROBN37IPA9SLUPI1JEPPI",
    "workerid": "AIWEXPJAU66D9",
    "probid": "157A",
    "subid": "40992435"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer arrays r and c with 110 elements and 2d array m 110 by 110",
      "code": "int r [ 110 ] , c [ 110 ] , m [ 110 ] [ 110 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "set first sizeof ( r ) bytes at the pointer r to 0",
      "code": "memset ( r , 0 , sizeof ( r ) ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set first sizeof ( c ) bytes at the pointer c to 0",
      "code": "memset ( c , 0 , sizeof ( c ) ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set first sizeof ( m ) bytes at the pointer m to 0",
      "code": "memset ( m , 0 , sizeof ( m ) ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n from the input",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "in a for loop , change i from 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "start for loop from j = 0 to n exclusive , read input to m [ i ] [ j ] on each loop",
      "code": "for ( int j = 0 ; j < n ; j ++ ) { cin >> m [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for integer i = 0 to n exclusive incrementing i",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "start for loop from j = 0 to n exclusive , setting r [ i ] to r [ i ] + m [ i ] [ j ] on each iteration",
      "code": "for ( int j = 0 ; j < n ; j ++ ) { r [ i ] = r [ i ] + m [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "in a for loop , change j from 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 0 to n exclusive , change add m [ i ] [ j ] to c [ j ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { c [ j ] = c [ j ] + m [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "create new integer num = 0",
      "code": "int num = 0 ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "in a for loop , change i from 0 to n exclusive incrementing i",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "start for loop from j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if c [ i ] is greater than r [ j ] , increment num",
      "code": "if ( c [ i ] > r [ j ] ) num ++ ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print num",
      "code": "cout << num << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { c += m [ i ] [ j ] = c [ j ] ; }"
      ],
      "err_line": 14,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [110]’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int c [ 110 ] , c [ 110 ] , c [ 110 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "memset ( r + 0 , sizeof ( r ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "memset ( c = 0 , sizeof ( c ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [110]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) c += m [ i ] [ j ] = c [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [110]’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "num = 0 ;"
      ],
      "err_line": 16,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 18,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) { c += m [ i ] [ j ] = c [ j ] ; }"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        1,
        14,
        3
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) { c += m [ i ] [ j ] = c [ j ] ; }",
        "memset ( c = 0 , sizeof ( c ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        1,
        14,
        3,
        13
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) { c += m [ i ] [ j ] = c [ j ] ; }",
        "memset ( c = 0 , sizeof ( c ) ) ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        1,
        14,
        3,
        4
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) { c += m [ i ] [ j ] = c [ j ] ; }",
        "memset ( c = 0 , sizeof ( c ) ) ;",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        1,
        14,
        13
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) { c += m [ i ] [ j ] = c [ j ] ; }",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        1,
        14,
        13,
        4
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) { c += m [ i ] [ j ] = c [ j ] ; }",
        "for ( j = 0 ; j < n ; j ++ )",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        1,
        14,
        4
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) { c += m [ i ] [ j ] = c [ j ] ; }",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "memset ( c = 0 , sizeof ( c ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        1,
        3,
        13
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "memset ( c = 0 , sizeof ( c ) ) ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        1,
        3,
        13,
        14
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "memset ( c = 0 , sizeof ( c ) ) ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( int i = 0 ; i < n ; i ++ ) c += m [ i ] [ j ] = c [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        1,
        3,
        13,
        4
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "memset ( c = 0 , sizeof ( c ) ) ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        1,
        3,
        14
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "memset ( c = 0 , sizeof ( c ) ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) c += m [ i ] [ j ] = c [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        1,
        3,
        14,
        4
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "memset ( c = 0 , sizeof ( c ) ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) c += m [ i ] [ j ] = c [ j ] ;",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "memset ( c = 0 , sizeof ( c ) ) ;",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        1,
        13,
        14
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( int i = 0 ; i < n ; i ++ ) c += m [ i ] [ j ] = c [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        1,
        13,
        14,
        4
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( int i = 0 ; i < n ; i ++ ) c += m [ i ] [ j ] = c [ j ] ;",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        1,
        13,
        4
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) c += m [ i ] [ j ] = c [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        1,
        14,
        4
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) c += m [ i ] [ j ] = c [ j ] ;",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int r [ 110 ] , c [ 110 ] , c [ 110 ] ;",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c [110]’"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { c += m [ i ] [ j ] = c [ j ] ; }",
        "memset ( c = 0 , sizeof ( c ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [110]’"
    },
    {
      "mod_line": [
        14,
        3,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { c += m [ i ] [ j ] = c [ j ] ; }",
        "memset ( c = 0 , sizeof ( c ) ) ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [110]’"
    },
    {
      "mod_line": [
        14,
        3,
        13,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { c += m [ i ] [ j ] = c [ j ] ; }",
        "memset ( c = 0 , sizeof ( c ) ) ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [110]’"
    },
    {
      "mod_line": [
        14,
        3,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { c += m [ i ] [ j ] = c [ j ] ; }",
        "memset ( c = 0 , sizeof ( c ) ) ;",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [110]’"
    },
    {
      "mod_line": [
        14,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { c += m [ i ] [ j ] = c [ j ] ; }",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        13,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { c += m [ i ] [ j ] = c [ j ] ; }",
        "for ( j = 0 ; j < n ; j ++ )",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { c += m [ i ] [ j ] = c [ j ] ; }",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "memset ( c = 0 , sizeof ( c ) ) ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [110]’"
    },
    {
      "mod_line": [
        3,
        13,
        14
      ],
      "mod_code": [
        "memset ( c = 0 , sizeof ( c ) ) ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( int i = 0 ; i < n ; i ++ ) c += m [ i ] [ j ] = c [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [110]’"
    },
    {
      "mod_line": [
        3,
        13,
        14,
        4
      ],
      "mod_code": [
        "memset ( c = 0 , sizeof ( c ) ) ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( int i = 0 ; i < n ; i ++ ) c += m [ i ] [ j ] = c [ j ] ;",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [110]’"
    },
    {
      "mod_line": [
        3,
        13,
        4
      ],
      "mod_code": [
        "memset ( c = 0 , sizeof ( c ) ) ;",
        "for ( j = 0 ; j < n ; j ++ )",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [110]’"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "memset ( c = 0 , sizeof ( c ) ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) c += m [ i ] [ j ] = c [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [110]’"
    },
    {
      "mod_line": [
        3,
        14,
        4
      ],
      "mod_code": [
        "memset ( c = 0 , sizeof ( c ) ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) c += m [ i ] [ j ] = c [ j ] ;",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [110]’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "memset ( c = 0 , sizeof ( c ) ) ;",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [110]’"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( int i = 0 ; i < n ; i ++ ) c += m [ i ] [ j ] = c [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "for ( int i = 0 ; i < n ; i ++ ) c += m [ i ] [ j ] = c [ j ] ;",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) c += m [ i ] [ j ] = c [ j ] ;",
        "memset ( m + 0 , sizeof ( m ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    }
  ]
}