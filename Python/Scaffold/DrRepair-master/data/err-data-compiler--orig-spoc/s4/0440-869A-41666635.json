{
  "meta": {
    "index": 440,
    "hitid": "38G0E1M85MZ1KSCAS8HL1S1ZVO7UV4",
    "workerid": "AIWEXPJAU66D9",
    "probid": "869A",
    "subid": "41666635"
  },
  "lines": [
    {
      "line": 0,
      "text": "create new set of unique integers called s",
      "code": "set < int > s ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare an arrays of integers a and b with 2001 elements",
      "code": "int a [ 2001 ] , b [ 2001 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "n , x and sum are ints with sum = 0",
      "code": "int n , x , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read variable n from the input",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "start for loop from i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read from the input to a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "insert value of the i - th element of a into s",
      "code": "s . insert ( a [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i from 0 to n exclusive incrementing i",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read user input to b [ i ]",
      "code": "cin >> b [ i ] ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "insert b [ i ] into s",
      "code": "s . insert ( b [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "in a for loop , change j from 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "set x to a [ i ] ^ b [ j ]",
      "code": "x = a [ i ] ^ b [ j ] ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if x is in s , increment sum by one",
      "code": "if ( s . find ( x ) != s . end ( ) ) sum ++ ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if sum is even",
      "code": "if ( sum % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print \" Karen \"",
      "code": "cout << \" Karen \" << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print \" Koyomi \" to the standard output",
      "code": "cout << \" Koyomi \" << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;"
      ],
      "err_line": 16,
      "err_msg": "‘class std::set<int>’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "set < unique > s ;"
      ],
      "err_line": 0,
      "err_msg": "type/value mismatch at argument 1 in template parameter list for ‘template<class _Key, class _Compare, class _Alloc> class std::set’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int b [ 2001 ] , b [ 2001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "[ cin >> a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "s . push ( b [ i ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘class std::set<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "if ( s . count ( x ) == s . end ( ) ) sum ++ ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::set<int>::size_type {aka long unsigned int}’ and ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’)"
    },
    {
      "mod_line": [
        16,
        9
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        9,
        1
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int b [ 2001 ] , b [ 2001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        16,
        9,
        1,
        21
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int b [ 2001 ] , b [ 2001 ] ;",
        "else ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        16,
        9,
        1,
        15
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int b [ 2001 ] , b [ 2001 ] ;",
        "x /= b [ i ] ^ b [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        16,
        9,
        1,
        10
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int b [ 2001 ] , b [ 2001 ] ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        16,
        9,
        21
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        9,
        21,
        15
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else ;",
        "x /= b [ i ] ^ b [ j ] ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        9,
        21,
        10
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        9,
        15
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "x /= b [ i ] ^ b [ j ] ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        9,
        15,
        10
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "x /= b [ i ] ^ b [ j ] ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        9,
        10
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        1
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "int b [ 2001 ] , b [ 2001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        16,
        1,
        21
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "int b [ 2001 ] , b [ 2001 ] ;",
        "else ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        16,
        1,
        21,
        15
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "int b [ 2001 ] , b [ 2001 ] ;",
        "else ;",
        "x /= b [ i ] ^ b [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        16,
        1,
        21,
        10
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "int b [ 2001 ] , b [ 2001 ] ;",
        "else ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        16,
        1,
        15
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "int b [ 2001 ] , b [ 2001 ] ;",
        "x /= b [ i ] ^ b [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        16,
        1,
        15,
        10
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "int b [ 2001 ] , b [ 2001 ] ;",
        "x /= b [ i ] ^ b [ j ] ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        16,
        1,
        10
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "int b [ 2001 ] , b [ 2001 ] ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        16,
        21
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "else ;"
      ],
      "err_line": 16,
      "err_msg": "‘class std::set<int>’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        16,
        21,
        15
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "else ;",
        "x /= b [ i ] ^ b [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘class std::set<int>’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        16,
        21,
        15,
        10
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "else ;",
        "x /= b [ i ] ^ b [ j ] ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        16,
        21,
        10
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "else ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        16,
        15
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "x /= b [ i ] ^ b [ j ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘class std::set<int>’ has no member named ‘compare’"
    },
    {
      "mod_line": [
        16,
        15,
        10
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "x /= b [ i ] ^ b [ j ] ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        16,
        10
      ],
      "mod_code": [
        "if ( s . compare ( x ) == s . end ( ) ) sum ++ ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int b [ 2001 ] , b [ 2001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        9,
        1,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int b [ 2001 ] , b [ 2001 ] ;",
        "else ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        9,
        1,
        21,
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int b [ 2001 ] , b [ 2001 ] ;",
        "else ;",
        "x /= b [ i ] ^ b [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        9,
        1,
        21,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int b [ 2001 ] , b [ 2001 ] ;",
        "else ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        9,
        1,
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int b [ 2001 ] , b [ 2001 ] ;",
        "x /= b [ i ] ^ b [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        9,
        1,
        15,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int b [ 2001 ] , b [ 2001 ] ;",
        "x /= b [ i ] ^ b [ j ] ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        9,
        1,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int b [ 2001 ] , b [ 2001 ] ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        9,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        21,
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else ;",
        "x /= b [ i ] ^ b [ j ] ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        21,
        15,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else ;",
        "x /= b [ i ] ^ b [ j ] ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        21,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "x /= b [ i ] ^ b [ j ] ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        15,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "x /= b [ i ] ^ b [ j ] ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        21
      ],
      "mod_code": [
        "int b [ 2001 ] , b [ 2001 ] ;",
        "else ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        1,
        21,
        15
      ],
      "mod_code": [
        "int b [ 2001 ] , b [ 2001 ] ;",
        "else ;",
        "x /= b [ i ] ^ b [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        1,
        21,
        15,
        10
      ],
      "mod_code": [
        "int b [ 2001 ] , b [ 2001 ] ;",
        "else ;",
        "x /= b [ i ] ^ b [ j ] ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        1,
        21,
        10
      ],
      "mod_code": [
        "int b [ 2001 ] , b [ 2001 ] ;",
        "else ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "int b [ 2001 ] , b [ 2001 ] ;",
        "x /= b [ i ] ^ b [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        1,
        15,
        10
      ],
      "mod_code": [
        "int b [ 2001 ] , b [ 2001 ] ;",
        "x /= b [ i ] ^ b [ j ] ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int b [ 2001 ] , b [ 2001 ] ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int b [2001]’"
    },
    {
      "mod_line": [
        21,
        15,
        10
      ],
      "mod_code": [
        "else ;",
        "x /= b [ i ] ^ b [ j ] ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        21,
        10
      ],
      "mod_code": [
        "else ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    },
    {
      "mod_line": [
        15,
        10
      ],
      "mod_code": [
        "x /= b [ i ] ^ b [ j ] ;",
        "[ cin >> b [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘,’ before ‘>>’ token"
    }
  ]
}