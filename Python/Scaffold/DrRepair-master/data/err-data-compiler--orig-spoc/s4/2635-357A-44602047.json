{
  "meta": {
    "index": 2635,
    "hitid": "3VJ4PFXFJ31HS49CHDQP55NMAE6UA3",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "357A",
    "subid": "44602047"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "arra = array of 100 int , sum , key , countt = 0 , n , k , sum2 , minn , maxx , result = int",
      "code": "int arra [ 100 ] , sum = 0 , key = 0 , countt = 0 , n , k , sum2 , minn , maxx , result ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read k",
      "code": "cin >> k ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "add k to sum",
      "code": "sum = sum + k ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "arra [ i ] = k",
      "code": "arra [ i ] = k ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read minn , maxx",
      "code": "cin >> minn >> maxx ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "add arra [ i ] to key",
      "code": "key = key + arra [ i ] ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "sum2 = sum - key",
      "code": "sum2 = sum - key ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if key > = minn and < = maxx and sum2 > = minn and < = maxx",
      "code": "if ( key >= minn && key <= maxx & sum2 >= minn && sum2 <= maxx )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "result = i + 1",
      "code": "result = i + 2 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "countt = 1",
      "code": "countt = 1 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if countt is 1",
      "code": "if ( countt == 1 )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print result",
      "code": "cout << result << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print 0",
      "code": "cout << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , k , k , sum2 , minn , maxx , result , result ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "if ( key >= minn && sum2 <= maxx && sum2 >= maxx )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1,
        12,
        13
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "if ( key >= minn && sum2 <= maxx && sum2 >= maxx )",
        "result = i + 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1,
        12,
        13,
        19
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "if ( key >= minn && sum2 <= maxx && sum2 >= maxx )",
        "result = i + 1 ;",
        "cout << result ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1,
        12,
        13,
        2
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "if ( key >= minn && sum2 <= maxx && sum2 >= maxx )",
        "result = i + 1 ;",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1,
        12,
        19
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "if ( key >= minn && sum2 <= maxx && sum2 >= maxx )",
        "cout << result ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1,
        12,
        19,
        2
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "if ( key >= minn && sum2 <= maxx && sum2 >= maxx )",
        "cout << result ;",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1,
        12,
        2
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "if ( key >= minn && sum2 <= maxx && sum2 >= maxx )",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "result = i + 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1,
        13,
        12
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "result = i + 1 ;",
        "if ( key >= minn && sum2 >= maxx && sum2 >= maxx )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1,
        13,
        12,
        19
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "result = i + 1 ;",
        "if ( key >= minn && sum2 >= maxx && sum2 >= maxx )",
        "cout << result ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1,
        13,
        12,
        2
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "result = i + 1 ;",
        "if ( key >= minn && sum2 >= maxx && sum2 >= maxx )",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1,
        13,
        19
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "result = i + 1 ;",
        "cout << result ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1,
        13,
        19,
        2
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "result = i + 1 ;",
        "cout << result ;",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1,
        13,
        2
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "result = i + 1 ;",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "if ( key >= minn && sum2 >= maxx && sum2 >= maxx )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1,
        12,
        19
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "if ( key >= minn && sum2 >= maxx && sum2 >= maxx )",
        "cout << result ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1,
        12,
        19,
        2
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "if ( key >= minn && sum2 >= maxx && sum2 >= maxx )",
        "cout << result ;",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1,
        12,
        2
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "if ( key >= minn && sum2 >= maxx && sum2 >= maxx )",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1,
        19
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "cout << result ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1,
        19,
        2
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "cout << result ;",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int arra [ 100 ] , sum [ 100 ] , key [ 100 ] , n , k , sum2 , minn , maxx , result , result ;",
        "while ( cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int result’"
    }
  ]
}