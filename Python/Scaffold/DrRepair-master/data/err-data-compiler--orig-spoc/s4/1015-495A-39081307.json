{
  "meta": {
    "index": 1015,
    "hitid": "3N5YJ55YXGX4XEP3KCE3RAVS2IENA5",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "495A",
    "subid": "39081307"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , sum = int",
      "code": "int n , sum ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "num = int array of size 10 with values 2 , 7 , 2 , 3 , 3 , 4 , 2 , 5 , 1 , 2",
      "code": "int num [ 10 ] = { 2 , 7 , 2 , 3 , 3 , 4 , 2 , 5 , 1 , 2 } ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "loop while reading n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if n < 10",
      "code": "if ( n < 10 )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "set sum to 2 * num [ n ]",
      "code": "sum = 2 * num [ n ] ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set sum to num [ n / 10 ] * num [ n mod 10 ]",
      "code": "sum = num [ n / 10 ] * num [ n % 10 ] ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , sum , sum ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "else if ( n < 10 )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "int num [ 10 ] = { 2 , 7 , 2 , 3 , 3 , 4 , 2 , 5 , 5 , 2 } ;",
        "else if ( n < 10 )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        4,
        9
      ],
      "mod_code": [
        "int num [ 10 ] = { 2 , 7 , 2 , 3 , 3 , 4 , 2 , 5 , 5 , 2 } ;",
        "else if ( n < 10 )",
        "cout << sum ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        4,
        9,
        5
      ],
      "mod_code": [
        "int num [ 10 ] = { 2 , 7 , 2 , 3 , 3 , 4 , 2 , 5 , 5 , 2 } ;",
        "else if ( n < 10 )",
        "cout << sum ;",
        "sum -= num [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        4,
        9,
        3
      ],
      "mod_code": [
        "int num [ 10 ] = { 2 , 7 , 2 , 3 , 3 , 4 , 2 , 5 , 5 , 2 } ;",
        "else if ( n < 10 )",
        "cout << sum ;",
        "while ( n -- )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        4,
        9,
        7
      ],
      "mod_code": [
        "int num [ 10 ] = { 2 , 7 , 2 , 3 , 3 , 4 , 2 , 5 , 5 , 2 } ;",
        "else if ( n < 10 )",
        "cout << sum ;",
        "sum = num [ n / 10 ] * num [ n / 10 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        4,
        5
      ],
      "mod_code": [
        "int num [ 10 ] = { 2 , 7 , 2 , 3 , 3 , 4 , 2 , 5 , 5 , 2 } ;",
        "else if ( n < 10 )",
        "sum -= num [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        4,
        5,
        3
      ],
      "mod_code": [
        "int num [ 10 ] = { 2 , 7 , 2 , 3 , 3 , 4 , 2 , 5 , 5 , 2 } ;",
        "else if ( n < 10 )",
        "sum -= num [ n ] ;",
        "while ( n -- )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        4,
        5,
        7
      ],
      "mod_code": [
        "int num [ 10 ] = { 2 , 7 , 2 , 3 , 3 , 4 , 2 , 5 , 5 , 2 } ;",
        "else if ( n < 10 )",
        "sum -= num [ n ] ;",
        "sum = num [ n / 10 ] * num [ n / 10 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        4,
        3
      ],
      "mod_code": [
        "int num [ 10 ] = { 2 , 7 , 2 , 3 , 3 , 4 , 2 , 5 , 5 , 2 } ;",
        "else if ( n < 10 )",
        "while ( n -- )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        4,
        3,
        7
      ],
      "mod_code": [
        "int num [ 10 ] = { 2 , 7 , 2 , 3 , 3 , 4 , 2 , 5 , 5 , 2 } ;",
        "else if ( n < 10 )",
        "while ( n -- )",
        "sum = num [ n / 10 ] * num [ n / 10 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        4,
        7
      ],
      "mod_code": [
        "int num [ 10 ] = { 2 , 7 , 2 , 3 , 3 , 4 , 2 , 5 , 5 , 2 } ;",
        "else if ( n < 10 )",
        "sum = num [ n / 10 ] * num [ n / 10 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "else if ( n < 10 )",
        "cout << sum ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        9,
        5
      ],
      "mod_code": [
        "else if ( n < 10 )",
        "cout << sum ;",
        "sum -= num [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        9,
        5,
        3
      ],
      "mod_code": [
        "else if ( n < 10 )",
        "cout << sum ;",
        "sum -= num [ n ] ;",
        "while ( n -- )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        9,
        5,
        7
      ],
      "mod_code": [
        "else if ( n < 10 )",
        "cout << sum ;",
        "sum -= num [ n ] ;",
        "sum = num [ n / 10 ] * num [ n / 10 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        9,
        3
      ],
      "mod_code": [
        "else if ( n < 10 )",
        "cout << sum ;",
        "while ( n -- )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        9,
        3,
        7
      ],
      "mod_code": [
        "else if ( n < 10 )",
        "cout << sum ;",
        "while ( n -- )",
        "sum = num [ n / 10 ] * num [ n / 10 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        9,
        7
      ],
      "mod_code": [
        "else if ( n < 10 )",
        "cout << sum ;",
        "sum = num [ n / 10 ] * num [ n / 10 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "else if ( n < 10 )",
        "sum -= num [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        5,
        3
      ],
      "mod_code": [
        "else if ( n < 10 )",
        "sum -= num [ n ] ;",
        "while ( n -- )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        5,
        3,
        7
      ],
      "mod_code": [
        "else if ( n < 10 )",
        "sum -= num [ n ] ;",
        "while ( n -- )",
        "sum = num [ n / 10 ] * num [ n / 10 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        5,
        7
      ],
      "mod_code": [
        "else if ( n < 10 )",
        "sum -= num [ n ] ;",
        "sum = num [ n / 10 ] * num [ n / 10 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "else if ( n < 10 )",
        "while ( n -- )"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        3,
        7
      ],
      "mod_code": [
        "else if ( n < 10 )",
        "while ( n -- )",
        "sum = num [ n / 10 ] * num [ n / 10 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "else if ( n < 10 )",
        "sum = num [ n / 10 ] * num [ n / 10 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘else’ without a previous ‘if’"
    }
  ]
}