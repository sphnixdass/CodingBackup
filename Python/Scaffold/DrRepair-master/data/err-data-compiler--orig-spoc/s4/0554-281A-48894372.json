{
  "meta": {
    "index": 554,
    "hitid": "3A520CCNWNU038CQRDBK1N1JN3HEA0",
    "workerid": "AIWEXPJAU66D9",
    "probid": "281A",
    "subid": "48894372"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create character array str with 1000 elements",
      "code": "char str [ 1000 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while read str",
      "code": "while ( cin >> str )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if ' a ' < = str [ 0 ] & & str [ 0 ] < = ' z ' , str [ 0 ] = 32",
      "code": "if ( ' a ' <= str [ 0 ] && str [ 0 ] <= ' z ' ) { str [ 0 ] -= 32 ; }",
      "indent": 2
    },
    {
      "line": 4,
      "text": "print str",
      "code": "cout << str << endl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char a [ 1000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( str >> str )"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘char [1000]’ and ‘char [1000]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "if ( ' a ' <= str [ 0 ] && str [ 0 ] <= ' z ' ) str [ 0 ] = 32 ;",
        "while ( str >> str )"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘char [1000]’ and ‘char [1000]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        2,
        4
      ],
      "mod_code": [
        "if ( ' a ' <= str [ 0 ] && str [ 0 ] <= ' z ' ) str [ 0 ] = 32 ;",
        "while ( str >> str )",
        "cout << str ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘char [1000]’ and ‘char [1000]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        2,
        4,
        1
      ],
      "mod_code": [
        "if ( ' a ' <= str [ 0 ] && str [ 0 ] <= ' z ' ) str [ 0 ] = 32 ;",
        "while ( str >> str )",
        "cout << str ;",
        "char a [ 1000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        1
      ],
      "mod_code": [
        "if ( ' a ' <= str [ 0 ] && str [ 0 ] <= ' z ' ) str [ 0 ] = 32 ;",
        "while ( str >> str )",
        "char a [ 1000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        1
      ],
      "mod_code": [
        "if ( ' a ' <= str [ 0 ] && str [ 0 ] <= ' z ' ) str [ 0 ] = 32 ;",
        "cout << str ;",
        "char a [ 1000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "if ( ' a ' <= str [ 0 ] && str [ 0 ] <= ' z ' ) str [ 0 ] = 32 ;",
        "char a [ 1000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "while ( str >> str )",
        "cout << str ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘char [1000]’ and ‘char [1000]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        2,
        4,
        1
      ],
      "mod_code": [
        "while ( str >> str )",
        "cout << str ;",
        "char a [ 1000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        1,
        3
      ],
      "mod_code": [
        "while ( str >> str )",
        "cout << str ;",
        "char a [ 1000 ] ;",
        "if ( ' a ' <= str [ 0 ] && str [ 0 ] <= ' z ' ) { str [ 0 ] = 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        3
      ],
      "mod_code": [
        "while ( str >> str )",
        "cout << str ;",
        "if ( ' a ' <= str [ 0 ] && str [ 0 ] <= ' z ' ) { str [ 0 ] = 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘char [1000]’ and ‘char [1000]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "while ( str >> str )",
        "char a [ 1000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1,
        3
      ],
      "mod_code": [
        "while ( str >> str )",
        "char a [ 1000 ] ;",
        "if ( ' a ' <= str [ 0 ] && str [ 0 ] <= ' z ' ) { str [ 0 ] = 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "while ( str >> str )",
        "if ( ' a ' <= str [ 0 ] && str [ 0 ] <= ' z ' ) { str [ 0 ] = 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘char [1000]’ and ‘char [1000]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "cout << str ;",
        "char a [ 1000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1,
        3
      ],
      "mod_code": [
        "cout << str ;",
        "char a [ 1000 ] ;",
        "if ( ' a ' <= str [ 0 ] && str [ 0 ] <= ' z ' ) { str [ 0 ] = 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "char a [ 1000 ] ;",
        "if ( ' a ' <= str [ 0 ] && str [ 0 ] <= ' z ' ) { str [ 0 ] = 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    }
  ]
}