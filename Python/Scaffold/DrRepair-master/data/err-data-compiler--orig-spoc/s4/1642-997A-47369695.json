{
  "meta": {
    "index": 1642,
    "hitid": "3DIIW4IV8PPXHOYVEVRK9ZDBO9PI4A",
    "workerid": "A1APYLD4DUK33J",
    "probid": "997A",
    "subid": "47369695"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare character vector v",
      "code": "vector < char > v ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "remove all elements from clear",
      "code": "v . clear ( ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare n , x , y as long long",
      "code": "long long n , x , y ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n and x and y",
      "code": "cin >> n >> x >> y ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while decrement n is true",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare character x",
      "code": "char x ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if v is empty",
      "code": "if ( v . empty ( ) )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if x is ' 0 ' , add x to end of v",
      "code": "if ( x == ' 0 ' ) v . push_back ( x ) ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if x is not back of v",
      "code": "else if ( x != v . back ( ) )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "add x to v",
      "code": "v . push_back ( x ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if v is empty , return print 0 , print newline and 0",
      "code": "if ( v . empty ( ) ) return cout << 0 << endl && 0 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "declare num_0 = size of v / 2 as long long",
      "code": "long long num_0 = v . size ( ) / 2 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "declare num_1 = size of v / 2 as long long",
      "code": "long long num_1 = v . size ( ) / 2 ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if size of v bitwise and 1",
      "code": "if ( v . size ( ) & 1 )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "increment num_0",
      "code": "num_0 ++ ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 19,
      "text": "decrement num_1",
      "code": "num_1 -- ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print minimum of ( num_1 * x + y and num_0 * y ) and newline",
      "code": "cout << min ( num_1 * x + y , num_0 * y ) << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "q . clear ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "v += x ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<char>’ and ‘char’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;"
      ],
      "err_line": 13,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>::__ostream_type {aka std::basic_ostream<char>}’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "vector < string > v ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(char&)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "a . clear ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( n n )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "character = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "v . insert ( x ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::vector<char>::insert(char&)’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( ! v . empty ( ) ) return cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 13,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>::__ostream_type {aka std::basic_ostream<char>}’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "cout << min ( ( num_1 * x + y , num_0 * y ) ) << endl ;"
      ],
      "err_line": 20,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "v += x ;"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        13
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "v += x ;",
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        13,
        5
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "v += x ;",
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "while ( n n )"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        13,
        6
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "v += x ;",
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "character = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        13,
        10
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "v += x ;",
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        5
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "v += x ;",
        "while ( n n )"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        5,
        6
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "v += x ;",
        "while ( n n )",
        "character = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        5,
        10
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "v += x ;",
        "while ( n n )",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        6
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "v += x ;",
        "character = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        6,
        10
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "v += x ;",
        "character = 1 ;",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        10
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "v += x ;",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        5
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "while ( n n )"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        5,
        6
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "while ( n n )",
        "character = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        5,
        10
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "while ( n n )",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        6
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "character = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        6,
        10
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "character = 1 ;",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        10
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "while ( n n )"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        6
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "while ( n n )",
        "character = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        6,
        10
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "while ( n n )",
        "character = 1 ;",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        10
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "while ( n n )",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "character = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        10
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "character = 1 ;",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "q . clear ( ) ;",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 2,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "v += x ;",
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<char>’ and ‘char’)"
    },
    {
      "mod_line": [
        11,
        13,
        5
      ],
      "mod_code": [
        "v += x ;",
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "while ( n n )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        11,
        13,
        5,
        6
      ],
      "mod_code": [
        "v += x ;",
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "while ( n n )",
        "character = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        11,
        13,
        5,
        10
      ],
      "mod_code": [
        "v += x ;",
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "while ( n n )",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        11,
        13,
        6
      ],
      "mod_code": [
        "v += x ;",
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "character = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        6,
        10
      ],
      "mod_code": [
        "v += x ;",
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "character = 1 ;",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 6,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        10
      ],
      "mod_code": [
        "v += x ;",
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<char>’ and ‘char’)"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "v += x ;",
        "while ( n n )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        11,
        5,
        6
      ],
      "mod_code": [
        "v += x ;",
        "while ( n n )",
        "character = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        11,
        5,
        6,
        10
      ],
      "mod_code": [
        "v += x ;",
        "while ( n n )",
        "character = 1 ;",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        11,
        5,
        10
      ],
      "mod_code": [
        "v += x ;",
        "while ( n n )",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "v += x ;",
        "character = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6,
        10
      ],
      "mod_code": [
        "v += x ;",
        "character = 1 ;",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 6,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "v += x ;",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<char>’ and ‘char’)"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "while ( n n )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        13,
        5,
        6
      ],
      "mod_code": [
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "while ( n n )",
        "character = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        13,
        5,
        6,
        10
      ],
      "mod_code": [
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "while ( n n )",
        "character = 1 ;",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        13,
        5,
        10
      ],
      "mod_code": [
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "while ( n n )",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "character = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6,
        10
      ],
      "mod_code": [
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "character = 1 ;",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 6,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        10
      ],
      "mod_code": [
        "if ( ! v . empty ( ) ) return cout << 0 << endl ;",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 13,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>::__ostream_type {aka std::basic_ostream<char>}’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "while ( n n )",
        "character = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        6,
        10
      ],
      "mod_code": [
        "while ( n n )",
        "character = 1 ;",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "while ( n n )",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "character = 1 ;",
        "else if ( v . back ( ) != v . back ( ) )"
      ],
      "err_line": 6,
      "err_msg": "‘character’ was not declared in this scope"
    }
  ]
}