{
  "meta": {
    "index": 1070,
    "hitid": "3XH7ZM9YX2OB7T7QLDHK4ZPIXXIR9F",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "151A",
    "subid": "48530545"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , k , l , c , d , p , nl , np = int",
      "code": "int n , k , l , c , d , p , nl , np ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n then k then l then c then d then p then nl then np",
      "code": "cin >> n >> k >> l >> c >> d >> p >> nl >> np ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "ans1 , ans2 , ans3 = int with ans1 = 0 and ans2 = 0 and ans3 = 0",
      "code": "int ans1 = 0 , ans2 = 0 , ans3 = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if ( k * l ) > = nl set ans1 to ( k * l ) / nl",
      "code": "if ( ( k * l ) >= nl ) ans1 = ( k * l ) / nl ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set ans2 to c * d",
      "code": "ans2 = c * d ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if p > = np set ans3 to p / np",
      "code": "if ( p >= np ) ans3 = p / np ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set ans2 to min of ans1 and ans2",
      "code": "ans2 = min ( ans1 , ans2 ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set ans3 to min of ans2 and ans3",
      "code": "ans3 = min ( ans2 , ans3 ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set ans3 to ans3 / n",
      "code": "ans3 /= n ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print ans3",
      "code": "cout << ans3 << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int ans1 = 0 , ans2 = 0 , ans2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int ans2’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘ans3’"
    },
    {
      "mod_line": [
        2,
        5,
        10,
        1
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "ans2 *= d ;",
        "cout << ans3 ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        5,
        10,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "ans2 *= d ;",
        "cout << ans3 ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘ans3’"
    },
    {
      "mod_line": [
        2,
        5,
        6,
        1
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "ans2 *= d ;",
        "if ( p >= np ) ans3 -= np ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        5,
        6,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "ans2 *= d ;",
        "if ( p >= np ) ans3 -= np ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘ans3’"
    },
    {
      "mod_line": [
        2,
        5,
        1
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "ans2 *= d ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        5,
        1,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "ans2 *= d ;",
        "int n , k , l , c , d , p , p , np ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        5,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "ans2 *= d ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘ans3’"
    },
    {
      "mod_line": [
        2,
        10,
        6,
        1
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "cout << ans3 ;",
        "if ( p >= np ) ans3 -= np ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        10,
        6,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "cout << ans3 ;",
        "if ( p >= np ) ans3 -= np ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘ans3’"
    },
    {
      "mod_line": [
        2,
        10,
        1
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "cout << ans3 ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        10,
        1,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "cout << ans3 ;",
        "int n , k , l , c , d , p , p , np ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        10,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "cout << ans3 ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘ans3’"
    },
    {
      "mod_line": [
        2,
        6,
        1
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "if ( p >= np ) ans3 -= np ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        6,
        1,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "if ( p >= np ) ans3 -= np ;",
        "int n , k , l , c , d , p , p , np ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        6,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "if ( p >= np ) ans3 -= np ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘ans3’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        1,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘ans3’"
    },
    {
      "mod_line": [
        5,
        10,
        6,
        1
      ],
      "mod_code": [
        "ans2 *= d ;",
        "cout << ans3 ;",
        "if ( p >= np ) ans3 -= np ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        10,
        6,
        8
      ],
      "mod_code": [
        "ans2 *= d ;",
        "cout << ans3 ;",
        "if ( p >= np ) ans3 -= np ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘ans3’"
    },
    {
      "mod_line": [
        5,
        10,
        1
      ],
      "mod_code": [
        "ans2 *= d ;",
        "cout << ans3 ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        10,
        1,
        8
      ],
      "mod_code": [
        "ans2 *= d ;",
        "cout << ans3 ;",
        "int n , k , l , c , d , p , p , np ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        10,
        8
      ],
      "mod_code": [
        "ans2 *= d ;",
        "cout << ans3 ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘ans3’"
    },
    {
      "mod_line": [
        5,
        6,
        1
      ],
      "mod_code": [
        "ans2 *= d ;",
        "if ( p >= np ) ans3 -= np ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        6,
        1,
        8
      ],
      "mod_code": [
        "ans2 *= d ;",
        "if ( p >= np ) ans3 -= np ;",
        "int n , k , l , c , d , p , p , np ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        6,
        8
      ],
      "mod_code": [
        "ans2 *= d ;",
        "if ( p >= np ) ans3 -= np ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘ans3’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "ans2 *= d ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        1,
        8
      ],
      "mod_code": [
        "ans2 *= d ;",
        "int n , k , l , c , d , p , p , np ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "ans2 *= d ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘ans3’"
    },
    {
      "mod_line": [
        10,
        6,
        1
      ],
      "mod_code": [
        "cout << ans3 ;",
        "if ( p >= np ) ans3 -= np ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        10,
        6,
        1,
        8
      ],
      "mod_code": [
        "cout << ans3 ;",
        "if ( p >= np ) ans3 -= np ;",
        "int n , k , l , c , d , p , p , np ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        10,
        6,
        8
      ],
      "mod_code": [
        "cout << ans3 ;",
        "if ( p >= np ) ans3 -= np ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘ans3’"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "cout << ans3 ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        10,
        1,
        8
      ],
      "mod_code": [
        "cout << ans3 ;",
        "int n , k , l , c , d , p , p , np ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "cout << ans3 ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘ans3’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "if ( p >= np ) ans3 -= np ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        6,
        1,
        8
      ],
      "mod_code": [
        "if ( p >= np ) ans3 -= np ;",
        "int n , k , l , c , d , p , p , np ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "if ( p >= np ) ans3 -= np ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘ans3’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "ans3 = min ( ans2 , ans3 ans3 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    }
  ]
}