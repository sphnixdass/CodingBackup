{
  "meta": {
    "index": 426,
    "hitid": "3YGE63DIN8RYJV0ZKB8XYNW6M82W0A",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "996A",
    "subid": "48909094"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , sum = integers with sum = 0",
      "code": "int n , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "Read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set sum = sum + n / 100",
      "code": "sum += n / 100 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set n = n - ( 100 * ( n / 100 ) )",
      "code": "n -= ( 100 * ( n / 100 ) ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set sum = sum + n / 20",
      "code": "sum += n / 20 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set n = n - ( 20 * ( n / 20 ) )",
      "code": "n -= ( 20 * ( n / 20 ) ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set sum = sum + n / 10",
      "code": "sum += n / 10 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set n = n - ( 10 * ( n / 10 ) )",
      "code": "n -= ( 10 * ( n / 10 ) ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set sum = sum + n / 5",
      "code": "sum += n / 5 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set n = n - ( 5 * ( n / 5 ) )",
      "code": "n -= ( 5 * ( n / 5 ) ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set sum = sum + n",
      "code": "sum += n ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print sum and a new line",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "{ n ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int n = n - ( 100 * ( n / 100 ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int n = n - ( 20 * ( n / 20 ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int n = n - ( 10 * ( n / 10 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int n = n - ( 5 * ( n / 5 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "int n = n - ( 10 * ( n / 10 ) ) ;",
        "int n = n - ( 100 * ( n / 100 ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        8,
        4,
        10
      ],
      "mod_code": [
        "int n = n - ( 10 * ( n / 10 ) ) ;",
        "int n = n - ( 100 * ( n / 100 ) ) ;",
        "int n = n - ( 5 * ( n / 5 ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        8,
        4,
        10,
        2
      ],
      "mod_code": [
        "int n = n - ( 10 * ( n / 10 ) ) ;",
        "int n = n - ( 100 * ( n / 100 ) ) ;",
        "int n = n - ( 5 * ( n / 5 ) ) ;",
        "{ n ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        8,
        4,
        10,
        6
      ],
      "mod_code": [
        "int n = n - ( 10 * ( n / 10 ) ) ;",
        "int n = n - ( 100 * ( n / 100 ) ) ;",
        "int n = n - ( 5 * ( n / 5 ) ) ;",
        "int n = n - ( 20 * ( n / 20 ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        8,
        4,
        2
      ],
      "mod_code": [
        "int n = n - ( 10 * ( n / 10 ) ) ;",
        "int n = n - ( 100 * ( n / 100 ) ) ;",
        "{ n ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        8,
        4,
        2,
        6
      ],
      "mod_code": [
        "int n = n - ( 10 * ( n / 10 ) ) ;",
        "int n = n - ( 100 * ( n / 100 ) ) ;",
        "{ n ;",
        "int n = n - ( 20 * ( n / 20 ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        8,
        4,
        6
      ],
      "mod_code": [
        "int n = n - ( 10 * ( n / 10 ) ) ;",
        "int n = n - ( 100 * ( n / 100 ) ) ;",
        "int n = n - ( 20 * ( n / 20 ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "int n = n - ( 10 * ( n / 10 ) ) ;",
        "int n = n - ( 5 * ( n / 5 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        8,
        10,
        2
      ],
      "mod_code": [
        "int n = n - ( 10 * ( n / 10 ) ) ;",
        "int n = n - ( 5 * ( n / 5 ) ) ;",
        "{ n ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        8,
        10,
        2,
        6
      ],
      "mod_code": [
        "int n = n - ( 10 * ( n / 10 ) ) ;",
        "int n = n - ( 5 * ( n / 5 ) ) ;",
        "{ n ;",
        "int n = n - ( 20 * ( n / 20 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        8,
        10,
        6
      ],
      "mod_code": [
        "int n = n - ( 10 * ( n / 10 ) ) ;",
        "int n = n - ( 5 * ( n / 5 ) ) ;",
        "int n = n - ( 20 * ( n / 20 ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "int n = n - ( 10 * ( n / 10 ) ) ;",
        "{ n ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        8,
        2,
        6
      ],
      "mod_code": [
        "int n = n - ( 10 * ( n / 10 ) ) ;",
        "{ n ;",
        "int n = n - ( 20 * ( n / 20 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "int n = n - ( 10 * ( n / 10 ) ) ;",
        "int n = n - ( 20 * ( n / 20 ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "int n = n - ( 100 * ( n / 100 ) ) ;",
        "int n = n - ( 5 * ( n / 5 ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        10,
        2
      ],
      "mod_code": [
        "int n = n - ( 100 * ( n / 100 ) ) ;",
        "int n = n - ( 5 * ( n / 5 ) ) ;",
        "{ n ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        10,
        2,
        6
      ],
      "mod_code": [
        "int n = n - ( 100 * ( n / 100 ) ) ;",
        "int n = n - ( 5 * ( n / 5 ) ) ;",
        "{ n ;",
        "int n = n - ( 20 * ( n / 20 ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        10,
        6
      ],
      "mod_code": [
        "int n = n - ( 100 * ( n / 100 ) ) ;",
        "int n = n - ( 5 * ( n / 5 ) ) ;",
        "int n = n - ( 20 * ( n / 20 ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "int n = n - ( 100 * ( n / 100 ) ) ;",
        "{ n ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4,
        2,
        6
      ],
      "mod_code": [
        "int n = n - ( 100 * ( n / 100 ) ) ;",
        "{ n ;",
        "int n = n - ( 20 * ( n / 20 ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "int n = n - ( 100 * ( n / 100 ) ) ;",
        "int n = n - ( 20 * ( n / 20 ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "int n = n - ( 5 * ( n / 5 ) ) ;",
        "{ n ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        10,
        2,
        6
      ],
      "mod_code": [
        "int n = n - ( 5 * ( n / 5 ) ) ;",
        "{ n ;",
        "int n = n - ( 20 * ( n / 20 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "int n = n - ( 5 * ( n / 5 ) ) ;",
        "int n = n - ( 20 * ( n / 20 ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "{ n ;",
        "int n = n - ( 20 * ( n / 20 ) ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘}’ at end of input"
    }
  ]
}