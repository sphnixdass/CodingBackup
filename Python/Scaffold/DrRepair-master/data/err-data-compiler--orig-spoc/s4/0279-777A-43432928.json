{
  "meta": {
    "index": 279,
    "hitid": "3HEM8MA6H96WNF8XPNOHLZFS6FXPQ6",
    "workerid": "A1APYLD4DUK33J",
    "probid": "777A",
    "subid": "43432928"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer x",
      "code": "int x ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if x is 1",
      "code": "if ( x == 1 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if n % 3 is 0",
      "code": "if ( n % 3 == 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print 1 print newline",
      "code": "cout << 1 << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if n % 3 is 1",
      "code": "else if ( n % 3 == 1 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print 0 print newline",
      "code": "cout << 0 << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print 2 print newline",
      "code": "cout << 2 << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else if x is 2",
      "code": "else if ( x == 2 )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if n % 6 is 0 or n % 6 is 1",
      "code": "if ( n % 6 == 0 || n % 6 == 1 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print 2 print newline",
      "code": "cout << 2 << endl ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else if n % 6 is 2 or n % 6 is 3",
      "code": "else if ( n % 6 == 2 || n % 6 == 3 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print 0 print newline",
      "code": "cout << 0 << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print 1 print newline",
      "code": "cout << 1 << endl ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "else if x is 0",
      "code": "else if ( x == 0 )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if n % 6 is 0 or n % 6 is 5",
      "code": "if ( n % 6 == 0 || n % 6 == 5 )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print 0 print newline",
      "code": "cout << 0 << endl ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "else if n % 6 is 1 or n % 6 is 2",
      "code": "else if ( n % 6 == 1 || n % 6 == 2 )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "print 1 print newline",
      "code": "cout << 1 << endl ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 25,
      "text": "print 2 print newline",
      "code": "cout << 2 << endl ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( x == l )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else if ( x == 2 2"
      ],
      "err_line": 12,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        10
      ],
      "mod_code": [
        "cout << 1 ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        10,
        17
      ],
      "mod_code": [
        "cout << 1 ;",
        "else else",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        10,
        17,
        4
      ],
      "mod_code": [
        "cout << 1 ;",
        "else else",
        "else else",
        "cin >> n ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        10,
        17,
        9
      ],
      "mod_code": [
        "cout << 1 ;",
        "else else",
        "else else",
        "cout << 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        10,
        17,
        7
      ],
      "mod_code": [
        "cout << 1 ;",
        "else else",
        "else else",
        "cout << 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        10,
        4
      ],
      "mod_code": [
        "cout << 1 ;",
        "else else",
        "cin >> n ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        10,
        4,
        9
      ],
      "mod_code": [
        "cout << 1 ;",
        "else else",
        "cin >> n ;",
        "cout << 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        10,
        4,
        7
      ],
      "mod_code": [
        "cout << 1 ;",
        "else else",
        "cin >> n ;",
        "cout << 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        10,
        9
      ],
      "mod_code": [
        "cout << 1 ;",
        "else else",
        "cout << 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        10,
        9,
        7
      ],
      "mod_code": [
        "cout << 1 ;",
        "else else",
        "cout << 0 ;",
        "cout << 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        10,
        7
      ],
      "mod_code": [
        "cout << 1 ;",
        "else else",
        "cout << 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        17
      ],
      "mod_code": [
        "cout << 1 ;",
        "else else"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        17,
        4
      ],
      "mod_code": [
        "cout << 1 ;",
        "else else",
        "cin >> n ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        17,
        4,
        9
      ],
      "mod_code": [
        "cout << 1 ;",
        "else else",
        "cin >> n ;",
        "cout << 0 ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        17,
        4,
        7
      ],
      "mod_code": [
        "cout << 1 ;",
        "else else",
        "cin >> n ;",
        "cout << 1 ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        17,
        9
      ],
      "mod_code": [
        "cout << 1 ;",
        "else else",
        "cout << 0 ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        17,
        9,
        7
      ],
      "mod_code": [
        "cout << 1 ;",
        "else else",
        "cout << 0 ;",
        "cout << 1 ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        17,
        7
      ],
      "mod_code": [
        "cout << 1 ;",
        "else else",
        "cout << 1 ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        17
      ],
      "mod_code": [
        "else else",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        17,
        4
      ],
      "mod_code": [
        "else else",
        "else else",
        "cin >> n ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        17,
        4,
        9
      ],
      "mod_code": [
        "else else",
        "else else",
        "cin >> n ;",
        "cout << 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        17,
        4,
        7
      ],
      "mod_code": [
        "else else",
        "else else",
        "cin >> n ;",
        "cout << 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        17,
        9
      ],
      "mod_code": [
        "else else",
        "else else",
        "cout << 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        17,
        9,
        7
      ],
      "mod_code": [
        "else else",
        "else else",
        "cout << 0 ;",
        "cout << 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        17,
        7
      ],
      "mod_code": [
        "else else",
        "else else",
        "cout << 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "else else",
        "cin >> n ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        4,
        9
      ],
      "mod_code": [
        "else else",
        "cin >> n ;",
        "cout << 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        4,
        9,
        7
      ],
      "mod_code": [
        "else else",
        "cin >> n ;",
        "cout << 0 ;",
        "cout << 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        4,
        7
      ],
      "mod_code": [
        "else else",
        "cin >> n ;",
        "cout << 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "else else",
        "cout << 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        9,
        7
      ],
      "mod_code": [
        "else else",
        "cout << 0 ;",
        "cout << 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "else else",
        "cout << 1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17,
        4
      ],
      "mod_code": [
        "else else",
        "cin >> n ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17,
        4,
        9
      ],
      "mod_code": [
        "else else",
        "cin >> n ;",
        "cout << 0 ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17,
        4,
        9,
        7
      ],
      "mod_code": [
        "else else",
        "cin >> n ;",
        "cout << 0 ;",
        "cout << 1 ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17,
        4,
        7
      ],
      "mod_code": [
        "else else",
        "cin >> n ;",
        "cout << 1 ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17,
        9
      ],
      "mod_code": [
        "else else",
        "cout << 0 ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17,
        9,
        7
      ],
      "mod_code": [
        "else else",
        "cout << 0 ;",
        "cout << 1 ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17,
        7
      ],
      "mod_code": [
        "else else",
        "cout << 1 ;"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}