{
  "meta": {
    "index": 2399,
    "hitid": "3SSN80MU8CIFLLCTY9E1JQPM98NKX6",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "392A",
    "subid": "37674420"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "integer as n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n is false",
      "code": "if ( ! n )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "output 1",
      "code": "cout << 1 << endl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 6,
      "text": "output ( square root of 2 times n ) times 4",
      "code": "cout << ( int ) ( sqrt ( 2 ) * n ) * 4 << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( int j = 0 ; j < sqrt ( n ) ; j ++ ) cout << * 4 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( int j = 0 ; j < sqrt ( n ) ; ++ n ) cout << * 4 << endl ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "for ( int j = 0 ; j < sqrt ( n ) ; j ++ ) cout << * 4 << endl ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "for ( int j = 0 ; j < sqrt ( n ) ; ++ n ) cout << * 4 << endl ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}