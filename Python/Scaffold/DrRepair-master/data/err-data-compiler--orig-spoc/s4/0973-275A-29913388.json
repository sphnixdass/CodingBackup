{
  "meta": {
    "index": 973,
    "hitid": "3RKHNXPHGWQN4HIYT43EZJQIFQZUKH",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "275A",
    "subid": "29913388"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "y = int and x = two dimensional int array of sizes 3 and 3 with all values set to 1",
      "code": "int x [ 3 ] [ 3 ] = { { 1 , 1 , 1 } , { 1 , 1 , 1 } , { 1 , 1 , 1 } } , y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "for i = 0 to 3",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for j = 0 to 3",
      "code": "for ( int j = 0 ; j < 3 ; j ++ )",
      "indent": 2
    },
    {
      "line": 4,
      "text": "read y",
      "code": "cin >> y ;",
      "indent": 3
    },
    {
      "line": 5,
      "text": "if y is not even",
      "code": "if ( y % 2 != 0 )",
      "indent": 3
    },
    {
      "line": 6,
      "text": "if j is 1",
      "code": "if ( j == 1 )",
      "indent": 4
    },
    {
      "line": 7,
      "text": "set x [ i ] [ 0 ] to ( x [ i ] [ 0 ] + 1 ) mod 2",
      "code": "x [ i ] [ 0 ] = ( x [ i ] [ 0 ] + 1 ) % 2 ;",
      "indent": 5
    },
    {
      "line": 8,
      "text": "set x [ i ] [ 2 ] to ( x [ i ] [ 2 ] + 1 ) mod 2",
      "code": "x [ i ] [ 2 ] = ( x [ i ] [ 2 ] + 1 ) % 2 ;",
      "indent": 5
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 10,
      "text": "set x [ i ] [ 1 ] to ( x [ i ] [ 1 ] + 1 ) mod 2",
      "code": "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) % 2 ;",
      "indent": 5
    },
    {
      "line": 11,
      "text": "if i is 1",
      "code": "if ( i == 1 )",
      "indent": 4
    },
    {
      "line": 12,
      "text": "set x [ 0 ] [ j ] to ( x [ 0 ] [ j ] + 1 ) mod 2",
      "code": "x [ 0 ] [ j ] = ( x [ 0 ] [ j ] + 1 ) % 2 ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "set x [ 2 ] [ j ] to ( x [ 2 ] [ j ] + 1 ) mod 2",
      "code": "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 1 ) % 2 ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 15,
      "text": "set x [ 1 ] [ j ] to ( x [ 1 ] [ j ] + 1 ) mod 2",
      "code": "x [ 1 ] [ j ] = ( x [ 1 ] [ j ] + 1 ) % 2 ;",
      "indent": 5
    },
    {
      "line": 16,
      "text": "set x [ i ] [ j ] to ( x [ i ] [ j ] + 1 ) mod 2",
      "code": "x [ i ] [ j ] = ( x [ i ] [ j ] + 1 ) % 2 ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for i = 0 to 3",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for j = 0 to 3 print x [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < 3 ; j ++ ) { cout << x [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , y [ 3 ] = { 1 } ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [3]’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( j == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        10,
        5
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "if ( y % 2 == 0 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        10,
        5,
        13
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "if ( y % 2 == 0 )",
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        10,
        5,
        4
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "if ( y % 2 == 0 )",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        10,
        5,
        20
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "if ( y % 2 == 0 )",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        10,
        13
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        10,
        13,
        4
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        10,
        13,
        20
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        10,
        4
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        10,
        4,
        20
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "cin >> n ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        10,
        20
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "if ( y % 2 == 0 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        5,
        13
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "if ( y % 2 == 0 )",
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        5,
        13,
        4
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "if ( y % 2 == 0 )",
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        5,
        13,
        20
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "if ( y % 2 == 0 )",
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        5,
        4
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "if ( y % 2 == 0 )",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        5,
        4,
        20
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "if ( y % 2 == 0 )",
        "cin >> n ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        5,
        20
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "if ( y % 2 == 0 )",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        13,
        4
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        13,
        4,
        20
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;",
        "cin >> n ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        13,
        20
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        4,
        20
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "cin >> n ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        1,
        20
      ],
      "mod_code": [
        "int x [ 3 ] = { 1 } , x [ 3 ] = { 1 } ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [3]’"
    },
    {
      "mod_line": [
        10,
        5,
        13,
        4
      ],
      "mod_code": [
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "if ( y % 2 == 0 )",
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        13,
        20
      ],
      "mod_code": [
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "if ( y % 2 == 0 )",
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        5,
        4
      ],
      "mod_code": [
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "if ( y % 2 == 0 )",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        4,
        20
      ],
      "mod_code": [
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "if ( y % 2 == 0 )",
        "cin >> n ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        20
      ],
      "mod_code": [
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "if ( y % 2 == 0 )",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        13,
        4
      ],
      "mod_code": [
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        4,
        20
      ],
      "mod_code": [
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;",
        "cin >> n ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        20
      ],
      "mod_code": [
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        20
      ],
      "mod_code": [
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "cin >> n ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        20
      ],
      "mod_code": [
        "x [ i ] [ 1 ] = ( x [ i ] [ 1 ] + 1 ) / 2 ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        13,
        4
      ],
      "mod_code": [
        "if ( y % 2 == 0 )",
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13,
        4,
        20
      ],
      "mod_code": [
        "if ( y % 2 == 0 )",
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;",
        "cin >> n ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13,
        20
      ],
      "mod_code": [
        "if ( y % 2 == 0 )",
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "if ( y % 2 == 0 )",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        20
      ],
      "mod_code": [
        "if ( y % 2 == 0 )",
        "cin >> n ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        20
      ],
      "mod_code": [
        "if ( y % 2 == 0 )",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4,
        20
      ],
      "mod_code": [
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;",
        "cin >> n ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20
      ],
      "mod_code": [
        "x [ 2 ] [ j ] = ( x [ 2 ] [ j ] + 2 ) % 2 ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        20
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    }
  ]
}