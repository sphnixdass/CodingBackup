{
  "meta": {
    "index": 1993,
    "hitid": "33CLA8O0MI5K83Y3OZHCEVBT0VFFRX",
    "workerid": "AIWEXPJAU66D9",
    "probid": "389A",
    "subid": "48023524"
  },
  "lines": [
    {
      "line": 0,
      "text": "num is a new array of integers with size 105",
      "code": "int num [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create new integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n from the user input",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "start for loop from i = 0 to n exclusive , read input to num [ i ] on each loop",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> num [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "in a for loop , change i from 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if num [ 0 ] is greater than num [ i ]",
      "code": "if ( num [ 0 ] > num [ i ] )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "change num [ 0 ] to the result of __gcd ( num [ 0 ] , num [ i ] )",
      "code": "num [ 0 ] = __gcd ( num [ 0 ] , num [ i ] ) ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if num [ 0 ] is less than num [ i ]",
      "code": "else if ( num [ 0 ] < num [ i ] )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "change num [ 0 ] to __gcd of num [ i ] and num [ 0 ]",
      "code": "num [ 0 ] = __gcd ( num [ i ] , num [ 0 ] ) ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print num [ 0 ] * n to the output",
      "code": "cout << num [ 0 ] * n << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> a ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "num [ ' 0 ] = __gcd ( num [ 0 ] , num [ i ] ) ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "num [ 0 ] = __gcd ( num [ i ] [ num [ 0 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "cin >> a ;",
        "num [ ' 0 ] = __gcd ( num [ 0 ] , num [ i ] ) ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        7,
        9
      ],
      "mod_code": [
        "cin >> a ;",
        "num [ ' 0 ] = __gcd ( num [ 0 ] , num [ i ] ) ;",
        "num [ 0 ] = __gcd ( num [ i ] [ num [ 0 ] ) ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "cin >> a ;",
        "num [ 0 ] = __gcd ( num [ i ] [ num [ 0 ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "num [ ' 0 ] = __gcd ( num [ 0 ] , num [ i ] ) ;",
        "num [ 0 ] = __gcd ( num [ i ] [ num [ 0 ] ) ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating ' character"
    }
  ]
}