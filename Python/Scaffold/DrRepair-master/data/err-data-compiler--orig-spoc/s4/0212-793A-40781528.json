{
  "meta": {
    "index": 212,
    "hitid": "3MDWE879UHWORMQ1PGVU4KKEEOKB9G",
    "workerid": "A1APYLD4DUK33J",
    "probid": "793A",
    "subid": "40781528"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant integer N with N = 1e5 + 5",
      "code": "const int N = 1e5 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long long n , k , res , create long long array a with size N",
      "code": "long long n , k , res , a [ N ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare Input with no arguments , returning void",
      "code": "void Input ( )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n read k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n inclusive , read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "sort elements from a + 1 to a + n + 1",
      "code": "sort ( a + 1 , a + n + 1 ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "declare Solve with no arguments , returning long long",
      "code": "long long Solve ( )",
      "indent": 0
    },
    {
      "line": 8,
      "text": "for i = 2 to n inclusive",
      "code": "for ( int i = 2 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create long long d with d = a [ i ] - a [ 1 ]",
      "code": "long long d = a [ i ] - a [ 1 ] ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if d % k is not 0",
      "code": "if ( d % k != 0 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "return - 1 from function",
      "code": "return - 1 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increment res by d / k",
      "code": "res += d / k ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "return res from function",
      "code": "return res ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 18,
      "text": "run Input",
      "code": "Input ( ) ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print result of run Solve print ' \\ n '",
      "code": "cout << Solve ( ) << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;"
      ],
      "err_line": 19,
      "err_msg": "too many arguments to function ‘long long int Solve()’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long n , k , a [ N ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "void Input ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "long long Solve ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "return res res ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘res’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "Input ( ;"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘;’ token"
    },
    {
      "mod_line": [
        19,
        9
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "long long d = a [ i ] - ' a ' ;"
      ],
      "err_line": 19,
      "err_msg": "too many arguments to function ‘long long int Solve()’"
    },
    {
      "mod_line": [
        19,
        9,
        5
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "long long d = a [ i ] - ' a ' ;",
        "sort ( a + 1 , a + n + n ) ;"
      ],
      "err_line": 19,
      "err_msg": "too many arguments to function ‘long long int Solve()’"
    },
    {
      "mod_line": [
        19,
        9,
        5,
        15
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "long long d = a [ i ] - ' a ' ;",
        "sort ( a + 1 , a + n + n ) ;",
        "return res res ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘res’"
    },
    {
      "mod_line": [
        19,
        9,
        5,
        7
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "long long d = a [ i ] - ' a ' ;",
        "sort ( a + 1 , a + n + n ) ;",
        "long long Solve ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        9,
        5,
        11
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "long long d = a [ i ] - ' a ' ;",
        "sort ( a + 1 , a + n + n ) ;",
        "return - - 1 ;"
      ],
      "err_line": 19,
      "err_msg": "too many arguments to function ‘long long int Solve()’"
    },
    {
      "mod_line": [
        19,
        9,
        15
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "long long d = a [ i ] - ' a ' ;",
        "return res res ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘res’"
    },
    {
      "mod_line": [
        19,
        9,
        15,
        7
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "long long d = a [ i ] - ' a ' ;",
        "return res res ;",
        "long long Solve ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        9,
        15,
        11
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "long long d = a [ i ] - ' a ' ;",
        "return res res ;",
        "return - - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘res’"
    },
    {
      "mod_line": [
        19,
        9,
        7
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "long long d = a [ i ] - ' a ' ;",
        "long long Solve ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        9,
        7,
        11
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "long long d = a [ i ] - ' a ' ;",
        "long long Solve ( ) ;",
        "return - - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        9,
        11
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "long long d = a [ i ] - ' a ' ;",
        "return - - 1 ;"
      ],
      "err_line": 19,
      "err_msg": "too many arguments to function ‘long long int Solve()’"
    },
    {
      "mod_line": [
        19,
        5
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "sort ( a + 1 , a + n + n ) ;"
      ],
      "err_line": 19,
      "err_msg": "too many arguments to function ‘long long int Solve()’"
    },
    {
      "mod_line": [
        19,
        5,
        15
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "sort ( a + 1 , a + n + n ) ;",
        "return res res ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘res’"
    },
    {
      "mod_line": [
        19,
        5,
        15,
        7
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "sort ( a + 1 , a + n + n ) ;",
        "return res res ;",
        "long long Solve ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        5,
        15,
        11
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "sort ( a + 1 , a + n + n ) ;",
        "return res res ;",
        "return - - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘res’"
    },
    {
      "mod_line": [
        19,
        5,
        7
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "sort ( a + 1 , a + n + n ) ;",
        "long long Solve ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        5,
        7,
        11
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "sort ( a + 1 , a + n + n ) ;",
        "long long Solve ( ) ;",
        "return - - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        5,
        11
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "sort ( a + 1 , a + n + n ) ;",
        "return - - 1 ;"
      ],
      "err_line": 19,
      "err_msg": "too many arguments to function ‘long long int Solve()’"
    },
    {
      "mod_line": [
        19,
        15
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "return res res ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘res’"
    },
    {
      "mod_line": [
        19,
        15,
        7
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "return res res ;",
        "long long Solve ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        15,
        7,
        11
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "return res res ;",
        "long long Solve ( ) ;",
        "return - - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        15,
        11
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "return res res ;",
        "return - - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘res’"
    },
    {
      "mod_line": [
        19,
        7
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "long long Solve ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        7,
        11
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "long long Solve ( ) ;",
        "return - - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        11
      ],
      "mod_code": [
        "cout << Solve ( ' \\n ' ) ;",
        "return - - 1 ;"
      ],
      "err_line": 19,
      "err_msg": "too many arguments to function ‘long long int Solve()’"
    },
    {
      "mod_line": [
        9,
        5,
        15
      ],
      "mod_code": [
        "long long d = a [ i ] - ' a ' ;",
        "sort ( a + 1 , a + n + n ) ;",
        "return res res ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘res’"
    },
    {
      "mod_line": [
        9,
        5,
        15,
        7
      ],
      "mod_code": [
        "long long d = a [ i ] - ' a ' ;",
        "sort ( a + 1 , a + n + n ) ;",
        "return res res ;",
        "long long Solve ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        5,
        15,
        11
      ],
      "mod_code": [
        "long long d = a [ i ] - ' a ' ;",
        "sort ( a + 1 , a + n + n ) ;",
        "return res res ;",
        "return - - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘res’"
    },
    {
      "mod_line": [
        9,
        5,
        7
      ],
      "mod_code": [
        "long long d = a [ i ] - ' a ' ;",
        "sort ( a + 1 , a + n + n ) ;",
        "long long Solve ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        5,
        7,
        11
      ],
      "mod_code": [
        "long long d = a [ i ] - ' a ' ;",
        "sort ( a + 1 , a + n + n ) ;",
        "long long Solve ( ) ;",
        "return - - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "long long d = a [ i ] - ' a ' ;",
        "return res res ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘res’"
    },
    {
      "mod_line": [
        9,
        15,
        7
      ],
      "mod_code": [
        "long long d = a [ i ] - ' a ' ;",
        "return res res ;",
        "long long Solve ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        15,
        7,
        11
      ],
      "mod_code": [
        "long long d = a [ i ] - ' a ' ;",
        "return res res ;",
        "long long Solve ( ) ;",
        "return - - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        15,
        11
      ],
      "mod_code": [
        "long long d = a [ i ] - ' a ' ;",
        "return res res ;",
        "return - - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘res’"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "long long d = a [ i ] - ' a ' ;",
        "long long Solve ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        7,
        11
      ],
      "mod_code": [
        "long long d = a [ i ] - ' a ' ;",
        "long long Solve ( ) ;",
        "return - - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "sort ( a + 1 , a + n + n ) ;",
        "return res res ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘res’"
    },
    {
      "mod_line": [
        5,
        15,
        7
      ],
      "mod_code": [
        "sort ( a + 1 , a + n + n ) ;",
        "return res res ;",
        "long long Solve ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        15,
        7,
        11
      ],
      "mod_code": [
        "sort ( a + 1 , a + n + n ) ;",
        "return res res ;",
        "long long Solve ( ) ;",
        "return - - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        15,
        11
      ],
      "mod_code": [
        "sort ( a + 1 , a + n + n ) ;",
        "return res res ;",
        "return - - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘res’"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "sort ( a + 1 , a + n + n ) ;",
        "long long Solve ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        7,
        11
      ],
      "mod_code": [
        "sort ( a + 1 , a + n + n ) ;",
        "long long Solve ( ) ;",
        "return - - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        7
      ],
      "mod_code": [
        "return res res ;",
        "long long Solve ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        7,
        11
      ],
      "mod_code": [
        "return res res ;",
        "long long Solve ( ) ;",
        "return - - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        11
      ],
      "mod_code": [
        "return res res ;",
        "return - - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘res’"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "long long Solve ( ) ;",
        "return - - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}