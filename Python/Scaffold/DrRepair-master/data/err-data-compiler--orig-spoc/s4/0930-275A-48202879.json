{
  "meta": {
    "index": 930,
    "hitid": "338431Z1FL9EEGBWN2021PK7SW5ROU",
    "workerid": "AIWEXPJAU66D9",
    "probid": "275A",
    "subid": "48202879"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare const int N = 2e5 + 100",
      "code": "const int N = 2e5 + 100 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create an array of strings s with size N",
      "code": "string s [ N ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare 2d integer arrays b and a with size 6 by 6",
      "code": "int b [ 6 ] [ 6 ] , a [ 6 ] [ 6 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "ma = map from integers to booleans",
      "code": "map < int , bool > ma ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "for i from 1 to 3 inclusive",
      "code": "for ( int i = 1 ; i <= 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j from 1 to 3 inclusive",
      "code": "for ( int j = 1 ; j <= 3 ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read input to a [ i ] [ j ]",
      "code": "cin >> a [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set a [ i ] [ j ] to a [ i ] [ j ] % 2",
      "code": "a [ i ] [ j ] = a [ i ] [ j ] % 2 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 1 to 3 inclusive",
      "code": "for ( int i = 1 ; i <= 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for j = 1 to 3 inclusive",
      "code": "for ( int j = 1 ; j <= 3 ; j ++ )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if a [ i ] [ j ] = 1",
      "code": "if ( a [ i ] [ j ] == 1 )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "assign 1 - b [ i ] [ j ] to b [ i ] [ j ]",
      "code": "b [ i ] [ j ] = 1 - b [ i ] [ j ] ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "assign 1 - b [ i ] [ j - 1 ] to b [ i ] [ j - 1 ]",
      "code": "b [ i ] [ j - 1 ] = 1 - b [ i ] [ j - 1 ] ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "assign 1 - b [ i - 1 ] [ j ] to b [ i - 1 ] [ j ]",
      "code": "b [ i - 1 ] [ j ] = 1 - b [ i - 1 ] [ j ] ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "assign 1 - b [ i + 1 ] [ j ] to b [ i + 1 ] [ j ]",
      "code": "b [ i + 1 ] [ j ] = 1 - b [ i + 1 ] [ j ] ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "assign 1 - b [ i ] [ j + 1 ] to b [ i ] [ j + 1 ] to",
      "code": "b [ i ] [ j + 1 ] = 1 - b [ i ] [ j + 1 ] ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for i from 1 to 3 inclusive",
      "code": "for ( int i = 1 ; i <= 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for j from 1 to 3 inclusive , print 1 - b [ i ] [ j ]",
      "code": "for ( int j = 1 ; j <= 3 ; j ++ ) { cout << 1 - b [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 24,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int b [ 6 ] , a [ 6 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid conversion from ‘int (*)[6]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid operands of types ‘int [6][6]’ and ‘int [6]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int b [ 6 ] , b [ 6 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int b [6]’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "map < map < int , bool > ma ;"
      ],
      "err_line": 3,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 1 ; j <= 3 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "a >> a [ i ] [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [6][6]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( j = 1 ; j <= 3 ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "b [ i - 1 ] [ j - 1 ] = b - 1 ] [ j - 1 ] ;"
      ],
      "err_line": 16,
      "err_msg": "invalid conversion from ‘int (*)[6]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "int b [ 6 ] , a [ 6 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        15,
        16
      ],
      "mod_code": [
        "int b [ 6 ] , a [ 6 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;",
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        15,
        16,
        17
      ],
      "mod_code": [
        "int b [ 6 ] , a [ 6 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;",
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;",
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        15,
        16,
        18
      ],
      "mod_code": [
        "int b [ 6 ] , a [ 6 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;",
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        15,
        17
      ],
      "mod_code": [
        "int b [ 6 ] , a [ 6 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;",
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        15,
        17,
        18
      ],
      "mod_code": [
        "int b [ 6 ] , a [ 6 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;",
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        15,
        18
      ],
      "mod_code": [
        "int b [ 6 ] , a [ 6 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "int b [ 6 ] , a [ 6 ] ;",
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        16,
        17
      ],
      "mod_code": [
        "int b [ 6 ] , a [ 6 ] ;",
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;",
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        16,
        17,
        18
      ],
      "mod_code": [
        "int b [ 6 ] , a [ 6 ] ;",
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;",
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        16,
        18
      ],
      "mod_code": [
        "int b [ 6 ] , a [ 6 ] ;",
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "int b [ 6 ] , a [ 6 ] ;",
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        17,
        18
      ],
      "mod_code": [
        "int b [ 6 ] , a [ 6 ] ;",
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        18
      ],
      "mod_code": [
        "int b [ 6 ] , a [ 6 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        16
      ],
      "mod_code": [
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;",
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        16,
        17
      ],
      "mod_code": [
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;",
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;",
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        18
      ],
      "mod_code": [
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;",
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;",
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        2
      ],
      "mod_code": [
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;",
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;",
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;",
        "int b [ 6 ] , b [ 6 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int b [6]’"
    },
    {
      "mod_line": [
        15,
        16,
        18
      ],
      "mod_code": [
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;",
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        16,
        18,
        2
      ],
      "mod_code": [
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;",
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;",
        "int b [ 6 ] , b [ 6 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int b [6]’"
    },
    {
      "mod_line": [
        15,
        16,
        2
      ],
      "mod_code": [
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;",
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;",
        "int b [ 6 ] , b [ 6 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int b [6]’"
    },
    {
      "mod_line": [
        15,
        17
      ],
      "mod_code": [
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;",
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid conversion from ‘int (*)[6]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        17,
        18
      ],
      "mod_code": [
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;",
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid conversion from ‘int (*)[6]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        17,
        18,
        2
      ],
      "mod_code": [
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;",
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;",
        "int b [ 6 ] , b [ 6 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int b [6]’"
    },
    {
      "mod_line": [
        15,
        17,
        2
      ],
      "mod_code": [
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;",
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;",
        "int b [ 6 ] , b [ 6 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int b [6]’"
    },
    {
      "mod_line": [
        15,
        18
      ],
      "mod_code": [
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid operands of types ‘int [6][6]’ and ‘int [6]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        15,
        18,
        2
      ],
      "mod_code": [
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;",
        "int b [ 6 ] , b [ 6 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int b [6]’"
    },
    {
      "mod_line": [
        15,
        2
      ],
      "mod_code": [
        "b [ i ] [ j ] = 1 - b [ i ] [ j - 1 ] ;",
        "int b [ 6 ] , b [ 6 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int b [6]’"
    },
    {
      "mod_line": [
        16,
        17
      ],
      "mod_code": [
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;",
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        17,
        18
      ],
      "mod_code": [
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;",
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        17,
        18,
        2
      ],
      "mod_code": [
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;",
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;",
        "int b [ 6 ] , b [ 6 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int b [6]’"
    },
    {
      "mod_line": [
        16,
        17,
        2
      ],
      "mod_code": [
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;",
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;",
        "int b [ 6 ] , b [ 6 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int b [6]’"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        18,
        2
      ],
      "mod_code": [
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;",
        "int b [ 6 ] , b [ 6 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int b [6]’"
    },
    {
      "mod_line": [
        16,
        2
      ],
      "mod_code": [
        "b [ i - 1 ] [ j - 1 ] [ j ] = b - 1 ] ;",
        "int b [ 6 ] , b [ 6 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int b [6]’"
    },
    {
      "mod_line": [
        17,
        18
      ],
      "mod_code": [
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid conversion from ‘int (*)[6]’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        18,
        2
      ],
      "mod_code": [
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;",
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;",
        "int b [ 6 ] , b [ 6 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int b [6]’"
    },
    {
      "mod_line": [
        17,
        2
      ],
      "mod_code": [
        "b [ i + 1 ] [ j + 1 ] = b - 1 ] [ j + 1 ] ;",
        "int b [ 6 ] , b [ 6 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int b [6]’"
    },
    {
      "mod_line": [
        18,
        2
      ],
      "mod_code": [
        "b [ i ] [ j ] = 1 - b [ i ] [ j + 1 ] = b - b [ i ] ;",
        "int b [ 6 ] , b [ 6 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int b [6]’"
    }
  ]
}