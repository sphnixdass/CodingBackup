{
  "meta": {
    "index": 1253,
    "hitid": "3MQY1YVHS3EDR25247GFUXC09572BN",
    "workerid": "A1APYLD4DUK33J",
    "probid": "496A",
    "subid": "39074385"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n , temp , mx = 0 , mn = 1000000 , j = 2 , integer array arr size 106",
      "code": "int n , arr [ 106 ] , temp , mx = 0 , mn = 1000000 , j = 2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to n inclusive , read arr [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> arr [ i ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while j is less than n",
      "code": "while ( j < n )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for z = 2 to n inclusive",
      "code": "for ( int z = 2 ; z <= n ; z ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if z is j",
      "code": "if ( z == j )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "let temp be arr [ j + 1 ] - arr [ j - 1 ]",
      "code": "temp = arr [ j + 1 ] - arr [ j - 1 ] ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "increment z",
      "code": "z ++ ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 10,
      "text": "let temp be arr [ z ] - arr [ z - 1 ]",
      "code": "temp = arr [ z ] - arr [ z - 1 ] ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "let mx be maximum of mx and temp",
      "code": "mx = max ( mx , temp ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increment j",
      "code": "j ++ ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "let mn be minimum of mn and mx",
      "code": "mn = min ( mn , mx ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "let mx be 0",
      "code": "mx = 0 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print mn print newline",
      "code": "cout << mn << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , temp = 0 , mn = 0 , mn = 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int temp’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( z = 2 ; z <= n ; z ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "mx = mx ( mx , temp ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘mx’ cannot be used as a function"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "mn = mn ( mn , mx ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘mn’ cannot be used as a function"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "else ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        9,
        7
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "else ;",
        "int temp = arr [ j + 1 ] - arr [ j - 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        9,
        7,
        5
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "else ;",
        "int temp = arr [ j + 1 ] - arr [ j - 1 ] ;",
        "for ( z = 2 ; z <= n ; z ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        9,
        7,
        17
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "else ;",
        "int temp = arr [ j + 1 ] - arr [ j - 1 ] ;",
        "cout << mn ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        9,
        7,
        4
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "else ;",
        "int temp = arr [ j + 1 ] - arr [ j - 1 ] ;",
        "while ( j <= n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        9,
        5
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "else ;",
        "for ( z = 2 ; z <= n ; z ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        9,
        5,
        17
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "else ;",
        "for ( z = 2 ; z <= n ; z ++ )",
        "cout << mn ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        9,
        5,
        4
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "else ;",
        "for ( z = 2 ; z <= n ; z ++ )",
        "while ( j <= n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        9,
        17
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "else ;",
        "cout << mn ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        9,
        17,
        4
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "else ;",
        "cout << mn ;",
        "while ( j <= n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        9,
        4
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "else ;",
        "while ( j <= n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "int temp = arr [ j + 1 ] - arr [ j - 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        7,
        5
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "int temp = arr [ j + 1 ] - arr [ j - 1 ] ;",
        "for ( z = 2 ; z <= n ; z ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        7,
        5,
        17
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "int temp = arr [ j + 1 ] - arr [ j - 1 ] ;",
        "for ( z = 2 ; z <= n ; z ++ )",
        "cout << mn ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        7,
        5,
        4
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "int temp = arr [ j + 1 ] - arr [ j - 1 ] ;",
        "for ( z = 2 ; z <= n ; z ++ )",
        "while ( j <= n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        7,
        17
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "int temp = arr [ j + 1 ] - arr [ j - 1 ] ;",
        "cout << mn ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        7,
        17,
        4
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "int temp = arr [ j + 1 ] - arr [ j - 1 ] ;",
        "cout << mn ;",
        "while ( j <= n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        7,
        4
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "int temp = arr [ j + 1 ] - arr [ j - 1 ] ;",
        "while ( j <= n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "for ( z = 2 ; z <= n ; z ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        5,
        17
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "for ( z = 2 ; z <= n ; z ++ )",
        "cout << mn ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        5,
        17,
        4
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "for ( z = 2 ; z <= n ; z ++ )",
        "cout << mn ;",
        "while ( j <= n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        5,
        4
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "for ( z = 2 ; z <= n ; z ++ )",
        "while ( j <= n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        17
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "cout << mn ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        17,
        4
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "cout << mn ;",
        "while ( j <= n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n , temp , arr [ 106 ] , mx = 0 , mn = 0 , mn = 2 ;",
        "while ( j <= n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int mn’"
    },
    {
      "mod_line": [
        9,
        7,
        5
      ],
      "mod_code": [
        "else ;",
        "int temp = arr [ j + 1 ] - arr [ j - 1 ] ;",
        "for ( z = 2 ; z <= n ; z ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7,
        5,
        17
      ],
      "mod_code": [
        "else ;",
        "int temp = arr [ j + 1 ] - arr [ j - 1 ] ;",
        "for ( z = 2 ; z <= n ; z ++ )",
        "cout << mn ;"
      ],
      "err_line": 5,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7,
        5,
        4
      ],
      "mod_code": [
        "else ;",
        "int temp = arr [ j + 1 ] - arr [ j - 1 ] ;",
        "for ( z = 2 ; z <= n ; z ++ )",
        "while ( j <= n )"
      ],
      "err_line": 5,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "else ;",
        "for ( z = 2 ; z <= n ; z ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        17
      ],
      "mod_code": [
        "else ;",
        "for ( z = 2 ; z <= n ; z ++ )",
        "cout << mn ;"
      ],
      "err_line": 5,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        17,
        4
      ],
      "mod_code": [
        "else ;",
        "for ( z = 2 ; z <= n ; z ++ )",
        "cout << mn ;",
        "while ( j <= n )"
      ],
      "err_line": 5,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        4
      ],
      "mod_code": [
        "else ;",
        "for ( z = 2 ; z <= n ; z ++ )",
        "while ( j <= n )"
      ],
      "err_line": 5,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "int temp = arr [ j + 1 ] - arr [ j - 1 ] ;",
        "for ( z = 2 ; z <= n ; z ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        17
      ],
      "mod_code": [
        "int temp = arr [ j + 1 ] - arr [ j - 1 ] ;",
        "for ( z = 2 ; z <= n ; z ++ )",
        "cout << mn ;"
      ],
      "err_line": 5,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        17,
        4
      ],
      "mod_code": [
        "int temp = arr [ j + 1 ] - arr [ j - 1 ] ;",
        "for ( z = 2 ; z <= n ; z ++ )",
        "cout << mn ;",
        "while ( j <= n )"
      ],
      "err_line": 5,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        4
      ],
      "mod_code": [
        "int temp = arr [ j + 1 ] - arr [ j - 1 ] ;",
        "for ( z = 2 ; z <= n ; z ++ )",
        "while ( j <= n )"
      ],
      "err_line": 5,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "for ( z = 2 ; z <= n ; z ++ )",
        "cout << mn ;"
      ],
      "err_line": 5,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        4
      ],
      "mod_code": [
        "for ( z = 2 ; z <= n ; z ++ )",
        "cout << mn ;",
        "while ( j <= n )"
      ],
      "err_line": 5,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "for ( z = 2 ; z <= n ; z ++ )",
        "while ( j <= n )"
      ],
      "err_line": 5,
      "err_msg": "‘z’ was not declared in this scope"
    }
  ]
}