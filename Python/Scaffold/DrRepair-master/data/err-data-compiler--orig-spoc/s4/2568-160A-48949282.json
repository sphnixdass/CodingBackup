{
  "meta": {
    "index": 2568,
    "hitid": "359AP8GAGGE3N8UEOJT518ZQ26S7CE",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "160A",
    "subid": "48949282"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "CountOfMoney , Sum , Hand , Count = int with Sum = 0 and Hand = 0 and Count = 0",
      "code": "int CountOfMoney , Sum = 0 , Hand = 0 , Count = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read CountOfMoney",
      "code": "cin >> CountOfMoney ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "list = int vector of size CountOfMoney",
      "code": "vector < int > list ( CountOfMoney ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to CountOfMoney",
      "code": "for ( int i = 0 ; i < CountOfMoney ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read list [ i ]",
      "code": "cin >> list [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment Sum by list [ i ]",
      "code": "Sum += list [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to size of list - 1",
      "code": "for ( int i = 0 ; i < list . size ( ) - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for j = 0 to size of list - 1 - i",
      "code": "for ( int j = 0 ; j < list . size ( ) - 1 - i ; j ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if list [ j ] is greater or equal to list [ j + 1 ] then swap list [ j ] and list [ j + 1 ]",
      "code": "if ( list [ j ] >= list [ j + 1 ] ) swap ( list [ j ] , list [ j + 1 ] ) ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "loop while ( Hand is less or equal to Sum ) bitwise - and ( Sum is not 0 )",
      "code": "while ( ( Hand <= Sum ) & ( Sum != 0 ) )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "decrement Sum by last element of list",
      "code": "Sum -= list [ list . size ( ) - 1 ] ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increment Hand by last element of list",
      "code": "Hand += list [ list . size ( ) - 1 ] ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "remove last element of list",
      "code": "list . pop_back ( ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increment Count",
      "code": "Count ++ ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print Count",
      "code": "cout << Count << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "Sum += list ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "Sum -= * 2 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "Hand += list ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "q . pop ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( CountOfMoney ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < int > list ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>()’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < CountOfMoney ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "while ( Hand <= Sum ) && ( Sum != 0 ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "Hand . push ( Hand ) ;"
      ],
      "err_line": 13,
      "err_msg": "request for member ‘push’ in ‘Hand’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "q . pop_front ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Sum += list ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        6,
        9
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Sum += list ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        11
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Sum += list ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        12
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Sum += list ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "Sum -= * 2 ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        13
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Sum += list ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "Hand += list ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        14
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Sum += list ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "q . pop ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        6,
        11
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Sum += list ;",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        6,
        11,
        12
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Sum += list ;",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Sum -= * 2 ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        6,
        11,
        13
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Sum += list ;",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Hand += list ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        6,
        11,
        14
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Sum += list ;",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "q . pop ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        6,
        12
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Sum += list ;",
        "Sum -= * 2 ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        6,
        12,
        13
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Sum += list ;",
        "Sum -= * 2 ;",
        "Hand += list ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        6,
        12,
        14
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Sum += list ;",
        "Sum -= * 2 ;",
        "q . pop ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        6,
        13
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Sum += list ;",
        "Hand += list ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        6,
        13,
        14
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Sum += list ;",
        "Hand += list ;",
        "q . pop ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        6,
        14
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Sum += list ;",
        "q . pop ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        9,
        11
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        9,
        11,
        12
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Sum -= * 2 ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        9,
        11,
        13
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Hand += list ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        9,
        11,
        14
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "q . pop ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        9,
        12
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "Sum -= * 2 ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        9,
        12,
        13
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "Sum -= * 2 ;",
        "Hand += list ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        9,
        12,
        14
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "Sum -= * 2 ;",
        "q . pop ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        9,
        13
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "Hand += list ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        9,
        13,
        14
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "Hand += list ;",
        "q . pop ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        9,
        14
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "q . pop ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        11,
        12
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Sum -= * 2 ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        11,
        12,
        13
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Sum -= * 2 ;",
        "Hand += list ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        11,
        12,
        14
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Sum -= * 2 ;",
        "q . pop ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        11,
        13
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Hand += list ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        11,
        13,
        14
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Hand += list ;",
        "q . pop ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        11,
        14
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "q . pop ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Sum -= * 2 ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        12,
        13
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Sum -= * 2 ;",
        "Hand += list ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        12,
        13,
        14
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Sum -= * 2 ;",
        "Hand += list ;",
        "q . pop ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        12,
        14
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Sum -= * 2 ;",
        "q . pop ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Hand += list ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        13,
        14
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "Hand += list ;",
        "q . pop ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "vector < int > vetor ( CountOfMoney ) ;",
        "q . pop ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "Sum += list ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        9,
        11
      ],
      "mod_code": [
        "Sum += list ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        12
      ],
      "mod_code": [
        "Sum += list ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Sum -= * 2 ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        13
      ],
      "mod_code": [
        "Sum += list ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Hand += list ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        9,
        11,
        14
      ],
      "mod_code": [
        "Sum += list ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "q . pop ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        9,
        12
      ],
      "mod_code": [
        "Sum += list ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "Sum -= * 2 ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        13
      ],
      "mod_code": [
        "Sum += list ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "Sum -= * 2 ;",
        "Hand += list ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        14
      ],
      "mod_code": [
        "Sum += list ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "Sum -= * 2 ;",
        "q . pop ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        9,
        13
      ],
      "mod_code": [
        "Sum += list ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "Hand += list ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        14
      ],
      "mod_code": [
        "Sum += list ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "Hand += list ;",
        "q . pop ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        9,
        14
      ],
      "mod_code": [
        "Sum += list ;",
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "q . pop ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "Sum += list ;",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        11,
        12
      ],
      "mod_code": [
        "Sum += list ;",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Sum -= * 2 ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        11,
        12,
        13
      ],
      "mod_code": [
        "Sum += list ;",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Sum -= * 2 ;",
        "Hand += list ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        11,
        12,
        14
      ],
      "mod_code": [
        "Sum += list ;",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Sum -= * 2 ;",
        "q . pop ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        11,
        13
      ],
      "mod_code": [
        "Sum += list ;",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Hand += list ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        14
      ],
      "mod_code": [
        "Sum += list ;",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Hand += list ;",
        "q . pop ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        11,
        14
      ],
      "mod_code": [
        "Sum += list ;",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "q . pop ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "Sum += list ;",
        "Sum -= * 2 ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        12,
        13
      ],
      "mod_code": [
        "Sum += list ;",
        "Sum -= * 2 ;",
        "Hand += list ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        14
      ],
      "mod_code": [
        "Sum += list ;",
        "Sum -= * 2 ;",
        "Hand += list ;",
        "q . pop ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        12,
        14
      ],
      "mod_code": [
        "Sum += list ;",
        "Sum -= * 2 ;",
        "q . pop ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "Sum += list ;",
        "Hand += list ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        13,
        14
      ],
      "mod_code": [
        "Sum += list ;",
        "Hand += list ;",
        "q . pop ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "Sum += list ;",
        "q . pop ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        9,
        11,
        12
      ],
      "mod_code": [
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Sum -= * 2 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        13
      ],
      "mod_code": [
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Sum -= * 2 ;",
        "Hand += list ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        14
      ],
      "mod_code": [
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Sum -= * 2 ;",
        "q . pop ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        11,
        13
      ],
      "mod_code": [
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Hand += list ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        14
      ],
      "mod_code": [
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Hand += list ;",
        "q . pop ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        9,
        11,
        14
      ],
      "mod_code": [
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "q . pop ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "Sum -= * 2 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        12,
        13
      ],
      "mod_code": [
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "Sum -= * 2 ;",
        "Hand += list ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        12,
        13,
        14
      ],
      "mod_code": [
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "Sum -= * 2 ;",
        "Hand += list ;",
        "q . pop ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        12,
        14
      ],
      "mod_code": [
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "Sum -= * 2 ;",
        "q . pop ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "Hand += list ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        9,
        13,
        14
      ],
      "mod_code": [
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "Hand += list ;",
        "q . pop ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "for ( int j = 0 ; j < list . size ( ) ; j ++ )",
        "q . pop ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Sum -= * 2 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        11,
        12,
        13
      ],
      "mod_code": [
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Sum -= * 2 ;",
        "Hand += list ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        11,
        12,
        13,
        14
      ],
      "mod_code": [
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Sum -= * 2 ;",
        "Hand += list ;",
        "q . pop ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        11,
        12,
        14
      ],
      "mod_code": [
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Sum -= * 2 ;",
        "q . pop ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Hand += list ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        11,
        13,
        14
      ],
      "mod_code": [
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "Hand += list ;",
        "q . pop ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "while ( Hand <= Sum ) swap ( Sum , Sum ) ;",
        "q . pop ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "Sum -= * 2 ;",
        "Hand += list ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        13,
        14
      ],
      "mod_code": [
        "Sum -= * 2 ;",
        "Hand += list ;",
        "q . pop ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "Sum -= * 2 ;",
        "q . pop ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "Hand += list ;",
        "q . pop ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::vector<int>’)"
    }
  ]
}