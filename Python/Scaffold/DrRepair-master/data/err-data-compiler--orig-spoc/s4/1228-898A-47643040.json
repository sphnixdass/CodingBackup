{
  "meta": {
    "index": 1228,
    "hitid": "3S1L4CQSFXZS9MCMMOVQJ5MJ0ROAFH",
    "workerid": "A1C5H6OY3HGO4U",
    "probid": "898A",
    "subid": "47643040"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a , b , c , d , e , f = integers",
      "code": "int a , b , c , d , e , f ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while read a",
      "code": "while ( cin >> a )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if a mod 10 equals 0",
      "code": "if ( a % 10 == 0 )",
      "indent": 2
    },
    {
      "line": 4,
      "text": "print a",
      "code": "cout << a << endl ;",
      "indent": 3
    },
    {
      "line": 5,
      "text": "else if a mod 10 equals 5",
      "code": "else if ( a % 10 == 5 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "print a - 5",
      "code": "cout << a - 5 << endl ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else if a mod 10 is less than 5",
      "code": "else if ( a % 10 < 5 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set b to a mod 10",
      "code": "b = a % 10 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "print a - b",
      "code": "cout << a - b << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set b to a mod 10",
      "code": "b = a % 10 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "set b to 10 - b",
      "code": "b = 10 - b ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "print a + b",
      "code": "cout << a + b << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        12,
        10
      ],
      "mod_code": [
        "b /= 10 ;",
        "b -= b ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        12,
        10,
        8
      ],
      "mod_code": [
        "b /= 10 ;",
        "b -= b ;",
        "else else",
        "b /= 10 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        12,
        10,
        4
      ],
      "mod_code": [
        "b /= 10 ;",
        "b -= b ;",
        "else else",
        "cout << a ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        12,
        10,
        2
      ],
      "mod_code": [
        "b /= 10 ;",
        "b -= b ;",
        "else else",
        "while ( a )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "b /= 10 ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        10,
        8
      ],
      "mod_code": [
        "b /= 10 ;",
        "else else",
        "b /= 10 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        10,
        8,
        4
      ],
      "mod_code": [
        "b /= 10 ;",
        "else else",
        "b /= 10 ;",
        "cout << a ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        10,
        8,
        2
      ],
      "mod_code": [
        "b /= 10 ;",
        "else else",
        "b /= 10 ;",
        "while ( a )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        10,
        4
      ],
      "mod_code": [
        "b /= 10 ;",
        "else else",
        "cout << a ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        10,
        4,
        2
      ],
      "mod_code": [
        "b /= 10 ;",
        "else else",
        "cout << a ;",
        "while ( a )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        10,
        2
      ],
      "mod_code": [
        "b /= 10 ;",
        "else else",
        "while ( a )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "b -= b ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        10,
        8
      ],
      "mod_code": [
        "b -= b ;",
        "else else",
        "b /= 10 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        10,
        8,
        4
      ],
      "mod_code": [
        "b -= b ;",
        "else else",
        "b /= 10 ;",
        "cout << a ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        10,
        8,
        2
      ],
      "mod_code": [
        "b -= b ;",
        "else else",
        "b /= 10 ;",
        "while ( a )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        10,
        4
      ],
      "mod_code": [
        "b -= b ;",
        "else else",
        "cout << a ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        10,
        4,
        2
      ],
      "mod_code": [
        "b -= b ;",
        "else else",
        "cout << a ;",
        "while ( a )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        10,
        2
      ],
      "mod_code": [
        "b -= b ;",
        "else else",
        "while ( a )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "else else",
        "b /= 10 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        8,
        4
      ],
      "mod_code": [
        "else else",
        "b /= 10 ;",
        "cout << a ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        8,
        4,
        2
      ],
      "mod_code": [
        "else else",
        "b /= 10 ;",
        "cout << a ;",
        "while ( a )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        8,
        2
      ],
      "mod_code": [
        "else else",
        "b /= 10 ;",
        "while ( a )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "else else",
        "cout << a ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        4,
        2
      ],
      "mod_code": [
        "else else",
        "cout << a ;",
        "while ( a )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "else else",
        "while ( a )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}