{
  "meta": {
    "index": 73,
    "hitid": "3PKJ68EHDNQNOB6WBKW3FP1F6TYJH7",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "263A",
    "subid": "49069755"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "mat = two dimensional int array of sizes 6 and 6",
      "code": "int mat [ 6 ] [ 6 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "x = int",
      "code": "int x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "y = int",
      "code": "int y ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "sideMoves = int",
      "code": "int sideMoves ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "verticalMoves = int",
      "code": "int verticalMoves ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "totalMoves = int",
      "code": "int totalMoves ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to 6",
      "code": "for ( int i = 1 ; i < 6 ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for j = 1 to 6",
      "code": "for ( int j = 1 ; j < 6 ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "read mat [ i ] [ j ]",
      "code": "cin >> mat [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if mat [ i ] [ j ] is 1",
      "code": "if ( mat [ i ] [ j ] == 1 )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "set x to i",
      "code": "x = i ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "set y to j",
      "code": "y = j ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "set verticalMoves to y - 3",
      "code": "verticalMoves = y - 3 ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if verticalMoves < 0 set verticalMoves to - verticalMoves",
      "code": "if ( verticalMoves < 0 ) { verticalMoves = - verticalMoves ; }",
      "indent": 1
    },
    {
      "line": 18,
      "text": "set sideMoves to x - 3",
      "code": "sideMoves = x - 3 ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if sideMoves < 0 set sideMoves to - sideMoves",
      "code": "if ( sideMoves < 0 ) { sideMoves = - sideMoves ; }",
      "indent": 1
    },
    {
      "line": 20,
      "text": "set totalMoves to verticalMoves + sideMoves",
      "code": "totalMoves = verticalMoves + sideMoves ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print totalMoves",
      "code": "cout << totalMoves << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 6 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( j = 1 ; j <= 6 ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    }
  ]
}