{
  "meta": {
    "index": 1752,
    "hitid": "3QREJ3J433RKLRV4KQBD8WUZ2Z3KLA",
    "workerid": "A1APYLD4DUK33J",
    "probid": "262A",
    "subid": "38238539"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , k , c , lucky with c = 0",
      "code": "int n , k , c = 0 , lucky ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n read k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while decrement n is true",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set lucky to 0",
      "code": "lucky = 0 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "create integers temp , x",
      "code": "int temp , x ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read temp",
      "code": "cin >> temp ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "while temp is greater than 0",
      "code": "while ( temp > 0 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set x to temp % 10",
      "code": "x = temp % 10 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if x is 4 or x is 7 , increment lucky",
      "code": "if ( x == 4 || x == 7 ) lucky ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set temp to temp / 10",
      "code": "temp /= 10 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if lucky is less than or equal to k , increment c",
      "code": "if ( lucky <= k ) c ++ ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print c print newline",
      "code": "cout << c << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;"
      ],
      "err_line": 12,
      "err_msg": "‘lucky’ cannot be used as a function"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( n n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) { c ++ ; }"
      ],
      "err_line": 12,
      "err_msg": "‘lucky’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "while ( n n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        12,
        3,
        2
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "while ( n n )",
        "n >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        12,
        3,
        2,
        8
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "while ( n n )",
        "n >> n >> k ;",
        "x /= 10 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        12,
        3,
        2,
        14
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "while ( n n )",
        "n >> n >> k ;",
        "cout << c ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        12,
        3,
        2,
        7
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "while ( n n )",
        "n >> n >> k ;",
        "while ( temp >= 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        12,
        3,
        8
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "while ( n n )",
        "x /= 10 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        12,
        3,
        8,
        14
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "while ( n n )",
        "x /= 10 ;",
        "cout << c ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        12,
        3,
        8,
        7
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "while ( n n )",
        "x /= 10 ;",
        "while ( temp >= 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        12,
        3,
        14
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "while ( n n )",
        "cout << c ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        12,
        3,
        14,
        7
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "while ( n n )",
        "cout << c ;",
        "while ( temp >= 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        12,
        3,
        7
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "while ( n n )",
        "while ( temp >= 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "n >> n >> k ;"
      ],
      "err_line": 12,
      "err_msg": "‘lucky’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        2,
        8
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "n >> n >> k ;",
        "x /= 10 ;"
      ],
      "err_line": 12,
      "err_msg": "‘lucky’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        2,
        8,
        14
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "n >> n >> k ;",
        "x /= 10 ;",
        "cout << c ;"
      ],
      "err_line": 12,
      "err_msg": "‘lucky’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        2,
        8,
        7
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "n >> n >> k ;",
        "x /= 10 ;",
        "while ( temp >= 0 )"
      ],
      "err_line": 12,
      "err_msg": "‘lucky’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        2,
        14
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "n >> n >> k ;",
        "cout << c ;"
      ],
      "err_line": 12,
      "err_msg": "‘lucky’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        2,
        14,
        7
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "n >> n >> k ;",
        "cout << c ;",
        "while ( temp >= 0 )"
      ],
      "err_line": 12,
      "err_msg": "‘lucky’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        2,
        7
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "n >> n >> k ;",
        "while ( temp >= 0 )"
      ],
      "err_line": 12,
      "err_msg": "‘lucky’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "x /= 10 ;"
      ],
      "err_line": 12,
      "err_msg": "‘lucky’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        8,
        14
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "x /= 10 ;",
        "cout << c ;"
      ],
      "err_line": 12,
      "err_msg": "‘lucky’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        8,
        14,
        7
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "x /= 10 ;",
        "cout << c ;",
        "while ( temp >= 0 )"
      ],
      "err_line": 12,
      "err_msg": "‘lucky’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        8,
        7
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "x /= 10 ;",
        "while ( temp >= 0 )"
      ],
      "err_line": 12,
      "err_msg": "‘lucky’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "cout << c ;"
      ],
      "err_line": 12,
      "err_msg": "‘lucky’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        14,
        7
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "cout << c ;",
        "while ( temp >= 0 )"
      ],
      "err_line": 12,
      "err_msg": "‘lucky’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "if ( lucky ( k ) <= k ) c ++ ;",
        "while ( temp >= 0 )"
      ],
      "err_line": 12,
      "err_msg": "‘lucky’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "while ( n n )",
        "n >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        2,
        8
      ],
      "mod_code": [
        "while ( n n )",
        "n >> n >> k ;",
        "x /= 10 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        2,
        8,
        14
      ],
      "mod_code": [
        "while ( n n )",
        "n >> n >> k ;",
        "x /= 10 ;",
        "cout << c ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        2,
        8,
        7
      ],
      "mod_code": [
        "while ( n n )",
        "n >> n >> k ;",
        "x /= 10 ;",
        "while ( temp >= 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        2,
        14
      ],
      "mod_code": [
        "while ( n n )",
        "n >> n >> k ;",
        "cout << c ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        2,
        14,
        7
      ],
      "mod_code": [
        "while ( n n )",
        "n >> n >> k ;",
        "cout << c ;",
        "while ( temp >= 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        2,
        7
      ],
      "mod_code": [
        "while ( n n )",
        "n >> n >> k ;",
        "while ( temp >= 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "while ( n n )",
        "x /= 10 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        8,
        14
      ],
      "mod_code": [
        "while ( n n )",
        "x /= 10 ;",
        "cout << c ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        8,
        14,
        7
      ],
      "mod_code": [
        "while ( n n )",
        "x /= 10 ;",
        "cout << c ;",
        "while ( temp >= 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        8,
        7
      ],
      "mod_code": [
        "while ( n n )",
        "x /= 10 ;",
        "while ( temp >= 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "while ( n n )",
        "cout << c ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        14,
        7
      ],
      "mod_code": [
        "while ( n n )",
        "cout << c ;",
        "while ( temp >= 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "while ( n n )",
        "while ( temp >= 0 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    }
  ]
}