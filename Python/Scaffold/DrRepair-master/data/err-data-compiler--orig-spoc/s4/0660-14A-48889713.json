{
  "meta": {
    "index": 660,
    "hitid": "37VE3DA4YUBH6S8KNSJMH1I2XMDBHX",
    "workerid": "AIWEXPJAU66D9",
    "probid": "14A",
    "subid": "48889713"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers called n , m , b , c , d and e",
      "code": "int n , m , b , c , d , e ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "a = 2d array of characters with size n by m",
      "code": "char a [ n ] [ m ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer j = 0 to m exclusive , read a [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < m ; j ++ ) { cin >> a [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for integer j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if a [ i ] [ j ] is ' * '",
      "code": "if ( a [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "assign value of j to the b",
      "code": "b = j ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if a [ i ] [ j ] = ' * '",
      "code": "if ( a [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "c = i",
      "code": "c = i ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for i = n - 1 to 0",
      "code": "for ( int i = n - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 25,
      "text": "if a [ i ] [ j ] = ' * '",
      "code": "if ( a [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 26,
      "text": "set value of d to i",
      "code": "d = i ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "for integer j = m - 1 to 0",
      "code": "for ( int j = m - 1 ; j >= 0 ; j -- )",
      "indent": 1
    },
    {
      "line": 32,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 33,
      "text": "if a [ i ] [ j ] = ' * '",
      "code": "if ( a [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 34,
      "text": "set value of e to j",
      "code": "e = j ;",
      "indent": 4
    },
    {
      "line": 35,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 39,
      "text": "for i = d to c + 1 exclusive",
      "code": "for ( int i = d ; i < c + 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 40,
      "text": "for j = e to b + 1 exclusive , print a [ i ] [ j ]",
      "code": "for ( int j = e ; j < b + 1 ; j ++ ) { cout << a [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 41,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char a [ n ] = { 0 } ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "* b = j ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 23,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 24,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "* d = i ;"
      ],
      "err_line": 26,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 32,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "* e = j ;"
      ],
      "err_line": 34,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "* b = j ;",
        "char a [ n ] = { 0 } ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        3,
        2
      ],
      "mod_code": [
        "* b = j ;",
        "char a [ n ] = { 0 } ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        2,
        4
      ],
      "mod_code": [
        "* b = j ;",
        "char a [ n ] = { 0 } ;",
        "cin >> n >> k ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        2,
        25
      ],
      "mod_code": [
        "* b = j ;",
        "char a [ n ] = { 0 } ;",
        "cin >> n >> k ;",
        "if ( a [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        2,
        11
      ],
      "mod_code": [
        "* b = j ;",
        "char a [ n ] = { 0 } ;",
        "cin >> n >> k ;",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        4
      ],
      "mod_code": [
        "* b = j ;",
        "char a [ n ] = { 0 } ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        4,
        25
      ],
      "mod_code": [
        "* b = j ;",
        "char a [ n ] = { 0 } ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        4,
        11
      ],
      "mod_code": [
        "* b = j ;",
        "char a [ n ] = { 0 } ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        25
      ],
      "mod_code": [
        "* b = j ;",
        "char a [ n ] = { 0 } ;",
        "if ( a [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        3,
        25,
        11
      ],
      "mod_code": [
        "* b = j ;",
        "char a [ n ] = { 0 } ;",
        "if ( a [ i ] [ j ] = ' * ' )",
        "break break ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        3,
        11
      ],
      "mod_code": [
        "* b = j ;",
        "char a [ n ] = { 0 } ;",
        "break break ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "* b = j ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        4
      ],
      "mod_code": [
        "* b = j ;",
        "cin >> n >> k ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        4,
        25
      ],
      "mod_code": [
        "* b = j ;",
        "cin >> n >> k ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        4,
        11
      ],
      "mod_code": [
        "* b = j ;",
        "cin >> n >> k ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        25
      ],
      "mod_code": [
        "* b = j ;",
        "cin >> n >> k ;",
        "if ( a [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        25,
        11
      ],
      "mod_code": [
        "* b = j ;",
        "cin >> n >> k ;",
        "if ( a [ i ] [ j ] = ' * ' )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        11
      ],
      "mod_code": [
        "* b = j ;",
        "cin >> n >> k ;",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "* b = j ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        25
      ],
      "mod_code": [
        "* b = j ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        25,
        11
      ],
      "mod_code": [
        "* b = j ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] [ j ] = ' * ' )",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        11
      ],
      "mod_code": [
        "* b = j ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        25
      ],
      "mod_code": [
        "* b = j ;",
        "if ( a [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        25,
        11
      ],
      "mod_code": [
        "* b = j ;",
        "if ( a [ i ] [ j ] = ' * ' )",
        "break break ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "* b = j ;",
        "break break ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "char a [ n ] = { 0 } ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        4
      ],
      "mod_code": [
        "char a [ n ] = { 0 } ;",
        "cin >> n >> k ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        4,
        25
      ],
      "mod_code": [
        "char a [ n ] = { 0 } ;",
        "cin >> n >> k ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        4,
        11
      ],
      "mod_code": [
        "char a [ n ] = { 0 } ;",
        "cin >> n >> k ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        25
      ],
      "mod_code": [
        "char a [ n ] = { 0 } ;",
        "cin >> n >> k ;",
        "if ( a [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        25,
        11
      ],
      "mod_code": [
        "char a [ n ] = { 0 } ;",
        "cin >> n >> k ;",
        "if ( a [ i ] [ j ] = ' * ' )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        11
      ],
      "mod_code": [
        "char a [ n ] = { 0 } ;",
        "cin >> n >> k ;",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "char a [ n ] = { 0 } ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        25
      ],
      "mod_code": [
        "char a [ n ] = { 0 } ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        25,
        11
      ],
      "mod_code": [
        "char a [ n ] = { 0 } ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] [ j ] = ' * ' )",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        11
      ],
      "mod_code": [
        "char a [ n ] = { 0 } ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        25
      ],
      "mod_code": [
        "char a [ n ] = { 0 } ;",
        "if ( a [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        25,
        11
      ],
      "mod_code": [
        "char a [ n ] = { 0 } ;",
        "if ( a [ i ] [ j ] = ' * ' )",
        "break break ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "char a [ n ] = { 0 } ;",
        "break break ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        25
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        25,
        11
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] [ j ] = ' * ' )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        11
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        25
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "if ( a [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        25,
        11
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "if ( a [ i ] [ j ] = ' * ' )",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        25
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        25,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] [ j ] = ' * ' )",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        11
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] = ' * ' )",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    }
  ]
}