{
  "meta": {
    "index": 644,
    "hitid": "33NOQL7T9OTKVFA7Q25JQ6W6L698ZL",
    "workerid": "AIWEXPJAU66D9",
    "probid": "14A",
    "subid": "47960233"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s is an array of strings with size 60",
      "code": "string s [ 60 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "n and m are integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n elements into s",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> s [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "U , D , L and R are integers , with U and L = 999 and D and R = - 1",
      "code": "int U = 999 , D = - 1 , L = 999 , R = - 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for integer j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if s [ i ] [ j ] = ' * '",
      "code": "if ( s [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "assign value of min of U and i to the U",
      "code": "U = min ( U , i ) ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "set value of D to max of D and i",
      "code": "D = max ( D , i ) ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "set value of L to min of L and j",
      "code": "L = min ( L , j ) ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "set value of R to max of R and j",
      "code": "R = max ( R , j ) ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i = U to D inclusive",
      "code": "for ( int i = U ; i <= D ; i ++ )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for integer j = L to R inclusive print s [ i ] [ j ]",
      "code": "for ( int j = L ; j <= R ; j ++ ) cout << s [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s [ 60 ] [ 60 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "* U = min ( U , i ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "* D = max ( D , i ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "* L = min ( L , j ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "* R = max ( R , j ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "int U = 999 , D = 999 , L = 999 , R = - 1 ;",
        "* U = min ( U , i ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        5,
        9,
        1
      ],
      "mod_code": [
        "int U = 999 , D = 999 , L = 999 , R = - 1 ;",
        "* U = min ( U , i ) ;",
        "string s [ 60 ] [ 60 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        5,
        9,
        1,
        10
      ],
      "mod_code": [
        "int U = 999 , D = 999 , L = 999 , R = - 1 ;",
        "* U = min ( U , i ) ;",
        "string s [ 60 ] [ 60 ] ;",
        "* D = max ( D , i ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        5,
        9,
        1,
        16
      ],
      "mod_code": [
        "int U = 999 , D = 999 , L = 999 , R = - 1 ;",
        "* U = min ( U , i ) ;",
        "string s [ 60 ] [ 60 ] ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        5,
        9,
        10
      ],
      "mod_code": [
        "int U = 999 , D = 999 , L = 999 , R = - 1 ;",
        "* U = min ( U , i ) ;",
        "* D = max ( D , i ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        16
      ],
      "mod_code": [
        "int U = 999 , D = 999 , L = 999 , R = - 1 ;",
        "* U = min ( U , i ) ;",
        "* D = max ( D , i ) ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        5,
        9,
        16
      ],
      "mod_code": [
        "int U = 999 , D = 999 , L = 999 , R = - 1 ;",
        "* U = min ( U , i ) ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "int U = 999 , D = 999 , L = 999 , R = - 1 ;",
        "string s [ 60 ] [ 60 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        5,
        1,
        10
      ],
      "mod_code": [
        "int U = 999 , D = 999 , L = 999 , R = - 1 ;",
        "string s [ 60 ] [ 60 ] ;",
        "* D = max ( D , i ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        5,
        1,
        10,
        16
      ],
      "mod_code": [
        "int U = 999 , D = 999 , L = 999 , R = - 1 ;",
        "string s [ 60 ] [ 60 ] ;",
        "* D = max ( D , i ) ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        5,
        1,
        16
      ],
      "mod_code": [
        "int U = 999 , D = 999 , L = 999 , R = - 1 ;",
        "string s [ 60 ] [ 60 ] ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "int U = 999 , D = 999 , L = 999 , R = - 1 ;",
        "* D = max ( D , i ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        5,
        10,
        16
      ],
      "mod_code": [
        "int U = 999 , D = 999 , L = 999 , R = - 1 ;",
        "* D = max ( D , i ) ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "int U = 999 , D = 999 , L = 999 , R = - 1 ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "* U = min ( U , i ) ;",
        "string s [ 60 ] [ 60 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        9,
        1,
        5
      ],
      "mod_code": [
        "* U = min ( U , i ) ;",
        "string s [ 60 ] [ 60 ] ;",
        "int U = 999 , D = 999 , L = - 1 , R = - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        9,
        1,
        5,
        10
      ],
      "mod_code": [
        "* U = min ( U , i ) ;",
        "string s [ 60 ] [ 60 ] ;",
        "int U = 999 , D = 999 , L = - 1 , R = - 1 ;",
        "* D = max ( D , i ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        9,
        1,
        5,
        16
      ],
      "mod_code": [
        "* U = min ( U , i ) ;",
        "string s [ 60 ] [ 60 ] ;",
        "int U = 999 , D = 999 , L = - 1 , R = - 1 ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        9,
        1,
        10
      ],
      "mod_code": [
        "* U = min ( U , i ) ;",
        "string s [ 60 ] [ 60 ] ;",
        "* D = max ( D , i ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        9,
        1,
        10,
        16
      ],
      "mod_code": [
        "* U = min ( U , i ) ;",
        "string s [ 60 ] [ 60 ] ;",
        "* D = max ( D , i ) ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        9,
        1,
        16
      ],
      "mod_code": [
        "* U = min ( U , i ) ;",
        "string s [ 60 ] [ 60 ] ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "* U = min ( U , i ) ;",
        "int U = 999 , D = 999 , L = - 1 , R = - 1 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        5,
        10
      ],
      "mod_code": [
        "* U = min ( U , i ) ;",
        "int U = 999 , D = 999 , L = - 1 , R = - 1 ;",
        "* D = max ( D , i ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        5,
        10,
        16
      ],
      "mod_code": [
        "* U = min ( U , i ) ;",
        "int U = 999 , D = 999 , L = - 1 , R = - 1 ;",
        "* D = max ( D , i ) ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        5,
        16
      ],
      "mod_code": [
        "* U = min ( U , i ) ;",
        "int U = 999 , D = 999 , L = - 1 , R = - 1 ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "* U = min ( U , i ) ;",
        "* D = max ( D , i ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        10,
        16
      ],
      "mod_code": [
        "* U = min ( U , i ) ;",
        "* D = max ( D , i ) ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "* U = min ( U , i ) ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "string s [ 60 ] [ 60 ] ;",
        "int U = 999 , D = 999 , L = - 1 , R = - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        1,
        5,
        10
      ],
      "mod_code": [
        "string s [ 60 ] [ 60 ] ;",
        "int U = 999 , D = 999 , L = - 1 , R = - 1 ;",
        "* D = max ( D , i ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        1,
        5,
        10,
        16
      ],
      "mod_code": [
        "string s [ 60 ] [ 60 ] ;",
        "int U = 999 , D = 999 , L = - 1 , R = - 1 ;",
        "* D = max ( D , i ) ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        1,
        5,
        16
      ],
      "mod_code": [
        "string s [ 60 ] [ 60 ] ;",
        "int U = 999 , D = 999 , L = - 1 , R = - 1 ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "string s [ 60 ] [ 60 ] ;",
        "* D = max ( D , i ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        1,
        10,
        16
      ],
      "mod_code": [
        "string s [ 60 ] [ 60 ] ;",
        "* D = max ( D , i ) ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "string s [ 60 ] [ 60 ] ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string [60] {aka std::__cxx11::basic_string<char> [60]}’)"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "int U = 999 , D = 999 , L = - 1 , R = - 1 ;",
        "* D = max ( D , i ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        5,
        10,
        16
      ],
      "mod_code": [
        "int U = 999 , D = 999 , L = - 1 , R = - 1 ;",
        "* D = max ( D , i ) ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "int U = 999 , D = 999 , L = - 1 , R = - 1 ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        16
      ],
      "mod_code": [
        "* D = max ( D , i ) ;",
        "for ( i = U ; i <= D ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    }
  ]
}