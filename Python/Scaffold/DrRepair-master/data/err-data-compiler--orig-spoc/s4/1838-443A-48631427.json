{
  "meta": {
    "index": 1838,
    "hitid": "3J9UN9O9J3MCDB00DCPI9X2YJPZ0JE",
    "workerid": "A1APYLD4DUK33J",
    "probid": "443A",
    "subid": "48631427"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create character s",
      "code": "char s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integer array h with size 26 with h = { 0 }",
      "code": "int h [ 26 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while s is not ' } '",
      "code": "while ( s != ' } ' )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "create integer a with a = integer casted s",
      "code": "int a = ( int ) s ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if a is greater than or equal to 97 and a is less than or equal to 122 , increment h [ a - 97 ]",
      "code": "if ( a >= 97 && a <= 122 ) { h [ a - 97 ] ++ ; }",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create integer c with c = 0",
      "code": "int c = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to 26 exclusive",
      "code": "for ( int i = 0 ; i < 26 ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if h [ i ] is greater than 0 , increment c",
      "code": "if ( h [ i ] > 0 ) c ++ ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print c print newline",
      "code": "cout << c << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( s != ' } )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "character = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘character’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( s != ' } }"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int a = int s ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "c = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "while ( s != ' } )",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        5,
        10
      ],
      "mod_code": [
        "while ( s != ' } )",
        "gets ( s ) ;",
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        6
      ],
      "mod_code": [
        "while ( s != ' } )",
        "gets ( s ) ;",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "int a = int s ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        9
      ],
      "mod_code": [
        "while ( s != ' } )",
        "gets ( s ) ;",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "c = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        3
      ],
      "mod_code": [
        "while ( s != ' } )",
        "gets ( s ) ;",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "while ( s != ' } )",
        "gets ( s ) ;",
        "int a = int s ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        9
      ],
      "mod_code": [
        "while ( s != ' } )",
        "gets ( s ) ;",
        "int a = int s ;",
        "c = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        3
      ],
      "mod_code": [
        "while ( s != ' } )",
        "gets ( s ) ;",
        "int a = int s ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        5,
        9
      ],
      "mod_code": [
        "while ( s != ' } )",
        "gets ( s ) ;",
        "c = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        3
      ],
      "mod_code": [
        "while ( s != ' } )",
        "gets ( s ) ;",
        "c = 0 ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        5,
        3
      ],
      "mod_code": [
        "while ( s != ' } )",
        "gets ( s ) ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "while ( s != ' } )",
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        10,
        6
      ],
      "mod_code": [
        "while ( s != ' } )",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "int a = int s ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        10,
        6,
        9
      ],
      "mod_code": [
        "while ( s != ' } )",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "int a = int s ;",
        "c = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        10,
        6,
        3
      ],
      "mod_code": [
        "while ( s != ' } )",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "int a = int s ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        10,
        9
      ],
      "mod_code": [
        "while ( s != ' } )",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "c = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        10,
        9,
        3
      ],
      "mod_code": [
        "while ( s != ' } )",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "c = 0 ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        10,
        3
      ],
      "mod_code": [
        "while ( s != ' } )",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "while ( s != ' } )",
        "int a = int s ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        6,
        9
      ],
      "mod_code": [
        "while ( s != ' } )",
        "int a = int s ;",
        "c = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        3
      ],
      "mod_code": [
        "while ( s != ' } )",
        "int a = int s ;",
        "c = 0 ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        6,
        3
      ],
      "mod_code": [
        "while ( s != ' } )",
        "int a = int s ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "while ( s != ' } )",
        "c = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        9,
        3
      ],
      "mod_code": [
        "while ( s != ' } )",
        "c = 0 ;",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "while ( s != ' } )",
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "gets ( s ) ;",
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        10,
        6
      ],
      "mod_code": [
        "gets ( s ) ;",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "int a = int s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        10,
        6,
        9
      ],
      "mod_code": [
        "gets ( s ) ;",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "int a = int s ;",
        "c = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        10,
        6,
        3
      ],
      "mod_code": [
        "gets ( s ) ;",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "int a = int s ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        10,
        9
      ],
      "mod_code": [
        "gets ( s ) ;",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "c = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        10,
        9,
        3
      ],
      "mod_code": [
        "gets ( s ) ;",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "c = 0 ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        10,
        3
      ],
      "mod_code": [
        "gets ( s ) ;",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "gets ( s ) ;",
        "int a = int s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "gets ( s ) ;",
        "int a = int s ;",
        "c = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        3
      ],
      "mod_code": [
        "gets ( s ) ;",
        "int a = int s ;",
        "c = 0 ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "gets ( s ) ;",
        "int a = int s ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "gets ( s ) ;",
        "c = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9,
        3
      ],
      "mod_code": [
        "gets ( s ) ;",
        "c = 0 ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "gets ( s ) ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < 26 ; i ++ )",
        "int a = int s ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        10,
        6,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < 26 ; i ++ )",
        "int a = int s ;",
        "c = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        10,
        6,
        9,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < 26 ; i ++ )",
        "int a = int s ;",
        "c = 0 ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        6,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < 26 ; i ++ )",
        "int a = int s ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < 26 ; i ++ )",
        "c = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < 26 ; i ++ )",
        "c = 0 ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < 26 ; i ++ )",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "int a = int s ;",
        "c = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        6,
        9,
        3
      ],
      "mod_code": [
        "int a = int s ;",
        "c = 0 ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "int a = int s ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "c = 0 ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    }
  ]
}