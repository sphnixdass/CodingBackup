{
  "meta": {
    "index": 663,
    "hitid": "3Z56AA6EK4UXSUS0IYIRYQ460716MG",
    "workerid": "A1APYLD4DUK33J",
    "probid": "14A",
    "subid": "47854490"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer flag",
      "code": "int flag ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integers l , r , u , d",
      "code": "int l , r , u , d ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create 2d character array with size 50 by 50",
      "code": "char arr [ 50 ] [ 50 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integers n , m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j = 0 to m exclusive , read arr [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < m ; j ++ ) { cin >> arr [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set flag to 0",
      "code": "flag = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if arr [ i ] [ j ] is ' * '",
      "code": "if ( arr [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "set u to i",
      "code": "u = i ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "set flag to 1",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if flag is 1 , break loop",
      "code": "if ( flag == 1 ) { break ; }",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "set flag to 0",
      "code": "flag = 0 ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "if arr [ j ] [ i ] is ' * '",
      "code": "if ( arr [ j ] [ i ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 24,
      "text": "set l to i",
      "code": "l = i ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "set flag to 1",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 29,
      "text": "if flag is 1 , break loop",
      "code": "if ( flag == 1 ) { break ; }",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "set flag to 0",
      "code": "flag = 0 ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "for i = n - 1 to 0 inclusive , decrementing i",
      "code": "for ( int i = n - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 33,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 34,
      "text": "if arr [ i ] [ j ] is ' * '",
      "code": "if ( arr [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 35,
      "text": "set d to i",
      "code": "d = i ;",
      "indent": 4
    },
    {
      "line": 36,
      "text": "set flag to 1",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 37,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 40,
      "text": "if flag is 1 , break loop",
      "code": "if ( flag == 1 ) { break ; }",
      "indent": 2
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 42,
      "text": "set flag to 0",
      "code": "flag = 0 ;",
      "indent": 1
    },
    {
      "line": 43,
      "text": "for i = m - 1 to 0 inclusive , decrementing i",
      "code": "for ( int i = m - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 44,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 45,
      "text": "if arr [ j ] [ i ] is ' * '",
      "code": "if ( arr [ j ] [ i ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 46,
      "text": "set r to i",
      "code": "r = i ;",
      "indent": 4
    },
    {
      "line": 47,
      "text": "set flag to 1",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 48,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 49,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 50,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 51,
      "text": "if flag is 1 , break loop",
      "code": "if ( flag == 1 ) { break ; }",
      "indent": 2
    },
    {
      "line": 52,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 53,
      "text": "for i = u to d inclusive",
      "code": "for ( int i = u ; i <= d ; i ++ )",
      "indent": 1
    },
    {
      "line": 54,
      "text": "for j = l to r inclusive , print arr [ i ] [ j ]",
      "code": "for ( int j = l ; j <= r ; j ++ ) { cout << arr [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 55,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 56,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 57,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char a [ 50 ] [ 50 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int l , r , u , d , d ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char with [ 50 ] [ 50 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int flag = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else if ( arr [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 12,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "int flag = 0 ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 22,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 26,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "int flag = 0 ;"
      ],
      "err_line": 31,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 32,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 33,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "else if ( arr [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 34,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "int flag = 0 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "for ( i = m - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 43,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        44
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 44,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        48
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 48,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        53
      ],
      "mod_code": [
        "for ( i = u ; i <= d ; i ++ )"
      ],
      "err_line": 53,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        21
      ],
      "mod_code": [
        "char a [ 50 ] [ 50 ] ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        21,
        45
      ],
      "mod_code": [
        "char a [ 50 ] [ 50 ] ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( arr [ i ] [ i ] == ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        21,
        45,
        20
      ],
      "mod_code": [
        "char a [ 50 ] [ 50 ] ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( arr [ i ] [ i ] == ' * ' )",
        "int flag = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        21,
        45,
        53
      ],
      "mod_code": [
        "char a [ 50 ] [ 50 ] ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( arr [ i ] [ i ] == ' * ' )",
        "for ( i = u ; i <= d ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        21,
        20
      ],
      "mod_code": [
        "char a [ 50 ] [ 50 ] ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int flag = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        21,
        20,
        53
      ],
      "mod_code": [
        "char a [ 50 ] [ 50 ] ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "int flag = 0 ;",
        "for ( i = u ; i <= d ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        21,
        53
      ],
      "mod_code": [
        "char a [ 50 ] [ 50 ] ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = u ; i <= d ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        45
      ],
      "mod_code": [
        "char a [ 50 ] [ 50 ] ;",
        "if ( arr [ i ] [ i ] == ' * ' )"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        45,
        20
      ],
      "mod_code": [
        "char a [ 50 ] [ 50 ] ;",
        "if ( arr [ i ] [ i ] == ' * ' )",
        "int flag = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        45,
        20,
        53
      ],
      "mod_code": [
        "char a [ 50 ] [ 50 ] ;",
        "if ( arr [ i ] [ i ] == ' * ' )",
        "int flag = 0 ;",
        "for ( i = u ; i <= d ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        45,
        53
      ],
      "mod_code": [
        "char a [ 50 ] [ 50 ] ;",
        "if ( arr [ i ] [ i ] == ' * ' )",
        "for ( i = u ; i <= d ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        20
      ],
      "mod_code": [
        "char a [ 50 ] [ 50 ] ;",
        "int flag = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        20,
        53
      ],
      "mod_code": [
        "char a [ 50 ] [ 50 ] ;",
        "int flag = 0 ;",
        "for ( i = u ; i <= d ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        53
      ],
      "mod_code": [
        "char a [ 50 ] [ 50 ] ;",
        "for ( i = u ; i <= d ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        45
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( arr [ i ] [ i ] == ' * ' )"
      ],
      "err_line": 21,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        45,
        20
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( arr [ i ] [ i ] == ' * ' )",
        "int flag = 0 ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        21,
        45,
        20,
        53
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( arr [ i ] [ i ] == ' * ' )",
        "int flag = 0 ;",
        "for ( i = u ; i <= d ; i ++ )"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        21,
        45,
        20,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( arr [ i ] [ i ] == ' * ' )",
        "int flag = 0 ;",
        "char with [ 50 ] [ 50 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        45,
        53
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( arr [ i ] [ i ] == ' * ' )",
        "for ( i = u ; i <= d ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        45,
        53,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( arr [ i ] [ i ] == ' * ' )",
        "for ( i = u ; i <= d ; i ++ )",
        "char with [ 50 ] [ 50 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        45,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( arr [ i ] [ i ] == ' * ' )",
        "char with [ 50 ] [ 50 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        20
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "int flag = 0 ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        21,
        20,
        53
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "int flag = 0 ;",
        "for ( i = u ; i <= d ; i ++ )"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        21,
        20,
        53,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "int flag = 0 ;",
        "for ( i = u ; i <= d ; i ++ )",
        "char with [ 50 ] [ 50 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        20,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "int flag = 0 ;",
        "char with [ 50 ] [ 50 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        53
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = u ; i <= d ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        53,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = u ; i <= d ; i ++ )",
        "char with [ 50 ] [ 50 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "char with [ 50 ] [ 50 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        20
      ],
      "mod_code": [
        "if ( arr [ i ] [ i ] == ' * ' )",
        "int flag = 0 ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        45,
        20,
        53
      ],
      "mod_code": [
        "if ( arr [ i ] [ i ] == ' * ' )",
        "int flag = 0 ;",
        "for ( i = u ; i <= d ; i ++ )"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        45,
        20,
        53,
        3
      ],
      "mod_code": [
        "if ( arr [ i ] [ i ] == ' * ' )",
        "int flag = 0 ;",
        "for ( i = u ; i <= d ; i ++ )",
        "char with [ 50 ] [ 50 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        20,
        3
      ],
      "mod_code": [
        "if ( arr [ i ] [ i ] == ' * ' )",
        "int flag = 0 ;",
        "char with [ 50 ] [ 50 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        53
      ],
      "mod_code": [
        "if ( arr [ i ] [ i ] == ' * ' )",
        "for ( i = u ; i <= d ; i ++ )"
      ],
      "err_line": 53,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        45,
        53,
        3
      ],
      "mod_code": [
        "if ( arr [ i ] [ i ] == ' * ' )",
        "for ( i = u ; i <= d ; i ++ )",
        "char with [ 50 ] [ 50 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        3
      ],
      "mod_code": [
        "if ( arr [ i ] [ i ] == ' * ' )",
        "char with [ 50 ] [ 50 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        53
      ],
      "mod_code": [
        "int flag = 0 ;",
        "for ( i = u ; i <= d ; i ++ )"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        20,
        53,
        3
      ],
      "mod_code": [
        "int flag = 0 ;",
        "for ( i = u ; i <= d ; i ++ )",
        "char with [ 50 ] [ 50 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        3
      ],
      "mod_code": [
        "int flag = 0 ;",
        "char with [ 50 ] [ 50 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        53,
        3
      ],
      "mod_code": [
        "for ( i = u ; i <= d ; i ++ )",
        "char with [ 50 ] [ 50 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘arr’ was not declared in this scope"
    }
  ]
}