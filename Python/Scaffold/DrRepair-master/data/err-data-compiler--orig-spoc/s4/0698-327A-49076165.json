{
  "meta": {
    "index": 698,
    "hitid": "3URJ6VVYUPH7DA9YCQ4PTW9X0IR4OU",
    "workerid": "AIWEXPJAU66D9",
    "probid": "327A",
    "subid": "49076165"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new ints n , x and mx where mx = 0 , and an int array a with size 101",
      "code": "int n , a [ 101 ] , x , mx = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "change a [ 0 ] to 0",
      "code": "a [ 0 ] = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "change i from 1 to n inclusive in a for loop",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read input to x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "assign a [ i - 1 ] + x to a [ i ]",
      "code": "a [ i ] = a [ i - 1 ] + x ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for integer i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "in a for loop , change j from i to n inclusive , assigning the new value = max of a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) and mx to mx on each iteration",
      "code": "for ( int j = i ; j <= n ; j ++ ) mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) , mx ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print mx",
      "code": "cout << mx << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , x , a [ 101 ] , x , mx = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a [ 101 ] , x , x , mx = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "a [ 0 ] ] = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( int j = i ; j <= n ; j ++ ) mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int n , x , a [ 101 ] , x , mx = 0 ;",
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        1,
        9,
        5
      ],
      "mod_code": [
        "int n , x , a [ 101 ] , x , mx = 0 ;",
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        1,
        9,
        5,
        10
      ],
      "mod_code": [
        "int n , x , a [ 101 ] , x , mx = 0 ;",
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }",
        "cin >> n ;",
        "cout << mx ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        1,
        9,
        5,
        6
      ],
      "mod_code": [
        "int n , x , a [ 101 ] , x , mx = 0 ;",
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }",
        "cin >> n ;",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        1,
        9,
        10
      ],
      "mod_code": [
        "int n , x , a [ 101 ] , x , mx = 0 ;",
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }",
        "cout << mx ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        1,
        9,
        10,
        6
      ],
      "mod_code": [
        "int n , x , a [ 101 ] , x , mx = 0 ;",
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }",
        "cout << mx ;",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        1,
        9,
        6
      ],
      "mod_code": [
        "int n , x , a [ 101 ] , x , mx = 0 ;",
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , x , a [ 101 ] , x , mx = 0 ;",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        1,
        5,
        10
      ],
      "mod_code": [
        "int n , x , a [ 101 ] , x , mx = 0 ;",
        "cin >> n ;",
        "cout << mx ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        1,
        5,
        10,
        6
      ],
      "mod_code": [
        "int n , x , a [ 101 ] , x , mx = 0 ;",
        "cin >> n ;",
        "cout << mx ;",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        1,
        5,
        6
      ],
      "mod_code": [
        "int n , x , a [ 101 ] , x , mx = 0 ;",
        "cin >> n ;",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int n , x , a [ 101 ] , x , mx = 0 ;",
        "cout << mx ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        1,
        10,
        6
      ],
      "mod_code": [
        "int n , x , a [ 101 ] , x , mx = 0 ;",
        "cout << mx ;",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , x , a [ 101 ] , x , mx = 0 ;",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9,
        5,
        1
      ],
      "mod_code": [
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }",
        "cin >> n ;",
        "int n , a [ 101 ] , x , x , mx = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        9,
        5,
        1,
        10
      ],
      "mod_code": [
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }",
        "cin >> n ;",
        "int n , a [ 101 ] , x , x , mx = 0 ;",
        "cout << mx ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        9,
        5,
        1,
        6
      ],
      "mod_code": [
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }",
        "cin >> n ;",
        "int n , a [ 101 ] , x , x , mx = 0 ;",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        9,
        5,
        10
      ],
      "mod_code": [
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }",
        "cin >> n ;",
        "cout << mx ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9,
        5,
        10,
        6
      ],
      "mod_code": [
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }",
        "cin >> n ;",
        "cout << mx ;",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        5,
        6
      ],
      "mod_code": [
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }",
        "cin >> n ;",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }",
        "int n , a [ 101 ] , x , x , mx = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        9,
        1,
        10
      ],
      "mod_code": [
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }",
        "int n , a [ 101 ] , x , x , mx = 0 ;",
        "cout << mx ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        9,
        1,
        10,
        6
      ],
      "mod_code": [
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }",
        "int n , a [ 101 ] , x , x , mx = 0 ;",
        "cout << mx ;",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        9,
        1,
        6
      ],
      "mod_code": [
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }",
        "int n , a [ 101 ] , x , x , mx = 0 ;",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }",
        "cout << mx ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9,
        10,
        6
      ],
      "mod_code": [
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }",
        "cout << mx ;",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "for ( int j = i ; j <= n ; j ++ ) { mx = max ( a [ n ] + j - i + 1 - 2 * ( a [ j ] - a [ i - 1 ] ) ; }",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "cin >> n ;",
        "int n , a [ 101 ] , x , x , mx = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        5,
        1,
        10
      ],
      "mod_code": [
        "cin >> n ;",
        "int n , a [ 101 ] , x , x , mx = 0 ;",
        "cout << mx ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        5,
        1,
        10,
        6
      ],
      "mod_code": [
        "cin >> n ;",
        "int n , a [ 101 ] , x , x , mx = 0 ;",
        "cout << mx ;",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        5,
        1,
        6
      ],
      "mod_code": [
        "cin >> n ;",
        "int n , a [ 101 ] , x , x , mx = 0 ;",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        5,
        10,
        6
      ],
      "mod_code": [
        "cin >> n ;",
        "cout << mx ;",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "cin >> n ;",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int n , a [ 101 ] , x , x , mx = 0 ;",
        "cout << mx ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        1,
        10,
        6
      ],
      "mod_code": [
        "int n , a [ 101 ] , x , x , mx = 0 ;",
        "cout << mx ;",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , a [ 101 ] , x , x , mx = 0 ;",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "cout << mx ;",
        "a [ i ] ] = a [ i - 1 ] + x ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘]’ token"
    }
  ]
}