{
  "meta": {
    "index": 1825,
    "hitid": "36AZSFEYZ4UMOT34SH0QW29B5G2VBF",
    "workerid": "A1APYLD4DUK33J",
    "probid": "443A",
    "subid": "42119743"
  },
  "lines": [
    {
      "line": 0,
      "text": "create character c",
      "code": "char c ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create boolean array p with size 30",
      "code": "bool p [ 30 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integer cnt",
      "code": "int cnt ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "set c to read character",
      "code": "c = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while c is not ' } '",
      "code": "while ( c != ' } ' )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if c is greater than or equal to ' a ' and c is less than or equal to ' z '",
      "code": "if ( c >= ' a ' && c <= ' z ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment cnt by not p [ c - ' a ' ]",
      "code": "cnt += ! p [ c - ' a ' ] ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set p [ c - ' a ' ] to 1",
      "code": "p [ c - ' a ' ] = 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set c to read character",
      "code": "c = getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print cnt print newline",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( c != ' } )"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "character = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘character’ does not name a type"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool a [ 30 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘p’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "c = read ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘read’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( c != ' } }"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cnt += ( p [ c - ' a ' ] ] ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "c = read ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘read’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "while ( c != ' } )",
        "cnt += p [ c - ' a ' ] ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        7,
        4
      ],
      "mod_code": [
        "while ( c != ' } )",
        "cnt += p [ c - ' a ' ] ;",
        "c = read ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        7,
        4,
        8
      ],
      "mod_code": [
        "while ( c != ' } )",
        "cnt += p [ c - ' a ' ] ;",
        "c = read ( ) ;",
        "p [ ' c ' ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        7,
        8
      ],
      "mod_code": [
        "while ( c != ' } )",
        "cnt += p [ c - ' a ' ] ;",
        "p [ ' c ' ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "while ( c != ' } )",
        "c = read ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        4,
        7
      ],
      "mod_code": [
        "while ( c != ' } )",
        "c = read ( ) ;",
        "cnt += ( p [ c - ' a ' ] ] ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        4,
        7,
        8
      ],
      "mod_code": [
        "while ( c != ' } )",
        "c = read ( ) ;",
        "cnt += ( p [ c - ' a ' ] ] ) ;",
        "p [ ' c ' ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        4,
        8
      ],
      "mod_code": [
        "while ( c != ' } )",
        "c = read ( ) ;",
        "p [ ' c ' ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "while ( c != ' } )",
        "cnt += ( p [ c - ' a ' ] ] ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        7,
        8
      ],
      "mod_code": [
        "while ( c != ' } )",
        "cnt += ( p [ c - ' a ' ] ] ) ;",
        "p [ ' c ' ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "while ( c != ' } )",
        "p [ ' c ' ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "cnt += p [ c - ' a ' ] ;",
        "c = read ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘read’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4,
        8
      ],
      "mod_code": [
        "cnt += p [ c - ' a ' ] ;",
        "c = read ( ) ;",
        "p [ ' c ' ] = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘read’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4,
        8,
        5
      ],
      "mod_code": [
        "cnt += p [ c - ' a ' ] ;",
        "c = read ( ) ;",
        "p [ ' c ' ] = 1 ;",
        "while ( c != ' } }"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        4,
        5
      ],
      "mod_code": [
        "cnt += p [ c - ' a ' ] ;",
        "c = read ( ) ;",
        "while ( c != ' } }"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        8,
        5
      ],
      "mod_code": [
        "cnt += p [ c - ' a ' ] ;",
        "p [ ' c ' ] = 1 ;",
        "while ( c != ' } }"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "cnt += p [ c - ' a ' ] ;",
        "while ( c != ' } }"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "c = read ( ) ;",
        "cnt += ( p [ c - ' a ' ] ] ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘read’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "c = read ( ) ;",
        "cnt += ( p [ c - ' a ' ] ] ) ;",
        "p [ ' c ' ] = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘read’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        5
      ],
      "mod_code": [
        "c = read ( ) ;",
        "cnt += ( p [ c - ' a ' ] ] ) ;",
        "p [ ' c ' ] = 1 ;",
        "while ( c != ' } }"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        7,
        5
      ],
      "mod_code": [
        "c = read ( ) ;",
        "cnt += ( p [ c - ' a ' ] ] ) ;",
        "while ( c != ' } }"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "c = read ( ) ;",
        "p [ ' c ' ] = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘read’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        5
      ],
      "mod_code": [
        "c = read ( ) ;",
        "p [ ' c ' ] = 1 ;",
        "while ( c != ' } }"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "c = read ( ) ;",
        "while ( c != ' } }"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "cnt += ( p [ c - ' a ' ] ] ) ;",
        "p [ ' c ' ] = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        8,
        5
      ],
      "mod_code": [
        "cnt += ( p [ c - ' a ' ] ] ) ;",
        "p [ ' c ' ] = 1 ;",
        "while ( c != ' } }"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "cnt += ( p [ c - ' a ' ] ] ) ;",
        "while ( c != ' } }"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "p [ ' c ' ] = 1 ;",
        "while ( c != ' } }"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    }
  ]
}