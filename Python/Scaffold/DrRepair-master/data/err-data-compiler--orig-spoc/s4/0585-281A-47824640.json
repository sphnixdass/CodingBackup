{
  "meta": {
    "index": 585,
    "hitid": "3CESM1J3EIXTX6MEM0OE7O6XZBNW6A",
    "workerid": "A1AYVATMT88U1W",
    "probid": "281A",
    "subid": "47824640"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let s be a string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let the value of s [ 0 ] is equal to toupper ( s [ 0 ] )",
      "code": "s [ 0 ] = toupper ( s [ 0 ] ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print s and newline",
      "code": "cout << s << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char s [ 0 ] = toupper ( s [ 0 ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘char s [0]’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "char s [ 0 ] = toupper ( s [ 0 ] ) ;",
        "char s ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘char s [0]’"
    },
    {
      "mod_line": [
        3,
        1,
        2
      ],
      "mod_code": [
        "char s [ 0 ] = toupper ( s [ 0 ] ) ;",
        "char s ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "char s [ 0 ] = toupper ( s [ 0 ] ) ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "char s ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    }
  ]
}