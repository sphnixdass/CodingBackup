{
  "meta": {
    "index": 2373,
    "hitid": "3GL25Y6843OAB9CWJLRHY3HQYDBXMH",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "365A",
    "subid": "48457602"
  },
  "lines": [
    {
      "line": 0,
      "text": "in the funciton istrue that takes string x , integer k and returns bool",
      "code": "bool istrue ( string x , int k )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "for i = 0 to k",
      "code": "for ( int i = 0 ; i <= k ; i ++ )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "if ( x [ i ] - 0 ) is not i",
      "code": "if ( ( x [ i ] - ' 0 ' ) != i )",
      "indent": 2
    },
    {
      "line": 3,
      "text": "return false",
      "code": "return false ;",
      "indent": 3
    },
    {
      "line": 4,
      "text": "break loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "return true",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 10,
      "text": "n , k , cnt = integer with cnt = 0",
      "code": "int n , k , cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read n , k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "x = string",
      "code": "string x ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "sort x . begin ( ) and x . end ( )",
      "code": "sort ( x . begin ( ) , x . end ( ) ) ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "erase ( unique ( x . begin ( ) , x . end ( ) ) , x . end ( ) ) from x",
      "code": "x . erase ( unique ( x . begin ( ) , x . end ( ) ) , x . end ( ) ) ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if x . size ( ) > = k + 1",
      "code": "if ( x . size ( ) >= k + 1 )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if istrue ( x , k ) , increment cnt",
      "code": "if ( istrue ( x , k ) ) { cnt ++ ; }",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print cnt",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool istrue ( string x , string k )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool funciton ( string x , string k )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "sort ( ( x . begin ( ) , x . end ( ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "x . erase ( x . begin ( ) , x . end ( ) , x . end ( ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(std::__cxx11::basic_string<char>::iterator, std::__cxx11::basic_string<char>::iterator, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "for ( int i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        1,
        2
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "for ( int i = 0 ; i < k ; i ++ )",
        "if ( ( x [ i ] - 0 ) != i )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        1,
        2,
        13
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "for ( int i = 0 ; i < k ; i ++ )",
        "if ( ( x [ i ] - 0 ) != i )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        1,
        2,
        15
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "for ( int i = 0 ; i < k ; i ++ )",
        "if ( ( x [ i ] - 0 ) != i )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        1,
        2,
        21
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "for ( int i = 0 ; i < k ; i ++ )",
        "if ( ( x [ i ] - 0 ) != i )",
        "cout << cnt ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        1,
        13
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "for ( int i = 0 ; i < k ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        1,
        13,
        15
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "for ( int i = 0 ; i < k ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        1,
        13,
        21
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "for ( int i = 0 ; i < k ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << cnt ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        1,
        15
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "for ( int i = 0 ; i < k ; i ++ )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        1,
        15,
        21
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "for ( int i = 0 ; i < k ; i ++ )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;",
        "cout << cnt ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        1,
        21
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "for ( int i = 0 ; i < k ; i ++ )",
        "cout << cnt ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "if ( ( x [ i ] - 0 ) != i )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        2,
        13
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "if ( ( x [ i ] - 0 ) != i )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        2,
        13,
        15
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "if ( ( x [ i ] - 0 ) != i )",
        "for ( i = 0 ; i < n ; i ++ )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        2,
        13,
        21
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "if ( ( x [ i ] - 0 ) != i )",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << cnt ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        2,
        15
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "if ( ( x [ i ] - 0 ) != i )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        2,
        15,
        21
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "if ( ( x [ i ] - 0 ) != i )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;",
        "cout << cnt ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        2,
        21
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "if ( ( x [ i ] - 0 ) != i )",
        "cout << cnt ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        13,
        15
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "for ( i = 0 ; i < n ; i ++ )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        13,
        15,
        21
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "for ( i = 0 ; i < n ; i ++ )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;",
        "cout << cnt ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        13,
        21
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << cnt ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        15,
        21
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;",
        "cout << cnt ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        21
      ],
      "mod_code": [
        "bool istrue ( string x , string k )",
        "cout << cnt ;"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator<=’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        2,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < k ; i ++ )",
        "if ( ( x [ i ] - 0 ) != i )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        13,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < k ; i ++ )",
        "if ( ( x [ i ] - 0 ) != i )",
        "for ( i = 0 ; i < n ; i ++ )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        13,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < k ; i ++ )",
        "if ( ( x [ i ] - 0 ) != i )",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << cnt ;"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < k ; i ++ )",
        "if ( ( x [ i ] - 0 ) != i )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        2,
        15,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < k ; i ++ )",
        "if ( ( x [ i ] - 0 ) != i )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;",
        "cout << cnt ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < k ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < k ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        15,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < k ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;",
        "cout << cnt ;"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < k ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << cnt ;"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < k ; i ++ )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        15,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < k ; i ++ )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;",
        "cout << cnt ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "if ( ( x [ i ] - 0 ) != i )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        15
      ],
      "mod_code": [
        "if ( ( x [ i ] - 0 ) != i )",
        "for ( i = 0 ; i < n ; i ++ )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        15,
        21
      ],
      "mod_code": [
        "if ( ( x [ i ] - 0 ) != i )",
        "for ( i = 0 ; i < n ; i ++ )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;",
        "cout << cnt ;"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        21
      ],
      "mod_code": [
        "if ( ( x [ i ] - 0 ) != i )",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << cnt ;"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "if ( ( x [ i ] - 0 ) != i )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        2,
        15,
        21
      ],
      "mod_code": [
        "if ( ( x [ i ] - 0 ) != i )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;",
        "cout << cnt ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "sort ( ( x . begin ( ) , x . end ( ) ) ;",
        "cout << cnt ;"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << cnt ;"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        21
      ],
      "mod_code": [
        "sort ( ( x . begin ( ) , x . end ( ) ) ;",
        "cout << cnt ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘)’ before ‘;’ token"
    }
  ]
}