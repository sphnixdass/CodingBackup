{
  "meta": {
    "index": 915,
    "hitid": "3ZUE82NE0AVEQYJ7PQBCNEGO9GU8F6",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "820A",
    "subid": "47785233"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "c , v0 , v1 , a , l , i , res = integers with i , res = 0",
      "code": "int c , v0 , v1 , a , l , i = 0 , res = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read c , v0 , v1 , a and l",
      "code": "cin >> c >> v0 >> v1 >> a >> l ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 increment i if res < c",
      "code": "for ( i = 0 ; res < c ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if i > 0 then set res = res - 1",
      "code": "if ( i > 0 ) res -= l ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "res = res + min of v1 and ( v0 + a * i )",
      "code": "res = res + min ( v1 , v0 + a * i ) ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print i",
      "code": "cout << i << endl ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return the result of 6 is 000000",
      "code": "return ( 6 == 000000 ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int c , v0 , v1 , a , l , l , i , res = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int c , v0 , v1 , a , l , i , i , res = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "res += min ( v1 , ( ( v0 + a * i ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int c , v0 , v1 , a , l , l , i , res = 0 ;",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "int c , v0 , v1 , a , l , l , i , res = 0 ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( i > 0 ) res = res - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        2
      ],
      "mod_code": [
        "int c , v0 , v1 , a , l , l , i , res = 0 ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( i > 0 ) res = res - 1 ;",
        "cin >> c >> v0 >> v1 >> l >> l ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        3,
        2
      ],
      "mod_code": [
        "int c , v0 , v1 , a , l , l , i , res = 0 ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "cin >> c >> v0 >> v1 >> l >> l ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        3,
        2,
        4
      ],
      "mod_code": [
        "int c , v0 , v1 , a , l , l , i , res = 0 ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "if ( i > 0 ) { res = res - 1 ; }"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "int c , v0 , v1 , a , l , l , i , res = 0 ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( i > 0 ) { res = res - 1 ; }"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int c , v0 , v1 , a , l , l , i , res = 0 ;",
        "if ( i > 0 ) res = res - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        4,
        2
      ],
      "mod_code": [
        "int c , v0 , v1 , a , l , l , i , res = 0 ;",
        "if ( i > 0 ) res = res - 1 ;",
        "cin >> c >> v0 >> v1 >> l >> l ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        4,
        2,
        3
      ],
      "mod_code": [
        "int c , v0 , v1 , a , l , l , i , res = 0 ;",
        "if ( i > 0 ) res = res - 1 ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "for ( i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        4,
        3
      ],
      "mod_code": [
        "int c , v0 , v1 , a , l , l , i , res = 0 ;",
        "if ( i > 0 ) res = res - 1 ;",
        "for ( i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int c , v0 , v1 , a , l , l , i , res = 0 ;",
        "cin >> c >> v0 >> v1 >> l >> l ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        2,
        3
      ],
      "mod_code": [
        "int c , v0 , v1 , a , l , l , i , res = 0 ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "for ( i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        4
      ],
      "mod_code": [
        "int c , v0 , v1 , a , l , l , i , res = 0 ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "for ( i = 0 ; i < c ; i ++ )",
        "if ( i > 0 ) { res = res - 1 ; }"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        2,
        4
      ],
      "mod_code": [
        "int c , v0 , v1 , a , l , l , i , res = 0 ;",
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "if ( i > 0 ) { res = res - 1 ; }"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int c , v0 , v1 , a , l , l , i , res = 0 ;",
        "for ( i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "int c , v0 , v1 , a , l , l , i , res = 0 ;",
        "for ( i = 0 ; i < c ; i ++ )",
        "if ( i > 0 ) { res = res - 1 ; }"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int c , v0 , v1 , a , l , l , i , res = 0 ;",
        "if ( i > 0 ) { res = res - 1 ; }"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    }
  ]
}