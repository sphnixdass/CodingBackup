{
  "meta": {
    "index": 1460,
    "hitid": "3SMIWMMK61ZEZHCFIIMHNUKD2X9UWE",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "359A",
    "subid": "48227490"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int n and m",
      "code": "int m , n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> m >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create int v [ m ] [ n ]",
      "code": "int v [ m ] [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; ++ i )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for j = 0 to n exclusive , read v [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < n ; ++ j ) cin >> v [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; ++ i )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if v [ i ] [ 0 ] or v [ i ] [ n - 1 ]",
      "code": "if ( v [ i ] [ 0 ] || v [ i ] [ n - 1 ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print 2 and a newline",
      "code": "cout << 2 << ' \\n ' ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if v [ 0 ] [ i ] or v [ m - 1 ] [ i ]",
      "code": "if ( v [ 0 ] [ i ] || v [ m - 1 ] [ i ] )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print 2 and a newline",
      "code": "cout << 2 << ' \\n ' ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print 4 and a newline",
      "code": "cout << 4 << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , k ;"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int v [ m ] [ n ] ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "cin >> n >> m ;",
        "int n , k ;"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1,
        3
      ],
      "mod_code": [
        "cin >> n >> m ;",
        "int n , k ;",
        "int v [ m ] [ n ] ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1,
        3,
        11
      ],
      "mod_code": [
        "cin >> n >> m ;",
        "int n , k ;",
        "int v [ m ] [ n ] ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1,
        3,
        12
      ],
      "mod_code": [
        "cin >> n >> m ;",
        "int n , k ;",
        "int v [ m ] [ n ] ] ;",
        "if ( v [ 0 ] [ i ] == v [ m - 1 ] [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1,
        11
      ],
      "mod_code": [
        "cin >> n >> m ;",
        "int n , k ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1,
        11,
        12
      ],
      "mod_code": [
        "cin >> n >> m ;",
        "int n , k ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( v [ 0 ] [ i ] == v [ m - 1 ] [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1,
        12
      ],
      "mod_code": [
        "cin >> n >> m ;",
        "int n , k ;",
        "if ( v [ 0 ] [ i ] == v [ m - 1 ] [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cin >> n >> m ;",
        "int v [ m ] [ n ] ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        3,
        11
      ],
      "mod_code": [
        "cin >> n >> m ;",
        "int v [ m ] [ n ] ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        3,
        11,
        12
      ],
      "mod_code": [
        "cin >> n >> m ;",
        "int v [ m ] [ n ] ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( v [ 0 ] [ i ] == v [ m - 1 ] [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        3,
        12
      ],
      "mod_code": [
        "cin >> n >> m ;",
        "int v [ m ] [ n ] ] ;",
        "if ( v [ 0 ] [ i ] == v [ m - 1 ] [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "cin >> n >> m ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        11,
        12
      ],
      "mod_code": [
        "cin >> n >> m ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( v [ 0 ] [ i ] == v [ m - 1 ] [ i ] )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , k ;",
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        3
      ],
      "mod_code": [
        "int n , k ;",
        "cin >> n >> k ;",
        "int v [ m ] [ n ] ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        11
      ],
      "mod_code": [
        "int n , k ;",
        "cin >> n >> k ;",
        "int v [ m ] [ n ] ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        12
      ],
      "mod_code": [
        "int n , k ;",
        "cin >> n >> k ;",
        "int v [ m ] [ n ] ] ;",
        "if ( v [ 0 ] [ i ] == v [ m - 1 ] [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        11
      ],
      "mod_code": [
        "int n , k ;",
        "cin >> n >> k ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        11,
        12
      ],
      "mod_code": [
        "int n , k ;",
        "cin >> n >> k ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( v [ 0 ] [ i ] == v [ m - 1 ] [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        12
      ],
      "mod_code": [
        "int n , k ;",
        "cin >> n >> k ;",
        "if ( v [ 0 ] [ i ] == v [ m - 1 ] [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , k ;",
        "int v [ m ] [ n ] ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        11
      ],
      "mod_code": [
        "int n , k ;",
        "int v [ m ] [ n ] ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        11,
        12
      ],
      "mod_code": [
        "int n , k ;",
        "int v [ m ] [ n ] ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( v [ 0 ] [ i ] == v [ m - 1 ] [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        12
      ],
      "mod_code": [
        "int n , k ;",
        "int v [ m ] [ n ] ] ;",
        "if ( v [ 0 ] [ i ] == v [ m - 1 ] [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int n , k ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        12
      ],
      "mod_code": [
        "int n , k ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( v [ 0 ] [ i ] == v [ m - 1 ] [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int n , k ;",
        "if ( v [ 0 ] [ i ] == v [ m - 1 ] [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "int v [ m ] [ n ] ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        11
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "int v [ m ] [ n ] ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        11,
        12
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "int v [ m ] [ n ] ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( v [ 0 ] [ i ] == v [ m - 1 ] [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        12
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "int v [ m ] [ n ] ] ;",
        "if ( v [ 0 ] [ i ] == v [ m - 1 ] [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        12
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( v [ 0 ] [ i ] == v [ m - 1 ] [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "if ( v [ 0 ] [ i ] == v [ m - 1 ] [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "int v [ m ] [ n ] ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        3,
        11,
        12
      ],
      "mod_code": [
        "int v [ m ] [ n ] ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( v [ 0 ] [ i ] == v [ m - 1 ] [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "int v [ m ] [ n ] ] ;",
        "if ( v [ 0 ] [ i ] == v [ m - 1 ] [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( v [ 0 ] [ i ] == v [ m - 1 ] [ i ] )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}