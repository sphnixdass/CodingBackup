{
  "meta": {
    "index": 92,
    "hitid": "33J5JKFMK6SPGQ3ARPRA8WCR0HVQ3G",
    "workerid": "A1APYLD4DUK33J",
    "probid": "3A",
    "subid": "48656590"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer array a with size 10",
      "code": "int a [ 10 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create 2d integer array b with size 10 by 10",
      "code": "int b [ 10 ] [ 10 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create characters csx , ctx",
      "code": "char csx , ctx ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integers sx , sy , tx , ty",
      "code": "int sx , sy , tx , ty ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "create integers i , k",
      "code": "int i , k ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "read csx read sy",
      "code": "cin >> csx >> sy ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read ctx read ty",
      "code": "cin >> ctx >> ty ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set sx to csx - 96",
      "code": "sx = csx - 96 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set tx to ctx - 96",
      "code": "tx = ctx - 96 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set k to 0",
      "code": "k = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if sx is greater than tx",
      "code": "if ( sx > tx )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if sy is greater than ty",
      "code": "if ( sy > ty )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "while sx is greater than tx and sy is greater than ty",
      "code": "while ( sx > tx && sy > ty )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "set a [ k ] to 6",
      "code": "a [ k ] = 6 ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "decrement sx",
      "code": "sx -- ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "decrement sy",
      "code": "sy -- ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if sy is less than ty",
      "code": "if ( sy < ty )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "while sx is greater than tx and sy is less than ty",
      "code": "while ( sx > tx && sy < ty )",
      "indent": 3
    },
    {
      "line": 22,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "set a [ k ] to 1",
      "code": "a [ k ] = 1 ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "decrement sx",
      "code": "sx -- ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "increment sy",
      "code": "sy ++ ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "if sx is less than tx",
      "code": "if ( sx < tx )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "if sy is greater than ty",
      "code": "if ( sy > ty )",
      "indent": 2
    },
    {
      "line": 31,
      "text": "while sx is less than tx and sy is greater than ty",
      "code": "while ( sx < tx && sy > ty )",
      "indent": 3
    },
    {
      "line": 32,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "set a [ k ] to 8",
      "code": "a [ k ] = 8 ;",
      "indent": 4
    },
    {
      "line": 34,
      "text": "increment sx",
      "code": "sx ++ ;",
      "indent": 4
    },
    {
      "line": 35,
      "text": "decrement sy",
      "code": "sy -- ;",
      "indent": 4
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 38,
      "text": "if sy is less than ty",
      "code": "if ( sy < ty )",
      "indent": 2
    },
    {
      "line": 39,
      "text": "while sx is less than tx and sy is less than ty",
      "code": "while ( sx < tx && sy < ty )",
      "indent": 3
    },
    {
      "line": 40,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 4
    },
    {
      "line": 41,
      "text": "set a [ k ] to 3",
      "code": "a [ k ] = 3 ;",
      "indent": 4
    },
    {
      "line": 42,
      "text": "increment sx",
      "code": "sx ++ ;",
      "indent": 4
    },
    {
      "line": 43,
      "text": "increment sy",
      "code": "sy ++ ;",
      "indent": 4
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 47,
      "text": "while sx is less than tx",
      "code": "while ( sx < tx )",
      "indent": 1
    },
    {
      "line": 48,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 2
    },
    {
      "line": 49,
      "text": "set a [ k ] to 5",
      "code": "a [ k ] = 5 ;",
      "indent": 2
    },
    {
      "line": 50,
      "text": "increment sx",
      "code": "sx ++ ;",
      "indent": 2
    },
    {
      "line": 51,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 52,
      "text": "while sx is greater than tx",
      "code": "while ( sx > tx )",
      "indent": 1
    },
    {
      "line": 53,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 2
    },
    {
      "line": 54,
      "text": "increment a [ k ] to 4",
      "code": "a [ k ] = 4 ;",
      "indent": 2
    },
    {
      "line": 55,
      "text": "decrement sx",
      "code": "sx -- ;",
      "indent": 2
    },
    {
      "line": 56,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 57,
      "text": "while sy is less than ty",
      "code": "while ( sy < ty )",
      "indent": 1
    },
    {
      "line": 58,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 2
    },
    {
      "line": 59,
      "text": "set a [ k ] to 2",
      "code": "a [ k ] = 2 ;",
      "indent": 2
    },
    {
      "line": 60,
      "text": "increment sy",
      "code": "sy ++ ;",
      "indent": 2
    },
    {
      "line": 61,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 62,
      "text": "while sy is greater than ty",
      "code": "while ( sy > ty )",
      "indent": 1
    },
    {
      "line": 63,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 2
    },
    {
      "line": 64,
      "text": "set a [ k ] to 7",
      "code": "a [ k ] = 7 ;",
      "indent": 2
    },
    {
      "line": 65,
      "text": "decrement sy",
      "code": "sy -- ;",
      "indent": 2
    },
    {
      "line": 66,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 67,
      "text": "print k print newline",
      "code": "cout << k << endl ;",
      "indent": 1
    },
    {
      "line": 68,
      "text": "for i = 1 to k inclusive",
      "code": "for ( i = 1 ; i <= k ; i ++ )",
      "indent": 1
    },
    {
      "line": 69,
      "text": "if a [ i ] is 1 , print \" LU \" print newline",
      "code": "if ( a [ i ] == 1 ) { cout << \" LU \" << endl ; }",
      "indent": 2
    },
    {
      "line": 70,
      "text": "if a [ i ] is 2 , print \" U \" print newline",
      "code": "if ( a [ i ] == 2 ) { cout << \" U \" << endl ; }",
      "indent": 2
    },
    {
      "line": 71,
      "text": "if a [ i ] is 3 , print \" RU \" print newline",
      "code": "if ( a [ i ] == 3 ) { cout << \" RU \" << endl ; }",
      "indent": 2
    },
    {
      "line": 72,
      "text": "if a [ i ] is 4 , print \" L \" print newline",
      "code": "if ( a [ i ] == 4 ) { cout << \" L \" << endl ; }",
      "indent": 2
    },
    {
      "line": 73,
      "text": "if a [ i ] is 5 , print \" R \" print newline",
      "code": "if ( a [ i ] == 5 ) { cout << \" R \" << endl ; }",
      "indent": 2
    },
    {
      "line": 74,
      "text": "if a [ i ] is 6 , print \" LD \" print newline",
      "code": "if ( a [ i ] == 6 ) { cout << \" LD \" << endl ; }",
      "indent": 2
    },
    {
      "line": 75,
      "text": "if a [ i ] is 7 , print \" D \" print newline",
      "code": "if ( a [ i ] == 7 ) { cout << \" D \" << endl ; }",
      "indent": 2
    },
    {
      "line": 76,
      "text": "if a [ i ] is 8 , print \" RD \" print newline",
      "code": "if ( a [ i ] == 8 ) { cout << \" RD \" << endl ; }",
      "indent": 2
    },
    {
      "line": 77,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 78,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int b [ 10 ] [ 10 10 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char csx ;"
      ],
      "err_line": 7,
      "err_msg": "‘ctx’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int sx , sy , tx , ty , ty ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘int ty’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cin >> min1 >> ty ;"
      ],
      "err_line": 7,
      "err_msg": "‘min1’ was not declared in this scope"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        59
      ],
      "mod_code": [
        "a [ k ] ] = 2 ;"
      ],
      "err_line": 59,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        47,
        49,
        41
      ],
      "mod_code": [
        "sx -= 96 ;",
        "while ( sx <= tx )",
        "a [ k ] = ' 5 ' ;",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        47,
        9,
        41
      ],
      "mod_code": [
        "sx -= 96 ;",
        "while ( sx <= tx )",
        "tx -= 96 ;",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        47,
        62,
        41
      ],
      "mod_code": [
        "sx -= 96 ;",
        "while ( sx <= tx )",
        "while ( sy >= ty )",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        47,
        41
      ],
      "mod_code": [
        "sx -= 96 ;",
        "while ( sx <= tx )",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        49,
        9,
        41
      ],
      "mod_code": [
        "sx -= 96 ;",
        "a [ k ] = ' 5 ' ;",
        "tx -= 96 ;",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        49,
        62,
        41
      ],
      "mod_code": [
        "sx -= 96 ;",
        "a [ k ] = ' 5 ' ;",
        "while ( sy >= ty )",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        49,
        41
      ],
      "mod_code": [
        "sx -= 96 ;",
        "a [ k ] = ' 5 ' ;",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        9,
        62,
        41
      ],
      "mod_code": [
        "sx -= 96 ;",
        "tx -= 96 ;",
        "while ( sy >= ty )",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        9,
        41
      ],
      "mod_code": [
        "sx -= 96 ;",
        "tx -= 96 ;",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        62,
        41
      ],
      "mod_code": [
        "sx -= 96 ;",
        "while ( sy >= ty )",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        41
      ],
      "mod_code": [
        "sx -= 96 ;",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        47,
        49,
        9,
        41
      ],
      "mod_code": [
        "while ( sx <= tx )",
        "a [ k ] = ' 5 ' ;",
        "tx -= 96 ;",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        47,
        49,
        62,
        41
      ],
      "mod_code": [
        "while ( sx <= tx )",
        "a [ k ] = ' 5 ' ;",
        "while ( sy >= ty )",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        47,
        49,
        41
      ],
      "mod_code": [
        "while ( sx <= tx )",
        "a [ k ] = ' 5 ' ;",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        47,
        9,
        62,
        41
      ],
      "mod_code": [
        "while ( sx <= tx )",
        "tx -= 96 ;",
        "while ( sy >= ty )",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        47,
        9,
        41
      ],
      "mod_code": [
        "while ( sx <= tx )",
        "tx -= 96 ;",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        47,
        62,
        41
      ],
      "mod_code": [
        "while ( sx <= tx )",
        "while ( sy >= ty )",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        47,
        41
      ],
      "mod_code": [
        "while ( sx <= tx )",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        49,
        9,
        62,
        41
      ],
      "mod_code": [
        "a [ k ] = ' 5 ' ;",
        "tx -= 96 ;",
        "while ( sy >= ty )",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        49,
        9,
        41
      ],
      "mod_code": [
        "a [ k ] = ' 5 ' ;",
        "tx -= 96 ;",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        49,
        62,
        41
      ],
      "mod_code": [
        "a [ k ] = ' 5 ' ;",
        "while ( sy >= ty )",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        49,
        41
      ],
      "mod_code": [
        "a [ k ] = ' 5 ' ;",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        62,
        41
      ],
      "mod_code": [
        "tx -= 96 ;",
        "while ( sy >= ty )",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        41
      ],
      "mod_code": [
        "tx -= 96 ;",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        62,
        41
      ],
      "mod_code": [
        "while ( sy >= ty )",
        "a [ k ] ] = 3 ;"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘]’ token"
    }
  ]
}