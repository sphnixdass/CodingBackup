{
  "meta": {
    "index": 55,
    "hitid": "39TX062QX1I9PN4MD3M2248KYMV3X8",
    "workerid": "AIWEXPJAU66D9",
    "probid": "263A",
    "subid": "42357506"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "matrix is an 2d array of integers with size 5 by 5",
      "code": "int matrix [ 5 ] [ 5 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create new integer called output with value 0",
      "code": "int output = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "in a for loop , change i from 0 to 5 exclusive incrementing i",
      "code": "for ( int i = 0 ; i < 5 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for integer j = 0 to 5 exclusive , read standard input to matrix [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < 5 ; j ++ ) { cin >> matrix [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 6,
      "text": "in a for loop , change i from 0 to 5 exclusive",
      "code": "for ( int i = 0 ; i < 5 ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j from 0 to 5 exclusive incrementing j",
      "code": "for ( int j = 0 ; j < 5 ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if matrix [ i ] [ j ] = 1 , assign abs ( 2 - i ) + abs ( 2 - j ) to output",
      "code": "if ( matrix [ i ] [ j ] == 1 ) { output = abs ( 2 - i ) + abs ( 2 - j ) ; }",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print output",
      "code": "cout << output << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "const int matrix [ 5 ] [ 5 ] ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int s = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int s = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int s = 0 ;",
        "for ( j = 0 ; j < 5 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        7,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int s = 0 ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "const int matrix [ 5 ] [ 5 ] ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        2,
        7,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int s = 0 ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        7,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int s = 0 ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int s = 0 ;",
        "const int matrix [ 5 ] [ 5 ] ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        2,
        1,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int s = 0 ;",
        "const int matrix [ 5 ] [ 5 ] ;",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        2,
        1,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int s = 0 ;",
        "const int matrix [ 5 ] [ 5 ] ;",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        2,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int s = 0 ;",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        6,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int s = 0 ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int s = 0 ;",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( j = 0 ; j < 5 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "const int matrix [ 5 ] [ 5 ] ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        7,
        1,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "const int matrix [ 5 ] [ 5 ] ;",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        7,
        1,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "const int matrix [ 5 ] [ 5 ] ;",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        7,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        6,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "const int matrix [ 5 ] [ 5 ] ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        1,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "const int matrix [ 5 ] [ 5 ] ;",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        1,
        6,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "const int matrix [ 5 ] [ 5 ] ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        1,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "const int matrix [ 5 ] [ 5 ] ;",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( j = 0 ; j < 5 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        1
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "const int matrix [ 5 ] [ 5 ] ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        7,
        1,
        6
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "const int matrix [ 5 ] [ 5 ] ;",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        7,
        1,
        8
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "const int matrix [ 5 ] [ 5 ] ;",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        7,
        6
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        7,
        6,
        8
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        7,
        8
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "int s = 0 ;",
        "const int matrix [ 5 ] [ 5 ] ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        1,
        6
      ],
      "mod_code": [
        "int s = 0 ;",
        "const int matrix [ 5 ] [ 5 ] ;",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        1,
        6,
        8
      ],
      "mod_code": [
        "int s = 0 ;",
        "const int matrix [ 5 ] [ 5 ] ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        1,
        8
      ],
      "mod_code": [
        "int s = 0 ;",
        "const int matrix [ 5 ] [ 5 ] ;",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        8
      ],
      "mod_code": [
        "int s = 0 ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "int s = 0 ;",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )",
        "const int matrix [ 5 ] [ 5 ] ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        1,
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )",
        "const int matrix [ 5 ] [ 5 ] ;",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        1,
        6,
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )",
        "const int matrix [ 5 ] [ 5 ] ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        1,
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )",
        "const int matrix [ 5 ] [ 5 ] ;",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        6,
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "const int matrix [ 5 ] [ 5 ] ;",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        6,
        8
      ],
      "mod_code": [
        "const int matrix [ 5 ] [ 5 ] ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "const int matrix [ 5 ] [ 5 ] ;",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘matrix’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( matrix [ i ] [ j ] = 1 ) output = abs ( 2 - i ) + abs ( 2 - j ) ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}