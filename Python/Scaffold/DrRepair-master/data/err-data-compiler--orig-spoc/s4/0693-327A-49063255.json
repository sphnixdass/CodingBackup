{
  "meta": {
    "index": 693,
    "hitid": "3N2YPY1GI6SKVWFO282GXAFW90IEVC",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "327A",
    "subid": "49063255"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create ints n , a , count1 ( 0 ) , extra0 ( 0 ) , and extra0max ( - 1 )",
      "code": "int n , a , count1 ( 0 ) , extra0 ( 0 ) , extra0max ( - 1 ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while n - - is truthy",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if a is equal to 1",
      "code": "if ( a == 1 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "add 1 to count1",
      "code": "count1 += 1 ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if extra0 is greater than 0 , subtract 1 from extra0",
      "code": "if ( extra0 > 0 ) { extra0 -= 1 ; }",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "add 1 to extra0",
      "code": "extra0 += 1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if extra0 is greater than extra0max , set extra0max to extra0",
      "code": "if ( extra0 > extra0max ) { extra0max = extra0 ; }",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "show result of count1 + extra0max",
      "code": "cout << count1 + extra0max << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a , count1 ( 0 ) , extra0 ( 0 ) , extra0 ( - 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int extra0’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , a , count1 ( 0 ) , extra0 ( 0 ) , extra0 ( - 1 ) ;",
        "while ( -- n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int extra0’"
    },
    {
      "mod_line": [
        1,
        3,
        8
      ],
      "mod_code": [
        "int n , a , count1 ( 0 ) , extra0 ( 0 ) , extra0 ( - 1 ) ;",
        "while ( -- n )",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int extra0’"
    },
    {
      "mod_line": [
        1,
        3,
        8,
        5
      ],
      "mod_code": [
        "int n , a , count1 ( 0 ) , extra0 ( 0 ) , extra0 ( - 1 ) ;",
        "while ( -- n )",
        "else do",
        "if ( a == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int extra0’"
    },
    {
      "mod_line": [
        1,
        3,
        8,
        4
      ],
      "mod_code": [
        "int n , a , count1 ( 0 ) , extra0 ( 0 ) , extra0 ( - 1 ) ;",
        "while ( -- n )",
        "else do",
        "gets ( a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int extra0’"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "int n , a , count1 ( 0 ) , extra0 ( 0 ) , extra0 ( - 1 ) ;",
        "while ( -- n )",
        "if ( a == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int extra0’"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        4
      ],
      "mod_code": [
        "int n , a , count1 ( 0 ) , extra0 ( 0 ) , extra0 ( - 1 ) ;",
        "while ( -- n )",
        "if ( a == ' 1 ' )",
        "gets ( a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int extra0’"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "int n , a , count1 ( 0 ) , extra0 ( 0 ) , extra0 ( - 1 ) ;",
        "while ( -- n )",
        "gets ( a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int extra0’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int n , a , count1 ( 0 ) , extra0 ( 0 ) , extra0 ( - 1 ) ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int extra0’"
    },
    {
      "mod_line": [
        1,
        8,
        5
      ],
      "mod_code": [
        "int n , a , count1 ( 0 ) , extra0 ( 0 ) , extra0 ( - 1 ) ;",
        "else do",
        "if ( a == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int extra0’"
    },
    {
      "mod_line": [
        1,
        8,
        5,
        4
      ],
      "mod_code": [
        "int n , a , count1 ( 0 ) , extra0 ( 0 ) , extra0 ( - 1 ) ;",
        "else do",
        "if ( a == ' 1 ' )",
        "gets ( a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int extra0’"
    },
    {
      "mod_line": [
        1,
        8,
        4
      ],
      "mod_code": [
        "int n , a , count1 ( 0 ) , extra0 ( 0 ) , extra0 ( - 1 ) ;",
        "else do",
        "gets ( a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int extra0’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , a , count1 ( 0 ) , extra0 ( 0 ) , extra0 ( - 1 ) ;",
        "if ( a == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int extra0’"
    },
    {
      "mod_line": [
        1,
        5,
        4
      ],
      "mod_code": [
        "int n , a , count1 ( 0 ) , extra0 ( 0 ) , extra0 ( - 1 ) ;",
        "if ( a == ' 1 ' )",
        "gets ( a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int extra0’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n , a , count1 ( 0 ) , extra0 ( 0 ) , extra0 ( - 1 ) ;",
        "gets ( a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int extra0’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "while ( -- n )",
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        5
      ],
      "mod_code": [
        "while ( -- n )",
        "else do",
        "if ( a == ' 1 ' )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        5,
        4
      ],
      "mod_code": [
        "while ( -- n )",
        "else do",
        "if ( a == ' 1 ' )",
        "gets ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        8,
        4
      ],
      "mod_code": [
        "while ( -- n )",
        "else do",
        "gets ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5,
        4
      ],
      "mod_code": [
        "while ( -- n )",
        "if ( a == ' 1 ' )",
        "gets ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "while ( -- n )",
        "gets ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "else do",
        "if ( a == ' 1 ' )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        5,
        4
      ],
      "mod_code": [
        "else do",
        "if ( a == ' 1 ' )",
        "gets ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "else do",
        "gets ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "if ( a == ' 1 ' )",
        "gets ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}