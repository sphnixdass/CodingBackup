{
  "meta": {
    "index": 43,
    "hitid": "30F94FBDNRE7B1ZFNM0BVKLQ9IKBTO",
    "workerid": "AIWEXPJAU66D9",
    "probid": "263A",
    "subid": "49031728"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare int variable val = 0 and array of ints arr with size 5 by 5",
      "code": "int arr [ 5 ] [ 5 ] , val = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "in a for loop , change i from 0 to 5 exclusive",
      "code": "for ( int i = 0 ; i < 5 ; i ++ )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "in a for loop , change j from 0 to 5 exclusive , read arr [ i ] [ j ] from the user input on each loop",
      "code": "for ( int j = 0 ; j < 5 ; j ++ ) { cin >> arr [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 5,
      "text": "start for loop from i = 0 to 5 exclusive",
      "code": "for ( int i = 0 ; i < 5 ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "in a for loop , change j from 0 to 5 exclusive incrementing j",
      "code": "for ( int j = 0 ; j < 5 ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if arr [ i ] [ j ] is equal to 1",
      "code": "if ( arr [ i ] [ j ] == 1 )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if i and j are equal to 2",
      "code": "if ( i == 2 && j == 2 )",
      "indent": 4
    },
    {
      "line": 9,
      "text": "print val",
      "code": "cout << val << endl ;",
      "indent": 5
    },
    {
      "line": 10,
      "text": "else if i < 2 and j < 2",
      "code": "else if ( i < 2 && j < 2 )",
      "indent": 4
    },
    {
      "line": 11,
      "text": "set val to ( 2 - i ) + ( 2 - j )",
      "code": "val = ( 2 - i ) + ( 2 - j ) ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "print val to the standard output",
      "code": "cout << val << endl ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "else if i < 2 and j > 2",
      "code": "else if ( i < 2 && j > 2 )",
      "indent": 4
    },
    {
      "line": 14,
      "text": "change val to ( 2 - i ) + ( j - 2 )",
      "code": "val = ( 2 - i ) + ( j - 2 ) ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "print val",
      "code": "cout << val << endl ;",
      "indent": 5
    },
    {
      "line": 16,
      "text": "else if i > 2 and j < 2",
      "code": "else if ( i > 2 && j < 2 )",
      "indent": 4
    },
    {
      "line": 17,
      "text": "change val to ( i - 2 ) + ( 2 - j )",
      "code": "val = ( i - 2 ) + ( 2 - j ) ;",
      "indent": 5
    },
    {
      "line": 18,
      "text": "print val",
      "code": "cout << val << endl ;",
      "indent": 5
    },
    {
      "line": 19,
      "text": "else if i > 2 and j > 2",
      "code": "else if ( i > 2 && j > 2 )",
      "indent": 4
    },
    {
      "line": 20,
      "text": "assign ( i - 2 ) + ( j - 2 ) to val",
      "code": "val = ( i - 2 ) + ( j - 2 ) ;",
      "indent": 5
    },
    {
      "line": 21,
      "text": "print val",
      "code": "cout << val << endl ;",
      "indent": 5
    },
    {
      "line": 22,
      "text": "else if i = 2 and j < 2",
      "code": "else if ( i == 2 && j < 2 )",
      "indent": 4
    },
    {
      "line": 23,
      "text": "set val to 2 - j",
      "code": "val = 2 - j ;",
      "indent": 5
    },
    {
      "line": 24,
      "text": "print val",
      "code": "cout << val << endl ;",
      "indent": 5
    },
    {
      "line": 25,
      "text": "else if i = 2 and j > 2",
      "code": "else if ( i == 2 && j > 2 )",
      "indent": 4
    },
    {
      "line": 26,
      "text": "assign j - 2 to val",
      "code": "val = j - 2 ;",
      "indent": 5
    },
    {
      "line": 27,
      "text": "print val to the standard output",
      "code": "cout << val << endl ;",
      "indent": 5
    },
    {
      "line": 28,
      "text": "else if i < 2 and j = 2",
      "code": "else if ( i < 2 && j == 2 )",
      "indent": 4
    },
    {
      "line": 29,
      "text": "set val to 2 - i",
      "code": "val = 2 - i ;",
      "indent": 5
    },
    {
      "line": 30,
      "text": "print val to the standard output",
      "code": "cout << val << endl ;",
      "indent": 5
    },
    {
      "line": 31,
      "text": "else if i > 2 and j = 2",
      "code": "else if ( i > 2 && j == 2 )",
      "indent": 4
    },
    {
      "line": 32,
      "text": "change val to i - 2",
      "code": "val = i - 2 ;",
      "indent": 5
    },
    {
      "line": 33,
      "text": "print val to the standard output",
      "code": "cout << val << endl ;",
      "indent": 5
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int arr [ 5 ] , val [ 5 ] ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "else if ( i < 2 && j = 2 )"
      ],
      "err_line": 28,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "cout << val ;",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        5,
        7
      ],
      "mod_code": [
        "cout << val ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        5,
        7,
        28
      ],
      "mod_code": [
        "cout << val ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )",
        "else if ( i < 2 && j = 2 )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        5,
        7,
        2
      ],
      "mod_code": [
        "cout << val ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        7,
        8
      ],
      "mod_code": [
        "cout << val ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )",
        "if ( i % j == 2 )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        5,
        28
      ],
      "mod_code": [
        "cout << val ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "else if ( i < 2 && j = 2 )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        5,
        28,
        2
      ],
      "mod_code": [
        "cout << val ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "else if ( i < 2 && j = 2 )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        28,
        8
      ],
      "mod_code": [
        "cout << val ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "else if ( i < 2 && j = 2 )",
        "if ( i % j == 2 )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        5,
        2
      ],
      "mod_code": [
        "cout << val ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        2,
        8
      ],
      "mod_code": [
        "cout << val ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( i % j == 2 )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        8
      ],
      "mod_code": [
        "cout << val ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( i % j == 2 )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        7,
        28
      ],
      "mod_code": [
        "cout << val ;",
        "if ( arr [ i ] [ j ] == ' 1 ' )",
        "else if ( i < 2 && j = 2 )"
      ],
      "err_line": 28,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        12,
        7,
        28,
        2
      ],
      "mod_code": [
        "cout << val ;",
        "if ( arr [ i ] [ j ] == ' 1 ' )",
        "else if ( i < 2 && j = 2 )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7,
        28,
        8
      ],
      "mod_code": [
        "cout << val ;",
        "if ( arr [ i ] [ j ] == ' 1 ' )",
        "else if ( i < 2 && j = 2 )",
        "if ( i % j == 2 )"
      ],
      "err_line": 28,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        12,
        7,
        2
      ],
      "mod_code": [
        "cout << val ;",
        "if ( arr [ i ] [ j ] == ' 1 ' )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7,
        2,
        8
      ],
      "mod_code": [
        "cout << val ;",
        "if ( arr [ i ] [ j ] == ' 1 ' )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( i % j == 2 )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        28
      ],
      "mod_code": [
        "cout << val ;",
        "else if ( i < 2 && j = 2 )"
      ],
      "err_line": 28,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        12,
        28,
        2
      ],
      "mod_code": [
        "cout << val ;",
        "else if ( i < 2 && j = 2 )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        28,
        2,
        8
      ],
      "mod_code": [
        "cout << val ;",
        "else if ( i < 2 && j = 2 )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( i % j == 2 )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        28,
        8
      ],
      "mod_code": [
        "cout << val ;",
        "else if ( i < 2 && j = 2 )",
        "if ( i % j == 2 )"
      ],
      "err_line": 28,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "cout << val ;",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        8
      ],
      "mod_code": [
        "cout << val ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( i % j == 2 )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        28
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )",
        "else if ( i < 2 && j = 2 )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        28,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )",
        "else if ( i < 2 && j = 2 )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        28,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )",
        "else if ( i < 2 && j = 2 )",
        "if ( i % j == 2 )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        2,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( i % j == 2 )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( arr [ i ] [ j ] == ' 1 ' )",
        "if ( i % j == 2 )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        28
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "else if ( i < 2 && j = 2 )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        28,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "else if ( i < 2 && j = 2 )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        28,
        2,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "else if ( i < 2 && j = 2 )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( i % j == 2 )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        28,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "else if ( i < 2 && j = 2 )",
        "if ( i % j == 2 )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( i % j == 2 )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( i % j == 2 )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        28
      ],
      "mod_code": [
        "if ( arr [ i ] [ j ] == ' 1 ' )",
        "else if ( i < 2 && j = 2 )"
      ],
      "err_line": 28,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        7,
        28,
        2
      ],
      "mod_code": [
        "if ( arr [ i ] [ j ] == ' 1 ' )",
        "else if ( i < 2 && j = 2 )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        28,
        2,
        8
      ],
      "mod_code": [
        "if ( arr [ i ] [ j ] == ' 1 ' )",
        "else if ( i < 2 && j = 2 )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( i % j == 2 )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        28,
        8
      ],
      "mod_code": [
        "if ( arr [ i ] [ j ] == ' 1 ' )",
        "else if ( i < 2 && j = 2 )",
        "if ( i % j == 2 )"
      ],
      "err_line": 28,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "if ( arr [ i ] [ j ] == ' 1 ' )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        8
      ],
      "mod_code": [
        "if ( arr [ i ] [ j ] == ' 1 ' )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( i % j == 2 )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        2
      ],
      "mod_code": [
        "else if ( i < 2 && j = 2 )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        2,
        8
      ],
      "mod_code": [
        "else if ( i < 2 && j = 2 )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( i % j == 2 )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        8
      ],
      "mod_code": [
        "else if ( i < 2 && j = 2 )",
        "if ( i % j == 2 )"
      ],
      "err_line": 28,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "if ( i % j == 2 )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}