{
  "meta": {
    "index": 655,
    "hitid": "3GV1I4SEO9JDMCAFIMHCYDPH02B6LE",
    "workerid": "A1APYLD4DUK33J",
    "probid": "14A",
    "subid": "47849410"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , m , i , j , min_i , max_i , min_j , max_j",
      "code": "int n , m , i , j , min_i , max_i , min_j , max_j ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create 2d character array s with size 55 by 55",
      "code": "char s [ 55 ] [ 55 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set min_i to min_j to 55",
      "code": "min_i = min_j = 55 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set max_i to max_j to - 1",
      "code": "max_i = max_j = - 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j = 0 to m exclusive",
      "code": "for ( j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read s [ i ] [ j ]",
      "code": "cin >> s [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if s [ i ] [ j ] is ' * '",
      "code": "if ( s [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set min_i to minimum of min_i and i , set max_i to maximum of max_i and i",
      "code": "min_i = min ( min_i , i ) , max_i = max ( max_i , i ) ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "set min_j to minimum of min_j and j , set max_j to maximum of max_j and j",
      "code": "min_j = min ( min_j , j ) , max_j = max ( max_j , j ) ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = min_i to max_i inclusive",
      "code": "for ( i = min_i ; i <= max_i ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for j = min_j to max_j inclusive , print s [ i ] [ j ]",
      "code": "for ( j = min_j ; j <= max_j ; j ++ ) cout << s [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , i , j , min_i , max_i , max_i , max_j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char s [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "const int min_i = min_j ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘const int min_i’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "int n , m , i , j , min_i , max_i , max_i , max_j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        10,
        1,
        3
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "cin >> n >> k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        10,
        1,
        3,
        2
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "cin >> n >> k ;",
        "char s [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        10,
        1,
        3,
        8
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "cin >> n >> k ;",
        "cout << s [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        10,
        1,
        3,
        11
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "cin >> n >> k ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        10,
        1,
        2
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "char s [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        10,
        1,
        2,
        8
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "char s [ 55 ] [ 55 55 ] ;",
        "cout << s [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        10,
        1,
        2,
        11
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "char s [ 55 ] [ 55 55 ] ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        10,
        1,
        8
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "cout << s [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        10,
        1,
        8,
        11
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "cout << s [ i ] [ j ] ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        10,
        1,
        11
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        2
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "cin >> n >> k ;",
        "char s [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        3,
        2,
        8
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "cin >> n >> k ;",
        "char s [ 55 ] [ 55 55 ] ;",
        "cout << s [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        3,
        2,
        11
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "cin >> n >> k ;",
        "char s [ 55 ] [ 55 55 ] ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        3,
        8
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "cin >> n >> k ;",
        "cout << s [ i ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        8,
        11
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "cin >> n >> k ;",
        "cout << s [ i ] [ j ] ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        11
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "cin >> n >> k ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "char s [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        2,
        8
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "char s [ 55 ] [ 55 55 ] ;",
        "cout << s [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        2,
        8,
        11
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "char s [ 55 ] [ 55 55 ] ;",
        "cout << s [ i ] [ j ] ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        2,
        11
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "char s [ 55 ] [ 55 55 ] ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "cout << s [ i ] [ j ] ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        8,
        11
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "cout << s [ i ] [ j ] ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "min_i = min ( min_i , i , max_i = max ( max_i , i ) ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "cin >> n >> k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        1,
        3,
        2
      ],
      "mod_code": [
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "cin >> n >> k ;",
        "char s [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        1,
        3,
        2,
        8
      ],
      "mod_code": [
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "cin >> n >> k ;",
        "char s [ 55 ] [ 55 55 ] ;",
        "cout << s [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        1,
        3,
        2,
        11
      ],
      "mod_code": [
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "cin >> n >> k ;",
        "char s [ 55 ] [ 55 55 ] ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        1,
        3,
        8
      ],
      "mod_code": [
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "cin >> n >> k ;",
        "cout << s [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        1,
        3,
        8,
        11
      ],
      "mod_code": [
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "cin >> n >> k ;",
        "cout << s [ i ] [ j ] ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        1,
        3,
        11
      ],
      "mod_code": [
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "cin >> n >> k ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "char s [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        1,
        2,
        8
      ],
      "mod_code": [
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "char s [ 55 ] [ 55 55 ] ;",
        "cout << s [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        11
      ],
      "mod_code": [
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "char s [ 55 ] [ 55 55 ] ;",
        "cout << s [ i ] [ j ] ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        1,
        2,
        11
      ],
      "mod_code": [
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "char s [ 55 ] [ 55 55 ] ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "cout << s [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        1,
        8,
        11
      ],
      "mod_code": [
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "cout << s [ i ] [ j ] ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int n , m , i , j , min_i , max_i , max_i , max_j ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int max_i’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "char s [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        3,
        2,
        8
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "char s [ 55 ] [ 55 55 ] ;",
        "cout << s [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        3,
        2,
        8,
        11
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "char s [ 55 ] [ 55 55 ] ;",
        "cout << s [ i ] [ j ] ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        3,
        2,
        11
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "char s [ 55 ] [ 55 55 ] ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "cout << s [ i ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        11
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "cout << s [ i ] [ j ] ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "char s [ 55 ] [ 55 55 ] ;",
        "cout << s [ i ] [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        2,
        8,
        11
      ],
      "mod_code": [
        "char s [ 55 ] [ 55 55 ] ;",
        "cout << s [ i ] [ j ] ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "char s [ 55 ] [ 55 55 ] ;",
        "min_j = min ( min_j , j ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘]’ before numeric constant"
    }
  ]
}