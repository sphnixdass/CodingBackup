{
  "meta": {
    "index": 1132,
    "hitid": "3CRWSLD91KYNH0Y4IU4LFQQXM93MOY",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "86A",
    "subid": "41264356"
  },
  "lines": [
    {
      "line": 0,
      "text": "long long x ) = long long integers",
      "code": "long long phi ( long long x )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "set stringstream as ss",
      "code": "stringstream ss ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "output x from ss",
      "code": "ss << x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "s = string array",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "input s to ss",
      "code": "ss >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = ( 0 ) to less than or equal to ( ( int ) ( s ) . size ( ) - 1 ) then s [ i ] = ' 0 ' + ' 9 ' - s [ i ]",
      "code": "for ( int i = ( 0 ) ; i <= ( ( int ) ( s ) . size ( ) - 1 ) ; i ++ ) { s [ i ] = ' 0 ' + ' 9 ' - s [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "ans = long long integers",
      "code": "long long ans ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "clear the ss",
      "code": "ss . clear ( ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "output s from the ss",
      "code": "ss << s ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "input ans into ss",
      "code": "ss >> ans ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "return ans",
      "code": "return ans ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 13,
      "text": "integers = l , r",
      "code": "int l , r ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "read l , r",
      "code": "cin >> l >> r ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "set long long x to 1 , ans",
      "code": "long long x = 1 , ans = 0 ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for d = ( 0 ) to less than or equal to ( 9 ) do the following",
      "code": "for ( int d = ( 0 ) ; d <= ( 9 ) ; d ++ )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "set long long y to x / 2",
      "code": "long long y = x / 2 ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if ( y < = r and y > = l ) then ans equals max ( ans , y * ( y - 1 ) )",
      "code": "if ( y <= r && y >= l ) { ans = max ( ans , y * ( y - 1 ) ) ; }",
      "indent": 2
    },
    {
      "line": 19,
      "text": "multiply x by 10",
      "code": "x *= 10 ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "set long long pl to phi ( l ) , pr = phi ( r )",
      "code": "long long pl = phi ( l ) , pr = phi ( r ) ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "set ans to max ( ans , l * pl )",
      "code": "ans = max ( ans , l * pl ) ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "set ans to max ( ans , r * pr )",
      "code": "ans = max ( ans , r * pr ) ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "output ans",
      "code": "cout << ans << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long x ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long int x ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "stringstream as ;"
      ],
      "err_line": 2,
      "err_msg": "‘ss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( ( int ) s [ i ] . size ( ) - 1 ) ; i ++ ) { s [ i ] = ' 0 ' - s [ i ] ; }"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s.std::__cxx11::basic_string<_CharT, _Traits, _Alloc>::operator[]<char, std::char_traits<char>, std::allocator<char> >(((std::__cxx11::basic_string<char>::size_type)i))’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "const int l , r ;"
      ],
      "err_line": 13,
      "err_msg": "uninitialized const ‘l’ [-fpermissive]"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "int ans = max ( ans , l * pl ) ;"
      ],
      "err_line": 22,
      "err_msg": "conflicting declaration ‘int ans’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "int ans = max ( ans , r * pr ) ;"
      ],
      "err_line": 23,
      "err_msg": "conflicting declaration ‘int ans’"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "long long x ;",
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        15
      ],
      "mod_code": [
        "long long x ;",
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "long long x = 1 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        15,
        4
      ],
      "mod_code": [
        "long long x ;",
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "long long x = 1 , ans ;",
        "cin >> s ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        15,
        14
      ],
      "mod_code": [
        "long long x ;",
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "long long x = 1 , ans ;",
        "cin >> l , r ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        15,
        7
      ],
      "mod_code": [
        "long long x ;",
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "long long x = 1 , ans ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        4
      ],
      "mod_code": [
        "long long x ;",
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "cin >> s ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        4,
        14
      ],
      "mod_code": [
        "long long x ;",
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "cin >> s ;",
        "cin >> l , r ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        4,
        7
      ],
      "mod_code": [
        "long long x ;",
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "cin >> s ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        14
      ],
      "mod_code": [
        "long long x ;",
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "cin >> l , r ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        14,
        7
      ],
      "mod_code": [
        "long long x ;",
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "cin >> l , r ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        5,
        7
      ],
      "mod_code": [
        "long long x ;",
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "long long x ;",
        "long long x = 1 , ans ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        4
      ],
      "mod_code": [
        "long long x ;",
        "long long x = 1 , ans ;",
        "cin >> s ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        4,
        14
      ],
      "mod_code": [
        "long long x ;",
        "long long x = 1 , ans ;",
        "cin >> s ;",
        "cin >> l , r ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        4,
        7
      ],
      "mod_code": [
        "long long x ;",
        "long long x = 1 , ans ;",
        "cin >> s ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        14
      ],
      "mod_code": [
        "long long x ;",
        "long long x = 1 , ans ;",
        "cin >> l , r ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        14,
        7
      ],
      "mod_code": [
        "long long x ;",
        "long long x = 1 , ans ;",
        "cin >> l , r ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15,
        7
      ],
      "mod_code": [
        "long long x ;",
        "long long x = 1 , ans ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "long long x ;",
        "cin >> s ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        14
      ],
      "mod_code": [
        "long long x ;",
        "cin >> s ;",
        "cin >> l , r ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        14,
        7
      ],
      "mod_code": [
        "long long x ;",
        "cin >> s ;",
        "cin >> l , r ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        7
      ],
      "mod_code": [
        "long long x ;",
        "cin >> s ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "long long x ;",
        "cin >> l , r ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14,
        7
      ],
      "mod_code": [
        "long long x ;",
        "cin >> l , r ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "long long x ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "long long x = 1 , ans ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        15,
        4
      ],
      "mod_code": [
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "long long x = 1 , ans ;",
        "cin >> s ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        15,
        4,
        14
      ],
      "mod_code": [
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "long long x = 1 , ans ;",
        "cin >> s ;",
        "cin >> l , r ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        15,
        4,
        7
      ],
      "mod_code": [
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "long long x = 1 , ans ;",
        "cin >> s ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        15,
        14
      ],
      "mod_code": [
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "long long x = 1 , ans ;",
        "cin >> l , r ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        15,
        14,
        7
      ],
      "mod_code": [
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "long long x = 1 , ans ;",
        "cin >> l , r ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        15,
        7
      ],
      "mod_code": [
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "long long x = 1 , ans ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "cin >> s ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        4,
        14
      ],
      "mod_code": [
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "cin >> s ;",
        "cin >> l , r ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        4,
        14,
        7
      ],
      "mod_code": [
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "cin >> s ;",
        "cin >> l , r ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        4,
        7
      ],
      "mod_code": [
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "cin >> s ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "cin >> l , r ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        14,
        7
      ],
      "mod_code": [
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "cin >> l , r ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "for ( int i = ( 0 ) ; i <= ( ( int ) ( ( int ) ( ( int ) ( ( int ) ( s ) . size ( ) - 1 ) <= ' 9 ' ) ; i ++ ) s [ i ] = ' 0 ' - s [ i ] ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        15,
        4,
        14,
        7
      ],
      "mod_code": [
        "long long x = 1 , ans ;",
        "cin >> s ;",
        "cin >> l , r ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        15,
        4,
        7
      ],
      "mod_code": [
        "long long x = 1 , ans ;",
        "cin >> s ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        15,
        14,
        7
      ],
      "mod_code": [
        "long long x = 1 , ans ;",
        "cin >> l , r ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        15,
        7
      ],
      "mod_code": [
        "long long x = 1 , ans ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        4,
        14,
        7
      ],
      "mod_code": [
        "cin >> s ;",
        "cin >> l , r ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "cin >> s ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘.’ token"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "cin >> l , r ;",
        "ss . clear ( . clear ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘.’ token"
    }
  ]
}