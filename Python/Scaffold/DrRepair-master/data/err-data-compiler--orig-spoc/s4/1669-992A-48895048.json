{
  "meta": {
    "index": 1669,
    "hitid": "391FPZIE4CGW2RHQNJ0HMRAQN91HU6",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "992A",
    "subid": "48895048"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "s = int set",
      "code": "set < int > s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "x = int",
      "code": "int x ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "insert x into s",
      "code": "s . insert ( x ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if s contains 0",
      "code": "if ( s . find ( 0 ) != s . end ( ) )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print size of s - 1",
      "code": "cout << s . size ( ) - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print size of s",
      "code": "cout << s . size ( ) << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )"
      ],
      "err_line": 9,
      "err_msg": "could not convert ‘s.std::set<_Key, _Compare, _Alloc>::find<int, std::less<int>, std::allocator<int> >(0)’ from ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ to ‘bool’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "set < int = s ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "s . push ( x ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘class std::set<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "set < int = s ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        9,
        3,
        2
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "set < int = s ;",
        "while ( cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        9,
        3,
        2,
        11
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "set < int = s ;",
        "while ( cin >> n )",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        9,
        3,
        2,
        6
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "set < int = s ;",
        "while ( cin >> n )",
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        9,
        3,
        2,
        4
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "set < int = s ;",
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        9,
        3,
        11
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "set < int = s ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        9,
        3,
        11,
        6
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "set < int = s ;",
        "else else",
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        9,
        3,
        11,
        4
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "set < int = s ;",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        9,
        3,
        6
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "set < int = s ;",
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        9,
        3,
        6,
        4
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "set < int = s ;",
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        9,
        3,
        4
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "set < int = s ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        11
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "while ( cin >> n )",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        11,
        6
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "while ( cin >> n )",
        "else else",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        11,
        4
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "while ( cin >> n )",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        6
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "while ( cin >> n )",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        6,
        4
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "while ( cin >> n )",
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        4
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "could not convert ‘s.std::set<_Key, _Compare, _Alloc>::find<int, std::less<int>, std::allocator<int> >(0)’ from ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ to ‘bool’"
    },
    {
      "mod_line": [
        9,
        11,
        6
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "else else",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "could not convert ‘s.std::set<_Key, _Compare, _Alloc>::find<int, std::less<int>, std::allocator<int> >(0)’ from ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ to ‘bool’"
    },
    {
      "mod_line": [
        9,
        11,
        6,
        4
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "else else",
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        4
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "could not convert ‘s.std::set<_Key, _Compare, _Alloc>::find<int, std::less<int>, std::allocator<int> >(0)’ from ‘std::set<int>::iterator {aka std::_Rb_tree_const_iterator<int>}’ to ‘bool’"
    },
    {
      "mod_line": [
        9,
        6,
        4
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "if ( s . find ( 0 ) )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "set < int = s ;",
        "while ( cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        2,
        11
      ],
      "mod_code": [
        "set < int = s ;",
        "while ( cin >> n )",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        2,
        11,
        6
      ],
      "mod_code": [
        "set < int = s ;",
        "while ( cin >> n )",
        "else else",
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        2,
        11,
        4
      ],
      "mod_code": [
        "set < int = s ;",
        "while ( cin >> n )",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        2,
        6
      ],
      "mod_code": [
        "set < int = s ;",
        "while ( cin >> n )",
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        2,
        6,
        4
      ],
      "mod_code": [
        "set < int = s ;",
        "while ( cin >> n )",
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        2,
        4
      ],
      "mod_code": [
        "set < int = s ;",
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "set < int = s ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        11,
        6
      ],
      "mod_code": [
        "set < int = s ;",
        "else else",
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        11,
        6,
        4
      ],
      "mod_code": [
        "set < int = s ;",
        "else else",
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        11,
        4
      ],
      "mod_code": [
        "set < int = s ;",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "set < int = s ;",
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        6,
        4
      ],
      "mod_code": [
        "set < int = s ;",
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "set < int = s ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        6
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else else",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        6,
        4
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else else",
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        4
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        4
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "else else",
        "cin >> n ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        6,
        4
      ],
      "mod_code": [
        "else else",
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}