{
  "meta": {
    "index": 1786,
    "hitid": "3TC2K6WK9GWUP47V1VW53VMZ1ZN28P",
    "workerid": "A28TIENUWLMMIP",
    "probid": "313A",
    "subid": "41464664"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n and ans be long long ints",
      "code": "long long int n , ans ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read in n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n is less than or equal to 0",
      "code": "if ( n >= 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print n",
      "code": "cout << n << endl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "or else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 7,
      "text": "let m be an int equal to abs ( n )",
      "code": "int m = abs ( n ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "let t be an int equal to m % 10",
      "code": "int t = m % 10 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "m is equal to m / 10",
      "code": "m /= 10 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "let t1 be an int equal to m % 10",
      "code": "int t1 = m % 10 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "m is equal to abs ( n )",
      "code": "m = abs ( n ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if t is greater than t1",
      "code": "if ( t > t1 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "ans is equal to m / 10",
      "code": "ans = m / 10 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else if t is less than or equal to t1",
      "code": "else if ( t <= t1 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "ans is equal to ( m / 100 ) * 10 + t",
      "code": "ans = ( m / 100 ) * 10 + t ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if ans is not equal to 0",
      "code": "if ( ans != 0 )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print _ and ans",
      "code": "cout << \" - \" << ans << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "cout << _ << \" \" << ans << endl ;"
      ],
      "err_line": 18,
      "err_msg": "‘_’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int t1 % 10 ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int m = abs ( n ) ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "cout << _ << ' ' << ans << endl ;"
      ],
      "err_line": 18,
      "err_msg": "‘_’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        18
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "cout << _ << \" \" << ans << endl ;"
      ],
      "err_line": 18,
      "err_msg": "‘_’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        18,
        6
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "cout << _ << \" \" << ans << endl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        18,
        6,
        13
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "cout << _ << \" \" << ans << endl ;",
        "else else",
        "ans /= 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        18,
        6,
        11
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "cout << _ << \" \" << ans << endl ;",
        "else else",
        "int m = abs ( n ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        18,
        6,
        10
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "cout << _ << \" \" << ans << endl ;",
        "else else",
        "int t1 % 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        18,
        13
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "cout << _ << \" \" << ans << endl ;",
        "ans /= 10 ;"
      ],
      "err_line": 18,
      "err_msg": "‘_’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        18,
        13,
        11
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "cout << _ << \" \" << ans << endl ;",
        "ans /= 10 ;",
        "int m = abs ( n ) ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        3,
        18,
        13,
        10
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "cout << _ << \" \" << ans << endl ;",
        "ans /= 10 ;",
        "int t1 % 10 ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        3,
        18,
        11
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "cout << _ << \" \" << ans << endl ;",
        "int m = abs ( n ) ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        3,
        18,
        11,
        10
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "cout << _ << \" \" << ans << endl ;",
        "int m = abs ( n ) ;",
        "int t1 % 10 ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        3,
        18,
        10
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "cout << _ << \" \" << ans << endl ;",
        "int t1 % 10 ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        6,
        13
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "else else",
        "ans /= 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        6,
        13,
        11
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "else else",
        "ans /= 10 ;",
        "int m = abs ( n ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        6,
        13,
        10
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "else else",
        "ans /= 10 ;",
        "int t1 % 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        6,
        11
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "else else",
        "int m = abs ( n ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        6,
        11,
        10
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "else else",
        "int m = abs ( n ) ;",
        "int t1 % 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        6,
        10
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "else else",
        "int t1 % 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        13,
        11
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "ans /= 10 ;",
        "int m = abs ( n ) ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        3,
        13,
        11,
        10
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "ans /= 10 ;",
        "int m = abs ( n ) ;",
        "int t1 % 10 ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        3,
        13,
        10
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "ans /= 10 ;",
        "int t1 % 10 ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "int m = abs ( n ) ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        3,
        11,
        10
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "int m = abs ( n ) ;",
        "int t1 % 10 ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "if ( n <= 0 )",
        "int t1 % 10 ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        18,
        6
      ],
      "mod_code": [
        "cout << _ << \" \" << ans << endl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        6,
        13
      ],
      "mod_code": [
        "cout << _ << \" \" << ans << endl ;",
        "else else",
        "ans /= 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        6,
        13,
        11
      ],
      "mod_code": [
        "cout << _ << \" \" << ans << endl ;",
        "else else",
        "ans /= 10 ;",
        "int m = abs ( n ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        6,
        13,
        10
      ],
      "mod_code": [
        "cout << _ << \" \" << ans << endl ;",
        "else else",
        "ans /= 10 ;",
        "int t1 % 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        6,
        11
      ],
      "mod_code": [
        "cout << _ << \" \" << ans << endl ;",
        "else else",
        "int m = abs ( n ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        6,
        11,
        10
      ],
      "mod_code": [
        "cout << _ << \" \" << ans << endl ;",
        "else else",
        "int m = abs ( n ) ;",
        "int t1 % 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        6,
        10
      ],
      "mod_code": [
        "cout << _ << \" \" << ans << endl ;",
        "else else",
        "int t1 % 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18,
        13
      ],
      "mod_code": [
        "cout << _ << \" \" << ans << endl ;",
        "ans /= 10 ;"
      ],
      "err_line": 18,
      "err_msg": "‘_’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        13,
        11
      ],
      "mod_code": [
        "cout << _ << \" \" << ans << endl ;",
        "ans /= 10 ;",
        "int m = abs ( n ) ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        18,
        13,
        11,
        10
      ],
      "mod_code": [
        "cout << _ << \" \" << ans << endl ;",
        "ans /= 10 ;",
        "int m = abs ( n ) ;",
        "int t1 % 10 ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        18,
        13,
        10
      ],
      "mod_code": [
        "cout << _ << \" \" << ans << endl ;",
        "ans /= 10 ;",
        "int t1 % 10 ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        18,
        11
      ],
      "mod_code": [
        "cout << _ << \" \" << ans << endl ;",
        "int m = abs ( n ) ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        18,
        11,
        10
      ],
      "mod_code": [
        "cout << _ << \" \" << ans << endl ;",
        "int m = abs ( n ) ;",
        "int t1 % 10 ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        18,
        10
      ],
      "mod_code": [
        "cout << _ << \" \" << ans << endl ;",
        "int t1 % 10 ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "else else",
        "ans /= 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        13,
        11
      ],
      "mod_code": [
        "else else",
        "ans /= 10 ;",
        "int m = abs ( n ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        13,
        11,
        10
      ],
      "mod_code": [
        "else else",
        "ans /= 10 ;",
        "int m = abs ( n ) ;",
        "int t1 % 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        13,
        10
      ],
      "mod_code": [
        "else else",
        "ans /= 10 ;",
        "int t1 % 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "else else",
        "int m = abs ( n ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        11,
        10
      ],
      "mod_code": [
        "else else",
        "int m = abs ( n ) ;",
        "int t1 % 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "else else",
        "int t1 % 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "ans /= 10 ;",
        "int m = abs ( n ) ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        13,
        11,
        10
      ],
      "mod_code": [
        "ans /= 10 ;",
        "int m = abs ( n ) ;",
        "int t1 % 10 ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        13,
        10
      ],
      "mod_code": [
        "ans /= 10 ;",
        "int t1 % 10 ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "int m = abs ( n ) ;",
        "int t1 % 10 ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘%’ token"
    }
  ]
}