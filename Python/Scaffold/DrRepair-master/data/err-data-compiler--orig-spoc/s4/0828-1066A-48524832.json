{
  "meta": {
    "index": 828,
    "hitid": "3MVY4USGB6HGJ9064WN272TH2PQSIP",
    "workerid": "A1APYLD4DUK33J",
    "probid": "1066A",
    "subid": "48524832"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare long long array mz size 100005 = { }",
      "code": "long long mz [ 100005 ] = { } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long long array ts size 100005 = { }",
      "code": "long long ts [ 100005 ] = { } ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare long long T",
      "code": "long long T ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read T",
      "code": "cin >> T ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while decrement T is true",
      "code": "while ( T -- )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare long longs L , v , l , r , ans = 0",
      "code": "long long L , v , l , r , ans = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read L , v , l , r",
      "code": "cin >> L >> v >> l >> r ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment ans by L / v",
      "code": "ans += L / v ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if r % v is not 0 , let r be r - r % v",
      "code": "if ( r % v != 0 ) r = r - r % v ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if l % v is not 0 , let l be l + ( v - l % v )",
      "code": "if ( l % v != 0 ) l = l + ( v - l % v ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "decrement ans by ( ( r - l ) / v + 1 )",
      "code": "ans -= ( ( r - l ) / v + 1 ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print ans , newline",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "ans -= ( ( r - l ) / v + 1 ) ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "T >> T ;",
        "ans -= ( ( r - l ) / v + 1 ) ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        11,
        5
      ],
      "mod_code": [
        "T >> T ;",
        "ans -= ( ( r - l ) / v + 1 ) ) ;",
        "while ( -- T )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        11,
        5,
        7
      ],
      "mod_code": [
        "T >> T ;",
        "ans -= ( ( r - l ) / v + 1 ) ) ;",
        "while ( -- T )",
        "cin >> L >> v , l >> r ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        11,
        7
      ],
      "mod_code": [
        "T >> T ;",
        "ans -= ( ( r - l ) / v + 1 ) ) ;",
        "cin >> L >> v , l >> r ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "ans -= ( ( r - l ) / v + 1 ) ) ;",
        "while ( -- T )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        5,
        7
      ],
      "mod_code": [
        "ans -= ( ( r - l ) / v + 1 ) ) ;",
        "while ( -- T )",
        "cin >> L >> v , l >> r ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "ans -= ( ( r - l ) / v + 1 ) ) ;",
        "cin >> L >> v , l >> r ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    }
  ]
}