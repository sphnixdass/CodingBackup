{
  "meta": {
    "index": 412,
    "hitid": "3SU800BH86M9FKGT69NBV52REWPQU3",
    "workerid": "A1APYLD4DUK33J",
    "probid": "996A",
    "subid": "48935717"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant integer MAX with MAX = 100001",
      "code": "const int MAX = 100001 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer arrays An , Bn with An size MAX , Bn size MAX",
      "code": "int An [ MAX ] , Bn [ MAX ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer sum with sum = 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while n is true",
      "code": "while ( n )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if n / 100 is true",
      "code": "if ( n / 100 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment sum by n / 100",
      "code": "sum += n / 100 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "decrement n by n / 100 * 100",
      "code": "n -= n / 100 * 100 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if n / 20 is true",
      "code": "else if ( n / 20 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increment sum by n / 20",
      "code": "sum += n / 20 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "decrement n by n / 20 * 20",
      "code": "n -= n / 20 * 20 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else if n / 10 is true",
      "code": "else if ( n / 10 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increment sum by n / 10",
      "code": "sum += n / 10 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "decrement n by n / 10 * 10",
      "code": "n -= n / 10 * 10 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else if n / 5 is true",
      "code": "else if ( n / 5 )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increment sum by n / 5",
      "code": "sum += n / 5 ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "decrement n by n / 5 * 5",
      "code": "n -= n / 5 * 5 ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 20,
      "text": "increment sum by n",
      "code": "sum += n ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "break loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print sum print newline",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const int MAX = MAX ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 8,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "sum = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        4,
        24
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cout << sum ;"
      ],
      "err_line": 8,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        24,
        19
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cout << sum ;",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        24,
        19,
        0
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cout << sum ;",
        "else else",
        "const int MAX = MAX ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        24,
        19,
        10
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cout << sum ;",
        "else else",
        "else if ( n / 20 == true )"
      ],
      "err_line": 8,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        24,
        19,
        21
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cout << sum ;",
        "else else",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        24,
        0
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cout << sum ;",
        "const int MAX = MAX ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        24,
        0,
        10
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cout << sum ;",
        "const int MAX = MAX ;",
        "else if ( n / 20 == true )"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        24,
        0,
        21
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cout << sum ;",
        "const int MAX = MAX ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        24,
        10
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cout << sum ;",
        "else if ( n / 20 == true )"
      ],
      "err_line": 8,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        24,
        10,
        21
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cout << sum ;",
        "else if ( n / 20 == true )",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        24,
        21
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cout << sum ;",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        19
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        19,
        0
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else else",
        "const int MAX = MAX ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        19,
        0,
        10
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else else",
        "const int MAX = MAX ;",
        "else if ( n / 20 == true )"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        19,
        0,
        21
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else else",
        "const int MAX = MAX ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        19,
        10
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else else",
        "else if ( n / 20 == true )"
      ],
      "err_line": 8,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        19,
        10,
        21
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else else",
        "else if ( n / 20 == true )",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        19,
        21
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else else",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "while ( cin >> n )",
        "const int MAX = MAX ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        0,
        10
      ],
      "mod_code": [
        "while ( cin >> n )",
        "const int MAX = MAX ;",
        "else if ( n / 20 == true )"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        0,
        10,
        21
      ],
      "mod_code": [
        "while ( cin >> n )",
        "const int MAX = MAX ;",
        "else if ( n / 20 == true )",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        0,
        21
      ],
      "mod_code": [
        "while ( cin >> n )",
        "const int MAX = MAX ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else if ( n / 20 == true )"
      ],
      "err_line": 8,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        21
      ],
      "mod_code": [
        "while ( cin >> n )",
        "else if ( n / 20 == true )",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21
      ],
      "mod_code": [
        "while ( cin >> n )",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        19
      ],
      "mod_code": [
        "cout << sum ;",
        "else else"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        24,
        19,
        0
      ],
      "mod_code": [
        "cout << sum ;",
        "else else",
        "const int MAX = MAX ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        24,
        19,
        0,
        10
      ],
      "mod_code": [
        "cout << sum ;",
        "else else",
        "const int MAX = MAX ;",
        "else if ( n / 20 == true )"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        24,
        19,
        0,
        21
      ],
      "mod_code": [
        "cout << sum ;",
        "else else",
        "const int MAX = MAX ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        24,
        19,
        10
      ],
      "mod_code": [
        "cout << sum ;",
        "else else",
        "else if ( n / 20 == true )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        24,
        19,
        10,
        21
      ],
      "mod_code": [
        "cout << sum ;",
        "else else",
        "else if ( n / 20 == true )",
        "break break ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        24,
        19,
        21
      ],
      "mod_code": [
        "cout << sum ;",
        "else else",
        "break break ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        24,
        0
      ],
      "mod_code": [
        "cout << sum ;",
        "const int MAX = MAX ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        24,
        0,
        10
      ],
      "mod_code": [
        "cout << sum ;",
        "const int MAX = MAX ;",
        "else if ( n / 20 == true )"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        24,
        0,
        10,
        21
      ],
      "mod_code": [
        "cout << sum ;",
        "const int MAX = MAX ;",
        "else if ( n / 20 == true )",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        24,
        0,
        21
      ],
      "mod_code": [
        "cout << sum ;",
        "const int MAX = MAX ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        24,
        10,
        21
      ],
      "mod_code": [
        "cout << sum ;",
        "else if ( n / 20 == true )",
        "break break ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        24,
        21
      ],
      "mod_code": [
        "cout << sum ;",
        "break break ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        19,
        0
      ],
      "mod_code": [
        "else else",
        "const int MAX = MAX ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        19,
        0,
        10
      ],
      "mod_code": [
        "else else",
        "const int MAX = MAX ;",
        "else if ( n / 20 == true )"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        19,
        0,
        10,
        21
      ],
      "mod_code": [
        "else else",
        "const int MAX = MAX ;",
        "else if ( n / 20 == true )",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        19,
        0,
        21
      ],
      "mod_code": [
        "else else",
        "const int MAX = MAX ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        19,
        10
      ],
      "mod_code": [
        "else else",
        "else if ( n / 20 == true )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        10,
        21
      ],
      "mod_code": [
        "else else",
        "else if ( n / 20 == true )",
        "break break ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19,
        21
      ],
      "mod_code": [
        "else else",
        "break break ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "const int MAX = MAX ;",
        "else if ( n / 20 == true )"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        10,
        21
      ],
      "mod_code": [
        "const int MAX = MAX ;",
        "else if ( n / 20 == true )",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        21
      ],
      "mod_code": [
        "const int MAX = MAX ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        10,
        21
      ],
      "mod_code": [
        "else if ( n / 20 == true )",
        "break break ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘break’"
    }
  ]
}