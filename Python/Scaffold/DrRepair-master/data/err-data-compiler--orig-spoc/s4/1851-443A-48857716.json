{
  "meta": {
    "index": 1851,
    "hitid": "3P520RYKCH0KMYXVMHZ8XU70HD85U0",
    "workerid": "A7Z6XB4WDJYSP",
    "probid": "443A",
    "subid": "48857716"
  },
  "lines": [
    {
      "line": 0,
      "text": "arr = array of integers of length 27000",
      "code": "int arr [ 27000 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string s",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "extract readed characters and put in on s until the \\ n character",
      "code": "getline ( cin , s , ' \\n ' ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer i with i = 1",
      "code": "int i = 1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while s [ i ] is not }",
      "code": "while ( s [ i ] != ' } ' )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if s [ i ] - a is greater or equal to 0 increment arr [ s [ i ] - a",
      "code": "if ( s [ i ] - ' a ' >= 0 ) arr [ s [ i ] - ' a ' ] ++ ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create integer r with r = 0",
      "code": "int r = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to 27 exclusive",
      "code": "for ( int i = ( 0 ) ; i < ( 27 ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if arr [ i ] increment r",
      "code": "if ( arr [ i ] ) r ++ ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print r and new line",
      "code": "cout << r << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin . getline ( cin , s ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::basic_istream<char>::getline(std::istream&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( s [ i ] != ' } }"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( s [ i ] - a >= 0 ) arr [ s [ i ] - a ;"
      ],
      "err_line": 6,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin . ignore ( cin , s ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::basic_istream<char>::ignore(std::istream&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "i = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( s [ i ] == ' } }"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( s [ i ] - a >= 0 ) { arr [ s [ i ] - a ; }"
      ],
      "err_line": 6,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "r = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "cin . getline ( cin , s ) ;",
        "while ( s [ i ] != ' } }"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "cin . getline ( cin , s ) ;",
        "while ( s [ i ] != ' } }",
        "if ( s [ i ] - a >= 0 ) arr [ s [ i ] - a ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        4
      ],
      "mod_code": [
        "cin . getline ( cin , s ) ;",
        "while ( s [ i ] != ' } }",
        "if ( s [ i ] - a >= 0 ) arr [ s [ i ] - a ;",
        "i = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        5,
        4
      ],
      "mod_code": [
        "cin . getline ( cin , s ) ;",
        "while ( s [ i ] != ' } }",
        "i = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "cin . getline ( cin , s ) ;",
        "if ( s [ i ] - a >= 0 ) arr [ s [ i ] - a ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::basic_istream<char>::getline(std::istream&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        3,
        6,
        5
      ],
      "mod_code": [
        "cin . getline ( cin , s ) ;",
        "if ( s [ i ] - a >= 0 ) arr [ s [ i ] - a ;",
        "while ( s [ i ] == ' } }"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        6,
        5,
        4
      ],
      "mod_code": [
        "cin . getline ( cin , s ) ;",
        "if ( s [ i ] - a >= 0 ) arr [ s [ i ] - a ;",
        "while ( s [ i ] == ' } }",
        "i = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        6,
        4
      ],
      "mod_code": [
        "cin . getline ( cin , s ) ;",
        "if ( s [ i ] - a >= 0 ) arr [ s [ i ] - a ;",
        "i = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::basic_istream<char>::getline(std::istream&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "cin . getline ( cin , s ) ;",
        "while ( s [ i ] == ' } }"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        5,
        4
      ],
      "mod_code": [
        "cin . getline ( cin , s ) ;",
        "while ( s [ i ] == ' } }",
        "i = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "cin . getline ( cin , s ) ;",
        "i = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::basic_istream<char>::getline(std::istream&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "while ( s [ i ] != ' } }",
        "if ( s [ i ] - a >= 0 ) arr [ s [ i ] - a ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        6,
        4
      ],
      "mod_code": [
        "while ( s [ i ] != ' } }",
        "if ( s [ i ] - a >= 0 ) arr [ s [ i ] - a ;",
        "i = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        6,
        4,
        3
      ],
      "mod_code": [
        "while ( s [ i ] != ' } }",
        "if ( s [ i ] - a >= 0 ) arr [ s [ i ] - a ;",
        "i = 1 ;",
        "cin . ignore ( cin , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "while ( s [ i ] != ' } }",
        "if ( s [ i ] - a >= 0 ) arr [ s [ i ] - a ;",
        "cin . ignore ( cin , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "while ( s [ i ] != ' } }",
        "i = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        4,
        3
      ],
      "mod_code": [
        "while ( s [ i ] != ' } }",
        "i = 1 ;",
        "cin . ignore ( cin , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "while ( s [ i ] != ' } }",
        "cin . ignore ( cin , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "if ( s [ i ] - a >= 0 ) arr [ s [ i ] - a ;",
        "while ( s [ i ] == ' } }"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        5,
        4
      ],
      "mod_code": [
        "if ( s [ i ] - a >= 0 ) arr [ s [ i ] - a ;",
        "while ( s [ i ] == ' } }",
        "i = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        5,
        4,
        3
      ],
      "mod_code": [
        "if ( s [ i ] - a >= 0 ) arr [ s [ i ] - a ;",
        "while ( s [ i ] == ' } }",
        "i = 1 ;",
        "cin . ignore ( cin , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        5,
        3
      ],
      "mod_code": [
        "if ( s [ i ] - a >= 0 ) arr [ s [ i ] - a ;",
        "while ( s [ i ] == ' } }",
        "cin . ignore ( cin , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "if ( s [ i ] - a >= 0 ) arr [ s [ i ] - a ;",
        "i = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        3
      ],
      "mod_code": [
        "if ( s [ i ] - a >= 0 ) arr [ s [ i ] - a ;",
        "i = 1 ;",
        "cin . ignore ( cin , s ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::basic_istream<char>::ignore(std::istream&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "if ( s [ i ] - a >= 0 ) arr [ s [ i ] - a ;",
        "cin . ignore ( cin , s ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::basic_istream<char>::ignore(std::istream&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "while ( s [ i ] == ' } }",
        "i = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        4,
        3
      ],
      "mod_code": [
        "while ( s [ i ] == ' } }",
        "i = 1 ;",
        "cin . ignore ( cin , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "while ( s [ i ] == ' } }",
        "cin . ignore ( cin , s ) ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "i = 1 ;",
        "cin . ignore ( cin , s ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::basic_istream<char>::ignore(std::istream&, std::__cxx11::string&)’"
    }
  ]
}