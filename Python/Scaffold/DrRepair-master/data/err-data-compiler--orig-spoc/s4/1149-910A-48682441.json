{
  "meta": {
    "index": 1149,
    "hitid": "31ODACBENU9T07OPH4SBG4K3SCASQK",
    "workerid": "AIWEXPJAU66D9",
    "probid": "910A",
    "subid": "48682441"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integer variables n and m",
      "code": "int n , m ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a be integer array with size 101",
      "code": "int a [ 101 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let k be boolean array with size 101",
      "code": "bool k [ 101 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "call memset with arguments a , 0x3f and sizeof ( a )",
      "code": "memset ( a , 0x3f , sizeof ( a ) ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read character from input",
      "code": "getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for integer i = 1 to n inclusive k [ i ] = getchar ( ) - ' 0 '",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { k [ i ] = getchar ( ) - ' 0 ' ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if k [ 1 ] or k [ n ] is true",
      "code": "if ( ! k [ 1 ] || ! k [ n ] )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "assign value of 0 to a [ 1 ]",
      "code": "a [ 1 ] = 0 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if k [ i ] is true",
      "code": "if ( k [ i ] )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "for integer j = i + 1 to i + m inclusive",
      "code": "for ( int j = i + 1 ; j <= i + m ; j ++ )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if k [ j ] is true , set a [ j ] to min ( a [ j ] , a [ i ] + 1 )",
      "code": "if ( k [ j ] ) { a [ j ] = min ( a [ j ] , a [ i ] + 1 ) ; }",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if a [ n ] = 1061109567",
      "code": "if ( a [ n ] == 1061109567 )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print a [ n ]",
      "code": "cout << a [ n ] << endl ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool k , k ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "memset ( a , a , sizeof ( a ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘bool [101]’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "memset ( a , a , sizeof ( a ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4,
        13
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "memset ( a , a , sizeof ( a ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4,
        13,
        2
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "memset ( a , a , sizeof ( a ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "bool k , k ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        8,
        4,
        13,
        24
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "memset ( a , a , sizeof ( a ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "cout << a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4,
        13,
        5
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "memset ( a , a , sizeof ( a ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4,
        2
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "memset ( a , a , sizeof ( a ) ) ;",
        "bool k , k ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        8,
        4,
        2,
        24
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "memset ( a , a , sizeof ( a ) ) ;",
        "bool k , k ;",
        "cout << a [ n ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        8,
        4,
        2,
        5
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "memset ( a , a , sizeof ( a ) ) ;",
        "bool k , k ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        8,
        4,
        24
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "memset ( a , a , sizeof ( a ) ) ;",
        "cout << a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4,
        24,
        5
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "memset ( a , a , sizeof ( a ) ) ;",
        "cout << a [ n ] ;",
        "cin >> n >> k ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4,
        5
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "memset ( a , a , sizeof ( a ) ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        2
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "bool k , k ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        8,
        13,
        2,
        24
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "bool k , k ;",
        "cout << a [ n ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        8,
        13,
        2,
        5
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "bool k , k ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        8,
        13,
        24
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "cout << a [ n ] ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        24,
        5
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "cout << a [ n ] ;",
        "cin >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘bool [101]’)"
    },
    {
      "mod_line": [
        8,
        13,
        5
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘bool [101]’)"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "bool k , k ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        8,
        2,
        24
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "bool k , k ;",
        "cout << a [ n ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        8,
        2,
        24,
        5
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "bool k , k ;",
        "cout << a [ n ] ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        8,
        2,
        5
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "bool k , k ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        8,
        24,
        5
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "cout << a [ n ] ;",
        "cin >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘bool [101]’)"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "if ( k [ 1 ] || k [ n ] )",
        "cin >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘bool [101]’)"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "memset ( a , a , sizeof ( a ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        2
      ],
      "mod_code": [
        "memset ( a , a , sizeof ( a ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "bool k , k ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        4,
        13,
        2,
        24
      ],
      "mod_code": [
        "memset ( a , a , sizeof ( a ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "bool k , k ;",
        "cout << a [ n ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        4,
        13,
        2,
        5
      ],
      "mod_code": [
        "memset ( a , a , sizeof ( a ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "bool k , k ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        4,
        13,
        24
      ],
      "mod_code": [
        "memset ( a , a , sizeof ( a ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "cout << a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        24,
        5
      ],
      "mod_code": [
        "memset ( a , a , sizeof ( a ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "cout << a [ n ] ;",
        "cin >> n >> k ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        5
      ],
      "mod_code": [
        "memset ( a , a , sizeof ( a ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "memset ( a , a , sizeof ( a ) ) ;",
        "bool k , k ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        4,
        2,
        24
      ],
      "mod_code": [
        "memset ( a , a , sizeof ( a ) ) ;",
        "bool k , k ;",
        "cout << a [ n ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        4,
        2,
        24,
        5
      ],
      "mod_code": [
        "memset ( a , a , sizeof ( a ) ) ;",
        "bool k , k ;",
        "cout << a [ n ] ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        4,
        2,
        5
      ],
      "mod_code": [
        "memset ( a , a , sizeof ( a ) ) ;",
        "bool k , k ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        4,
        24
      ],
      "mod_code": [
        "memset ( a , a , sizeof ( a ) ) ;",
        "cout << a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        24,
        5
      ],
      "mod_code": [
        "memset ( a , a , sizeof ( a ) ) ;",
        "cout << a [ n ] ;",
        "cin >> n >> k ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "memset ( a , a , sizeof ( a ) ) ;",
        "cin >> n >> k ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "bool k , k ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        13,
        2,
        24
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "bool k , k ;",
        "cout << a [ n ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        13,
        2,
        24,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "bool k , k ;",
        "cout << a [ n ] ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        13,
        2,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "bool k , k ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        13,
        24
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "cout << a [ n ] ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        24,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "cout << a [ n ] ;",
        "cin >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘bool [101]’)"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘bool [101]’)"
    },
    {
      "mod_line": [
        2,
        24
      ],
      "mod_code": [
        "bool k , k ;",
        "cout << a [ n ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        2,
        24,
        5
      ],
      "mod_code": [
        "bool k , k ;",
        "cout << a [ n ] ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "bool k , k ;",
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘bool k’"
    },
    {
      "mod_line": [
        24,
        5
      ],
      "mod_code": [
        "cout << a [ n ] ;",
        "cin >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘bool [101]’)"
    }
  ]
}