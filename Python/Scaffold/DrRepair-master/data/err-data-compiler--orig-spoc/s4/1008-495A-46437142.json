{
  "meta": {
    "index": 1008,
    "hitid": "3FTID4TN8LSF5WKLO5C4H49A0EHYLO",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "495A",
    "subid": "46437142"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "c1 , c2 = integers with c1 = 0 , c2 = 0",
      "code": "int c1 = 0 , c2 = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if ( s [ 0 ] is 0 )",
      "code": "if ( s [ 0 ] == ' 0 ' )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "c1 = c1 + 2",
      "code": "c1 += 2 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else if ( s [ 0 ] is 1 )",
      "code": "else if ( s [ 0 ] == ' 1 ' )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "c1 = c1 + 7",
      "code": "c1 += 7 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else if ( s [ 0 ] is 2 )",
      "code": "else if ( s [ 0 ] == ' 2 ' )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "c1 = c1 + 2",
      "code": "c1 += 2 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else if ( s [ 0 ] is 3 )",
      "code": "else if ( s [ 0 ] == ' 3 ' )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "c1 = c1 + 3",
      "code": "c1 += 3 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else if ( s [ 0 ] is 4 )",
      "code": "else if ( s [ 0 ] == ' 4 ' )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "c1 = c1 + 3",
      "code": "c1 += 3 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "else if ( s [ 0 ] is 5 )",
      "code": "else if ( s [ 0 ] == ' 5 ' )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "c1 = c1 + 4",
      "code": "c1 += 4 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else if ( s [ 0 ] is 6 )",
      "code": "else if ( s [ 0 ] == ' 6 ' )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "c1 = c1 + 2",
      "code": "c1 += 2 ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "else if ( s [ 0 ] is 7 )",
      "code": "else if ( s [ 0 ] == ' 7 ' )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "c1 = c1 + 5",
      "code": "c1 += 5 ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else if ( s [ 0 ] is 8 )",
      "code": "else if ( s [ 0 ] == ' 8 ' )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "c1 = c1 + 1",
      "code": "c1 += 1 ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "else if ( s [ 0 ] is 9 )",
      "code": "else if ( s [ 0 ] == ' 9 ' )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "c1 = c1 + 2",
      "code": "c1 += 2 ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "if ( s [ 1 ] is 0 )",
      "code": "if ( s [ 1 ] == ' 0 ' )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "c2 = c2 + 2",
      "code": "c2 += 2 ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "else if ( s [ 1 ] is 1 )",
      "code": "else if ( s [ 1 ] == ' 1 ' )",
      "indent": 1
    },
    {
      "line": 27,
      "text": "c2 = c2 + 7",
      "code": "c2 += 7 ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "else if ( s [ 1 ] is 2 )",
      "code": "else if ( s [ 1 ] == ' 2 ' )",
      "indent": 1
    },
    {
      "line": 29,
      "text": "c2 = c2 + 2",
      "code": "c2 += 2 ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "else if ( s [ 1 ] is 3 )",
      "code": "else if ( s [ 1 ] == ' 3 ' )",
      "indent": 1
    },
    {
      "line": 31,
      "text": "c2 = c2 + 3",
      "code": "c2 += 3 ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "else if ( s [ 1 ] is 4 )",
      "code": "else if ( s [ 1 ] == ' 4 ' )",
      "indent": 1
    },
    {
      "line": 33,
      "text": "c2 = c2 + 3",
      "code": "c2 += 3 ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "else if ( s [ 1 ] is 5 )",
      "code": "else if ( s [ 1 ] == ' 5 ' )",
      "indent": 1
    },
    {
      "line": 35,
      "text": "c2 = c2 + 4",
      "code": "c2 += 4 ;",
      "indent": 2
    },
    {
      "line": 36,
      "text": "else if ( s [ 1 ] is 6 )",
      "code": "else if ( s [ 1 ] == ' 6 ' )",
      "indent": 1
    },
    {
      "line": 37,
      "text": "c2 = c2 + 2",
      "code": "c2 += 2 ;",
      "indent": 2
    },
    {
      "line": 38,
      "text": "else if ( s [ 1 ] is 7 )",
      "code": "else if ( s [ 1 ] == ' 7 ' )",
      "indent": 1
    },
    {
      "line": 39,
      "text": "c2 = c2 + 5",
      "code": "c2 += 5 ;",
      "indent": 2
    },
    {
      "line": 40,
      "text": "else if ( s [ 1 ] is 8 )",
      "code": "else if ( s [ 1 ] == ' 8 ' )",
      "indent": 1
    },
    {
      "line": 41,
      "text": "c2 = c2 + 1",
      "code": "c2 += 1 ;",
      "indent": 2
    },
    {
      "line": 42,
      "text": "else if ( s [ 1 ] is 9 )",
      "code": "else if ( s [ 1 ] == ' 9 ' )",
      "indent": 1
    },
    {
      "line": 43,
      "text": "c2 = c2 + 2",
      "code": "c2 += 2 ;",
      "indent": 2
    },
    {
      "line": 44,
      "text": "print c1 * c2",
      "code": "cout << c1 * c2 << endl ;",
      "indent": 1
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        8,
        24,
        30,
        3
      ],
      "mod_code": [
        "else if ( s [ 0 ] == 2 )",
        "if ( s [ 1 ] == 0 )",
        "else if ( s [ 1 ] == 3 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        8,
        24,
        40,
        3
      ],
      "mod_code": [
        "else if ( s [ 0 ] == 2 )",
        "if ( s [ 1 ] == 0 )",
        "else if ( s [ 1 ] == 8 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        8,
        24,
        3
      ],
      "mod_code": [
        "else if ( s [ 0 ] == 2 )",
        "if ( s [ 1 ] == 0 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        8,
        24,
        3,
        4
      ],
      "mod_code": [
        "else if ( s [ 0 ] == 2 )",
        "if ( s [ 1 ] == 0 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;",
        "if ( s [ 0 ] == 0 )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        8,
        30,
        40,
        3
      ],
      "mod_code": [
        "else if ( s [ 0 ] == 2 )",
        "else if ( s [ 1 ] == 3 )",
        "else if ( s [ 1 ] == 8 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        8,
        30,
        3
      ],
      "mod_code": [
        "else if ( s [ 0 ] == 2 )",
        "else if ( s [ 1 ] == 3 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        8,
        30,
        3,
        4
      ],
      "mod_code": [
        "else if ( s [ 0 ] == 2 )",
        "else if ( s [ 1 ] == 3 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;",
        "if ( s [ 0 ] == 0 )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        8,
        40,
        3
      ],
      "mod_code": [
        "else if ( s [ 0 ] == 2 )",
        "else if ( s [ 1 ] == 8 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        8,
        40,
        3,
        4
      ],
      "mod_code": [
        "else if ( s [ 0 ] == 2 )",
        "else if ( s [ 1 ] == 8 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;",
        "if ( s [ 0 ] == 0 )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "else if ( s [ 0 ] == 2 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        8,
        3,
        4
      ],
      "mod_code": [
        "else if ( s [ 0 ] == 2 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;",
        "if ( s [ 0 ] == 0 )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        24,
        30,
        40,
        3
      ],
      "mod_code": [
        "if ( s [ 1 ] == 0 )",
        "else if ( s [ 1 ] == 3 )",
        "else if ( s [ 1 ] == 8 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        24,
        30,
        3
      ],
      "mod_code": [
        "if ( s [ 1 ] == 0 )",
        "else if ( s [ 1 ] == 3 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        24,
        30,
        3,
        4
      ],
      "mod_code": [
        "if ( s [ 1 ] == 0 )",
        "else if ( s [ 1 ] == 3 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;",
        "if ( s [ 0 ] == 0 )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        24,
        40,
        3
      ],
      "mod_code": [
        "if ( s [ 1 ] == 0 )",
        "else if ( s [ 1 ] == 8 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        24,
        40,
        3,
        4
      ],
      "mod_code": [
        "if ( s [ 1 ] == 0 )",
        "else if ( s [ 1 ] == 8 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;",
        "if ( s [ 0 ] == 0 )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        24,
        3
      ],
      "mod_code": [
        "if ( s [ 1 ] == 0 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        24,
        3,
        4
      ],
      "mod_code": [
        "if ( s [ 1 ] == 0 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;",
        "if ( s [ 0 ] == 0 )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        30,
        40,
        3
      ],
      "mod_code": [
        "else if ( s [ 1 ] == 3 )",
        "else if ( s [ 1 ] == 8 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        30,
        40,
        3,
        4
      ],
      "mod_code": [
        "else if ( s [ 1 ] == 3 )",
        "else if ( s [ 1 ] == 8 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;",
        "if ( s [ 0 ] == 0 )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        30,
        3
      ],
      "mod_code": [
        "else if ( s [ 1 ] == 3 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        30,
        3,
        4
      ],
      "mod_code": [
        "else if ( s [ 1 ] == 3 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;",
        "if ( s [ 0 ] == 0 )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        40,
        3
      ],
      "mod_code": [
        "else if ( s [ 1 ] == 8 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        40,
        3,
        4
      ],
      "mod_code": [
        "else if ( s [ 1 ] == 8 )",
        "int c1 = 0 , c2 = 0 , c2 = 0 ;",
        "if ( s [ 0 ] == 0 )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int c1 = 0 , c2 = 0 , c2 = 0 ;",
        "if ( s [ 0 ] == 0 )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int c2’"
    }
  ]
}