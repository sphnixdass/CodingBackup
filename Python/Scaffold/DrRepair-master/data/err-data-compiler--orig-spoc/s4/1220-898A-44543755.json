{
  "meta": {
    "index": 1220,
    "hitid": "3GL25Y6843OAB9CWJLRHY3HQYD9MX4",
    "workerid": "A2M1CVZZJAN4T4",
    "probid": "898A",
    "subid": "44543755"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , m and ans be integers",
      "code": "int n , m , ans ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n while it is not 0",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set m to n modulo 10",
      "code": "m = n % 10 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "if m < = 5",
      "code": "if ( m <= 5 )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "assign n / 10 * 10 to ans",
      "code": "ans = n / 10 * 10 ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 7,
      "text": "assign ( n / 10 + 1 ) * 10 to ans",
      "code": "ans = ( n / 10 + 1 ) * 10 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "if ( m < 5 )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        6,
        5
      ],
      "mod_code": [
        "if ( m < 5 )",
        "else else",
        "ans -= 10 * 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        6,
        5,
        2
      ],
      "mod_code": [
        "if ( m < 5 )",
        "else else",
        "ans -= 10 * 10 ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        6,
        2
      ],
      "mod_code": [
        "if ( m < 5 )",
        "else else",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "else else",
        "ans -= 10 * 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5,
        2
      ],
      "mod_code": [
        "else else",
        "ans -= 10 * 10 ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "else else",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}