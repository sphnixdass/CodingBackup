{
  "meta": {
    "index": 1862,
    "hitid": "3YLTXLH3DF0JAM9U6X1NCLNRE56PH4",
    "workerid": "AIWEXPJAU66D9",
    "probid": "443A",
    "subid": "41892507"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let s be string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "set = set of characters",
      "code": "set < char > set ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read line and store it into s",
      "code": "getline ( cin , s ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to length of s exclusive",
      "code": "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if s [ i ] > = ' a ' & & s [ i ] < = ' z ' insert s [ i ] into set",
      "code": "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' ) { set . insert ( s [ i ] ) ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print length of set and a new line",
      "code": "cout << set . size ( ) << endl ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout << set << endl ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::ostream {aka std::basic_ostream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "set < char > vetor ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘.’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "cout << set << endl ;",
        "set < char > vetor ;"
      ],
      "err_line": 5,
      "err_msg": "missing template arguments before ‘.’ token"
    },
    {
      "mod_line": [
        7,
        2,
        3
      ],
      "mod_code": [
        "cout << set << endl ;",
        "set < char > vetor ;",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "cout << set << endl ;",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "set < char > vetor ;",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}