{
  "meta": {
    "index": 1881,
    "hitid": "3YCT0L9OMM38XABX1C0UCAPYOOPSNA",
    "workerid": "AIWEXPJAU66D9",
    "probid": "514A",
    "subid": "48872345"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create strings s and output",
      "code": "string s , output ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read from the input to s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "start for loop from i = 0 to length of s exclusive",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare new integer temp with value s [ i ] - 48",
      "code": "int temp = s [ i ] - 48 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "create new character called tempChar = ' \\ 0 '",
      "code": "char tempChar = ' \\0 ' ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if ( i = 0 and temp = 9 ) or temp < 5",
      "code": "if ( ( i == 0 && temp == 9 ) || temp < 5 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "add new element = s [ i ] after the last element of output",
      "code": "output . push_back ( s [ i ] ) ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "assign ( 9 - temp ) + 48 to tempChar",
      "code": "tempChar = ( 9 - temp ) + 48 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "push tempChar to the variable output",
      "code": "output . push_back ( tempChar ) ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print output to the stdout",
      "code": "cout << output << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s , output << ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "output . push ( s [ i ] ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘push’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "output . push ( tempChar ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘push’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "s >> s ;",
        "string s , output << ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        1,
        6
      ],
      "mod_code": [
        "s >> s ;",
        "string s , output << ;",
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        1,
        6,
        7
      ],
      "mod_code": [
        "s >> s ;",
        "string s , output << ;",
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "output . push ( s [ i ] ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        1,
        6,
        8
      ],
      "mod_code": [
        "s >> s ;",
        "string s , output << ;",
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "else ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        1,
        6,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "string s , output << ;",
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        1,
        7
      ],
      "mod_code": [
        "s >> s ;",
        "string s , output << ;",
        "output . push ( s [ i ] ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        1,
        7,
        8
      ],
      "mod_code": [
        "s >> s ;",
        "string s , output << ;",
        "output . push ( s [ i ] ) ;",
        "else ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        1,
        7,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "string s , output << ;",
        "output . push ( s [ i ] ) ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        1,
        8
      ],
      "mod_code": [
        "s >> s ;",
        "string s , output << ;",
        "else ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        1,
        8,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "string s , output << ;",
        "else ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        1,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "string s , output << ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        6,
        7
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "output . push ( s [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        6,
        7,
        8
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "output . push ( s [ i ] ) ;",
        "else ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        6,
        7,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "output . push ( s [ i ] ) ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        6,
        8
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "else ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        6,
        8,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "else ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        6,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "s >> s ;",
        "output . push ( s [ i ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        7,
        8
      ],
      "mod_code": [
        "s >> s ;",
        "output . push ( s [ i ] ) ;",
        "else ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "output . push ( s [ i ] ) ;",
        "else ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        7,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "output . push ( s [ i ] ) ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "s >> s ;",
        "else ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        8,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "else ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "string s , output << ;",
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        6,
        7
      ],
      "mod_code": [
        "string s , output << ;",
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "output . push ( s [ i ] ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        6,
        7,
        8
      ],
      "mod_code": [
        "string s , output << ;",
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "output . push ( s [ i ] ) ;",
        "else ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        6,
        7,
        10
      ],
      "mod_code": [
        "string s , output << ;",
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "output . push ( s [ i ] ) ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        6,
        8
      ],
      "mod_code": [
        "string s , output << ;",
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "else ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        6,
        8,
        10
      ],
      "mod_code": [
        "string s , output << ;",
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "else ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        6,
        10
      ],
      "mod_code": [
        "string s , output << ;",
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "string s , output << ;",
        "output . push ( s [ i ] ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        7,
        8
      ],
      "mod_code": [
        "string s , output << ;",
        "output . push ( s [ i ] ) ;",
        "else ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        7,
        8,
        10
      ],
      "mod_code": [
        "string s , output << ;",
        "output . push ( s [ i ] ) ;",
        "else ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        7,
        10
      ],
      "mod_code": [
        "string s , output << ;",
        "output . push ( s [ i ] ) ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "string s , output << ;",
        "else ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        8,
        10
      ],
      "mod_code": [
        "string s , output << ;",
        "else ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "string s , output << ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "output . push ( s [ i ] ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘push’"
    },
    {
      "mod_line": [
        6,
        7,
        8
      ],
      "mod_code": [
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "output . push ( s [ i ] ) ;",
        "else ;"
      ],
      "err_line": 7,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘push’"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        10
      ],
      "mod_code": [
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "output . push ( s [ i ] ) ;",
        "else ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘push’"
    },
    {
      "mod_line": [
        6,
        7,
        10
      ],
      "mod_code": [
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "output . push ( s [ i ] ) ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘push’"
    },
    {
      "mod_line": [
        6,
        8,
        10
      ],
      "mod_code": [
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "else ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘push’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "if ( ( temp == 0 && temp == 9 ) || ( temp < 5 ) )",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘push’"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "output . push ( s [ i ] ) ;",
        "else ;"
      ],
      "err_line": 7,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘push’"
    },
    {
      "mod_line": [
        7,
        8,
        10
      ],
      "mod_code": [
        "output . push ( s [ i ] ) ;",
        "else ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘push’"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "output . push ( s [ i ] ) ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘push’"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "else ;",
        "output . push ( tempChar ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘push’"
    }
  ]
}