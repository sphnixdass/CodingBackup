{
  "meta": {
    "index": 1226,
    "hitid": "3QX22DUVOOBI7K71J6QZAIK5I21MV1",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "898A",
    "subid": "44252401"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int n , result and c",
      "code": "int n , result , c ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "c = n mod 10",
      "code": "c = n % 10 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if c < = 5",
      "code": "if ( c <= 5 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "assign n - c to result",
      "code": "result = n - c ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set result = n + 10 - c",
      "code": "result = n + ( 10 - c ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print result",
      "code": "cout << result << endl ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , result ;"
      ],
      "err_line": 3,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "else else",
        "cout << result ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        9,
        5
      ],
      "mod_code": [
        "else else",
        "cout << result ;",
        "result -= c ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        9,
        5,
        7
      ],
      "mod_code": [
        "else else",
        "cout << result ;",
        "result -= c ;",
        "int result = n + 10 - c ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        9,
        5,
        3
      ],
      "mod_code": [
        "else else",
        "cout << result ;",
        "result -= c ;",
        "c /= 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        9,
        5,
        4
      ],
      "mod_code": [
        "else else",
        "cout << result ;",
        "result -= c ;",
        "if ( c <= ' 5 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        9,
        7
      ],
      "mod_code": [
        "else else",
        "cout << result ;",
        "int result = n + 10 - c ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        9,
        7,
        3
      ],
      "mod_code": [
        "else else",
        "cout << result ;",
        "int result = n + 10 - c ;",
        "c /= 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        9,
        7,
        4
      ],
      "mod_code": [
        "else else",
        "cout << result ;",
        "int result = n + 10 - c ;",
        "if ( c <= ' 5 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        9,
        3
      ],
      "mod_code": [
        "else else",
        "cout << result ;",
        "c /= 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        9,
        3,
        4
      ],
      "mod_code": [
        "else else",
        "cout << result ;",
        "c /= 10 ;",
        "if ( c <= ' 5 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        9,
        4
      ],
      "mod_code": [
        "else else",
        "cout << result ;",
        "if ( c <= ' 5 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "else else",
        "result -= c ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5,
        7
      ],
      "mod_code": [
        "else else",
        "result -= c ;",
        "int result = n + 10 - c ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5,
        7,
        3
      ],
      "mod_code": [
        "else else",
        "result -= c ;",
        "int result = n + 10 - c ;",
        "c /= 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5,
        7,
        4
      ],
      "mod_code": [
        "else else",
        "result -= c ;",
        "int result = n + 10 - c ;",
        "if ( c <= ' 5 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5,
        3
      ],
      "mod_code": [
        "else else",
        "result -= c ;",
        "c /= 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5,
        3,
        4
      ],
      "mod_code": [
        "else else",
        "result -= c ;",
        "c /= 10 ;",
        "if ( c <= ' 5 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5,
        4
      ],
      "mod_code": [
        "else else",
        "result -= c ;",
        "if ( c <= ' 5 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "else else",
        "int result = n + 10 - c ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        7,
        3
      ],
      "mod_code": [
        "else else",
        "int result = n + 10 - c ;",
        "c /= 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        7,
        3,
        4
      ],
      "mod_code": [
        "else else",
        "int result = n + 10 - c ;",
        "c /= 10 ;",
        "if ( c <= ' 5 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        7,
        4
      ],
      "mod_code": [
        "else else",
        "int result = n + 10 - c ;",
        "if ( c <= ' 5 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "else else",
        "c /= 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        3,
        4
      ],
      "mod_code": [
        "else else",
        "c /= 10 ;",
        "if ( c <= ' 5 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "else else",
        "if ( c <= ' 5 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}