{
  "meta": {
    "index": 215,
    "hitid": "3NKW03WTLM1M7O5Y192CDTNOYP5WQ2",
    "workerid": "A1APYLD4DUK33J",
    "probid": "793A",
    "subid": "41632334"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , k , i , j",
      "code": "int n , k , i , j ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n read k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer a with size n",
      "code": "int a [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive , read a [ i ]",
      "code": "for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create long long integer 2000000000",
      "code": "long long int min = 2000000000 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if a [ i ] is less than min , set min to a [ i ]",
      "code": "if ( a [ i ] < min ) { min = a [ i ] ; }",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create integer flag with flag = 0",
      "code": "int flag = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "create long long integers count with count = 0",
      "code": "long long int count = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "set count to count + ( absolute value of ( a [ i ] - min ) / k )",
      "code": "count = count + ( abs ( a [ i ] - min ) / k ) ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if absolute value of ( a [ i ] - min ) % k is not 0",
      "code": "if ( abs ( a [ i ] - min ) % k != 0 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set flag to 1",
      "code": "flag = 1 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "break loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if flag is 0",
      "code": "if ( flag == 0 )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print count print newline",
      "code": "cout << count << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else if flag is 1",
      "code": "else if ( flag == 1 )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print \" - 1 \" print newline",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "long long int 2000000000 ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "long long 2000000000 ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        5,
        19
      ],
      "mod_code": [
        "long long int 2000000000 ;",
        "cout << count ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        19,
        14
      ],
      "mod_code": [
        "long long int 2000000000 ;",
        "cout << count ;",
        "int flag = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        19,
        14,
        21
      ],
      "mod_code": [
        "long long int 2000000000 ;",
        "cout << count ;",
        "int flag = 1 ;",
        "cout << \" - \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        19,
        14,
        2
      ],
      "mod_code": [
        "long long int 2000000000 ;",
        "cout << count ;",
        "int flag = 1 ;",
        "n >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        19,
        21
      ],
      "mod_code": [
        "long long int 2000000000 ;",
        "cout << count ;",
        "cout << \" - \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        19,
        21,
        2
      ],
      "mod_code": [
        "long long int 2000000000 ;",
        "cout << count ;",
        "cout << \" - \" << endl ;",
        "n >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        19,
        2
      ],
      "mod_code": [
        "long long int 2000000000 ;",
        "cout << count ;",
        "n >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "long long int 2000000000 ;",
        "int flag = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        14,
        21
      ],
      "mod_code": [
        "long long int 2000000000 ;",
        "int flag = 1 ;",
        "cout << \" - \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        14,
        21,
        2
      ],
      "mod_code": [
        "long long int 2000000000 ;",
        "int flag = 1 ;",
        "cout << \" - \" << endl ;",
        "n >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        14,
        2
      ],
      "mod_code": [
        "long long int 2000000000 ;",
        "int flag = 1 ;",
        "n >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        21
      ],
      "mod_code": [
        "long long int 2000000000 ;",
        "cout << \" - \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        21,
        2
      ],
      "mod_code": [
        "long long int 2000000000 ;",
        "cout << \" - \" << endl ;",
        "n >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "long long int 2000000000 ;",
        "n >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        19,
        14,
        21,
        5
      ],
      "mod_code": [
        "cout << count ;",
        "int flag = 1 ;",
        "cout << \" - \" << endl ;",
        "long long 2000000000 ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        19,
        14,
        5
      ],
      "mod_code": [
        "cout << count ;",
        "int flag = 1 ;",
        "long long 2000000000 ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        19,
        14,
        5,
        2
      ],
      "mod_code": [
        "cout << count ;",
        "int flag = 1 ;",
        "long long 2000000000 ;",
        "n >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        19,
        21,
        5
      ],
      "mod_code": [
        "cout << count ;",
        "cout << \" - \" << endl ;",
        "long long 2000000000 ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        19,
        21,
        5,
        2
      ],
      "mod_code": [
        "cout << count ;",
        "cout << \" - \" << endl ;",
        "long long 2000000000 ;",
        "n >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        19,
        5
      ],
      "mod_code": [
        "cout << count ;",
        "long long 2000000000 ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        19,
        5,
        2
      ],
      "mod_code": [
        "cout << count ;",
        "long long 2000000000 ;",
        "n >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        14,
        21,
        5
      ],
      "mod_code": [
        "int flag = 1 ;",
        "cout << \" - \" << endl ;",
        "long long 2000000000 ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        14,
        21,
        5,
        2
      ],
      "mod_code": [
        "int flag = 1 ;",
        "cout << \" - \" << endl ;",
        "long long 2000000000 ;",
        "n >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        14,
        5
      ],
      "mod_code": [
        "int flag = 1 ;",
        "long long 2000000000 ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        14,
        5,
        2
      ],
      "mod_code": [
        "int flag = 1 ;",
        "long long 2000000000 ;",
        "n >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        21,
        5
      ],
      "mod_code": [
        "cout << \" - \" << endl ;",
        "long long 2000000000 ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        21,
        5,
        2
      ],
      "mod_code": [
        "cout << \" - \" << endl ;",
        "long long 2000000000 ;",
        "n >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "long long 2000000000 ;",
        "n >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    }
  ]
}