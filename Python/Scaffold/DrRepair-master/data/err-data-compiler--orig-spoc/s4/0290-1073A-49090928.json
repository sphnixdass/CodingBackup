{
  "meta": {
    "index": 290,
    "hitid": "33J5JKFMK6SPGQ3ARPRA8WCR1J53Q8",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "1073A",
    "subid": "49090928"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function find taking an int x and an int array father",
      "code": "int find ( int x , int father [ ] )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return x if father [ x ] is x",
      "code": "if ( father [ x ] == x ) return x ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "set father [ x ] to find of father [ x ] and father then return father [ x ]",
      "code": "return father [ x ] = find ( father [ x ] , father ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "yes = int with yes = 0",
      "code": "int yes = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to length of s - 1",
      "code": "for ( int i = 0 ; i < s . length ( ) - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if s [ i ] is not s [ i + 1 ]",
      "code": "if ( s [ i ] != s [ i + 1 ] )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set yes to 1",
      "code": "yes = 1 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "print \" YES \"",
      "code": "cout << \" YES\\n \" ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "print s [ i ] and s [ i + 1 ]",
      "code": "cout << s . substr ( i , 2 ) << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print \" NO \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool find ( int x , int x )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘find(int&, int&)’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool find ( int x , int x ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 8,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int with = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "‘yes’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "yes = l ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        2,
        14
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "cout << s [ i ] << s [ i + 1 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        2,
        14,
        5
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "cout << s [ i ] << s [ i + 1 ] ;",
        "char n ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        2,
        14,
        11
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "cout << s [ i ] << s [ i + 1 ] ;",
        "if ( s [ i ] == s [ i + 1 ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        2,
        14,
        12
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "cout << s [ i ] << s [ i + 1 ] ;",
        "yes = l ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        2,
        5
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "char n ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        11
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "char n ;",
        "if ( s [ i ] == s [ i + 1 ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        12
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "char n ;",
        "yes = l ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        2,
        11
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "if ( s [ i ] == s [ i + 1 ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        2,
        11,
        12
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "if ( s [ i ] == s [ i + 1 ] )",
        "yes = l ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        2,
        12
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "yes = l ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "cout << s [ i ] << s [ i + 1 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        14,
        5
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "cout << s [ i ] << s [ i + 1 ] ;",
        "char n ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        14,
        5,
        11
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "cout << s [ i ] << s [ i + 1 ] ;",
        "char n ;",
        "if ( s [ i ] == s [ i + 1 ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        14,
        5,
        12
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "cout << s [ i ] << s [ i + 1 ] ;",
        "char n ;",
        "yes = l ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        14,
        11
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "cout << s [ i ] << s [ i + 1 ] ;",
        "if ( s [ i ] == s [ i + 1 ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        14,
        11,
        12
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "cout << s [ i ] << s [ i + 1 ] ;",
        "if ( s [ i ] == s [ i + 1 ] )",
        "yes = l ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        14,
        12
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "cout << s [ i ] << s [ i + 1 ] ;",
        "yes = l ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "char n ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        5,
        11
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "char n ;",
        "if ( s [ i ] == s [ i + 1 ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        5,
        11,
        12
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "char n ;",
        "if ( s [ i ] == s [ i + 1 ] )",
        "yes = l ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        5,
        12
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "char n ;",
        "yes = l ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "if ( s [ i ] == s [ i + 1 ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        11,
        12
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "if ( s [ i ] == s [ i + 1 ] )",
        "yes = l ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "bool find ( int x , int x )",
        "yes = l ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "cout << s [ i ] << s [ i + 1 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘find(int&, int&)’"
    },
    {
      "mod_line": [
        2,
        14,
        5
      ],
      "mod_code": [
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "cout << s [ i ] << s [ i + 1 ] ;",
        "char n ;"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘find(int&, int&)’"
    },
    {
      "mod_line": [
        2,
        14,
        5,
        11
      ],
      "mod_code": [
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "cout << s [ i ] << s [ i + 1 ] ;",
        "char n ;",
        "if ( s [ i ] == s [ i + 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘find(int&, int&)’"
    },
    {
      "mod_line": [
        2,
        14,
        5,
        12
      ],
      "mod_code": [
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "cout << s [ i ] << s [ i + 1 ] ;",
        "char n ;",
        "yes = l ;"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘find(int&, int&)’"
    },
    {
      "mod_line": [
        2,
        14,
        11
      ],
      "mod_code": [
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "cout << s [ i ] << s [ i + 1 ] ;",
        "if ( s [ i ] == s [ i + 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘find(int&, int&)’"
    },
    {
      "mod_line": [
        2,
        14,
        11,
        12
      ],
      "mod_code": [
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "cout << s [ i ] << s [ i + 1 ] ;",
        "if ( s [ i ] == s [ i + 1 ] )",
        "yes = l ;"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘find(int&, int&)’"
    },
    {
      "mod_line": [
        2,
        14,
        12
      ],
      "mod_code": [
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "cout << s [ i ] << s [ i + 1 ] ;",
        "yes = l ;"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘find(int&, int&)’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "char n ;"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘find(int&, int&)’"
    },
    {
      "mod_line": [
        2,
        5,
        11
      ],
      "mod_code": [
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "char n ;",
        "if ( s [ i ] == s [ i + 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘find(int&, int&)’"
    },
    {
      "mod_line": [
        2,
        5,
        11,
        12
      ],
      "mod_code": [
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "char n ;",
        "if ( s [ i ] == s [ i + 1 ] )",
        "yes = l ;"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘find(int&, int&)’"
    },
    {
      "mod_line": [
        2,
        5,
        12
      ],
      "mod_code": [
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "char n ;",
        "yes = l ;"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘find(int&, int&)’"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "if ( s [ i ] == s [ i + 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘find(int&, int&)’"
    },
    {
      "mod_line": [
        2,
        11,
        12
      ],
      "mod_code": [
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "if ( s [ i ] == s [ i + 1 ] )",
        "yes = l ;"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘find(int&, int&)’"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "return father [ x ] = find ( father [ x ] , father [ x ] ) ;",
        "yes = l ;"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘find(int&, int&)’"
    },
    {
      "mod_line": [
        14,
        5,
        11,
        12
      ],
      "mod_code": [
        "cout << s [ i ] << s [ i + 1 ] ;",
        "char n ;",
        "if ( s [ i ] == s [ i + 1 ] )",
        "yes = l ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        5,
        12
      ],
      "mod_code": [
        "cout << s [ i ] << s [ i + 1 ] ;",
        "char n ;",
        "yes = l ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        11,
        12
      ],
      "mod_code": [
        "cout << s [ i ] << s [ i + 1 ] ;",
        "if ( s [ i ] == s [ i + 1 ] )",
        "yes = l ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        12
      ],
      "mod_code": [
        "cout << s [ i ] << s [ i + 1 ] ;",
        "yes = l ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        12
      ],
      "mod_code": [
        "char n ;",
        "if ( s [ i ] == s [ i + 1 ] )",
        "yes = l ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "char n ;",
        "yes = l ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "if ( s [ i ] == s [ i + 1 ] )",
        "yes = l ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    }
  ]
}