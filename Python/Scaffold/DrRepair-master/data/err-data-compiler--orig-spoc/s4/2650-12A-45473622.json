{
  "meta": {
    "index": 2650,
    "hitid": "3RKHNXPHGWQN4HIYT43EZJQIEONUK0",
    "workerid": "AIWEXPJAU66D9",
    "probid": "12A",
    "subid": "45473622"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare strings called a , b and c",
      "code": "string a , b , c ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read a , b and c",
      "code": "cin >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "reverse c",
      "code": "reverse ( c . begin ( ) , c . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if a = c & & b [ 0 ] = b [ 2 ]",
      "code": "if ( a == c && b [ 0 ] == b [ 2 ] )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print \" YES \" and a new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> a , b >> c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "reverse ( c , c + n ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( a == c && b [ 0 ] = b [ 2 ] )"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cin >> a , b >> c ;",
        "reverse ( c , c + n ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        3,
        4
      ],
      "mod_code": [
        "cin >> a , b >> c ;",
        "reverse ( c , c + n ) ;",
        "if ( a == c && b [ 0 ] = b [ 2 ] )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        6
      ],
      "mod_code": [
        "cin >> a , b >> c ;",
        "reverse ( c , c + n ) ;",
        "if ( a == c && b [ 0 ] = b [ 2 ] )",
        "else ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        1
      ],
      "mod_code": [
        "cin >> a , b >> c ;",
        "reverse ( c , c + n ) ;",
        "if ( a == c && b [ 0 ] = b [ 2 ] )",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        2,
        3,
        6
      ],
      "mod_code": [
        "cin >> a , b >> c ;",
        "reverse ( c , c + n ) ;",
        "else ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        1
      ],
      "mod_code": [
        "cin >> a , b >> c ;",
        "reverse ( c , c + n ) ;",
        "else ;",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        2,
        3,
        1
      ],
      "mod_code": [
        "cin >> a , b >> c ;",
        "reverse ( c , c + n ) ;",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "cin >> a , b >> c ;",
        "if ( a == c && b [ 0 ] = b [ 2 ] )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        4,
        6
      ],
      "mod_code": [
        "cin >> a , b >> c ;",
        "if ( a == c && b [ 0 ] = b [ 2 ] )",
        "else ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        4,
        6,
        1
      ],
      "mod_code": [
        "cin >> a , b >> c ;",
        "if ( a == c && b [ 0 ] = b [ 2 ] )",
        "else ;",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        2,
        4,
        1
      ],
      "mod_code": [
        "cin >> a , b >> c ;",
        "if ( a == c && b [ 0 ] = b [ 2 ] )",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "cin >> a , b >> c ;",
        "else ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        6,
        1
      ],
      "mod_code": [
        "cin >> a , b >> c ;",
        "else ;",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "cin >> a , b >> c ;",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "reverse ( c , c + n ) ;",
        "if ( a == c && b [ 0 ] = b [ 2 ] )"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "reverse ( c , c + n ) ;",
        "if ( a == c && b [ 0 ] = b [ 2 ] )",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        1
      ],
      "mod_code": [
        "reverse ( c , c + n ) ;",
        "if ( a == c && b [ 0 ] = b [ 2 ] )",
        "else ;",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        3,
        4,
        1
      ],
      "mod_code": [
        "reverse ( c , c + n ) ;",
        "if ( a == c && b [ 0 ] = b [ 2 ] )",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "reverse ( c , c + n ) ;",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        1
      ],
      "mod_code": [
        "reverse ( c , c + n ) ;",
        "else ;",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "reverse ( c , c + n ) ;",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "if ( a == c && b [ 0 ] = b [ 2 ] )",
        "else ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        6,
        1
      ],
      "mod_code": [
        "if ( a == c && b [ 0 ] = b [ 2 ] )",
        "else ;",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "if ( a == c && b [ 0 ] = b [ 2 ] )",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "else ;",
        "string a , b , c , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string c’"
    }
  ]
}