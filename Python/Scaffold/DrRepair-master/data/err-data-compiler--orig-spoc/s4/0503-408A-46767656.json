{
  "meta": {
    "index": 503,
    "hitid": "3W0XM68YZPP7VKR0RGTUOHLL366K11",
    "workerid": "A1APYLD4DUK33J",
    "probid": "408A",
    "subid": "46767656"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant integers M6 , M5 with M6 = 1e6 + 5 , M5 = 1e5 + 5",
      "code": "const int M6 = 1e6 + 5 , M5 = 1e5 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare gcd with long longs first , second as arguments , returning long long",
      "code": "long long gcd ( long long first , long long second )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "return first if not second , else return result of run gcd with second , first % second as arguments , from function",
      "code": "return ! second ? first : gcd ( second , first % second ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare lcm with long longs first , second as arguments , returning long long",
      "code": "long long lcm ( long long first , long long second )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "return ( first / result of run gcd with ( first , second as arguments ) ) * second , from function",
      "code": "return ( first / gcd ( first , second ) ) * second ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "create integer array dx with dx = { 0 , 0 , 1 , - 1 , 1 , - 1 , 1 , - 1 }",
      "code": "int dx [ ] = { 0 , 0 , 1 , - 1 , 1 , - 1 , 1 , - 1 } ;",
      "indent": 0
    },
    {
      "line": 8,
      "text": "create integer array dy with dy = { 1 , - 1 , 0 , 0 , - 1 , 1 , 1 , - 1 }",
      "code": "int dy [ ] = { 1 , - 1 , 0 , 0 , - 1 , 1 , 1 , - 1 } ;",
      "indent": 0
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 10,
      "text": "create long longs n , mx , idx , s , a , with mx = INT_MAX , idx = 0 , s = 0",
      "code": "long long n , mx = INT_MAX , idx = 0 , s = 0 , a ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "create integer vector v initialized with n",
      "code": "vector < int > v ( n ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to n exclusive , read v [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> v [ i ] ; }",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "set s to 0",
      "code": "s = 0 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "for k = 0 to v [ i ] exclusive",
      "code": "for ( int k = 0 ; k < v [ i ] ; k ++ )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "increment s by ( a * 5 ) + 15",
      "code": "s += ( a * 5 ) + 15 ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if s is less than or equal to mx , set mx to s",
      "code": "if ( s < mx ) { mx = s ; }",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print mx print ' \\ n '",
      "code": "cout << mx << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "return ! gcd ( second ? first : gcd ( second , first % second ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "long long lcm ( long long first , long long second ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "return ( first / gcd ( first , second . second ) * second , second ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘second’ in ‘second’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int dx [ 4 ] = { 0 , 0 , 1 , - 1 , 1 , - 1 , 1 , - 1 } ;"
      ],
      "err_line": 7,
      "err_msg": "too many initializers for ‘int [4]’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "long long n , mx , idx = 0 , s = 0 , s = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘long long int s’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 13,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( k = 0 ; k < v [ i ] ; k ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "gets ( a ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        10
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        10,
        5
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "return ( first / gcd ( first , second . second ) * second , second ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        10,
        16
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        10,
        14
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        5
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "return ( first / gcd ( first , second . second ) * second , second ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        5,
        16
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "return ( first / gcd ( first , second . second ) * second , second ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        5,
        14
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "return ( first / gcd ( first , second . second ) * second , second ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        16
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        16,
        14
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        14
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        5
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "return ( first / gcd ( first , second . second ) * second , second ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        5,
        16
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "return ( first / gcd ( first , second . second ) * second , second ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        5,
        14
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "return ( first / gcd ( first , second . second ) * second , second ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        16
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        16,
        14
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        14
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "return ( first / gcd ( first , second . second ) * second , second ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        16
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "return ( first / gcd ( first , second . second ) * second , second ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        16,
        14
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "return ( first / gcd ( first , second . second ) * second , second ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        14
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "return ( first / gcd ( first , second . second ) * second , second ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        14
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "long long gcd ( long long first , long long second ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        2,
        10,
        5
      ],
      "mod_code": [
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "return ( first / gcd ( first , second . second ) * second , second ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        2,
        10,
        5,
        16
      ],
      "mod_code": [
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "return ( first / gcd ( first , second . second ) * second , second ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        2,
        10,
        5,
        14
      ],
      "mod_code": [
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "return ( first / gcd ( first , second . second ) * second , second ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        2,
        10,
        16
      ],
      "mod_code": [
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        2,
        10,
        16,
        14
      ],
      "mod_code": [
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        2,
        10,
        14
      ],
      "mod_code": [
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "return ( first / gcd ( first , second . second ) * second , second ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        2,
        5,
        16
      ],
      "mod_code": [
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "return ( first / gcd ( first , second . second ) * second , second ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        2,
        5,
        16,
        14
      ],
      "mod_code": [
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "return ( first / gcd ( first , second . second ) * second , second ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        2,
        5,
        14
      ],
      "mod_code": [
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "return ( first / gcd ( first , second . second ) * second , second ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        2,
        16,
        14
      ],
      "mod_code": [
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "return ! gcd ( second ) ? gcd ( second , first % second ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "return ( first / gcd ( first , second . second ) * second , second ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘second’ in ‘second’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        10,
        5,
        16
      ],
      "mod_code": [
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "return ( first / gcd ( first , second . second ) * second , second ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘second’ in ‘second’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        10,
        5,
        16,
        14
      ],
      "mod_code": [
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "return ( first / gcd ( first , second . second ) * second , second ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘second’ in ‘second’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        10,
        5,
        14
      ],
      "mod_code": [
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "return ( first / gcd ( first , second . second ) * second , second ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘second’ in ‘second’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        10,
        16
      ],
      "mod_code": [
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        16,
        14
      ],
      "mod_code": [
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "long long n , mx = INT_MAX , idx = 0 , s = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "return ( first / gcd ( first , second . second ) * second , second ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘second’ in ‘second’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        5,
        16,
        14
      ],
      "mod_code": [
        "return ( first / gcd ( first , second . second ) * second , second ;",
        "for ( k = 0 ; k < v [ i ] ; k ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘second’ in ‘second’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "return ( first / gcd ( first , second . second ) * second , second ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘second’ in ‘second’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        16,
        14
      ],
      "mod_code": [
        "for ( k = 0 ; k < v [ i ] ; k ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}