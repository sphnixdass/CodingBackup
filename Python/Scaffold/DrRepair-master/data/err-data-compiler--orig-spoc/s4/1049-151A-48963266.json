{
  "meta": {
    "index": 1049,
    "hitid": "3EHVO81VN5FGTUQSLVQXBP5TCCX1HK",
    "workerid": "A1APYLD4DUK33J",
    "probid": "151A",
    "subid": "48963266"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare min with integers a , b , c as arguments , returning integer",
      "code": "int min ( int a , int b , int c )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if a is greater than b , set a to b",
      "code": "if ( a > b ) a = b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "if a is greater than c , set a to c",
      "code": "if ( a > c ) a = c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "return a from function",
      "code": "return a ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "create integers n , k , l , c , d , p , nl , np",
      "code": "int n , k , l , c , d , p , nl , np ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read n read k read l read c read d read p read nl read np",
      "code": "cin >> n >> k >> l >> c >> d >> p >> nl >> np ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print result of run min with k * l / nl , c * d , p / np as arguments / n print newline",
      "code": "cout << min ( k * l / nl , c * d , p / np ) / n << endl ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int min ( int a , int b , int c ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int min ( int a , int b , int c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        8
      ],
      "mod_code": [
        "int min ( int a , int b , int c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "cout << min ( k * l / nl , c * d , p / np ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        8,
        6
      ],
      "mod_code": [
        "int min ( int a , int b , int c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "cout << min ( k * l / nl , c * d , p / np ) << endl ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        6
      ],
      "mod_code": [
        "int min ( int a , int b , int c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        6,
        8
      ],
      "mod_code": [
        "int min ( int a , int b , int c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "cout << min ( k * l / nl , c * d , p / d ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7,
        8
      ],
      "mod_code": [
        "int min ( int a , int b , int c ) ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "cout << min ( k * l / nl , c * d , p / d ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "int min ( int a , int b , int c ) ;",
        "cout << min ( k * l / nl , c * d , p / np ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        8,
        6
      ],
      "mod_code": [
        "int min ( int a , int b , int c ) ;",
        "cout << min ( k * l / nl , c * d , p / np ) << endl ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "int min ( int a , int b , int c ) ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        6,
        8
      ],
      "mod_code": [
        "int min ( int a , int b , int c ) ;",
        "int n , k , l , c , d , p , p , np ;",
        "cout << min ( k * l / nl , c * d , p / d ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "int min ( int a , int b , int c ) ;",
        "cout << min ( k * l / nl , c * d , p / d ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        8,
        6
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "cout << min ( k * l / nl , c * d , p / np ) << endl ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        7,
        6,
        8
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "cout << min ( k * l / nl , c * d , p / d ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "cout << min ( k * l / nl , c * d , p / np ) << endl ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "cout << min ( k * l / nl , c * d , p / d ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int p’"
    }
  ]
}