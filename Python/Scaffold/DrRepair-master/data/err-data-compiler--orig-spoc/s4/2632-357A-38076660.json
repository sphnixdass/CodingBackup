{
  "meta": {
    "index": 2632,
    "hitid": "3TUOHPJXYHR6GL6ANNX471JHWFQWX8",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "357A",
    "subid": "38076660"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare inline nxt returning integer",
      "code": "inline int nxt ( )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "make integer x",
      "code": "int x ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "return x",
      "code": "return x ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "create const int INF = ( int ) 1e9",
      "code": "const int INF = ( int ) 1e9 ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "make const int MODULO = ( int ) 1e9 + 7",
      "code": "const int MODULO = ( int ) 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "print 10 decimals after decimal point",
      "code": "cout . precision ( 10 ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create int m = nxt ( )",
      "code": "int m = nxt ( ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "create integer vector n of size m",
      "code": "vector < int > c ( m ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "let integer sum = 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 0 to ( int ) m exclusive",
      "code": "for ( int i = 0 ; i < ( int ) m ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "read c [ i ]",
      "code": "cin >> c [ i ] ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "add c [ i ] to sum",
      "code": "sum += c [ i ] ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "create ints x and y",
      "code": "int x , y ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "read x and y",
      "code": "cin >> x >> y ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "let integer pass = 0",
      "code": "int pass = 0 ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "for j = i to m exclusive , add c [ j ] to pass",
      "code": "for ( int j = i ; j < m ; j ++ ) { pass += c [ j ] ; }",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if pass is greater than or equal to x and pass is less than of equal to y and ( sum - pass ) is greater than or equal to x and ( sum - pass ) is less than or equal to y",
      "code": "if ( pass >= x && pass <= y && ( sum - pass ) >= x && ( sum - pass ) <= y )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print i + 1",
      "code": "cout << i + 1 << ' \\n ' ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print 0",
      "code": "cout << 0 << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "inline int nxt ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "vector < int > n ( m ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int m = nxt ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int (*)()’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "vector < int > n [ m ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "sum = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "c >> c [ i ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "cin >> x >> k ;"
      ],
      "err_line": 17,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "pass = 0 ;"
      ],
      "err_line": 19,
      "err_msg": "‘pass’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "inline int nxt ;",
        "cout << ( char ) 10 << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        0,
        8,
        10
      ],
      "mod_code": [
        "inline int nxt ;",
        "cout << ( char ) 10 << endl ;",
        "vector < int > n ( m ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        0,
        8,
        10,
        19
      ],
      "mod_code": [
        "inline int nxt ;",
        "cout << ( char ) 10 << endl ;",
        "vector < int > n ( m ) ;",
        "pass = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        0,
        8,
        10,
        17
      ],
      "mod_code": [
        "inline int nxt ;",
        "cout << ( char ) 10 << endl ;",
        "vector < int > n ( m ) ;",
        "cin >> x >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        0,
        8,
        10
      ],
      "mod_code": [
        "inline int nxt ;",
        "cout << ( char ) 10 << endl ;",
        "vector < int > n [ m ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        0,
        8,
        10,
        19
      ],
      "mod_code": [
        "inline int nxt ;",
        "cout << ( char ) 10 << endl ;",
        "vector < int > n [ m ] ;",
        "pass = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        0,
        8,
        10,
        17
      ],
      "mod_code": [
        "inline int nxt ;",
        "cout << ( char ) 10 << endl ;",
        "vector < int > n [ m ] ;",
        "cin >> x >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        0,
        8,
        19
      ],
      "mod_code": [
        "inline int nxt ;",
        "cout << ( char ) 10 << endl ;",
        "pass = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        0,
        8,
        19,
        17
      ],
      "mod_code": [
        "inline int nxt ;",
        "cout << ( char ) 10 << endl ;",
        "pass = 0 ;",
        "cin >> x >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        0,
        8,
        17
      ],
      "mod_code": [
        "inline int nxt ;",
        "cout << ( char ) 10 << endl ;",
        "cin >> x >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "inline int nxt ;",
        "vector < int > n ( m ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        0,
        10,
        19
      ],
      "mod_code": [
        "inline int nxt ;",
        "vector < int > n ( m ) ;",
        "pass = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        0,
        10,
        19,
        17
      ],
      "mod_code": [
        "inline int nxt ;",
        "vector < int > n ( m ) ;",
        "pass = 0 ;",
        "cin >> x >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        0,
        10,
        17
      ],
      "mod_code": [
        "inline int nxt ;",
        "vector < int > n ( m ) ;",
        "cin >> x >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "inline int nxt ;",
        "vector < int > n [ m ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        0,
        10,
        19
      ],
      "mod_code": [
        "inline int nxt ;",
        "vector < int > n [ m ] ;",
        "pass = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        0,
        10,
        19,
        17
      ],
      "mod_code": [
        "inline int nxt ;",
        "vector < int > n [ m ] ;",
        "pass = 0 ;",
        "cin >> x >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        0,
        10,
        17
      ],
      "mod_code": [
        "inline int nxt ;",
        "vector < int > n [ m ] ;",
        "cin >> x >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        0,
        19
      ],
      "mod_code": [
        "inline int nxt ;",
        "pass = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        0,
        19,
        17
      ],
      "mod_code": [
        "inline int nxt ;",
        "pass = 0 ;",
        "cin >> x >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "inline int nxt ;",
        "cin >> x >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘nxt’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "cout << ( char ) 10 << endl ;",
        "vector < int > n ( m ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        19
      ],
      "mod_code": [
        "cout << ( char ) 10 << endl ;",
        "vector < int > n ( m ) ;",
        "pass = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        19,
        17
      ],
      "mod_code": [
        "cout << ( char ) 10 << endl ;",
        "vector < int > n ( m ) ;",
        "pass = 0 ;",
        "cin >> x >> k ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        17
      ],
      "mod_code": [
        "cout << ( char ) 10 << endl ;",
        "vector < int > n ( m ) ;",
        "cin >> x >> k ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "cout << ( char ) 10 << endl ;",
        "vector < int > n [ m ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        19
      ],
      "mod_code": [
        "cout << ( char ) 10 << endl ;",
        "vector < int > n [ m ] ;",
        "pass = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        19,
        17
      ],
      "mod_code": [
        "cout << ( char ) 10 << endl ;",
        "vector < int > n [ m ] ;",
        "pass = 0 ;",
        "cin >> x >> k ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        17
      ],
      "mod_code": [
        "cout << ( char ) 10 << endl ;",
        "vector < int > n [ m ] ;",
        "cin >> x >> k ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "cout << ( char ) 10 << endl ;",
        "pass = 0 ;"
      ],
      "err_line": 19,
      "err_msg": "‘pass’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19,
        17
      ],
      "mod_code": [
        "cout << ( char ) 10 << endl ;",
        "pass = 0 ;",
        "cin >> x >> k ;"
      ],
      "err_line": 17,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "cout << ( char ) 10 << endl ;",
        "cin >> x >> k ;"
      ],
      "err_line": 17,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "vector < int > n ( m ) ;",
        "pass = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        17
      ],
      "mod_code": [
        "vector < int > n ( m ) ;",
        "pass = 0 ;",
        "cin >> x >> k ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        17
      ],
      "mod_code": [
        "vector < int > n ( m ) ;",
        "cin >> x >> k ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "vector < int > n [ m ] ;",
        "pass = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        17
      ],
      "mod_code": [
        "vector < int > n [ m ] ;",
        "pass = 0 ;",
        "cin >> x >> k ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        17
      ],
      "mod_code": [
        "vector < int > n [ m ] ;",
        "cin >> x >> k ;"
      ],
      "err_line": 13,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        17
      ],
      "mod_code": [
        "pass = 0 ;",
        "cin >> x >> k ;"
      ],
      "err_line": 17,
      "err_msg": "‘k’ was not declared in this scope"
    }
  ]
}