{
  "meta": {
    "index": 1780,
    "hitid": "3LN3BXKGC0PVUZBKYDX0JFJMTPVGW1",
    "workerid": "A1APYLD4DUK33J",
    "probid": "313A",
    "subid": "48942657"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long long integers t , l , r",
      "code": "long long int t , l , r ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if t is greater than or equal to 0",
      "code": "if ( t >= 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print t , \" \\ n \"",
      "code": "cout << t << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if absolute value of t % 10 is greater than absolute value of ( t / 10 ) % 10",
      "code": "if ( abs ( t ) % 10 > abs ( t / 10 ) % 10 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "let t be t / 10",
      "code": "t /= 10 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "let l be absolute value of t % 10",
      "code": "l = abs ( t ) % 10 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "let r be absolute value of t / 100",
      "code": "r = abs ( t ) / 100 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "let t be - ( absolute value of r * 10 + l )",
      "code": "t = - ( abs ( r ) * 10 + l ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print t , \" \\ n \"",
      "code": "cout << t << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( abs ( t ) % 10 > abs ( t / 10 ) ) % 10 ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘%’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "if ( abs ( t ) % 10 > abs ( t / 10 ) ) % 10 ;",
        "{ t ; }"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘%’ token"
    },
    {
      "mod_line": [
        6,
        2,
        5
      ],
      "mod_code": [
        "if ( abs ( t ) % 10 > abs ( t / 10 ) ) % 10 ;",
        "{ t ; }",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        2,
        5,
        8
      ],
      "mod_code": [
        "if ( abs ( t ) % 10 > abs ( t / 10 ) ) % 10 ;",
        "{ t ; }",
        "else else",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        2,
        8
      ],
      "mod_code": [
        "if ( abs ( t ) % 10 > abs ( t / 10 ) ) % 10 ;",
        "{ t ; }",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘%’ token"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "if ( abs ( t ) % 10 > abs ( t / 10 ) ) % 10 ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5,
        8
      ],
      "mod_code": [
        "if ( abs ( t ) % 10 > abs ( t / 10 ) ) % 10 ;",
        "else else",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "if ( abs ( t ) % 10 > abs ( t / 10 ) ) % 10 ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘%’ token"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "{ t ; }",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        5,
        8
      ],
      "mod_code": [
        "{ t ; }",
        "else else",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "{ t ; }",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "else else",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}