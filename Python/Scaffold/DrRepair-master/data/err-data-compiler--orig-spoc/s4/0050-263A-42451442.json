{
  "meta": {
    "index": 50,
    "hitid": "34KYK9TV2R26W1M0YMVLLFP47Z6BSZ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "263A",
    "subid": "42451442"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a is a new 2d array of integers 5 by 5",
      "code": "int a [ 5 ] [ 5 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare integer variables tempr and tempc",
      "code": "int tempr , tempc ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "in a for loop , change i from 0 to 5 exclusive",
      "code": "for ( int i = 0 ; i < 5 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for j from 0 to 5 exclusive",
      "code": "for ( int j = 0 ; j < 5 ; j ++ )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read a [ i ] [ j ] from the input",
      "code": "cin >> a [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "if a [ i ] [ j ] = 1",
      "code": "if ( a [ i ] [ j ] == 1 )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "assign i to tempr",
      "code": "tempr = i ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "change tempc to j",
      "code": "tempc = j ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "create integer move with value 0",
      "code": "int move = 0 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if tempr is greater than 2",
      "code": "if ( tempr > 2 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "change move to move + tempr - 2",
      "code": "move = move + tempr - 2 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "change move to move + 2 - tempr",
      "code": "move = move + 2 - tempr ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if tempc is greater than 2",
      "code": "if ( tempc > 2 )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "assign new value = move + tempc - 2 to move",
      "code": "move = move + tempc - 2 ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 21,
      "text": "change value of move to move + 2 - tempc",
      "code": "move = move + 2 - tempc ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print move",
      "code": "cout << move << endl ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a [ 5 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int tempr = tempc ;"
      ],
      "err_line": 2,
      "err_msg": "‘tempc’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "a >> a [ i ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [5][5]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "tempc tempc ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int t = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘move’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        20
      ],
      "mod_code": [
        "tempc tempc ;",
        "else ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        20,
        23
      ],
      "mod_code": [
        "tempc tempc ;",
        "else ;",
        "cout << move ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        20,
        23,
        6
      ],
      "mod_code": [
        "tempc tempc ;",
        "else ;",
        "cout << move ;",
        "if ( a [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        20,
        23,
        15
      ],
      "mod_code": [
        "tempc tempc ;",
        "else ;",
        "cout << move ;",
        "else ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        20,
        23,
        12
      ],
      "mod_code": [
        "tempc tempc ;",
        "else ;",
        "cout << move ;",
        "int t = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        20,
        6
      ],
      "mod_code": [
        "tempc tempc ;",
        "else ;",
        "if ( a [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        20,
        6,
        15
      ],
      "mod_code": [
        "tempc tempc ;",
        "else ;",
        "if ( a [ i ] [ j ] == ' 1 ' )",
        "else ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        20,
        6,
        12
      ],
      "mod_code": [
        "tempc tempc ;",
        "else ;",
        "if ( a [ i ] [ j ] == ' 1 ' )",
        "int t = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        20,
        15
      ],
      "mod_code": [
        "tempc tempc ;",
        "else ;",
        "else ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        20,
        15,
        12
      ],
      "mod_code": [
        "tempc tempc ;",
        "else ;",
        "else ;",
        "int t = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        20,
        12
      ],
      "mod_code": [
        "tempc tempc ;",
        "else ;",
        "int t = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        23
      ],
      "mod_code": [
        "tempc tempc ;",
        "cout << move ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        23,
        6
      ],
      "mod_code": [
        "tempc tempc ;",
        "cout << move ;",
        "if ( a [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        23,
        6,
        15
      ],
      "mod_code": [
        "tempc tempc ;",
        "cout << move ;",
        "if ( a [ i ] [ j ] == ' 1 ' )",
        "else ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        23,
        6,
        12
      ],
      "mod_code": [
        "tempc tempc ;",
        "cout << move ;",
        "if ( a [ i ] [ j ] == ' 1 ' )",
        "int t = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        23,
        15
      ],
      "mod_code": [
        "tempc tempc ;",
        "cout << move ;",
        "else ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        23,
        15,
        12
      ],
      "mod_code": [
        "tempc tempc ;",
        "cout << move ;",
        "else ;",
        "int t = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        23,
        12
      ],
      "mod_code": [
        "tempc tempc ;",
        "cout << move ;",
        "int t = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "tempc tempc ;",
        "if ( a [ i ] [ j ] == ' 1 ' )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        6,
        15
      ],
      "mod_code": [
        "tempc tempc ;",
        "if ( a [ i ] [ j ] == ' 1 ' )",
        "else ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        6,
        15,
        12
      ],
      "mod_code": [
        "tempc tempc ;",
        "if ( a [ i ] [ j ] == ' 1 ' )",
        "else ;",
        "int t = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        6,
        12
      ],
      "mod_code": [
        "tempc tempc ;",
        "if ( a [ i ] [ j ] == ' 1 ' )",
        "int t = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "tempc tempc ;",
        "else ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        15,
        12
      ],
      "mod_code": [
        "tempc tempc ;",
        "else ;",
        "int t = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "tempc tempc ;",
        "int t = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘tempc’"
    },
    {
      "mod_line": [
        20,
        23,
        6,
        12
      ],
      "mod_code": [
        "else ;",
        "cout << move ;",
        "if ( a [ i ] [ j ] == ' 1 ' )",
        "int t = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘move’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23,
        15,
        12
      ],
      "mod_code": [
        "else ;",
        "cout << move ;",
        "else ;",
        "int t = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘move’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23,
        12
      ],
      "mod_code": [
        "else ;",
        "cout << move ;",
        "int t = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘move’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        6,
        15,
        12
      ],
      "mod_code": [
        "else ;",
        "if ( a [ i ] [ j ] == ' 1 ' )",
        "else ;",
        "int t = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘move’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        6,
        12
      ],
      "mod_code": [
        "else ;",
        "if ( a [ i ] [ j ] == ' 1 ' )",
        "int t = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘move’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        15,
        12
      ],
      "mod_code": [
        "else ;",
        "else ;",
        "int t = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘move’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        12
      ],
      "mod_code": [
        "else ;",
        "int t = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘move’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        6,
        15,
        12
      ],
      "mod_code": [
        "cout << move ;",
        "if ( a [ i ] [ j ] == ' 1 ' )",
        "else ;",
        "int t = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘move’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        6,
        12
      ],
      "mod_code": [
        "cout << move ;",
        "if ( a [ i ] [ j ] == ' 1 ' )",
        "int t = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘move’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        15,
        12
      ],
      "mod_code": [
        "cout << move ;",
        "else ;",
        "int t = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘move’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        12
      ],
      "mod_code": [
        "cout << move ;",
        "int t = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘move’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        15,
        12
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == ' 1 ' )",
        "else ;",
        "int t = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘move’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] == ' 1 ' )",
        "int t = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘move’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        12
      ],
      "mod_code": [
        "else ;",
        "int t = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘move’ was not declared in this scope"
    }
  ]
}