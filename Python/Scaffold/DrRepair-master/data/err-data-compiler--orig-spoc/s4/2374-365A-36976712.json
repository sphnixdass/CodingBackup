{
  "meta": {
    "index": 2374,
    "hitid": "3I01FDIL6M266Z3MI37LPN00CQID24",
    "workerid": "A1APYLD4DUK33J",
    "probid": "365A",
    "subid": "36976712"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer kg with kg = 0",
      "code": "int kg = 0 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , k",
      "code": "int n , k ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create character array a with size 50",
      "code": "char a [ 50 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare judge with character array a as argument , returning void",
      "code": "void judge ( char a [ ] )",
      "indent": 0
    },
    {
      "line": 4,
      "text": "create integer digit",
      "code": "int digit ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer array num with size 10",
      "code": "int num [ 10 ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set bytes from num to size of num to value 0",
      "code": "memset ( num , 0 , sizeof ( num ) ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to a [ i ] is not ' \\ 0 ' , incrementing i , set num [ a [ i ] - ' 0 ' ] to 1",
      "code": "for ( int i = 0 ; a [ i ] != ' \\0 ' ; i ++ ) { num [ a [ i ] - ' 0 ' ] = 1 ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to k inclusive",
      "code": "for ( int i = 0 ; i <= k ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if not num [ i ] , return from function",
      "code": "if ( ! num [ i ] ) return ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "increment kg",
      "code": "kg ++ ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 14,
      "text": "read n read k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "run judge with a as argument",
      "code": "judge ( a ) ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print kg print newline",
      "code": "cout << kg << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "kg = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char arr [ 50 ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int a [ 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "declaration of ‘int a [10]’ shadows a parameter"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i <= k ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( ! num [ i ] ) return 1 ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "judge ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘void judge(char*)’"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "kg = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        3,
        0,
        9
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "kg = 0 ;",
        "if ( ! num [ i ] ) return 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        3,
        0,
        9,
        17
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "kg = 0 ;",
        "if ( ! num [ i ] ) return 1 ;",
        "judge ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        3,
        0,
        9,
        14
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "kg = 0 ;",
        "if ( ! num [ i ] ) return 1 ;",
        "n >> n >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        3,
        0,
        9,
        5
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "kg = 0 ;",
        "if ( ! num [ i ] ) return 1 ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        3,
        0,
        17
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "kg = 0 ;",
        "judge ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        3,
        0,
        17,
        14
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "kg = 0 ;",
        "judge ( ) ;",
        "n >> n >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        3,
        0,
        17,
        5
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "kg = 0 ;",
        "judge ( ) ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        3,
        0,
        14
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "kg = 0 ;",
        "n >> n >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        3,
        0,
        14,
        5
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "kg = 0 ;",
        "n >> n >> k ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        3,
        0,
        5
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "kg = 0 ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "if ( ! num [ i ] ) return 1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        9,
        17
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "if ( ! num [ i ] ) return 1 ;",
        "judge ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        9,
        17,
        14
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "if ( ! num [ i ] ) return 1 ;",
        "judge ( ) ;",
        "n >> n >> k ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        9,
        17,
        5
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "if ( ! num [ i ] ) return 1 ;",
        "judge ( ) ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        9,
        14
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "if ( ! num [ i ] ) return 1 ;",
        "n >> n >> k ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        9,
        14,
        5
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "if ( ! num [ i ] ) return 1 ;",
        "n >> n >> k ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        9,
        5
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "if ( ! num [ i ] ) return 1 ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        17
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "judge ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        17,
        14
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "judge ( ) ;",
        "n >> n >> k ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        17,
        14,
        5
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "judge ( ) ;",
        "n >> n >> k ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        17,
        5
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "judge ( ) ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "n >> n >> k ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        14,
        5
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "n >> n >> k ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "void judge ( char a [ ] ) ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "kg = 0 ;",
        "if ( ! num [ i ] ) return 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        0,
        9,
        17
      ],
      "mod_code": [
        "kg = 0 ;",
        "if ( ! num [ i ] ) return 1 ;",
        "judge ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        0,
        9,
        17,
        14
      ],
      "mod_code": [
        "kg = 0 ;",
        "if ( ! num [ i ] ) return 1 ;",
        "judge ( ) ;",
        "n >> n >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        0,
        9,
        17,
        5
      ],
      "mod_code": [
        "kg = 0 ;",
        "if ( ! num [ i ] ) return 1 ;",
        "judge ( ) ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        0,
        9,
        14
      ],
      "mod_code": [
        "kg = 0 ;",
        "if ( ! num [ i ] ) return 1 ;",
        "n >> n >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        0,
        9,
        14,
        5
      ],
      "mod_code": [
        "kg = 0 ;",
        "if ( ! num [ i ] ) return 1 ;",
        "n >> n >> k ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        0,
        9,
        5
      ],
      "mod_code": [
        "kg = 0 ;",
        "if ( ! num [ i ] ) return 1 ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "kg = 0 ;",
        "judge ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        0,
        17,
        14
      ],
      "mod_code": [
        "kg = 0 ;",
        "judge ( ) ;",
        "n >> n >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        0,
        17,
        14,
        5
      ],
      "mod_code": [
        "kg = 0 ;",
        "judge ( ) ;",
        "n >> n >> k ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        0,
        17,
        5
      ],
      "mod_code": [
        "kg = 0 ;",
        "judge ( ) ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "kg = 0 ;",
        "n >> n >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        0,
        14,
        5
      ],
      "mod_code": [
        "kg = 0 ;",
        "n >> n >> k ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "kg = 0 ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘kg’ does not name a type"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "if ( ! num [ i ] ) return 1 ;",
        "judge ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        17,
        14
      ],
      "mod_code": [
        "if ( ! num [ i ] ) return 1 ;",
        "judge ( ) ;",
        "n >> n >> k ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        17,
        14,
        5
      ],
      "mod_code": [
        "if ( ! num [ i ] ) return 1 ;",
        "judge ( ) ;",
        "n >> n >> k ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "declaration of ‘int a [10]’ shadows a parameter"
    },
    {
      "mod_line": [
        9,
        17,
        5
      ],
      "mod_code": [
        "if ( ! num [ i ] ) return 1 ;",
        "judge ( ) ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "declaration of ‘int a [10]’ shadows a parameter"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "if ( ! num [ i ] ) return 1 ;",
        "n >> n >> k ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        14,
        5
      ],
      "mod_code": [
        "if ( ! num [ i ] ) return 1 ;",
        "n >> n >> k ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "declaration of ‘int a [10]’ shadows a parameter"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "if ( ! num [ i ] ) return 1 ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "declaration of ‘int a [10]’ shadows a parameter"
    },
    {
      "mod_line": [
        17,
        14
      ],
      "mod_code": [
        "judge ( ) ;",
        "n >> n >> k ;"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘void judge(char*)’"
    },
    {
      "mod_line": [
        17,
        14,
        5
      ],
      "mod_code": [
        "judge ( ) ;",
        "n >> n >> k ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "declaration of ‘int a [10]’ shadows a parameter"
    },
    {
      "mod_line": [
        17,
        5
      ],
      "mod_code": [
        "judge ( ) ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "declaration of ‘int a [10]’ shadows a parameter"
    },
    {
      "mod_line": [
        14,
        5
      ],
      "mod_code": [
        "n >> n >> k ;",
        "int a [ 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "declaration of ‘int a [10]’ shadows a parameter"
    }
  ]
}