{
  "meta": {
    "index": 1135,
    "hitid": "3HEA4ZVWVDG31J7GLGR0PIFKJJ955N",
    "workerid": "A1APYLD4DUK33J",
    "probid": "86A",
    "subid": "40992687"
  },
  "lines": [
    {
      "line": 0,
      "text": "create long longs l , r , sifr , x",
      "code": "long long l , r , sifr , x ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long long maxr with maxr = 1",
      "code": "long long maxr = 1 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare f with long long x as argument , returning long long",
      "code": "long long f ( long long x )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create long long new_ with new_ = 0",
      "code": "long long new_ = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create long long pt with pt = 1",
      "code": "long long pt = 1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while x is true",
      "code": "while ( x )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set new_ to ( 9 - ( x % 10 ) ) * pt + new_",
      "code": "new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set value of pt to 10",
      "code": "pt *= 10 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set x to x / 10",
      "code": "x /= 10 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "return new_ from function",
      "code": "return new_ ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 13,
      "text": "read l read r",
      "code": "cin >> l >> r ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "set x to r",
      "code": "x = r ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "while x is true",
      "code": "while ( x )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "increment sifr",
      "code": "sifr ++ ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "set x to x / 10",
      "code": "x /= 10 ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for x = 1 to sifr inclusive , set maxr to maxr * 10",
      "code": "for ( x = 1 ; x <= sifr ; x ++ ) maxr = maxr * 10 ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "set maxr to maxr / 2",
      "code": "maxr /= 2 ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if r is greater than or equal to maxr",
      "code": "if ( r >= maxr )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "if maxr is greater than or equal to l",
      "code": "if ( maxr >= l )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "print long long casted maxr * ( maxr - 1 ) print newline",
      "code": "cout << ( long long ) maxr * ( maxr - 1 ) << endl ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 25,
      "text": "set x to result of run f with l as argument",
      "code": "x = f ( l ) ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "print long long casted l * x print newline",
      "code": "cout << ( long long ) l * x << endl ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 29,
      "text": "set x to result of run f with r as argument",
      "code": "x = f ( r ) ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "print long long casted r * x print newline",
      "code": "cout << ( long long ) r * x << endl ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long maxr = 1 = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long f ( long long x ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "* pt = 10 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘long long int’)"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "return ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with no value, in function returning ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "x = f ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "too few arguments to function ‘long long int f(long long int)’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 28,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "x = f ( ) ;"
      ],
      "err_line": 29,
      "err_msg": "too few arguments to function ‘long long int f(long long int)’"
    },
    {
      "mod_line": [
        7,
        28
      ],
      "mod_code": [
        "pt = 10 ;",
        "else else"
      ],
      "err_line": 28,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        28,
        6
      ],
      "mod_code": [
        "pt = 10 ;",
        "else else",
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        28,
        6,
        5
      ],
      "mod_code": [
        "pt = 10 ;",
        "else else",
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "while ( x == true )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        28,
        6,
        10
      ],
      "mod_code": [
        "pt = 10 ;",
        "else else",
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "return ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        28,
        6,
        15
      ],
      "mod_code": [
        "pt = 10 ;",
        "else else",
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "while ( x == true )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        28,
        5
      ],
      "mod_code": [
        "pt = 10 ;",
        "else else",
        "while ( x == true )"
      ],
      "err_line": 28,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        28,
        5,
        10
      ],
      "mod_code": [
        "pt = 10 ;",
        "else else",
        "while ( x == true )",
        "return ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with no value, in function returning ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        28,
        5,
        15
      ],
      "mod_code": [
        "pt = 10 ;",
        "else else",
        "while ( x == true )",
        "while ( x == true )"
      ],
      "err_line": 28,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        28,
        10
      ],
      "mod_code": [
        "pt = 10 ;",
        "else else",
        "return ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with no value, in function returning ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        28,
        10,
        15
      ],
      "mod_code": [
        "pt = 10 ;",
        "else else",
        "return ;",
        "while ( x == true )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with no value, in function returning ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        28,
        15
      ],
      "mod_code": [
        "pt = 10 ;",
        "else else",
        "while ( x == true )"
      ],
      "err_line": 28,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "pt = 10 ;",
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        6,
        5
      ],
      "mod_code": [
        "pt = 10 ;",
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "while ( x == true )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        6,
        5,
        10
      ],
      "mod_code": [
        "pt = 10 ;",
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "while ( x == true )",
        "return ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        6,
        5,
        15
      ],
      "mod_code": [
        "pt = 10 ;",
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "while ( x == true )",
        "while ( x == true )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        6,
        10
      ],
      "mod_code": [
        "pt = 10 ;",
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "return ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        6,
        10,
        15
      ],
      "mod_code": [
        "pt = 10 ;",
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "return ;",
        "while ( x == true )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        6,
        15
      ],
      "mod_code": [
        "pt = 10 ;",
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "while ( x == true )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        5,
        10
      ],
      "mod_code": [
        "pt = 10 ;",
        "while ( x == true )",
        "return ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with no value, in function returning ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        5,
        10,
        15
      ],
      "mod_code": [
        "pt = 10 ;",
        "while ( x == true )",
        "return ;",
        "while ( x == true )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with no value, in function returning ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "pt = 10 ;",
        "return ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with no value, in function returning ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        10,
        15
      ],
      "mod_code": [
        "pt = 10 ;",
        "return ;",
        "while ( x == true )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with no value, in function returning ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        6
      ],
      "mod_code": [
        "else else",
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        28,
        6,
        5
      ],
      "mod_code": [
        "else else",
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "while ( x == true )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        28,
        6,
        5,
        10
      ],
      "mod_code": [
        "else else",
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "while ( x == true )",
        "return ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        28,
        6,
        5,
        15
      ],
      "mod_code": [
        "else else",
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "while ( x == true )",
        "while ( x == true )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        28,
        6,
        10
      ],
      "mod_code": [
        "else else",
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "return ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        28,
        6,
        10,
        15
      ],
      "mod_code": [
        "else else",
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "return ;",
        "while ( x == true )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        28,
        6,
        15
      ],
      "mod_code": [
        "else else",
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "while ( x == true )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        28,
        5
      ],
      "mod_code": [
        "else else",
        "while ( x == true )"
      ],
      "err_line": 28,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        28,
        5,
        10
      ],
      "mod_code": [
        "else else",
        "while ( x == true )",
        "return ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with no value, in function returning ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        5,
        10,
        15
      ],
      "mod_code": [
        "else else",
        "while ( x == true )",
        "return ;",
        "while ( x == true )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with no value, in function returning ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        5,
        15
      ],
      "mod_code": [
        "else else",
        "while ( x == true )",
        "while ( x == true )"
      ],
      "err_line": 28,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        28,
        10
      ],
      "mod_code": [
        "else else",
        "return ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with no value, in function returning ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        10,
        15
      ],
      "mod_code": [
        "else else",
        "return ;",
        "while ( x == true )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with no value, in function returning ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        15
      ],
      "mod_code": [
        "else else",
        "while ( x == true )"
      ],
      "err_line": 28,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "while ( x == true )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        5,
        10
      ],
      "mod_code": [
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "while ( x == true )",
        "return ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        5,
        10,
        15
      ],
      "mod_code": [
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "while ( x == true )",
        "return ;",
        "while ( x == true )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        5,
        15
      ],
      "mod_code": [
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "while ( x == true )",
        "while ( x == true )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "return ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        10,
        15
      ],
      "mod_code": [
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "return ;",
        "while ( x == true )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "string new_ = ( 9 - ( x % 10 ) ) * pt + new_ ;",
        "while ( x == true )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘long long int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "while ( x == true )",
        "return ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with no value, in function returning ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        10,
        15
      ],
      "mod_code": [
        "while ( x == true )",
        "return ;",
        "while ( x == true )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with no value, in function returning ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        15
      ],
      "mod_code": [
        "return ;",
        "while ( x == true )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with no value, in function returning ‘long long int’ [-fpermissive]"
    }
  ]
}