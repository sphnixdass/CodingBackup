{
  "meta": {
    "index": 1105,
    "hitid": "36FFXPMST9I1PMXTRXO8NLI140BHOG",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1085A",
    "subid": "48704152"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create strings input and ans",
      "code": "string input , ans ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare integers k , i , j , a and n",
      "code": "int k , i , j , a , n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read input",
      "code": "cin >> input ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "ans = input",
      "code": "ans = input ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "n = length of input",
      "code": "n = input . length ( ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "k = n / 2 - 1",
      "code": "k = n / 2 - 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if n is even",
      "code": "if ( n % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "declare integers i and a = 0 and j = n - 1",
      "code": "int i = 0 , j = n - 1 , a = 0 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "in the infinite loop",
      "code": "while ( 1 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "ans [ a ] = input [ j ] , then increment a and decrement j",
      "code": "ans [ a ++ ] = input [ j -- ] ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "ans [ a ] = input [ i ] , then increment a and j",
      "code": "ans [ a ++ ] = input [ i ++ ] ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if j = k , break",
      "code": "if ( j == k ) { break ; }",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "else if n = 1",
      "code": "else if ( n == 1 )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print input and \" \\ n \"",
      "code": "cout << input << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "k = n / 2",
      "code": "k = n / 2 ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "declare integers i and a = 0 and j = n - 1",
      "code": "int i = 0 , j = n - 1 , a = 0 ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "infinite loop",
      "code": "while ( true )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "set ans [ a ] to input [ i ] , then increment a and i",
      "code": "ans [ a ++ ] = input [ i ++ ] ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "set ans [ a ] to input [ j ] , then increment a and decrement j",
      "code": "ans [ a ++ ] = input [ j -- ] ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "if i = k",
      "code": "if ( i == k )",
      "indent": 3
    },
    {
      "line": 24,
      "text": "set ans [ a ] to input [ k ] and increment a",
      "code": "ans [ a ++ ] = input [ k ] ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "reverse ans",
      "code": "reverse ( ans . begin ( ) , ans . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "print ans and \" \\ n \"",
      "code": "cout << ans << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string input >> ans ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int k , i , j , a [ n ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> commamd ;"
      ],
      "err_line": 3,
      "err_msg": "‘commamd’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int n = input . length ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int k = n / 2 - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "ans [ a ] = input [ j ] = input , j -- ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in assignment"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 25,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "reverse ( ans . begin ( ) , ans . reverse ( ) ) ;"
      ],
      "err_line": 29,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘reverse’"
    }
  ]
}