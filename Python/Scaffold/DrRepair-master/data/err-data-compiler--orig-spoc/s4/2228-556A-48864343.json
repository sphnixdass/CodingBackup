{
  "meta": {
    "index": 2228,
    "hitid": "3X0EMNLXEPJOSN4EBMIRRME0N7DPV1",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "556A",
    "subid": "48864343"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , count = integers with count = 0",
      "code": "int n , count = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "s = character",
      "code": "char s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "Read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "Read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if s is 1",
      "code": "if ( s == ' 1 ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "decrement count",
      "code": "count -- ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print absolute value of count and a new line",
      "code": "cout << abs ( count ) << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "set < char > s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin Read n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘Read’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "{ s ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( s == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘max(int&)’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "if ( s == 1 )",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        8,
        5
      ],
      "mod_code": [
        "if ( s == 1 )",
        "else else",
        "{ s ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        8,
        5,
        2
      ],
      "mod_code": [
        "if ( s == 1 )",
        "else else",
        "{ s ;",
        "set < char > s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::set<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        8,
        5,
        12
      ],
      "mod_code": [
        "if ( s == 1 )",
        "else else",
        "{ s ;",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        8,
        2
      ],
      "mod_code": [
        "if ( s == 1 )",
        "else else",
        "set < char > s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        6,
        8,
        2,
        12
      ],
      "mod_code": [
        "if ( s == 1 )",
        "else else",
        "set < char > s ;",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        6,
        8,
        12
      ],
      "mod_code": [
        "if ( s == 1 )",
        "else else",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "if ( s == 1 )",
        "{ s ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        6,
        5,
        2
      ],
      "mod_code": [
        "if ( s == 1 )",
        "{ s ;",
        "set < char > s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::set<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        5,
        2,
        12
      ],
      "mod_code": [
        "if ( s == 1 )",
        "{ s ;",
        "set < char > s ;",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::set<char>’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        5,
        12
      ],
      "mod_code": [
        "if ( s == 1 )",
        "{ s ;",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘max(int&)’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "if ( s == 1 )",
        "set < char > s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        6,
        2,
        12
      ],
      "mod_code": [
        "if ( s == 1 )",
        "set < char > s ;",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "if ( s == 1 )",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘max(int&)’"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "else else",
        "{ s ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        5,
        2
      ],
      "mod_code": [
        "else else",
        "{ s ;",
        "set < char > s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::set<char>’ and ‘char’)"
    },
    {
      "mod_line": [
        8,
        5,
        2,
        6
      ],
      "mod_code": [
        "else else",
        "{ s ;",
        "set < char > s ;",
        "if ( s == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5,
        2,
        12
      ],
      "mod_code": [
        "else else",
        "{ s ;",
        "set < char > s ;",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::set<char>’ and ‘char’)"
    },
    {
      "mod_line": [
        8,
        5,
        6
      ],
      "mod_code": [
        "else else",
        "{ s ;",
        "if ( s == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5,
        6,
        12
      ],
      "mod_code": [
        "else else",
        "{ s ;",
        "if ( s == l )",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5,
        12
      ],
      "mod_code": [
        "else else",
        "{ s ;",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "else else",
        "set < char > s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        8,
        2,
        6
      ],
      "mod_code": [
        "else else",
        "set < char > s ;",
        "if ( s == l )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        8,
        2,
        6,
        12
      ],
      "mod_code": [
        "else else",
        "set < char > s ;",
        "if ( s == l )",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        8,
        2,
        12
      ],
      "mod_code": [
        "else else",
        "set < char > s ;",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "else else",
        "if ( s == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        12
      ],
      "mod_code": [
        "else else",
        "if ( s == l )",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "else else",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "{ s ;",
        "set < char > s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::set<char>’ and ‘char’)"
    },
    {
      "mod_line": [
        5,
        2,
        6
      ],
      "mod_code": [
        "{ s ;",
        "set < char > s ;",
        "if ( s == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        6,
        12
      ],
      "mod_code": [
        "{ s ;",
        "set < char > s ;",
        "if ( s == l )",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        12
      ],
      "mod_code": [
        "{ s ;",
        "set < char > s ;",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::set<char>’ and ‘char’)"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "{ s ;",
        "if ( s == l )"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        12
      ],
      "mod_code": [
        "{ s ;",
        "if ( s == l )",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "{ s ;",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘max(int&)’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "set < char > s ;",
        "if ( s == l )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        2,
        6,
        12
      ],
      "mod_code": [
        "set < char > s ;",
        "if ( s == l )",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "set < char > s ;",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "if ( s == l )",
        "cout << max ( count ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘l’ was not declared in this scope"
    }
  ]
}