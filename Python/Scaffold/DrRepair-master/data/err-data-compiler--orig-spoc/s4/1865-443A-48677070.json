{
  "meta": {
    "index": 1865,
    "hitid": "3ZLW647WALP8O71PPE19CEEOKQX32P",
    "workerid": "A1APYLD4DUK33J",
    "probid": "443A",
    "subid": "48677070"
  },
  "lines": [
    {
      "line": 0,
      "text": "create str with size 1001",
      "code": "char str [ 1001 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integer sum with sum = 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create character set s",
      "code": "set < char > s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read string into str",
      "code": "gets ( str ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer len with len = string length of str",
      "code": "int len = strlen ( str ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to len exclusive , insert str [ i ] into s",
      "code": "for ( int i = 0 ; i < len ; i ++ ) { s . insert ( str [ i ] ) ; }",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create character set iterator iter",
      "code": "set < char > :: iterator iter ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for iter = beginning of s to iter is not end of s , incrementing iter",
      "code": "for ( iter = s . begin ( ) ; iter != s . end ( ) ; iter ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if value of iter is not ' { ' and value of iter is not ' } and value of iter is not ' , ' and value of iter is not ' ' , increment sum",
      "code": "if ( ( * iter != ' { ' ) && ( * iter != ' } ' ) && ( * iter != ' , ' ) && ( * iter != ' ' ) ) sum ++ ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print sum print newline",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int str [ 1001 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::set<char>::iterator {aka std::_Rb_tree_const_iterator<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long str [ 1001 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘long long int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "set < string > s ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(char&)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "set < char > iterator iter ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘iter’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( iter != ' ' && iter != ' } && ( iter != ' } && iter != ' ' ) sum ++ ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::set<char>::iterator {aka std::_Rb_tree_const_iterator<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int str [ 1001 ] ;",
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        9,
        4
      ],
      "mod_code": [
        "int str [ 1001 ] ;",
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;",
        "cin >> str ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1001]’)"
    },
    {
      "mod_line": [
        0,
        9,
        4,
        5
      ],
      "mod_code": [
        "int str [ 1001 ] ;",
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;",
        "cin >> str ;",
        "int len = str . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1001]’)"
    },
    {
      "mod_line": [
        0,
        9,
        4,
        3
      ],
      "mod_code": [
        "int str [ 1001 ] ;",
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;",
        "cin >> str ;",
        "set < string > s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1001]’)"
    },
    {
      "mod_line": [
        0,
        9,
        5
      ],
      "mod_code": [
        "int str [ 1001 ] ;",
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;",
        "int len = str . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        9,
        5,
        3
      ],
      "mod_code": [
        "int str [ 1001 ] ;",
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;",
        "int len = str . size ( ) ;",
        "set < string > s ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        9,
        3
      ],
      "mod_code": [
        "int str [ 1001 ] ;",
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;",
        "set < string > s ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "int str [ 1001 ] ;",
        "cin >> str ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1001]’)"
    },
    {
      "mod_line": [
        0,
        4,
        5
      ],
      "mod_code": [
        "int str [ 1001 ] ;",
        "cin >> str ;",
        "int len = str . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1001]’)"
    },
    {
      "mod_line": [
        0,
        4,
        5,
        3
      ],
      "mod_code": [
        "int str [ 1001 ] ;",
        "cin >> str ;",
        "int len = str . size ( ) ;",
        "set < string > s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1001]’)"
    },
    {
      "mod_line": [
        0,
        4,
        3
      ],
      "mod_code": [
        "int str [ 1001 ] ;",
        "cin >> str ;",
        "set < string > s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1001]’)"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "int str [ 1001 ] ;",
        "int len = str . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        5,
        3
      ],
      "mod_code": [
        "int str [ 1001 ] ;",
        "int len = str . size ( ) ;",
        "set < string > s ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int str [ 1001 ] ;",
        "set < string > s ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;",
        "cin >> str ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::set<char>::iterator {aka std::_Rb_tree_const_iterator<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        4,
        5
      ],
      "mod_code": [
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;",
        "cin >> str ;",
        "int len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        9,
        4,
        5,
        3
      ],
      "mod_code": [
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;",
        "cin >> str ;",
        "int len = str . size ( ) ;",
        "set < string > s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        9,
        4,
        5,
        0
      ],
      "mod_code": [
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;",
        "cin >> str ;",
        "int len = str . size ( ) ;",
        "long long str [ 1001 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        9,
        4,
        3
      ],
      "mod_code": [
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;",
        "cin >> str ;",
        "set < string > s ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(char&)’"
    },
    {
      "mod_line": [
        9,
        4,
        3,
        0
      ],
      "mod_code": [
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;",
        "cin >> str ;",
        "set < string > s ;",
        "long long str [ 1001 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        9,
        4,
        0
      ],
      "mod_code": [
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;",
        "cin >> str ;",
        "long long str [ 1001 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;",
        "int len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        9,
        5,
        3
      ],
      "mod_code": [
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;",
        "int len = str . size ( ) ;",
        "set < string > s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        9,
        5,
        3,
        0
      ],
      "mod_code": [
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;",
        "int len = str . size ( ) ;",
        "set < string > s ;",
        "long long str [ 1001 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘long long int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        5,
        0
      ],
      "mod_code": [
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;",
        "int len = str . size ( ) ;",
        "long long str [ 1001 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘long long int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;",
        "set < string > s ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(char&)’"
    },
    {
      "mod_line": [
        9,
        3,
        0
      ],
      "mod_code": [
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;",
        "set < string > s ;",
        "long long str [ 1001 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘long long int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "if ( iter != ' ' && iter != ' } && iter != ' } && iter != ' ' ) sum ++ ;",
        "long long str [ 1001 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘long long int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "cin >> str ;",
        "int len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        4,
        5,
        3
      ],
      "mod_code": [
        "cin >> str ;",
        "int len = str . size ( ) ;",
        "set < string > s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        4,
        5,
        3,
        0
      ],
      "mod_code": [
        "cin >> str ;",
        "int len = str . size ( ) ;",
        "set < string > s ;",
        "long long str [ 1001 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        4,
        5,
        0
      ],
      "mod_code": [
        "cin >> str ;",
        "int len = str . size ( ) ;",
        "long long str [ 1001 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "cin >> str ;",
        "set < string > s ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘std::set<std::__cxx11::basic_string<char> >::insert(char&)’"
    },
    {
      "mod_line": [
        4,
        3,
        0
      ],
      "mod_code": [
        "cin >> str ;",
        "set < string > s ;",
        "long long str [ 1001 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "cin >> str ;",
        "long long str [ 1001 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "int len = str . size ( ) ;",
        "set < string > s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [1001]’"
    },
    {
      "mod_line": [
        5,
        3,
        0
      ],
      "mod_code": [
        "int len = str . size ( ) ;",
        "set < string > s ;",
        "long long str [ 1001 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘long long int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "int len = str . size ( ) ;",
        "long long str [ 1001 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘long long int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "set < string > s ;",
        "long long str [ 1001 ] ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘long long int*’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    }
  ]
}