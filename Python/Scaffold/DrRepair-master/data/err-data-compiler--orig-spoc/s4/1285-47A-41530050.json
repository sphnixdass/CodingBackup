{
  "meta": {
    "index": 1285,
    "hitid": "3OYHVNTV5TSSRCY1XIR50DYTW2ZKOD",
    "workerid": "A1APYLD4DUK33J",
    "probid": "47A",
    "subid": "41530050"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer array v of size 1000",
      "code": "int v [ 1000 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare prealoc with no arguments , returning void",
      "code": "void prealoc ( )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integer count with count = 1",
      "code": "int count = 1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to 501 exclusive , set v [ i ] to 0",
      "code": "for ( int i = 0 ; i < 501 ; i ++ ) v [ i ] = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to 501 exclusive",
      "code": "for ( int i = 1 ; i < 501 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set v [ i ] to 1",
      "code": "v [ i ] = 1 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment i by count",
      "code": "i += count ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment count",
      "code": "++ count ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 11,
      "text": "run prealoc",
      "code": "prealoc ( ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "while read n is true",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if v [ n ] is true",
      "code": "if ( v [ n ] )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print \" YES \" print newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void prealoc ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "prealoc prealoc ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘prealoc’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "while ( n -- )",
        "else else"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13,
        16,
        11
      ],
      "mod_code": [
        "while ( n -- )",
        "else else",
        "prealoc prealoc ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘prealoc’"
    },
    {
      "mod_line": [
        13,
        16,
        11,
        1
      ],
      "mod_code": [
        "while ( n -- )",
        "else else",
        "prealoc prealoc ;",
        "void prealoc ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        16,
        1
      ],
      "mod_code": [
        "while ( n -- )",
        "else else",
        "void prealoc ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "while ( n -- )",
        "prealoc prealoc ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘prealoc’"
    },
    {
      "mod_line": [
        13,
        11,
        1
      ],
      "mod_code": [
        "while ( n -- )",
        "prealoc prealoc ;",
        "void prealoc ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "while ( n -- )",
        "void prealoc ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        11
      ],
      "mod_code": [
        "else else",
        "prealoc prealoc ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘prealoc’"
    },
    {
      "mod_line": [
        16,
        11,
        1
      ],
      "mod_code": [
        "else else",
        "prealoc prealoc ;",
        "void prealoc ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        1
      ],
      "mod_code": [
        "else else",
        "void prealoc ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "prealoc prealoc ;",
        "void prealoc ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}