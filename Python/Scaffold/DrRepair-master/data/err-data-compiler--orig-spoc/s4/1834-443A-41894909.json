{
  "meta": {
    "index": 1834,
    "hitid": "3E9VAUV7BW8Y9DTHRENE8QTZ5FJYAW",
    "workerid": "AIWEXPJAU66D9",
    "probid": "443A",
    "subid": "41894909"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integers array a with size 30",
      "code": "int a [ 30 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create characters array s with size 5010",
      "code": "char s [ 5010 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let len be integer = 5000",
      "code": "int len = 5000 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read characters from input and store into s",
      "code": "gets ( s ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to len exclusive",
      "code": "for ( int i = 0 ; i < len ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s [ i ] > = ' a ' & & s [ i ] < = ' z ' , a [ s [ i ] - ' a ' ] = 1",
      "code": "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' ) { a [ s [ i ] - ' a ' ] = 1 ; }",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to 26 exclusive",
      "code": "for ( int i = 0 ; i < 26 ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if a [ i ] , increment ans",
      "code": "if ( a [ i ] ) ans ++ ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print ans and a new line",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "getline ( cin , s ) ;"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [5010])’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char a [ 5010 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( input , store ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )"
      ],
      "err_line": 7,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "getline ( cin , s ) ;",
        "char a [ 5010 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        4,
        1,
        6
      ],
      "mod_code": [
        "getline ( cin , s ) ;",
        "char a [ 5010 ] ;",
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        4,
        1,
        6,
        7
      ],
      "mod_code": [
        "getline ( cin , s ) ;",
        "char a [ 5010 ] ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        4,
        1,
        6,
        9
      ],
      "mod_code": [
        "getline ( cin , s ) ;",
        "char a [ 5010 ] ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        4,
        1,
        7
      ],
      "mod_code": [
        "getline ( cin , s ) ;",
        "char a [ 5010 ] ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        4,
        1,
        7,
        9
      ],
      "mod_code": [
        "getline ( cin , s ) ;",
        "char a [ 5010 ] ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )",
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        4,
        1,
        9
      ],
      "mod_code": [
        "getline ( cin , s ) ;",
        "char a [ 5010 ] ;",
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "getline ( cin , s ) ;",
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [5010])’"
    },
    {
      "mod_line": [
        4,
        6,
        7
      ],
      "mod_code": [
        "getline ( cin , s ) ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [5010])’"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        9
      ],
      "mod_code": [
        "getline ( cin , s ) ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )",
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [5010])’"
    },
    {
      "mod_line": [
        4,
        6,
        9
      ],
      "mod_code": [
        "getline ( cin , s ) ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [5010])’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "getline ( cin , s ) ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [5010])’"
    },
    {
      "mod_line": [
        4,
        7,
        9
      ],
      "mod_code": [
        "getline ( cin , s ) ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )",
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [5010])’"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "getline ( cin , s ) ;",
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [5010])’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "char a [ 5010 ] ;",
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        1,
        6,
        7
      ],
      "mod_code": [
        "char a [ 5010 ] ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        1,
        6,
        7,
        9
      ],
      "mod_code": [
        "char a [ 5010 ] ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )",
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        1,
        6,
        7,
        4
      ],
      "mod_code": [
        "char a [ 5010 ] ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )",
        "gets ( input , store ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        1,
        6,
        9
      ],
      "mod_code": [
        "char a [ 5010 ] ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        4
      ],
      "mod_code": [
        "char a [ 5010 ] ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "gets ( input , store ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        1,
        6,
        4
      ],
      "mod_code": [
        "char a [ 5010 ] ;",
        "for ( i = 0 ; i < len ; i ++ )",
        "gets ( input , store ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "char a [ 5010 ] ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        1,
        7,
        9
      ],
      "mod_code": [
        "char a [ 5010 ] ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )",
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        1,
        7,
        9,
        4
      ],
      "mod_code": [
        "char a [ 5010 ] ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "gets ( input , store ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        1,
        7,
        4
      ],
      "mod_code": [
        "char a [ 5010 ] ;",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )",
        "gets ( input , store ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "char a [ 5010 ] ;",
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        1,
        9,
        4
      ],
      "mod_code": [
        "char a [ 5010 ] ;",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "gets ( input , store ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "char a [ 5010 ] ;",
        "gets ( input , store ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [5010]’"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )",
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "gets ( input , store ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )",
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )",
        "gets ( input , store ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )",
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "gets ( input , store ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )",
        "gets ( input , store ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )",
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        7,
        9,
        4
      ],
      "mod_code": [
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )",
        "for ( i = 0 ; i < 26 ; i ++ )",
        "gets ( input , store ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' && a [ s [ i ] - ' a ' ] = 1 )",
        "gets ( input , store ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < 26 ; i ++ )",
        "gets ( input , store ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    }
  ]
}