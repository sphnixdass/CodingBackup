{
  "meta": {
    "index": 600,
    "hitid": "3NZ1E5QA6ZV5QZOPMQIDS4FCSDMB5G",
    "workerid": "A1APYLD4DUK33J",
    "probid": "14A",
    "subid": "40872489"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integers n , m , startx , starty , finishx , finishy , with startx = 55 , starty = 55",
      "code": "int n , m , startx = 55 , starty = 55 , finishx , finishy ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create 2d character array st with size 55 by 55",
      "code": "char st [ 55 ] [ 55 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for j = 1 to m inclusive",
      "code": "for ( int j = 1 ; j <= m ; j ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read st [ i ] [ j ]",
      "code": "cin >> st [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if st [ i ] [ j ] is ' * '",
      "code": "if ( st [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set startx to minimum of startx and i",
      "code": "startx = min ( startx , i ) ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "set starty to minimum of starty and j",
      "code": "starty = min ( starty , j ) ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "set finishx to maximum of finishx and i",
      "code": "finishx = max ( finishx , i ) ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "set finishy to maximum of finishy and j",
      "code": "finishy = max ( finishy , j ) ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "for i = startx to finishx inclusive",
      "code": "for ( int i = startx ; i <= finishx ; i ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for j = starty to finishy inclusive , print st [ i ] [ j ]",
      "code": "for ( int j = starty ; j <= finishy ; j ++ ) { cout << st [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishx = 55 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char st [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "startx = startx ( startx , i ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘startx’ cannot be used as a function"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "starty = starty ( starty , j ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘starty’ cannot be used as a function"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "finishx = finishx ( finishx , i ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘finishx’ cannot be used as a function"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "finishy = finishy ( finishy , j ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘finishy’ cannot be used as a function"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( i = startx ; i <= finishx ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "for ( i = startx ; i <= finishx ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        14,
        5
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "for ( i = startx ; i <= finishx ; i ++ )",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        14,
        5,
        3
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "for ( i = startx ; i <= finishx ; i ++ )",
        "for ( j = 1 ; j <= m ; j ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        14,
        5,
        1
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "for ( i = startx ; i <= finishx ; i ++ )",
        "for ( j = 1 ; j <= m ; j ++ )",
        "char st [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        14,
        5,
        6
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "for ( i = startx ; i <= finishx ; i ++ )",
        "for ( j = 1 ; j <= m ; j ++ )",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        14,
        3
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "for ( i = startx ; i <= finishx ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        14,
        3,
        1
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "for ( i = startx ; i <= finishx ; i ++ )",
        "cin >> n >> k ;",
        "char st [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        14,
        3,
        6
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "for ( i = startx ; i <= finishx ; i ++ )",
        "cin >> n >> k ;",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        14,
        1
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "for ( i = startx ; i <= finishx ; i ++ )",
        "char st [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        14,
        1,
        6
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "for ( i = startx ; i <= finishx ; i ++ )",
        "char st [ 55 ] [ 55 55 ] ;",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        14,
        6
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "for ( i = startx ; i <= finishx ; i ++ )",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        5,
        3
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "for ( j = 1 ; j <= m ; j ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        5,
        3,
        1
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "for ( j = 1 ; j <= m ; j ++ )",
        "cin >> n >> k ;",
        "char st [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        5,
        3,
        6
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "for ( j = 1 ; j <= m ; j ++ )",
        "cin >> n >> k ;",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        5,
        1
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "for ( j = 1 ; j <= m ; j ++ )",
        "char st [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        5,
        1,
        6
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "for ( j = 1 ; j <= m ; j ++ )",
        "char st [ 55 ] [ 55 55 ] ;",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        5,
        6
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "for ( j = 1 ; j <= m ; j ++ )",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "cin >> n >> k ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        3,
        1
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "cin >> n >> k ;",
        "char st [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        3,
        1,
        6
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "cin >> n >> k ;",
        "char st [ 55 ] [ 55 55 ] ;",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        3,
        6
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "cin >> n >> k ;",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "char st [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        1,
        6
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "char st [ 55 ] [ 55 55 ] ;",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "int n , m , startx , starty , finishx , finishx , finishy = 55 ;",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int finishx’"
    },
    {
      "mod_line": [
        14,
        5
      ],
      "mod_code": [
        "for ( i = startx ; i <= finishx ; i ++ )",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        5,
        3
      ],
      "mod_code": [
        "for ( i = startx ; i <= finishx ; i ++ )",
        "for ( j = 1 ; j <= m ; j ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        5,
        3,
        1
      ],
      "mod_code": [
        "for ( i = startx ; i <= finishx ; i ++ )",
        "for ( j = 1 ; j <= m ; j ++ )",
        "cin >> n >> k ;",
        "char st [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        5,
        3,
        6
      ],
      "mod_code": [
        "for ( i = startx ; i <= finishx ; i ++ )",
        "for ( j = 1 ; j <= m ; j ++ )",
        "cin >> n >> k ;",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        5,
        1
      ],
      "mod_code": [
        "for ( i = startx ; i <= finishx ; i ++ )",
        "for ( j = 1 ; j <= m ; j ++ )",
        "char st [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        5,
        1,
        6
      ],
      "mod_code": [
        "for ( i = startx ; i <= finishx ; i ++ )",
        "for ( j = 1 ; j <= m ; j ++ )",
        "char st [ 55 ] [ 55 55 ] ;",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        5,
        6
      ],
      "mod_code": [
        "for ( i = startx ; i <= finishx ; i ++ )",
        "for ( j = 1 ; j <= m ; j ++ )",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "for ( i = startx ; i <= finishx ; i ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        3,
        1
      ],
      "mod_code": [
        "for ( i = startx ; i <= finishx ; i ++ )",
        "cin >> n >> k ;",
        "char st [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        3,
        1,
        6
      ],
      "mod_code": [
        "for ( i = startx ; i <= finishx ; i ++ )",
        "cin >> n >> k ;",
        "char st [ 55 ] [ 55 55 ] ;",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        3,
        6
      ],
      "mod_code": [
        "for ( i = startx ; i <= finishx ; i ++ )",
        "cin >> n >> k ;",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "for ( i = startx ; i <= finishx ; i ++ )",
        "char st [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        1,
        6
      ],
      "mod_code": [
        "for ( i = startx ; i <= finishx ; i ++ )",
        "char st [ 55 ] [ 55 55 ] ;",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "for ( i = startx ; i <= finishx ; i ++ )",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        1
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "cin >> n >> k ;",
        "char st [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        3,
        1,
        6
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "cin >> n >> k ;",
        "char st [ 55 ] [ 55 55 ] ;",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        3,
        6
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "cin >> n >> k ;",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "char st [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        1,
        6
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "char st [ 55 ] [ 55 55 ] ;",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "char st [ 55 ] [ 55 55 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        3,
        1,
        6
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "char st [ 55 ] [ 55 55 ] ;",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "char st [ 55 ] [ 55 55 ] ;",
        "cout << st [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘]’ before numeric constant"
    }
  ]
}