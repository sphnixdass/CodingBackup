{
  "meta": {
    "index": 2127,
    "hitid": "388CL5C1RJHTJ1UWE58GV4E7AI1LH9",
    "workerid": "AIWEXPJAU66D9",
    "probid": "705A",
    "subid": "48717836"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer variable n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "char pointer * s1 = \" I hate it \"",
      "code": "char * s1 = \" I hate it \" ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "char pointer * s2 = \" I hate that \"",
      "code": "char * s2 = \" I hate that \" ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "char pointer * s3 = \" I love that \"",
      "code": "char * s3 = \" I love that \" ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "char pointer * s4 = \" I love it \"",
      "code": "char * s4 = \" I love it \" ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if n = 1",
      "code": "if ( n == 1 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print s1",
      "code": "cout << s1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else if n is odd",
      "code": "else if ( n % 2 == 1 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "loop i from 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if i = n",
      "code": "if ( i == n )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "print s1",
      "code": "cout << s1 ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "else if i is odd",
      "code": "else if ( i % 2 == 1 )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "print s2 and \" \"",
      "code": "cout << s2 << \" \" ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 16,
      "text": "print s3 and \" \"",
      "code": "cout << s3 << \" \" ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "else {",
      "code": "else",
      "indent": 1
    },
    {
      "line": 19,
      "text": "loop i from 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if i is equal to n",
      "code": "if ( i == n )",
      "indent": 3
    },
    {
      "line": 21,
      "text": "print s4",
      "code": "cout << s4 ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "else if i is odd",
      "code": "else if ( i % 2 == 0 )",
      "indent": 3
    },
    {
      "line": 23,
      "text": "print s3 and \" \"",
      "code": "cout << s3 << \" \" ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 25,
      "text": "print s2 and \" \"",
      "code": "cout << s2 << \" \" ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char * s1 = \" I \" = \" + \" ;"
      ],
      "err_line": 3,
      "err_msg": "assignment of read-only location ‘\"I\"’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "char * s2 = \" I \" = \" + \" ;"
      ],
      "err_line": 4,
      "err_msg": "assignment of read-only location ‘\"I\"’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char * s3 = \" I \" , \" * \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before string constant"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "char * s4 = \" I \" , s4 ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘char s4’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}