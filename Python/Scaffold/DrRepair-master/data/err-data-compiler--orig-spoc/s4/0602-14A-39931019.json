{
  "meta": {
    "index": 602,
    "hitid": "36818Z1KV37XTAWT2TUOIWXMWZA3AN",
    "workerid": "A1APYLD4DUK33J",
    "probid": "14A",
    "subid": "39931019"
  },
  "lines": [
    {
      "line": 0,
      "text": "create 2d integer array f with size 90 by 100",
      "code": "int f [ 90 ] [ 100 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , m",
      "code": "int n , m ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create character s",
      "code": "char s ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integer array hangx with size 4409",
      "code": "int hangx [ 4409 ] ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "create integer array coty with size 4999",
      "code": "int coty [ 4999 ] ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "create integer tt with tt = 0",
      "code": "int tt = 0 ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "declare xaydung with integers hang , cot as arguments , returning void",
      "code": "void xaydung ( int hang , int cot )",
      "indent": 0
    },
    {
      "line": 7,
      "text": "create integer x with x = hang",
      "code": "int x = hang ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create integer y with y = cot",
      "code": "int y = cot ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create integer bao1 with bao1 = 0",
      "code": "int bao1 = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "create integer bao2 with bao2 = 0",
      "code": "int bao2 = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "create integer demx with demx = 0",
      "code": "int demx = 0 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "create integer demy with demy = 0",
      "code": "int demy = 0 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "create integer maxx",
      "code": "int maxx ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if m is less than n",
      "code": "if ( m < n )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "set maxx to n",
      "code": "maxx = n ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 17,
      "text": "set maxx to m",
      "code": "maxx = m ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "for i = 1 to maxx inclusive",
      "code": "for ( int i = 1 ; i <= maxx ; i ++ )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "increment x by i",
      "code": "x += i ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "increment y by i",
      "code": "y += i ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if bao1 is 0 and x is less than or equal to n and f [ x ] [ col ] is greater than 0",
      "code": "if ( bao1 == 0 && x <= n && f [ x ] [ cot ] > 0 )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "increment demx",
      "code": "++ demx ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 24,
      "text": "set bao1 to 1",
      "code": "bao1 = 1 ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "if bao2 is 0 and y is less than or equal m and f [ hang ] [ y ] is greater than 0",
      "code": "if ( bao2 == 0 && y <= m && f [ hang ] [ y ] > 0 )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "increment demy",
      "code": "++ demy ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 28,
      "text": "set bao2 to 1",
      "code": "bao2 = 1 ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "if bao1 * bao2 is 1 , break loop",
      "code": "if ( bao1 * bao2 == 1 ) break ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "decrement x by i",
      "code": "x -= i ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "decrement y by i",
      "code": "y -= i ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 33,
      "text": "if demx is n - 1",
      "code": "if ( demx == n - 1 )",
      "indent": 1
    },
    {
      "line": 34,
      "text": "if coty [ 0 ] is greater than cot or coty [ tt - 1 ] is less than cot",
      "code": "if ( coty [ 0 ] > cot || coty [ tt - 1 ] < cot )",
      "indent": 2
    },
    {
      "line": 35,
      "text": "for i = 1 to n inclusive , set f [ i ] [ cot ] to 2",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) f [ i ] [ cot ] = 2 ;",
      "indent": 3
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 37,
      "text": "if demy is m - 1",
      "code": "if ( demy == m - 1 )",
      "indent": 1
    },
    {
      "line": 38,
      "text": "if hangx [ 0 ] is greater than hang or hang is greater than hangx [ tt - 1 ]",
      "code": "if ( hangx [ 0 ] > hang || hang > hangx [ tt - 1 ] )",
      "indent": 2
    },
    {
      "line": 39,
      "text": "for i = 1 to m inclusive , set f [ hang ] [ i ] to 2",
      "code": "for ( int i = 1 ; i <= m ; i ++ ) f [ hang ] [ i ] = 2 ;",
      "indent": 3
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 43,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 44,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 45,
      "text": "for j = 1 to m inclusive",
      "code": "for ( int j = 1 ; j <= m ; j ++ )",
      "indent": 2
    },
    {
      "line": 46,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 3
    },
    {
      "line": 47,
      "text": "if s is ' . '",
      "code": "if ( s == ' . ' )",
      "indent": 3
    },
    {
      "line": 48,
      "text": "set f [ i ] [ j ] to 1",
      "code": "f [ i ] [ j ] = 1 ;",
      "indent": 4
    },
    {
      "line": 49,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 50,
      "text": "set f [ i ] [ j ] to 0",
      "code": "f [ i ] [ j ] = 0 ;",
      "indent": 4
    },
    {
      "line": 51,
      "text": "set hangx [ tt ] to i",
      "code": "hangx [ tt ] = i ;",
      "indent": 4
    },
    {
      "line": 52,
      "text": "set coty [ tt ] to j",
      "code": "coty [ tt ] = j ;",
      "indent": 4
    },
    {
      "line": 53,
      "text": "increment tt",
      "code": "tt ++ ;",
      "indent": 4
    },
    {
      "line": 54,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 55,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 56,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 57,
      "text": "sort elements from hangx to hangx + tt",
      "code": "sort ( hangx , hangx + tt ) ;",
      "indent": 1
    },
    {
      "line": 58,
      "text": "sort coty to coty + tt",
      "code": "sort ( coty , coty + tt ) ;",
      "indent": 1
    },
    {
      "line": 59,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 60,
      "text": "for j = 1 to m inclusive",
      "code": "for ( int j = 1 ; j <= m ; j ++ )",
      "indent": 2
    },
    {
      "line": 61,
      "text": "if f [ i ] [ j ] is greater than 0 , run xaydung with i , j as arguments",
      "code": "if ( f [ i ] [ j ] > 0 ) { xaydung ( i , j ) ; }",
      "indent": 3
    },
    {
      "line": 62,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 63,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 64,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 65,
      "text": "create integer chodoi with chodoi = 0",
      "code": "int chodoi = 0 ;",
      "indent": 2
    },
    {
      "line": 66,
      "text": "for j = 1 to m inclusive",
      "code": "for ( int j = 1 ; j <= m ; j ++ )",
      "indent": 2
    },
    {
      "line": 67,
      "text": "if f [ i ] [ j ] is not 2",
      "code": "if ( f [ i ] [ j ] != 2 )",
      "indent": 3
    },
    {
      "line": 68,
      "text": "if f [ i ] [ j ] is 1",
      "code": "if ( f [ i ] [ j ] == 1 )",
      "indent": 4
    },
    {
      "line": 69,
      "text": "print \" . \"",
      "code": "cout << \" . \" ;",
      "indent": 5
    },
    {
      "line": 70,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 71,
      "text": "print \" * \"",
      "code": "cout << \" * \" ;",
      "indent": 5
    },
    {
      "line": 72,
      "text": "if chodoi is 0 , set chodoi to 1",
      "code": "if ( chodoi == 0 ) chodoi = 1 ;",
      "indent": 4
    },
    {
      "line": 73,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 74,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 75,
      "text": "if chodoi is 1 , print newline",
      "code": "if ( chodoi == 1 ) cout << endl ;",
      "indent": 2
    },
    {
      "line": 76,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 77,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 78,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )"
      ],
      "err_line": 21,
      "err_msg": "‘col’ was not declared in this scope"
    },
    {
      "mod_line": [
        61
      ],
      "mod_code": [
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;"
      ],
      "err_line": 61,
      "err_msg": "assignment of function ‘void xaydung(int, int)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "character = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘character’ does not name a type"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "y = cot ;"
      ],
      "err_line": 8,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "bao1 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘bao1’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "bao2 = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "‘bao2’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "demx = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘demx’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "demy = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "‘demy’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int t ;"
      ],
      "err_line": 15,
      "err_msg": "‘maxx’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( i = 1 ; i <= maxx ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] >= 0 )"
      ],
      "err_line": 21,
      "err_msg": "‘col’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 27,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 43,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        44
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 44,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        45
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 45,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        47
      ],
      "mod_code": [
        "else if ( s == ' . ' )"
      ],
      "err_line": 47,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        49
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 49,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        51
      ],
      "mod_code": [
        "hangx [ tt ] ] = i ;"
      ],
      "err_line": 51,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        52
      ],
      "mod_code": [
        "coty [ tt ] ] = j ;"
      ],
      "err_line": 52,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        57
      ],
      "mod_code": [
        "sort ( hangx , hangx + tt tt ;"
      ],
      "err_line": 57,
      "err_msg": "expected ‘)’ before ‘tt’"
    },
    {
      "mod_line": [
        59
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 59,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        60
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 60,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        61
      ],
      "mod_code": [
        "if ( f [ i ] [ j ] > 0 ) { xaydung = xaydung ( i , j ) ; }"
      ],
      "err_line": 61,
      "err_msg": "assignment of function ‘void xaydung(int, int)’"
    },
    {
      "mod_line": [
        64
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 64,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        65
      ],
      "mod_code": [
        "chodoi = 0 ;"
      ],
      "err_line": 65,
      "err_msg": "‘chodoi’ was not declared in this scope"
    },
    {
      "mod_line": [
        66
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 66,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        70
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 70,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        21
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        21,
        61
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        21,
        61,
        23
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        21,
        61,
        47
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "else if ( s == ' . ' )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        21,
        61,
        9
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "bao1 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        21,
        23
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        21,
        23,
        47
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "else else",
        "else if ( s == ' . ' )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        21,
        23,
        9
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "else else",
        "bao1 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        21,
        47
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "else if ( s == ' . ' )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        21,
        47,
        9
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "else if ( s == ' . ' )",
        "bao1 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        21,
        9
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "bao1 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        61
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        61,
        23
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        61,
        23,
        47
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "else else",
        "else if ( s == ' . ' )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        61,
        23,
        9
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "else else",
        "bao1 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        61,
        47
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "else if ( s == ' . ' )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        61,
        47,
        9
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "else if ( s == ' . ' )",
        "bao1 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        61,
        9
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "bao1 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        23
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        23,
        47
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "else else",
        "else if ( s == ' . ' )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        23,
        47,
        9
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "else else",
        "else if ( s == ' . ' )",
        "bao1 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        23,
        9
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "else else",
        "bao1 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        47
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "else if ( s == ' . ' )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        47,
        9
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "else if ( s == ' . ' )",
        "bao1 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "void xaydung ( int hang , int cot ) ;",
        "bao1 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        61
      ],
      "mod_code": [
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘col’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        61,
        23
      ],
      "mod_code": [
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "else else"
      ],
      "err_line": 21,
      "err_msg": "‘col’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        61,
        23,
        47
      ],
      "mod_code": [
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "else else",
        "else if ( s == ' . ' )"
      ],
      "err_line": 21,
      "err_msg": "‘col’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        61,
        23,
        9
      ],
      "mod_code": [
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "else else",
        "bao1 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘bao1’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        61,
        47
      ],
      "mod_code": [
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "else if ( s == ' . ' )"
      ],
      "err_line": 21,
      "err_msg": "‘col’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        61,
        47,
        9
      ],
      "mod_code": [
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "else if ( s == ' . ' )",
        "bao1 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘bao1’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        61,
        9
      ],
      "mod_code": [
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "bao1 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘bao1’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23
      ],
      "mod_code": [
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "else else"
      ],
      "err_line": 21,
      "err_msg": "‘col’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23,
        47
      ],
      "mod_code": [
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "else else",
        "else if ( s == ' . ' )"
      ],
      "err_line": 21,
      "err_msg": "‘col’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23,
        47,
        9
      ],
      "mod_code": [
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "else else",
        "else if ( s == ' . ' )",
        "bao1 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘bao1’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23,
        9
      ],
      "mod_code": [
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "else else",
        "bao1 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘bao1’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        47
      ],
      "mod_code": [
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "else if ( s == ' . ' )"
      ],
      "err_line": 21,
      "err_msg": "‘col’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        47,
        9
      ],
      "mod_code": [
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "else if ( s == ' . ' )",
        "bao1 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘bao1’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        9
      ],
      "mod_code": [
        "if ( bao1 == 0 && x <= n && f [ x ] [ col ] > 0 )",
        "bao1 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘bao1’ was not declared in this scope"
    },
    {
      "mod_line": [
        61,
        23
      ],
      "mod_code": [
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        61,
        23,
        47
      ],
      "mod_code": [
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "else else",
        "else if ( s == ' . ' )"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        61,
        23,
        47,
        9
      ],
      "mod_code": [
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "else else",
        "else if ( s == ' . ' )",
        "bao1 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘bao1’ was not declared in this scope"
    },
    {
      "mod_line": [
        61,
        23,
        9
      ],
      "mod_code": [
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "else else",
        "bao1 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘bao1’ was not declared in this scope"
    },
    {
      "mod_line": [
        61,
        47
      ],
      "mod_code": [
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "else if ( s == ' . ' )"
      ],
      "err_line": 47,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        61,
        47,
        9
      ],
      "mod_code": [
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "else if ( s == ' . ' )",
        "bao1 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘bao1’ was not declared in this scope"
    },
    {
      "mod_line": [
        61,
        9
      ],
      "mod_code": [
        "if ( f [ i ] [ j ] > 0 ) xaydung = xaydung ( i , j ) ;",
        "bao1 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘bao1’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        47
      ],
      "mod_code": [
        "else else",
        "else if ( s == ' . ' )"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        23,
        47,
        9
      ],
      "mod_code": [
        "else else",
        "else if ( s == ' . ' )",
        "bao1 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘bao1’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        9
      ],
      "mod_code": [
        "else else",
        "bao1 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘bao1’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        9
      ],
      "mod_code": [
        "else if ( s == ' . ' )",
        "bao1 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘bao1’ was not declared in this scope"
    }
  ]
}