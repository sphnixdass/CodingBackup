{
  "meta": {
    "index": 2510,
    "hitid": "3VMHWJRYHVA45ZKFXYN43DXH1C4FXX",
    "workerid": "A121O0X5UNK37S",
    "probid": "94A",
    "subid": "45882512"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let str be string",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let m be map < string , int >",
      "code": "map < string , int > m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to 9 inclusive",
      "code": "for ( int i = 0 ; i < 10 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let s be string",
      "code": "string s ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "assign i to m [ s ]",
      "code": "m [ s ] = i ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "let ans be string and assign blank to ans",
      "code": "string ans = \" \" ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 , i less than str . size ( ) , increment i by 10 . Incremetn ans by ans + = char ( m [ str . substr ( i , 10 ) ] + ' 0 ' )",
      "code": "for ( int i = 0 ; i < str . size ( ) ; i += 10 ) ans += char ( m [ str . substr ( i , 10 ) ] + ' 0 ' ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "string ans = ' blank ' ;"
      ],
      "err_line": 9,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += 10 . substr ( i , 10 ) ;"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘substr’ in ‘10’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char str ;"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "map < string , int > s ;"
      ],
      "err_line": 7,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 9 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "string ans = blank ;"
      ],
      "err_line": 9,
      "err_msg": "‘blank’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += m . substr ( i , 10 ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘class std::map<std::__cxx11::basic_string<char>, int>’ has no member named ‘substr’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += 10 . substr ( i , 10 ) ;"
      ],
      "err_line": 9,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        9,
        10,
        7
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += 10 . substr ( i , 10 ) ;",
        "m [ s ] = ' i ' ;"
      ],
      "err_line": 9,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        9,
        10,
        7,
        3
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += 10 . substr ( i , 10 ) ;",
        "m [ s ] = ' i ' ;",
        "map < string , int > s ;"
      ],
      "err_line": 7,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        7,
        6
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += 10 . substr ( i , 10 ) ;",
        "m [ s ] = ' i ' ;",
        "gets ( s ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        10,
        3
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += 10 . substr ( i , 10 ) ;",
        "map < string , int > s ;"
      ],
      "err_line": 7,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        3,
        6
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += 10 . substr ( i , 10 ) ;",
        "map < string , int > s ;",
        "gets ( s ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        10,
        6
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += 10 . substr ( i , 10 ) ;",
        "gets ( s ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "m [ s ] = ' i ' ;"
      ],
      "err_line": 9,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        9,
        7,
        3
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "m [ s ] = ' i ' ;",
        "map < string , int > s ;"
      ],
      "err_line": 7,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7,
        3,
        6
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "m [ s ] = ' i ' ;",
        "map < string , int > s ;",
        "gets ( s ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        7,
        3,
        10
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "m [ s ] = ' i ' ;",
        "map < string , int > s ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += m . substr ( i , 10 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7,
        6
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "m [ s ] = ' i ' ;",
        "gets ( s ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        7,
        6,
        10
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "m [ s ] = ' i ' ;",
        "gets ( s ) ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += m . substr ( i , 10 ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        7,
        10
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "m [ s ] = ' i ' ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += m . substr ( i , 10 ) ;"
      ],
      "err_line": 9,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "map < string , int > s ;"
      ],
      "err_line": 7,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        6
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "map < string , int > s ;",
        "gets ( s ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        3,
        6,
        10
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "map < string , int > s ;",
        "gets ( s ) ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += m . substr ( i , 10 ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        3,
        10
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "map < string , int > s ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += m . substr ( i , 10 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "gets ( s ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        6,
        10
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "gets ( s ) ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += m . substr ( i , 10 ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "string ans = ' blank ' ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += m . substr ( i , 10 ) ;"
      ],
      "err_line": 9,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += 10 . substr ( i , 10 ) ;",
        "m [ s ] = ' i ' ;"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘substr’ in ‘10’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        10,
        7,
        3
      ],
      "mod_code": [
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += 10 . substr ( i , 10 ) ;",
        "m [ s ] = ' i ' ;",
        "map < string , int > s ;"
      ],
      "err_line": 7,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7,
        3,
        6
      ],
      "mod_code": [
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += 10 . substr ( i , 10 ) ;",
        "m [ s ] = ' i ' ;",
        "map < string , int > s ;",
        "gets ( s ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        7,
        6
      ],
      "mod_code": [
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += 10 . substr ( i , 10 ) ;",
        "m [ s ] = ' i ' ;",
        "gets ( s ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += 10 . substr ( i , 10 ) ;",
        "map < string , int > s ;"
      ],
      "err_line": 7,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        6
      ],
      "mod_code": [
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += 10 . substr ( i , 10 ) ;",
        "map < string , int > s ;",
        "gets ( s ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += 10 . substr ( i , 10 ) ;",
        "gets ( s ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "m [ s ] = ' i ' ;",
        "map < string , int > s ;"
      ],
      "err_line": 7,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        6
      ],
      "mod_code": [
        "m [ s ] = ' i ' ;",
        "map < string , int > s ;",
        "gets ( s ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        3,
        6,
        10
      ],
      "mod_code": [
        "m [ s ] = ' i ' ;",
        "map < string , int > s ;",
        "gets ( s ) ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += m . substr ( i , 10 ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        3,
        10
      ],
      "mod_code": [
        "m [ s ] = ' i ' ;",
        "map < string , int > s ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += m . substr ( i , 10 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "m [ s ] = ' i ' ;",
        "gets ( s ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        6,
        10
      ],
      "mod_code": [
        "m [ s ] = ' i ' ;",
        "gets ( s ) ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += m . substr ( i , 10 ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "m [ s ] = ' i ' ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += m . substr ( i , 10 ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘class std::map<std::__cxx11::basic_string<char>, int>’ has no member named ‘substr’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "map < string , int > s ;",
        "gets ( s ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        6,
        10
      ],
      "mod_code": [
        "map < string , int > s ;",
        "gets ( s ) ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += m . substr ( i , 10 ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "map < string , int > s ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += m . substr ( i , 10 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "gets ( s ) ;",
        "for ( char i = 0 ; i < str . size ( ) ; i ++ ) ans += m . substr ( i , 10 ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    }
  ]
}