{
  "meta": {
    "index": 2403,
    "hitid": "322ZSN9Z5GENQ2E687QON6FKZQ8T45",
    "workerid": "AIWEXPJAU66D9",
    "probid": "962A",
    "subid": "46972583"
  },
  "lines": [
    {
      "line": 0,
      "text": "PI is a new constant integer with value 3 . 141592653589793",
      "code": "const int PI = 3.141592653589793 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "inf is a new constant integer with value 1000111222",
      "code": "const int inf = 1000111222 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare new constant integer called N = 500007",
      "code": "const int N = 500007 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create an array of long longs ar with N elements and variables tot , ans and just",
      "code": "long long ar [ N ] , tot , ans , just ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "define new integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read variable n from the input",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "start for loop from i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read input to ar [ i ]",
      "code": "cin >> ar [ i ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increase tot by ar [ i ]",
      "code": "tot += ar [ i ] ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for integer i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "increase just by ar [ i ]",
      "code": "just += ar [ i ] ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if just > = ( tot + 1 ) / 2",
      "code": "if ( just >= ( tot + 1 ) / 2 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "assign the new value = i to ans",
      "code": "ans = i ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print ans and \" \\ n \"",
      "code": "cout << ans << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;"
      ],
      "err_line": 14,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const int PI = integer ;"
      ],
      "err_line": 0,
      "err_msg": "‘integer’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "const N = 500007 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "long long ar [ N ] , ans , just ;"
      ],
      "err_line": 9,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "ar >> ar [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘long long int [500007]’ and ‘long long int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘/’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "ans = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        8
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "ans = 1 ;",
        "ar >> ar [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘long long int [500007]’ and ‘long long int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        14,
        8,
        15
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "ans = 1 ;",
        "ar >> ar [ i ] ;",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘long long int [500007]’ and ‘long long int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        14,
        8,
        2
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "ans = 1 ;",
        "ar >> ar [ i ] ;",
        "const N = 500007 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        3,
        14,
        8,
        13
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "ans = 1 ;",
        "ar >> ar [ i ] ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘long long int [500007]’ and ‘long long int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        14,
        15
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "ans = 1 ;",
        "break break ;"
      ],
      "err_line": 14,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        15,
        2
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "ans = 1 ;",
        "break break ;",
        "const N = 500007 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        3,
        14,
        15,
        13
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "ans = 1 ;",
        "break break ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        14,
        2
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "ans = 1 ;",
        "const N = 500007 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        3,
        14,
        2,
        13
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "ans = 1 ;",
        "const N = 500007 ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        3,
        14,
        13
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "ans = 1 ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "ar >> ar [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘long long int [500007]’ and ‘long long int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        8,
        15
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "ar >> ar [ i ] ;",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘long long int [500007]’ and ‘long long int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        8,
        15,
        2
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "ar >> ar [ i ] ;",
        "break break ;",
        "const N = 500007 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        3,
        8,
        15,
        13
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "ar >> ar [ i ] ;",
        "break break ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘long long int [500007]’ and ‘long long int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        8,
        2
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "ar >> ar [ i ] ;",
        "const N = 500007 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        3,
        8,
        2,
        13
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "ar >> ar [ i ] ;",
        "const N = 500007 ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        3,
        8,
        13
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "ar >> ar [ i ] ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘long long int [500007]’ and ‘long long int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "break break ;"
      ],
      "err_line": 14,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        15,
        2
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "break break ;",
        "const N = 500007 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        3,
        15,
        2,
        13
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "break break ;",
        "const N = 500007 ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        3,
        15,
        13
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "break break ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "const N = 500007 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        3,
        2,
        13
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "const N = 500007 ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "long long ar [ N ] , tot , just ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘/’ token"
    },
    {
      "mod_line": [
        14,
        8
      ],
      "mod_code": [
        "ans = 1 ;",
        "ar >> ar [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘long long int [500007]’ and ‘long long int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        14,
        8,
        15
      ],
      "mod_code": [
        "ans = 1 ;",
        "ar >> ar [ i ] ;",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘long long int [500007]’ and ‘long long int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        14,
        8,
        15,
        2
      ],
      "mod_code": [
        "ans = 1 ;",
        "ar >> ar [ i ] ;",
        "break break ;",
        "const N = 500007 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        14,
        8,
        15,
        13
      ],
      "mod_code": [
        "ans = 1 ;",
        "ar >> ar [ i ] ;",
        "break break ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘long long int [500007]’ and ‘long long int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        14,
        8,
        2
      ],
      "mod_code": [
        "ans = 1 ;",
        "ar >> ar [ i ] ;",
        "const N = 500007 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        14,
        8,
        2,
        13
      ],
      "mod_code": [
        "ans = 1 ;",
        "ar >> ar [ i ] ;",
        "const N = 500007 ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        14,
        8,
        13
      ],
      "mod_code": [
        "ans = 1 ;",
        "ar >> ar [ i ] ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘long long int [500007]’ and ‘long long int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "ans = 1 ;",
        "break break ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14,
        15,
        2
      ],
      "mod_code": [
        "ans = 1 ;",
        "break break ;",
        "const N = 500007 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        14,
        15,
        2,
        13
      ],
      "mod_code": [
        "ans = 1 ;",
        "break break ;",
        "const N = 500007 ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        14,
        15,
        13
      ],
      "mod_code": [
        "ans = 1 ;",
        "break break ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘/’ token"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "ans = 1 ;",
        "const N = 500007 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        14,
        2,
        13
      ],
      "mod_code": [
        "ans = 1 ;",
        "const N = 500007 ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        14,
        13
      ],
      "mod_code": [
        "ans = 1 ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘/’ token"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "ar >> ar [ i ] ;",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘long long int [500007]’ and ‘long long int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        8,
        15,
        2
      ],
      "mod_code": [
        "ar >> ar [ i ] ;",
        "break break ;",
        "const N = 500007 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        8,
        15,
        2,
        13
      ],
      "mod_code": [
        "ar >> ar [ i ] ;",
        "break break ;",
        "const N = 500007 ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        8,
        15,
        13
      ],
      "mod_code": [
        "ar >> ar [ i ] ;",
        "break break ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘long long int [500007]’ and ‘long long int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "ar >> ar [ i ] ;",
        "const N = 500007 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        8,
        2,
        13
      ],
      "mod_code": [
        "ar >> ar [ i ] ;",
        "const N = 500007 ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "ar >> ar [ i ] ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘long long int [500007]’ and ‘long long int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        15,
        2
      ],
      "mod_code": [
        "break break ;",
        "const N = 500007 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        15,
        2,
        13
      ],
      "mod_code": [
        "break break ;",
        "const N = 500007 ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "break break ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘/’ token"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "const N = 500007 ;",
        "if ( just >= ( tot + 1 ) ) / 2 ;"
      ],
      "err_line": 2,
      "err_msg": "‘N’ does not name a type"
    }
  ]
}