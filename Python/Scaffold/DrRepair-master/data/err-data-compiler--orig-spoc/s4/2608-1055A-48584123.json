{
  "meta": {
    "index": 2608,
    "hitid": "34O39PNDK62UVMMNJXVGV5K8LXTRBX",
    "workerid": "A1AYVATMT88U1W",
    "probid": "1055A",
    "subid": "48584123"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , s be integers",
      "code": "int n , s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , s",
      "code": "cin >> n >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "a = array of integers of length n , b = array of integers of length n",
      "code": "int a [ n ] , b [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive , read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive , read b [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> b [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if a [ 0 ] equals 0",
      "code": "if ( a [ 0 ] == 0 )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print NO and newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else if a [ s - 1 ] equals 0 and b [ s - 1 ] equals 0",
      "code": "else if ( a [ s - 1 ] == 0 && b [ s - 1 ] == 0 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print NO and newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else if a [ s - 1 ] equals 1",
      "code": "else if ( a [ s - 1 ] == 1 )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print YES and newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else if a [ s - 1 ] equals 0 and b [ s - 1 ] equals 1",
      "code": "else if ( a [ s - 1 ] == 0 && b [ s - 1 ] == 1 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "the integer value of k = 0",
      "code": "int k = 0 ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "for i = s to n exclusive",
      "code": "for ( int i = s ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if a [ i ] equals 1 and b [ i ] equals 1",
      "code": "if ( a [ i ] == 1 && b [ i ] == 1 )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "k is equal to 1",
      "code": "k = 1 ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "print YES and newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "if k equals 0",
      "code": "if ( k == 0 )",
      "indent": 2
    },
    {
      "line": 25,
      "text": "print NO and newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int a [ n ] , a [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "k = 0 ;"
      ],
      "err_line": 16,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = s ; i < n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        3
      ],
      "mod_code": [
        "k = 0 ;",
        "int a [ n ] , a [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        16,
        3,
        12
      ],
      "mod_code": [
        "k = 0 ;",
        "int a [ n ] , a [ n ] ;",
        "else if ( a [ s - 1 ] == ' 1 ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        16,
        3,
        12,
        17
      ],
      "mod_code": [
        "k = 0 ;",
        "int a [ n ] , a [ n ] ;",
        "else if ( a [ s - 1 ] == ' 1 ' )",
        "for ( i = s ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        16,
        3,
        12,
        2
      ],
      "mod_code": [
        "k = 0 ;",
        "int a [ n ] , a [ n ] ;",
        "else if ( a [ s - 1 ] == ' 1 ' )",
        "cin >> n , s ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        16,
        3,
        12,
        6
      ],
      "mod_code": [
        "k = 0 ;",
        "int a [ n ] , a [ n ] ;",
        "else if ( a [ s - 1 ] == ' 1 ' )",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        16,
        3,
        17
      ],
      "mod_code": [
        "k = 0 ;",
        "int a [ n ] , a [ n ] ;",
        "for ( i = s ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        16,
        3,
        17,
        2
      ],
      "mod_code": [
        "k = 0 ;",
        "int a [ n ] , a [ n ] ;",
        "for ( i = s ; i < n ; i ++ )",
        "cin >> n , s ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        16,
        3,
        17,
        6
      ],
      "mod_code": [
        "k = 0 ;",
        "int a [ n ] , a [ n ] ;",
        "for ( i = s ; i < n ; i ++ )",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        16,
        3,
        2
      ],
      "mod_code": [
        "k = 0 ;",
        "int a [ n ] , a [ n ] ;",
        "cin >> n , s ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        16,
        3,
        2,
        6
      ],
      "mod_code": [
        "k = 0 ;",
        "int a [ n ] , a [ n ] ;",
        "cin >> n , s ;",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        16,
        3,
        6
      ],
      "mod_code": [
        "k = 0 ;",
        "int a [ n ] , a [ n ] ;",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        16,
        12
      ],
      "mod_code": [
        "k = 0 ;",
        "else if ( a [ s - 1 ] == ' 1 ' )"
      ],
      "err_line": 16,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        12,
        17
      ],
      "mod_code": [
        "k = 0 ;",
        "else if ( a [ s - 1 ] == ' 1 ' )",
        "for ( i = s ; i < n ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        12,
        17,
        2
      ],
      "mod_code": [
        "k = 0 ;",
        "else if ( a [ s - 1 ] == ' 1 ' )",
        "for ( i = s ; i < n ; i ++ )",
        "cin >> n , s ;"
      ],
      "err_line": 16,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        12,
        17,
        6
      ],
      "mod_code": [
        "k = 0 ;",
        "else if ( a [ s - 1 ] == ' 1 ' )",
        "for ( i = s ; i < n ; i ++ )",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 16,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        12,
        2
      ],
      "mod_code": [
        "k = 0 ;",
        "else if ( a [ s - 1 ] == ' 1 ' )",
        "cin >> n , s ;"
      ],
      "err_line": 16,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        12,
        2,
        6
      ],
      "mod_code": [
        "k = 0 ;",
        "else if ( a [ s - 1 ] == ' 1 ' )",
        "cin >> n , s ;",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 16,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        12,
        6
      ],
      "mod_code": [
        "k = 0 ;",
        "else if ( a [ s - 1 ] == ' 1 ' )",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 16,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17
      ],
      "mod_code": [
        "k = 0 ;",
        "for ( i = s ; i < n ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        2
      ],
      "mod_code": [
        "k = 0 ;",
        "for ( i = s ; i < n ; i ++ )",
        "cin >> n , s ;"
      ],
      "err_line": 16,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        2,
        6
      ],
      "mod_code": [
        "k = 0 ;",
        "for ( i = s ; i < n ; i ++ )",
        "cin >> n , s ;",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 16,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        6
      ],
      "mod_code": [
        "k = 0 ;",
        "for ( i = s ; i < n ; i ++ )",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 16,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2
      ],
      "mod_code": [
        "k = 0 ;",
        "cin >> n , s ;"
      ],
      "err_line": 16,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2,
        6
      ],
      "mod_code": [
        "k = 0 ;",
        "cin >> n , s ;",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 16,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6
      ],
      "mod_code": [
        "k = 0 ;",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 16,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "int a [ n ] , a [ n ] ;",
        "else if ( a [ s - 1 ] == ' 1 ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        3,
        12,
        17
      ],
      "mod_code": [
        "int a [ n ] , a [ n ] ;",
        "else if ( a [ s - 1 ] == ' 1 ' )",
        "for ( i = s ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        3,
        12,
        17,
        2
      ],
      "mod_code": [
        "int a [ n ] , a [ n ] ;",
        "else if ( a [ s - 1 ] == ' 1 ' )",
        "for ( i = s ; i < n ; i ++ )",
        "cin >> n , s ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        3,
        12,
        17,
        6
      ],
      "mod_code": [
        "int a [ n ] , a [ n ] ;",
        "else if ( a [ s - 1 ] == ' 1 ' )",
        "for ( i = s ; i < n ; i ++ )",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        3,
        12,
        2
      ],
      "mod_code": [
        "int a [ n ] , a [ n ] ;",
        "else if ( a [ s - 1 ] == ' 1 ' )",
        "cin >> n , s ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        3,
        12,
        2,
        6
      ],
      "mod_code": [
        "int a [ n ] , a [ n ] ;",
        "else if ( a [ s - 1 ] == ' 1 ' )",
        "cin >> n , s ;",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        3,
        12,
        6
      ],
      "mod_code": [
        "int a [ n ] , a [ n ] ;",
        "else if ( a [ s - 1 ] == ' 1 ' )",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        3,
        17
      ],
      "mod_code": [
        "int a [ n ] , a [ n ] ;",
        "for ( i = s ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        3,
        17,
        2
      ],
      "mod_code": [
        "int a [ n ] , a [ n ] ;",
        "for ( i = s ; i < n ; i ++ )",
        "cin >> n , s ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        3,
        17,
        2,
        6
      ],
      "mod_code": [
        "int a [ n ] , a [ n ] ;",
        "for ( i = s ; i < n ; i ++ )",
        "cin >> n , s ;",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        3,
        17,
        6
      ],
      "mod_code": [
        "int a [ n ] , a [ n ] ;",
        "for ( i = s ; i < n ; i ++ )",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "int a [ n ] , a [ n ] ;",
        "cin >> n , s ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        3,
        2,
        6
      ],
      "mod_code": [
        "int a [ n ] , a [ n ] ;",
        "cin >> n , s ;",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int a [ n ] , a [ n ] ;",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [n]’"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "else if ( a [ s - 1 ] == ' 1 ' )",
        "for ( i = s ; i < n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        17,
        2
      ],
      "mod_code": [
        "else if ( a [ s - 1 ] == ' 1 ' )",
        "for ( i = s ; i < n ; i ++ )",
        "cin >> n , s ;"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        17,
        2,
        6
      ],
      "mod_code": [
        "else if ( a [ s - 1 ] == ' 1 ' )",
        "for ( i = s ; i < n ; i ++ )",
        "cin >> n , s ;",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        17,
        6
      ],
      "mod_code": [
        "else if ( a [ s - 1 ] == ' 1 ' )",
        "for ( i = s ; i < n ; i ++ )",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        2
      ],
      "mod_code": [
        "for ( i = s ; i < n ; i ++ )",
        "cin >> n , s ;"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        2,
        6
      ],
      "mod_code": [
        "for ( i = s ; i < n ; i ++ )",
        "cin >> n , s ;",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        6
      ],
      "mod_code": [
        "for ( i = s ; i < n ; i ++ )",
        "if ( a [ 0 ] == ' 0 ' )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}