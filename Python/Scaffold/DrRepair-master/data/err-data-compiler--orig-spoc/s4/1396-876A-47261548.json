{
  "meta": {
    "index": 1396,
    "hitid": "3F6045TU7DI53TB4RWHYDEPORBI99G",
    "workerid": "A1HC0MVEW0VTB7",
    "probid": "876A",
    "subid": "47261548"
  },
  "lines": [
    {
      "line": 0,
      "text": "let t , sum , n , a , b , c be integers and t = 1",
      "code": "int t = 1 , sum , n , a , b , c ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "get values for n , a , b and c",
      "code": "cin >> n >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if t is equal to 1",
      "code": "if ( t == 1 )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if a < = b",
      "code": "if ( a <= b )",
      "indent": 3
    },
    {
      "line": 6,
      "text": "set t = 2",
      "code": "t = 2 ;",
      "indent": 4
    },
    {
      "line": 7,
      "text": "add a to sum",
      "code": "sum += a ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "skip remaining lines in the loop",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set t = 3",
      "code": "t = 3 ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "add b to sum",
      "code": "sum += b ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "skip remaining lines in the loop",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if t is equal to 2",
      "code": "if ( t == 2 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if a < = c",
      "code": "if ( a <= c )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "set t = 1",
      "code": "t = 1 ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "add a to sum",
      "code": "sum += a ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "skip remaining lines in the loop",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 21,
      "text": "set t = 3",
      "code": "t = 3 ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "add c to sum",
      "code": "sum += c ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "skip remaining lines in the loop",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "if t is equal to 3",
      "code": "if ( t == 3 )",
      "indent": 2
    },
    {
      "line": 27,
      "text": "if b < = c",
      "code": "if ( b <= c )",
      "indent": 3
    },
    {
      "line": 28,
      "text": "set t = 1",
      "code": "t = 1 ;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "add b to sum",
      "code": "sum += b ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "skip remaining lines in the loop",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 31,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 32,
      "text": "set t = 2",
      "code": "t = 2 ;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "add c to sum",
      "code": "sum += c ;",
      "indent": 4
    },
    {
      "line": 34,
      "text": "skip remaining lines in the loop",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 38,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "while ( 1 )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "while ( 1 )"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "while ( 1 )"
      ],
      "err_line": 31,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "while ( 1 )"
      ],
      "err_line": 35,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int t , sum , n , a , b , b , c = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( t == l )"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "while ( true )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "while ( true )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( t to == 2 )"
      ],
      "err_line": 15,
      "err_msg": "expected ‘)’ before ‘to’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "while ( true )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "while ( true )"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "while ( true )"
      ],
      "err_line": 31,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 31,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "while ( true )"
      ],
      "err_line": 35,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        8
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        8,
        12
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        8,
        19
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        8,
        23
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        8,
        30
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        8,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        12
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        12,
        19
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        12,
        23
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        12,
        30
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        12,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        19
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        19,
        23
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        19,
        30
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        19,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        23
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        23,
        30
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        23,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        30
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        30,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        3,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        8,
        12
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        8,
        12,
        19
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        8,
        12,
        23
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        8,
        12,
        30
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        8,
        12,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        8,
        19
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        8,
        19,
        23
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        8,
        19,
        30
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        8,
        19,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        8,
        23
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        8,
        23,
        30
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        8,
        23,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        8,
        30
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        8,
        30,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        8,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        12,
        19
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        12,
        19,
        23
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        12,
        19,
        30
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        12,
        19,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        12,
        23
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        12,
        23,
        30
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        12,
        23,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        12,
        30
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        12,
        30,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        12,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        19
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        19,
        23
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        19,
        23,
        30
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        19,
        23,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        19,
        30
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        19,
        30,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        19,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        23
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        23,
        30
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        23,
        30,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        23,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        30
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        30,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        0,
        34
      ],
      "mod_code": [
        "int t , sum , n , a , b , c , c = 1 ;",
        "while ( 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int c’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        12,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        12,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        12,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        12,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        19,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        19,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        19,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        23,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        23,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        30,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        12,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        12,
        19,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        12,
        19,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        12,
        19,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        12,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        12,
        23,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        12,
        23,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        12,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        12,
        30,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        12,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        19,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        19,
        23,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        19,
        23,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        19,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        19,
        30,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        19,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        23,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        23,
        30,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        23,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )"
      ],
      "err_line": 31,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        30,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 31,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 1 )"
      ],
      "err_line": 35,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        12,
        19
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        12,
        19,
        23
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        12,
        19,
        30
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        12,
        19,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        12,
        23
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        12,
        23,
        30
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        12,
        23,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        12,
        30
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        12,
        30,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        12,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        19,
        23
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        19,
        23,
        30
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        19,
        23,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        19,
        30
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        19,
        30,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        19,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        23
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        23,
        30
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        23,
        30,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        23,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        30
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        30,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        19
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        19,
        23
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        19,
        23,
        30
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        19,
        23,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        19,
        30
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        19,
        30,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        19,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        23
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        23,
        30
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        23,
        30,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        23,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        30
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        30,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        23
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        23,
        30
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        23,
        30,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        23,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        30
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        30,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        19,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        23,
        30
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        23,
        30,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        23,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        30,
        34
      ],
      "mod_code": [
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 31,
      "err_msg": "expected primary-expression before ‘}’ token"
    }
  ]
}