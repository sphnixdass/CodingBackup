{
  "meta": {
    "index": 210,
    "hitid": "3LVTFB9DE5CQA2FYM4YURQ1041GGQO",
    "workerid": "AIWEXPJAU66D9",
    "probid": "793A",
    "subid": "46283505"
  },
  "lines": [
    {
      "line": 0,
      "text": "assign value 0x3f3f3f3f to constant integer INF",
      "code": "const int INF = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a is an array of long longs with size 200000 + 5",
      "code": "long long a [ 200000 + 5 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let i , j , k , l , r and co be long longs , with co = 0",
      "code": "long long i , j , k , l , r , co = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let n , m and t be long longs",
      "code": "long long n , m , t ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive read a [ i ]",
      "code": "for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 7,
      "text": "sort array a from start to index n",
      "code": "sort ( a , a + n ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if ( a [ i ] - a [ 0 ] ) % k is 1",
      "code": "if ( ( a [ i ] - a [ 0 ] ) % k )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print - 1 and a new line",
      "code": "cout << - 1 << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increase co by ( a [ i ] - a [ 0 ] ) / k",
      "code": "co += ( a [ i ] - a [ 0 ] ) / k ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print co and a new line",
      "code": "cout << co << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const INF = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ does not name a type"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "co += a [ i ] - a [ 0 ] ) / k ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "const INF = 0x3f3f3f3f ;",
        "sort ( a , a + n + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ does not name a type"
    },
    {
      "mod_line": [
        0,
        7,
        13
      ],
      "mod_code": [
        "const INF = 0x3f3f3f3f ;",
        "sort ( a , a + n + n ) ;",
        "co += a [ i ] - a [ 0 ] ) / k ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ does not name a type"
    },
    {
      "mod_line": [
        0,
        7,
        13,
        5
      ],
      "mod_code": [
        "const INF = 0x3f3f3f3f ;",
        "sort ( a , a + n + n ) ;",
        "co += a [ i ] - a [ 0 ] ) / k ;",
        "n >> n >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ does not name a type"
    },
    {
      "mod_line": [
        0,
        7,
        5
      ],
      "mod_code": [
        "const INF = 0x3f3f3f3f ;",
        "sort ( a , a + n + n ) ;",
        "n >> n >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ does not name a type"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "const INF = 0x3f3f3f3f ;",
        "co += a [ i ] - a [ 0 ] ) / k ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ does not name a type"
    },
    {
      "mod_line": [
        0,
        13,
        5
      ],
      "mod_code": [
        "const INF = 0x3f3f3f3f ;",
        "co += a [ i ] - a [ 0 ] ) / k ;",
        "n >> n >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "const INF = 0x3f3f3f3f ;",
        "n >> n >> k ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ does not name a type"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "sort ( a , a + n + n ) ;",
        "co += a [ i ] - a [ 0 ] ) / k ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        13,
        5
      ],
      "mod_code": [
        "sort ( a , a + n + n ) ;",
        "co += a [ i ] - a [ 0 ] ) / k ;",
        "n >> n >> k ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "co += a [ i ] - a [ 0 ] ) / k ;",
        "n >> n >> k ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    }
  ]
}