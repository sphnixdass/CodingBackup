{
  "meta": {
    "index": 2114,
    "hitid": "3ZRKL6Z1E8X2NIUBE8NZMQG1MP4SGS",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "114A",
    "subid": "48358383"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "k , l , importance = int with importance = - 1",
      "code": "int k , l , importance ( - 1 ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read k then l",
      "code": "cin >> k >> l ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "loop while l is a multiple of k",
      "code": "while ( l % k == 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set l to l / k",
      "code": "l /= k ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "increment importance",
      "code": "importance += 1 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if importance is greater or equal to 0 and l is equal 1",
      "code": "if ( importance >= 0 && l == 1 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print \" YES \" and importance",
      "code": "cout << \" YES \" << endl << importance << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int k , l , l = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "int k , l , l = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        8,
        1,
        7
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "int k , l , l = - 1 ;",
        "if ( importance >= 1 && l == 1 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        8,
        1,
        7,
        9
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "int k , l , l = - 1 ;",
        "if ( importance >= 1 && l == 1 )",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        8,
        1,
        7,
        2
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "int k , l , l = - 1 ;",
        "if ( importance >= 1 && l == 1 )",
        "cin >> k >> k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        8,
        1,
        7,
        3
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "int k , l , l = - 1 ;",
        "if ( importance >= 1 && l == 1 )",
        "while ( l % k )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        8,
        1,
        9
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "int k , l , l = - 1 ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        8,
        1,
        9,
        2
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "int k , l , l = - 1 ;",
        "else else",
        "cin >> k >> k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        8,
        1,
        9,
        3
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "int k , l , l = - 1 ;",
        "else else",
        "while ( l % k )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        8,
        1,
        2
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "int k , l , l = - 1 ;",
        "cin >> k >> k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        8,
        1,
        2,
        3
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "int k , l , l = - 1 ;",
        "cin >> k >> k ;",
        "while ( l % k )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        8,
        1,
        3
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "int k , l , l = - 1 ;",
        "while ( l % k )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        8,
        7,
        9
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "if ( importance >= 1 && l == 1 )",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        7,
        9,
        2
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "if ( importance >= 1 && l == 1 )",
        "else else",
        "cin >> k >> k ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        7,
        9,
        3
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "if ( importance >= 1 && l == 1 )",
        "else else",
        "while ( l % k )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        9,
        2
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "else else",
        "cin >> k >> k ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        9,
        2,
        3
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "else else",
        "cin >> k >> k ;",
        "while ( l % k )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        9,
        3
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "else else",
        "while ( l % k )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int k , l , l = - 1 ;",
        "if ( importance >= 1 && l == 1 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        7,
        9
      ],
      "mod_code": [
        "int k , l , l = - 1 ;",
        "if ( importance >= 1 && l == 1 )",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        7,
        9,
        2
      ],
      "mod_code": [
        "int k , l , l = - 1 ;",
        "if ( importance >= 1 && l == 1 )",
        "else else",
        "cin >> k >> k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        7,
        9,
        3
      ],
      "mod_code": [
        "int k , l , l = - 1 ;",
        "if ( importance >= 1 && l == 1 )",
        "else else",
        "while ( l % k )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        7,
        2
      ],
      "mod_code": [
        "int k , l , l = - 1 ;",
        "if ( importance >= 1 && l == 1 )",
        "cin >> k >> k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        7,
        2,
        3
      ],
      "mod_code": [
        "int k , l , l = - 1 ;",
        "if ( importance >= 1 && l == 1 )",
        "cin >> k >> k ;",
        "while ( l % k )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        7,
        3
      ],
      "mod_code": [
        "int k , l , l = - 1 ;",
        "if ( importance >= 1 && l == 1 )",
        "while ( l % k )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int k , l , l = - 1 ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        9,
        2
      ],
      "mod_code": [
        "int k , l , l = - 1 ;",
        "else else",
        "cin >> k >> k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        9,
        2,
        3
      ],
      "mod_code": [
        "int k , l , l = - 1 ;",
        "else else",
        "cin >> k >> k ;",
        "while ( l % k )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        9,
        3
      ],
      "mod_code": [
        "int k , l , l = - 1 ;",
        "else else",
        "while ( l % k )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int k , l , l = - 1 ;",
        "cin >> k >> k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        2,
        3
      ],
      "mod_code": [
        "int k , l , l = - 1 ;",
        "cin >> k >> k ;",
        "while ( l % k )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int k , l , l = - 1 ;",
        "while ( l % k )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "if ( importance >= 1 && l == 1 )",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        9,
        2
      ],
      "mod_code": [
        "if ( importance >= 1 && l == 1 )",
        "else else",
        "cin >> k >> k ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        9,
        2,
        3
      ],
      "mod_code": [
        "if ( importance >= 1 && l == 1 )",
        "else else",
        "cin >> k >> k ;",
        "while ( l % k )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        9,
        3
      ],
      "mod_code": [
        "if ( importance >= 1 && l == 1 )",
        "else else",
        "while ( l % k )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "else else",
        "cin >> k >> k ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        2,
        3
      ],
      "mod_code": [
        "else else",
        "cin >> k >> k ;",
        "while ( l % k )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "else else",
        "while ( l % k )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}