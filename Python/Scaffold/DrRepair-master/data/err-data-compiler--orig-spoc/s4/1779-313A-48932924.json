{
  "meta": {
    "index": 1779,
    "hitid": "3JTPR5MTZS66J2SJS3V6R7Y2G985KC",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "313A",
    "subid": "48932924"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a = long long",
      "code": "long long a ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if a < 0",
      "code": "if ( a < 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "last , slast = int",
      "code": "int last , slast ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "a = abs ( a )",
      "code": "a = abs ( a ) ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "last = a modulo 10",
      "code": "last = a % 10 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "divide a by 10",
      "code": "a = a / 10 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "slast = a modulo 10",
      "code": "slast = a % 10 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if slast < = last",
      "code": "if ( slast <= last )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print \" - \" , a",
      "code": "cout << \" - \" << a << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "a = ( a / 10 ) * 10 + last",
      "code": "a = ( a / 10 ) * 10 + last ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if a is 0",
      "code": "if ( a == 0 )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "print 0",
      "code": "cout << 0 << endl ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 16,
      "text": "print \" - \" , a",
      "code": "cout << \" - \" << a << endl ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print a",
      "code": "cout << a << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( a ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int last , slast , slast ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int slast’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "cout << 0 ;",
        "int last , slast , slast ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int slast’"
    },
    {
      "mod_line": [
        14,
        4,
        10
      ],
      "mod_code": [
        "cout << 0 ;",
        "int last , slast , slast ;",
        "cout << \" - \" << a ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int slast’"
    },
    {
      "mod_line": [
        14,
        4,
        10,
        2
      ],
      "mod_code": [
        "cout << 0 ;",
        "int last , slast , slast ;",
        "cout << \" - \" << a ;",
        "gets ( a ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        4,
        10,
        11
      ],
      "mod_code": [
        "cout << 0 ;",
        "int last , slast , slast ;",
        "cout << \" - \" << a ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int slast’"
    },
    {
      "mod_line": [
        14,
        4,
        10,
        8
      ],
      "mod_code": [
        "cout << 0 ;",
        "int last , slast , slast ;",
        "cout << \" - \" << a ;",
        "slast %= 10 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int slast’"
    },
    {
      "mod_line": [
        14,
        4,
        2
      ],
      "mod_code": [
        "cout << 0 ;",
        "int last , slast , slast ;",
        "gets ( a ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        4,
        2,
        11
      ],
      "mod_code": [
        "cout << 0 ;",
        "int last , slast , slast ;",
        "gets ( a ) ;",
        "else else"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        4,
        2,
        8
      ],
      "mod_code": [
        "cout << 0 ;",
        "int last , slast , slast ;",
        "gets ( a ) ;",
        "slast %= 10 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        4,
        11
      ],
      "mod_code": [
        "cout << 0 ;",
        "int last , slast , slast ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int slast’"
    },
    {
      "mod_line": [
        14,
        4,
        11,
        8
      ],
      "mod_code": [
        "cout << 0 ;",
        "int last , slast , slast ;",
        "else else",
        "slast %= 10 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int slast’"
    },
    {
      "mod_line": [
        14,
        4,
        8
      ],
      "mod_code": [
        "cout << 0 ;",
        "int last , slast , slast ;",
        "slast %= 10 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int slast’"
    },
    {
      "mod_line": [
        14,
        10,
        2
      ],
      "mod_code": [
        "cout << 0 ;",
        "cout << \" - \" << a ;",
        "gets ( a ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        10,
        2,
        11
      ],
      "mod_code": [
        "cout << 0 ;",
        "cout << \" - \" << a ;",
        "gets ( a ) ;",
        "else else"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        10,
        2,
        8
      ],
      "mod_code": [
        "cout << 0 ;",
        "cout << \" - \" << a ;",
        "gets ( a ) ;",
        "slast %= 10 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        10,
        11
      ],
      "mod_code": [
        "cout << 0 ;",
        "cout << \" - \" << a ;",
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        10,
        11,
        8
      ],
      "mod_code": [
        "cout << 0 ;",
        "cout << \" - \" << a ;",
        "else else",
        "slast %= 10 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "cout << 0 ;",
        "gets ( a ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        2,
        11
      ],
      "mod_code": [
        "cout << 0 ;",
        "gets ( a ) ;",
        "else else"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        2,
        11,
        8
      ],
      "mod_code": [
        "cout << 0 ;",
        "gets ( a ) ;",
        "else else",
        "slast %= 10 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        2,
        8
      ],
      "mod_code": [
        "cout << 0 ;",
        "gets ( a ) ;",
        "slast %= 10 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        11
      ],
      "mod_code": [
        "cout << 0 ;",
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        11,
        8
      ],
      "mod_code": [
        "cout << 0 ;",
        "else else",
        "slast %= 10 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "int last , slast , slast ;",
        "cout << \" - \" << a ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int slast’"
    },
    {
      "mod_line": [
        4,
        10,
        2
      ],
      "mod_code": [
        "int last , slast , slast ;",
        "cout << \" - \" << a ;",
        "gets ( a ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        2,
        11
      ],
      "mod_code": [
        "int last , slast , slast ;",
        "cout << \" - \" << a ;",
        "gets ( a ) ;",
        "else else"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        2,
        8
      ],
      "mod_code": [
        "int last , slast , slast ;",
        "cout << \" - \" << a ;",
        "gets ( a ) ;",
        "slast %= 10 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        11
      ],
      "mod_code": [
        "int last , slast , slast ;",
        "cout << \" - \" << a ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int slast’"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        8
      ],
      "mod_code": [
        "int last , slast , slast ;",
        "cout << \" - \" << a ;",
        "else else",
        "slast %= 10 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int slast’"
    },
    {
      "mod_line": [
        4,
        10,
        8
      ],
      "mod_code": [
        "int last , slast , slast ;",
        "cout << \" - \" << a ;",
        "slast %= 10 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int slast’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "int last , slast , slast ;",
        "gets ( a ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2,
        11
      ],
      "mod_code": [
        "int last , slast , slast ;",
        "gets ( a ) ;",
        "else else"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2,
        11,
        8
      ],
      "mod_code": [
        "int last , slast , slast ;",
        "gets ( a ) ;",
        "else else",
        "slast %= 10 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2,
        8
      ],
      "mod_code": [
        "int last , slast , slast ;",
        "gets ( a ) ;",
        "slast %= 10 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "int last , slast , slast ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int slast’"
    },
    {
      "mod_line": [
        4,
        11,
        8
      ],
      "mod_code": [
        "int last , slast , slast ;",
        "else else",
        "slast %= 10 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int slast’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "int last , slast , slast ;",
        "slast %= 10 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int slast’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "cout << \" - \" << a ;",
        "gets ( a ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        2,
        11
      ],
      "mod_code": [
        "cout << \" - \" << a ;",
        "gets ( a ) ;",
        "else else"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        2,
        11,
        8
      ],
      "mod_code": [
        "cout << \" - \" << a ;",
        "gets ( a ) ;",
        "else else",
        "slast %= 10 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        2,
        8
      ],
      "mod_code": [
        "cout << \" - \" << a ;",
        "gets ( a ) ;",
        "slast %= 10 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "cout << \" - \" << a ;",
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        11,
        8
      ],
      "mod_code": [
        "cout << \" - \" << a ;",
        "else else",
        "slast %= 10 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "gets ( a ) ;",
        "else else"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        11,
        8
      ],
      "mod_code": [
        "gets ( a ) ;",
        "else else",
        "slast %= 10 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "gets ( a ) ;",
        "slast %= 10 ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "else else",
        "slast %= 10 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}