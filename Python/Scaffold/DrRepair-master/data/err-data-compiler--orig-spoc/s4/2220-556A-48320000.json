{
  "meta": {
    "index": 2220,
    "hitid": "3QQUBC64ZE8GTRXWVM6HBI6Q33KNX6",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "556A",
    "subid": "48320000"
  },
  "lines": [
    {
      "line": 0,
      "text": "n , res = integer",
      "code": "int n , res ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "str = character",
      "code": "char str ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = int ( 0 ) ; i < int ( n ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if str is 0 then increase res by 1 else decrease res by 1",
      "code": "str == ' 0 ' ? res ++ : res -- ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "res = absolute value of res",
      "code": "res = abs ( res ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print res newline 0",
      "code": "return cout << res << ' \\n ' , 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "set < char > str ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8,
        1
      ],
      "mod_code": [
        "res = str == 0 ? 1 : res ;",
        "int res = abs ( res ) ;",
        "set < char > str ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        6,
        8,
        1,
        5
      ],
      "mod_code": [
        "res = str == 0 ? 1 : res ;",
        "int res = abs ( res ) ;",
        "set < char > str ;",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "cannot convert ‘std::set<char>’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        8,
        1,
        4
      ],
      "mod_code": [
        "res = str == 0 ? 1 : res ;",
        "int res = abs ( res ) ;",
        "set < char > str ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        5
      ],
      "mod_code": [
        "res = str == 0 ? 1 : res ;",
        "int res = abs ( res ) ;",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8,
        5,
        4
      ],
      "mod_code": [
        "res = str == 0 ? 1 : res ;",
        "int res = abs ( res ) ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        4
      ],
      "mod_code": [
        "res = str == 0 ? 1 : res ;",
        "int res = abs ( res ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "res = str == 0 ? 1 : res ;",
        "set < char > str ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        6,
        1,
        5
      ],
      "mod_code": [
        "res = str == 0 ? 1 : res ;",
        "set < char > str ;",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "cannot convert ‘std::set<char>’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        1,
        5,
        4
      ],
      "mod_code": [
        "res = str == 0 ? 1 : res ;",
        "set < char > str ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        4
      ],
      "mod_code": [
        "res = str == 0 ? 1 : res ;",
        "set < char > str ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "res = str == 0 ? 1 : res ;",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        5,
        4
      ],
      "mod_code": [
        "res = str == 0 ? 1 : res ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "res = str == 0 ? 1 : res ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        1
      ],
      "mod_code": [
        "res = ( str == 0 ) ? 1 : res ;",
        "int res = abs ( res ) ;",
        "set < char > str ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        6,
        8,
        1,
        5
      ],
      "mod_code": [
        "res = ( str == 0 ) ? 1 : res ;",
        "int res = abs ( res ) ;",
        "set < char > str ;",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "cannot convert ‘std::set<char>’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        8,
        1,
        4
      ],
      "mod_code": [
        "res = ( str == 0 ) ? 1 : res ;",
        "int res = abs ( res ) ;",
        "set < char > str ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        5
      ],
      "mod_code": [
        "res = ( str == 0 ) ? 1 : res ;",
        "int res = abs ( res ) ;",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8,
        5,
        4
      ],
      "mod_code": [
        "res = ( str == 0 ) ? 1 : res ;",
        "int res = abs ( res ) ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        4
      ],
      "mod_code": [
        "res = ( str == 0 ) ? 1 : res ;",
        "int res = abs ( res ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "res = ( str == 0 ) ? 1 : res ;",
        "set < char > str ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        6,
        1,
        5
      ],
      "mod_code": [
        "res = ( str == 0 ) ? 1 : res ;",
        "set < char > str ;",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "cannot convert ‘std::set<char>’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        1,
        5,
        4
      ],
      "mod_code": [
        "res = ( str == 0 ) ? 1 : res ;",
        "set < char > str ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        4
      ],
      "mod_code": [
        "res = ( str == 0 ) ? 1 : res ;",
        "set < char > str ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "res = ( str == 0 ) ? 1 : res ;",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        5,
        4
      ],
      "mod_code": [
        "res = ( str == 0 ) ? 1 : res ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "res = ( str == 0 ) ? 1 : res ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "int res = abs ( res ) ;",
        "set < char > str ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        8,
        1,
        5
      ],
      "mod_code": [
        "int res = abs ( res ) ;",
        "set < char > str ;",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "cannot convert ‘std::set<char>’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        1,
        5,
        4
      ],
      "mod_code": [
        "int res = abs ( res ) ;",
        "set < char > str ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        1,
        4
      ],
      "mod_code": [
        "int res = abs ( res ) ;",
        "set < char > str ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "int res = abs ( res ) ;",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        5,
        4
      ],
      "mod_code": [
        "int res = abs ( res ) ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "int res = abs ( res ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "set < char > str ;",
        "gets ( str ) ;"
      ],
      "err_line": 5,
      "err_msg": "cannot convert ‘std::set<char>’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        5,
        4
      ],
      "mod_code": [
        "set < char > str ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "set < char > str ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}