{
  "meta": {
    "index": 1366,
    "hitid": "3XEDXEGFX3I7OV6IVXPUAC2BYE1K0Z",
    "workerid": "AIWEXPJAU66D9",
    "probid": "75A",
    "subid": "43293531"
  },
  "lines": [
    {
      "line": 0,
      "text": "let a , b , sum1_str and sum2_str be strings",
      "code": "string a , b , sum1_str , sum2_str ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer function string_int with string argument s and bool argument w",
      "code": "int string_int ( string s , bool w )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integer x with value 0",
      "code": "int x = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for integer i = 0 to length of s - 1 inclusive",
      "code": "for ( int i = 0 ; i <= ( int ) s . length ( ) - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if w = 1",
      "code": "if ( w == 1 )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "multiply x by 10",
      "code": "x *= 10 ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "increase x by s [ i ] - ' 0 '",
      "code": "x += s [ i ] - ' 0 ' ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if s [ i ] ! = ' 0 '",
      "code": "if ( s [ i ] != ' 0 ' )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "multiply x by 10",
      "code": "x *= 10 ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "increase x by s [ i ] - ' 0 '",
      "code": "x += s [ i ] - ' 0 ' ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "return x",
      "code": "return x ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 16,
      "text": "string function int_string with int argument n",
      "code": "string int_string ( int n )",
      "indent": 0
    },
    {
      "line": 17,
      "text": "let s be string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "while n > 0",
      "code": "while ( n )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "int x = n modulo 10",
      "code": "int x = n % 10 ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "increase s by char ( x + ' 0 ' )",
      "code": "s += char ( x + ' 0 ' ) ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "divide n by 10",
      "code": "n /= 10 ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "return s",
      "code": "return s ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 26,
      "text": "x1 , x2 , y1 , y2 , sum1 and sum2 = integers",
      "code": "int x1 , x2 , y1 , y2 , sum1 , sum2 ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "read a and b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "set x1 to string_int ( a , 1 )",
      "code": "x1 = string_int ( a , 1 ) ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "set y1 to string_int ( b , 1 )",
      "code": "y1 = string_int ( b , 1 ) ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "set value of sum1 to x1 + y1",
      "code": "sum1 = x1 + y1 ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "set sum1_str to int_string of sum1",
      "code": "sum1_str = int_string ( sum1 ) ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "reverse sum1_str",
      "code": "reverse ( sum1_str . begin ( ) , sum1_str . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "x2 = string_int ( a , 0 )",
      "code": "x2 = string_int ( a , 0 ) ;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "y2 = string_int ( b , 0 )",
      "code": "y2 = string_int ( b , 0 ) ;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "assign value of string_int ( sum1_str , 0 ) to sum2",
      "code": "sum2 = string_int ( sum1_str , 0 ) ;",
      "indent": 1
    },
    {
      "line": 36,
      "text": "if x2 + y2 = sum2",
      "code": "if ( x2 + y2 == sum2 )",
      "indent": 1
    },
    {
      "line": 37,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 38,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 39,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool string_int ( string s , string w ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string a , b , sum1_str , sum2_str , sum2_str ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string sum2_str’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool string_int ( string s , string w )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int x create ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "string int_string ( int n ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "s += char ( char ) x + ' 0 ' ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘char’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "return ' s ' ;"
      ],
      "err_line": 23,
      "err_msg": "could not convert ‘'s'’ from ‘char’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "a >> a >> b ;"
      ],
      "err_line": 27,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "int x1 = string_int ( a , 1 ) ;"
      ],
      "err_line": 28,
      "err_msg": "redeclaration of ‘int x1’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "int y1 = string_int ( b , 1 ) ;"
      ],
      "err_line": 29,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "sum1_str = sum1 ( sum1 ) ;"
      ],
      "err_line": 31,
      "err_msg": "‘sum1’ cannot be used as a function"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;"
      ],
      "err_line": 32,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘reverse’"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "int x2 = string_int ( a , 0 ) ;"
      ],
      "err_line": 33,
      "err_msg": "redeclaration of ‘int x2’"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "int y2 = string_int ( b , 0 ) ;"
      ],
      "err_line": 34,
      "err_msg": "redeclaration of ‘int y2’"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "int sum2 = string_int ( sum1_str , 0 ) ;"
      ],
      "err_line": 35,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        30
      ],
      "mod_code": [
        "bool string_int ( string s , string w ) ;",
        "sum1 += y1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        30,
        35
      ],
      "mod_code": [
        "bool string_int ( string s , string w ) ;",
        "sum1 += y1 ;",
        "int sum2 = string_int ( sum1_str , 0 ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        30,
        35,
        7
      ],
      "mod_code": [
        "bool string_int ( string s , string w ) ;",
        "sum1 += y1 ;",
        "int sum2 = string_int ( sum1_str , 0 ) ;",
        "else else"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        30,
        35,
        32
      ],
      "mod_code": [
        "bool string_int ( string s , string w ) ;",
        "sum1 += y1 ;",
        "int sum2 = string_int ( sum1_str , 0 ) ;",
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        30,
        7
      ],
      "mod_code": [
        "bool string_int ( string s , string w ) ;",
        "sum1 += y1 ;",
        "else else"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        30,
        7,
        32
      ],
      "mod_code": [
        "bool string_int ( string s , string w ) ;",
        "sum1 += y1 ;",
        "else else",
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        30,
        32
      ],
      "mod_code": [
        "bool string_int ( string s , string w ) ;",
        "sum1 += y1 ;",
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        35
      ],
      "mod_code": [
        "bool string_int ( string s , string w ) ;",
        "int sum2 = string_int ( sum1_str , 0 ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        35,
        7
      ],
      "mod_code": [
        "bool string_int ( string s , string w ) ;",
        "int sum2 = string_int ( sum1_str , 0 ) ;",
        "else else"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        35,
        7,
        32
      ],
      "mod_code": [
        "bool string_int ( string s , string w ) ;",
        "int sum2 = string_int ( sum1_str , 0 ) ;",
        "else else",
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        35,
        32
      ],
      "mod_code": [
        "bool string_int ( string s , string w ) ;",
        "int sum2 = string_int ( sum1_str , 0 ) ;",
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "bool string_int ( string s , string w ) ;",
        "else else"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        7,
        32
      ],
      "mod_code": [
        "bool string_int ( string s , string w ) ;",
        "else else",
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        32
      ],
      "mod_code": [
        "bool string_int ( string s , string w ) ;",
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        30,
        35
      ],
      "mod_code": [
        "sum1 += y1 ;",
        "int sum2 = string_int ( sum1_str , 0 ) ;"
      ],
      "err_line": 35,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        30,
        35,
        7
      ],
      "mod_code": [
        "sum1 += y1 ;",
        "int sum2 = string_int ( sum1_str , 0 ) ;",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        30,
        35,
        7,
        32
      ],
      "mod_code": [
        "sum1 += y1 ;",
        "int sum2 = string_int ( sum1_str , 0 ) ;",
        "else else",
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        30,
        35,
        7,
        1
      ],
      "mod_code": [
        "sum1 += y1 ;",
        "int sum2 = string_int ( sum1_str , 0 ) ;",
        "else else",
        "bool string_int ( string s , string w )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        30,
        35,
        32
      ],
      "mod_code": [
        "sum1 += y1 ;",
        "int sum2 = string_int ( sum1_str , 0 ) ;",
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;"
      ],
      "err_line": 32,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘reverse’"
    },
    {
      "mod_line": [
        30,
        35,
        32,
        1
      ],
      "mod_code": [
        "sum1 += y1 ;",
        "int sum2 = string_int ( sum1_str , 0 ) ;",
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;",
        "bool string_int ( string s , string w )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        30,
        35,
        1
      ],
      "mod_code": [
        "sum1 += y1 ;",
        "int sum2 = string_int ( sum1_str , 0 ) ;",
        "bool string_int ( string s , string w )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        30,
        7
      ],
      "mod_code": [
        "sum1 += y1 ;",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        30,
        7,
        32
      ],
      "mod_code": [
        "sum1 += y1 ;",
        "else else",
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        30,
        7,
        32,
        1
      ],
      "mod_code": [
        "sum1 += y1 ;",
        "else else",
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;",
        "bool string_int ( string s , string w )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        30,
        7,
        1
      ],
      "mod_code": [
        "sum1 += y1 ;",
        "else else",
        "bool string_int ( string s , string w )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        30,
        32
      ],
      "mod_code": [
        "sum1 += y1 ;",
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;"
      ],
      "err_line": 32,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘reverse’"
    },
    {
      "mod_line": [
        30,
        32,
        1
      ],
      "mod_code": [
        "sum1 += y1 ;",
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;",
        "bool string_int ( string s , string w )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        30,
        1
      ],
      "mod_code": [
        "sum1 += y1 ;",
        "bool string_int ( string s , string w )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        35,
        7
      ],
      "mod_code": [
        "int sum2 = string_int ( sum1_str , 0 ) ;",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        35,
        7,
        32
      ],
      "mod_code": [
        "int sum2 = string_int ( sum1_str , 0 ) ;",
        "else else",
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        35,
        7,
        32,
        1
      ],
      "mod_code": [
        "int sum2 = string_int ( sum1_str , 0 ) ;",
        "else else",
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;",
        "bool string_int ( string s , string w )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        35,
        7,
        1
      ],
      "mod_code": [
        "int sum2 = string_int ( sum1_str , 0 ) ;",
        "else else",
        "bool string_int ( string s , string w )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        35,
        32
      ],
      "mod_code": [
        "int sum2 = string_int ( sum1_str , 0 ) ;",
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;"
      ],
      "err_line": 32,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘reverse’"
    },
    {
      "mod_line": [
        35,
        32,
        1
      ],
      "mod_code": [
        "int sum2 = string_int ( sum1_str , 0 ) ;",
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;",
        "bool string_int ( string s , string w )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        35,
        1
      ],
      "mod_code": [
        "int sum2 = string_int ( sum1_str , 0 ) ;",
        "bool string_int ( string s , string w )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        32
      ],
      "mod_code": [
        "else else",
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        32,
        1
      ],
      "mod_code": [
        "else else",
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;",
        "bool string_int ( string s , string w )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "else else",
        "bool string_int ( string s , string w )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        32,
        1
      ],
      "mod_code": [
        "reverse ( sum1_str . begin ( ) , sum1_str . reverse ( ) ) ;",
        "bool string_int ( string s , string w )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    }
  ]
}