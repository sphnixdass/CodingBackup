{
  "meta": {
    "index": 2135,
    "hitid": "3JTPR5MTZS66J2SJS3V6R7Y2G965KA",
    "workerid": "AIWEXPJAU66D9",
    "probid": "705A",
    "subid": "49030165"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare string r",
      "code": "string r ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers a and d",
      "code": "int a , d ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print \" I hate \"",
      "code": "cout << \" I hate \" ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to a exclusive",
      "code": "for ( int i = 1 ; i < a ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if a is equal to 1",
      "code": "if ( a == 1 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if i is odd",
      "code": "else if ( i % 2 != 0 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print \" that I love \"",
      "code": "cout << \" that I love \" ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print \" that I hate \"",
      "code": "cout << \" that I hate \" ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print \" it \"",
      "code": "cout << \" it \" << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        10
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" Oh, \" << endl ;",
        "cout << \" Oh, \" << endl ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        10
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" Oh, \" << endl ;",
        "cout << \" OOOO- \" << endl ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        9,
        10
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" Oh, \" << endl ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        5
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" Oh, \" << endl ;",
        "else else",
        "for ( int i = 1 ; i <= a ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        11,
        10
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" Oh, \" << endl ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        11,
        10,
        5
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" Oh, \" << endl ;",
        "else else",
        "for ( int i = 1 ; i <= a ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        11,
        10
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" OOOO- \" << endl ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        11,
        10,
        5
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" OOOO- \" << endl ;",
        "else else",
        "for ( int i = 1 ; i <= a ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        10,
        5
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "else else",
        "for ( int i = 1 ; i <= a ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        11,
        10
      ],
      "mod_code": [
        "cout << \" Oh, \" << endl ;",
        "cout << \" Oh, \" << endl ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        11,
        10,
        5
      ],
      "mod_code": [
        "cout << \" Oh, \" << endl ;",
        "cout << \" Oh, \" << endl ;",
        "else else",
        "for ( int i = 1 ; i <= a ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        11,
        10
      ],
      "mod_code": [
        "cout << \" Oh, \" << endl ;",
        "cout << \" OOOO- \" << endl ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        11,
        10,
        5
      ],
      "mod_code": [
        "cout << \" Oh, \" << endl ;",
        "cout << \" OOOO- \" << endl ;",
        "else else",
        "for ( int i = 1 ; i <= a ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "cout << \" Oh, \" << endl ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        10,
        5
      ],
      "mod_code": [
        "cout << \" Oh, \" << endl ;",
        "else else",
        "for ( int i = 1 ; i <= a ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "cout << \" Oh, \" << endl ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        10,
        5
      ],
      "mod_code": [
        "cout << \" Oh, \" << endl ;",
        "else else",
        "for ( int i = 1 ; i <= a ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "cout << \" OOOO- \" << endl ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        10,
        5
      ],
      "mod_code": [
        "cout << \" OOOO- \" << endl ;",
        "else else",
        "for ( int i = 1 ; i <= a ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "else else",
        "for ( int i = 1 ; i <= a ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}