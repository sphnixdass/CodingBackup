{
  "meta": {
    "index": 1121,
    "hitid": "3RIHDBQ1NESDPJCHEH9VVHTW90WHM1",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "1085A",
    "subid": "48677560"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s , w = string",
      "code": "string s , w ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "m , n = int with n = length of s - 1",
      "code": "int m { } , n { ( int ) s . length ( ) - 1 } ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if length of s uneven then",
      "code": "if ( s . length ( ) % 2 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to length of s exclusive",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if i is even",
      "code": "if ( i % 2 == 0 )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "add s [ m ] to w",
      "code": "w = s [ m ] + w ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "increment m",
      "code": "m ++ ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 10,
      "text": "add s [ n ] to w",
      "code": "w = s [ n ] + w ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "decrement n",
      "code": "n -- ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if length of s even then",
      "code": "else",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = 0 to length of s exclusive",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if i is uneven",
      "code": "if ( i % 2 == 1 )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "add s [ m ] to w",
      "code": "w = s [ m ] + w ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "increment m",
      "code": "m ++ ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 20,
      "text": "add s [ n ] to w",
      "code": "w = s [ n ] + w ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "decrement n",
      "code": "n -- ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print w",
      "code": "cout << w << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s , w ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "if ( s . length ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        7
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "if ( s . length ( ) )",
        "w += s [ m ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        10
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "if ( s . length ( ) )",
        "w += s [ m ] ;",
        "w += s [ n ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        14
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "if ( s . length ( ) )",
        "w += s [ m ] ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        17
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "if ( s . length ( ) )",
        "w += s [ m ] ;",
        "w += s [ m ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        20
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "if ( s . length ( ) )",
        "w += s [ m ] ;",
        "w += s [ n ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        10
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "if ( s . length ( ) )",
        "w += s [ n ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        10,
        14
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "if ( s . length ( ) )",
        "w += s [ n ] ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        10,
        17
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "if ( s . length ( ) )",
        "w += s [ n ] ;",
        "w += s [ m ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        10,
        20
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "if ( s . length ( ) )",
        "w += s [ n ] ;",
        "w += s [ n ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        14
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "if ( s . length ( ) )",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        14,
        17
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "if ( s . length ( ) )",
        "if ( s . size ( ) )",
        "w += s [ m ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        14,
        20
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "if ( s . length ( ) )",
        "if ( s . size ( ) )",
        "w += s [ n ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        17
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "if ( s . length ( ) )",
        "w += s [ m ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        17,
        20
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "if ( s . length ( ) )",
        "w += s [ m ] ;",
        "w += s [ n ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        20
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "if ( s . length ( ) )",
        "w += s [ n ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ m ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        10
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ m ] ;",
        "w += s [ n ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        10,
        14
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ m ] ;",
        "w += s [ n ] ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        10,
        17
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ m ] ;",
        "w += s [ n ] ;",
        "w += s [ m ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        10,
        20
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ m ] ;",
        "w += s [ n ] ;",
        "w += s [ n ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        14
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ m ] ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        14,
        17
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ m ] ;",
        "if ( s . size ( ) )",
        "w += s [ m ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        14,
        20
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ m ] ;",
        "if ( s . size ( ) )",
        "w += s [ n ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        17
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ m ] ;",
        "w += s [ m ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        17,
        20
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ m ] ;",
        "w += s [ m ] ;",
        "w += s [ n ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        20
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ m ] ;",
        "w += s [ n ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ n ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        14
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ n ] ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        14,
        17
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ n ] ;",
        "if ( s . size ( ) )",
        "w += s [ m ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        14,
        20
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ n ] ;",
        "if ( s . size ( ) )",
        "w += s [ n ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        17
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ n ] ;",
        "w += s [ m ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        17,
        20
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ n ] ;",
        "w += s [ m ] ;",
        "w += s [ n ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        20
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ n ] ;",
        "w += s [ n ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "if ( s . size ( ) )"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        17
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "if ( s . size ( ) )",
        "w += s [ m ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        17,
        20
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "if ( s . size ( ) )",
        "w += s [ m ] ;",
        "w += s [ n ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        20
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "if ( s . size ( ) )",
        "w += s [ n ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        17
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ m ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        17,
        20
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ m ] ;",
        "w += s [ n ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        20
      ],
      "mod_code": [
        "int m = s . length ( ) - 1 ;",
        "w += s [ n ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    }
  ]
}