{
  "meta": {
    "index": 93,
    "hitid": "37M4O367VJC19QSMDF8M6KQ64CQ5MZ",
    "workerid": "A1APYLD4DUK33J",
    "probid": "3A",
    "subid": "48903193"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare res with integers x , y , as arguments returning string",
      "code": "string res ( int x , int y )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if x is - 1 and y is - 1 return \" LD \" from function",
      "code": "if ( x == - 1 && y == - 1 ) return \" LD \" ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "if x is 0 and y is - 1 , return \" D \" from function",
      "code": "if ( x == 0 && y == - 1 ) return \" D \" ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if x is 1 and y is - 1 , return \" RD \" from function",
      "code": "if ( x == 1 && y == - 1 ) return \" RD \" ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if x is - 1 and y is 0 , return \" L \" from function",
      "code": "if ( x == - 1 && y == 0 ) return \" L \" ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if x is 1 and y is 0 , return \" R \" from function",
      "code": "if ( x == 1 && y == 0 ) return \" R \" ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if x is - 1 and y is 1 , return \" LU \" from function",
      "code": "if ( x == - 1 && y == 1 ) return \" LU \" ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if x is 0 and y is 1 , return \" U \" from function",
      "code": "if ( x == 0 && y == 1 ) return \" U \" ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if x is 1 and y is 1 , return \" RU \" from function",
      "code": "if ( x == 1 && y == 1 ) return \" RU \" ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "declare xy wtih characters y1 , y2 as arguments , returning integer",
      "code": "int xy ( char y1 , char y2 )",
      "indent": 0
    },
    {
      "line": 11,
      "text": "create integer y with y = 0",
      "code": "int y = 0 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if y1 is less than y2",
      "code": "if ( y1 < y2 )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "increment y",
      "code": "y ++ ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "else if y1 is greater than y2",
      "code": "else if ( y1 > y2 )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "decrement y",
      "code": "y -- ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "return y from function",
      "code": "return y ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 19,
      "text": "create integers i , j , k , l , n , count , x , y with count = 0",
      "code": "int i , j , k , l , n , count = 0 , x , y ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "create strings to , from",
      "code": "string to , from ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "read from read to",
      "code": "cin >> from >> to ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "create string vector vec",
      "code": "vector < string > vec ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "create characters x1 , y1 , x2 , y2 with x1 = from [ 0 ] , y1 = from [ 1 ] , x2 = to [ 0 ] , y2 = to [ 1 ]",
      "code": "char x1 = from [ 0 ] , y1 = from [ 1 ] , x2 = to [ 0 ] , y2 = to [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "for i = 0 to 7 exclusive",
      "code": "for ( i = 0 ; i < 7 ; i ++ )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "if x1 is x2 and y1 is y2 , break loop",
      "code": "if ( x1 == x2 && y1 == y2 ) break ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "set x to result of run xy with arguments x1 , x2",
      "code": "x = xy ( x1 , x2 ) ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "set y to result of run xy with arguments y1 , y2",
      "code": "y = xy ( y1 , y2 ) ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "increment x1 by x",
      "code": "x1 += x ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "increment y1 by y",
      "code": "y1 += y ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "add element result of run res with arguments x , y , to end of vec",
      "code": "vec . push_back ( res ( x , y ) ) ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "print size of vec print newline",
      "code": "cout << vec . size ( ) << endl ;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "for i = 0 to size of vec , print vec [ i ] print newline",
      "code": "for ( i = 0 ; i < vec . size ( ) ; i ++ ) cout << vec [ i ] << endl ;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string res ( int x , string y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "int i , j , k , l , n , count , x , x , y ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "string to ;"
      ],
      "err_line": 21,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "cin >> bal ;"
      ],
      "err_line": 21,
      "err_msg": "‘bal’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;"
      ],
      "err_line": 23,
      "err_msg": "redeclaration of ‘char x2’"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "vec . push ( res ) ;"
      ],
      "err_line": 30,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘push’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string res ( int x , string y )"
      ],
      "err_line": 1,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int xy ( char y1 , char y2 ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "y = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "int i , j , k , l , n , count , count , x , y ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "cin >> get ;"
      ],
      "err_line": 21,
      "err_msg": "‘get’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "vector < char > vec ;"
      ],
      "err_line": 30,
      "err_msg": "no matching function for call to ‘std::vector<char>::push_back(std::__cxx11::string)’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] , y2 = to [ 1 ] ;"
      ],
      "err_line": 23,
      "err_msg": "redeclaration of ‘char x2’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "y = xy ( y1 ) , y2 ;"
      ],
      "err_line": 27,
      "err_msg": "too few arguments to function ‘int xy(char, char)’"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "vec . push ( res ( x , y ) ) ;"
      ],
      "err_line": 30,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘push’"
    },
    {
      "mod_line": [
        0,
        19
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "int i , j , k , l , n , count , x , x , y ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        19,
        20
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "int i , j , k , l , n , count , x , x , y ;",
        "string to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        19,
        20,
        21
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "int i , j , k , l , n , count , x , x , y ;",
        "string to ;",
        "cin >> bal ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        19,
        20,
        23
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "int i , j , k , l , n , count , x , x , y ;",
        "string to ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        19,
        20,
        30
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "int i , j , k , l , n , count , x , x , y ;",
        "string to ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        19,
        21
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "int i , j , k , l , n , count , x , x , y ;",
        "cin >> bal ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        19,
        21,
        23
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "int i , j , k , l , n , count , x , x , y ;",
        "cin >> bal ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        19,
        21,
        30
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "int i , j , k , l , n , count , x , x , y ;",
        "cin >> bal ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        19,
        23
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "int i , j , k , l , n , count , x , x , y ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        19,
        23,
        30
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "int i , j , k , l , n , count , x , x , y ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        19,
        30
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "int i , j , k , l , n , count , x , x , y ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        20
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "string to ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        20,
        21
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "string to ;",
        "cin >> bal ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        20,
        21,
        23
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "string to ;",
        "cin >> bal ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        20,
        21,
        30
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "string to ;",
        "cin >> bal ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        20,
        23
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "string to ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        20,
        23,
        30
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "string to ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        20,
        30
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "string to ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        21
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "cin >> bal ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        21,
        23
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "cin >> bal ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        21,
        23,
        30
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "cin >> bal ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        21,
        30
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "cin >> bal ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        23
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        23,
        30
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        30
      ],
      "mod_code": [
        "string res ( int x , string y ) ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        20
      ],
      "mod_code": [
        "int i , j , k , l , n , count , x , x , y ;",
        "string to ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        19,
        20,
        21
      ],
      "mod_code": [
        "int i , j , k , l , n , count , x , x , y ;",
        "string to ;",
        "cin >> bal ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        19,
        20,
        21,
        23
      ],
      "mod_code": [
        "int i , j , k , l , n , count , x , x , y ;",
        "string to ;",
        "cin >> bal ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        19,
        20,
        21,
        30
      ],
      "mod_code": [
        "int i , j , k , l , n , count , x , x , y ;",
        "string to ;",
        "cin >> bal ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        19,
        20,
        23
      ],
      "mod_code": [
        "int i , j , k , l , n , count , x , x , y ;",
        "string to ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        19,
        20,
        23,
        30
      ],
      "mod_code": [
        "int i , j , k , l , n , count , x , x , y ;",
        "string to ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        19,
        20,
        30
      ],
      "mod_code": [
        "int i , j , k , l , n , count , x , x , y ;",
        "string to ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        19,
        21
      ],
      "mod_code": [
        "int i , j , k , l , n , count , x , x , y ;",
        "cin >> bal ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        19,
        21,
        23
      ],
      "mod_code": [
        "int i , j , k , l , n , count , x , x , y ;",
        "cin >> bal ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        19,
        21,
        23,
        30
      ],
      "mod_code": [
        "int i , j , k , l , n , count , x , x , y ;",
        "cin >> bal ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        19,
        21,
        30
      ],
      "mod_code": [
        "int i , j , k , l , n , count , x , x , y ;",
        "cin >> bal ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        19,
        23
      ],
      "mod_code": [
        "int i , j , k , l , n , count , x , x , y ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        19,
        23,
        30
      ],
      "mod_code": [
        "int i , j , k , l , n , count , x , x , y ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        19,
        30
      ],
      "mod_code": [
        "int i , j , k , l , n , count , x , x , y ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        20,
        21
      ],
      "mod_code": [
        "string to ;",
        "cin >> bal ;"
      ],
      "err_line": 21,
      "err_msg": "‘bal’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        21,
        23
      ],
      "mod_code": [
        "string to ;",
        "cin >> bal ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;"
      ],
      "err_line": 21,
      "err_msg": "‘bal’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        21,
        23,
        30
      ],
      "mod_code": [
        "string to ;",
        "cin >> bal ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘bal’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        21,
        30
      ],
      "mod_code": [
        "string to ;",
        "cin >> bal ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘bal’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23
      ],
      "mod_code": [
        "string to ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;"
      ],
      "err_line": 21,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23,
        30
      ],
      "mod_code": [
        "string to ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30
      ],
      "mod_code": [
        "string to ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23
      ],
      "mod_code": [
        "cin >> bal ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;"
      ],
      "err_line": 21,
      "err_msg": "‘bal’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        23,
        30
      ],
      "mod_code": [
        "cin >> bal ;",
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘bal’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        30
      ],
      "mod_code": [
        "cin >> bal ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘bal’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        30
      ],
      "mod_code": [
        "char x1 , y1 , x2 = from [ 1 ] , x2 = from [ 1 ] , y2 = to [ 1 ] ;",
        "vec . push ( res ) ;"
      ],
      "err_line": 23,
      "err_msg": "redeclaration of ‘char x2’"
    }
  ]
}