{
  "meta": {
    "index": 2229,
    "hitid": "3XBXDSS888DQ5RUBJ9Q2YQ21Y8KXLE",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "556A",
    "subid": "41732897"
  },
  "lines": [
    {
      "line": 0,
      "text": "create string s",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int a , b and n",
      "code": "int a , b , n ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if s [ i ] = 0",
      "code": "if ( s [ i ] == ' 0 ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment a",
      "code": "a ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "add 1 to b",
      "code": "b ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print abs of b - a",
      "code": "cout << abs ( b - a ) << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4,
        8
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "s >> s ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4,
        8,
        11
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "s >> s ;",
        "else else",
        "cout << abs ( b ) - a << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4,
        8,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "s >> s ;",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4,
        8,
        1
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "s >> s ;",
        "else else",
        "char a , b , n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4,
        11
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "s >> s ;",
        "cout << abs ( b ) - a << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4,
        11,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "s >> s ;",
        "cout << abs ( b ) - a << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4,
        11,
        1
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "s >> s ;",
        "cout << abs ( b ) - a << endl ;",
        "char a , b , n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "s >> s ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4,
        5,
        1
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "s >> s ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char a , b , n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4,
        1
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "s >> s ;",
        "char a , b , n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        8,
        11
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "else else",
        "cout << abs ( b ) - a << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "else else",
        "cout << abs ( b ) - a << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        1
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "else else",
        "cout << abs ( b ) - a << endl ;",
        "char a , b , n ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        8,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        5,
        1
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )",
        "char a , b , n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        1
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "else else",
        "char a , b , n ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        11,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "cout << abs ( b ) - a << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        5,
        1
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "cout << abs ( b ) - a << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char a , b , n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        1
      ],
      "mod_code": [
        "if ( s [ i ] == 0 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "char a , b , n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "s >> s ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        8,
        11
      ],
      "mod_code": [
        "s >> s ;",
        "else else",
        "cout << abs ( b ) - a << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        5
      ],
      "mod_code": [
        "s >> s ;",
        "else else",
        "cout << abs ( b ) - a << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        1
      ],
      "mod_code": [
        "s >> s ;",
        "else else",
        "cout << abs ( b ) - a << endl ;",
        "char a , b , n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        8,
        5
      ],
      "mod_code": [
        "s >> s ;",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        8,
        5,
        1
      ],
      "mod_code": [
        "s >> s ;",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )",
        "char a , b , n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        8,
        1
      ],
      "mod_code": [
        "s >> s ;",
        "else else",
        "char a , b , n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "s >> s ;",
        "cout << abs ( b ) - a << endl ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        11,
        5
      ],
      "mod_code": [
        "s >> s ;",
        "cout << abs ( b ) - a << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        11,
        5,
        1
      ],
      "mod_code": [
        "s >> s ;",
        "cout << abs ( b ) - a << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char a , b , n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        11,
        1
      ],
      "mod_code": [
        "s >> s ;",
        "cout << abs ( b ) - a << endl ;",
        "char a , b , n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "s >> s ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        5,
        1
      ],
      "mod_code": [
        "s >> s ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char a , b , n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "s >> s ;",
        "char a , b , n ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "else else",
        "cout << abs ( b ) - a << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        11,
        5
      ],
      "mod_code": [
        "else else",
        "cout << abs ( b ) - a << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        5,
        1
      ],
      "mod_code": [
        "else else",
        "cout << abs ( b ) - a << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char a , b , n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        1
      ],
      "mod_code": [
        "else else",
        "cout << abs ( b ) - a << endl ;",
        "char a , b , n ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        5,
        1
      ],
      "mod_code": [
        "else else",
        "for ( i = 0 ; i < n ; i ++ )",
        "char a , b , n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "else else",
        "char a , b , n ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "cout << abs ( b ) - a << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5,
        1
      ],
      "mod_code": [
        "cout << abs ( b ) - a << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char a , b , n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "char a , b , n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}