{
  "meta": {
    "index": 651,
    "hitid": "3HXCEECSQMNZAL1P363DPJK8ELBYZO",
    "workerid": "A1APYLD4DUK33J",
    "probid": "14A",
    "subid": "48886842"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers r , c , x , y , z , m , n , c1 , g , o , u , v , e , with x = 0 , y = 0 , z = - 1 , c1 = 0 , o = 0 , e = 0",
      "code": "int r , c , x = 0 , y = 0 , z = - 1 , m , n , c1 = 0 , g , o = 0 , u , v , e = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read r read c",
      "code": "cin >> r >> c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set v to c",
      "code": "v = c ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set m to c + 1",
      "code": "m = c + 1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create boolean s with s = true",
      "code": "bool s = true ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create 2d character array arr with size r by c",
      "code": "char arr [ r ] [ c ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to r exclusive",
      "code": "for ( int i = 0 ; i < r ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for j = 0 to c exclusive",
      "code": "for ( int j = 0 ; j < c ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "read arr [ i ] [ j ]",
      "code": "cin >> arr [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if arr [ i ] [ j ] is ' * '",
      "code": "if ( arr [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "set s to false",
      "code": "s = false ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "increment c1",
      "code": "c1 ++ ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "if c1 is 1 , set m to j",
      "code": "if ( c1 == 1 ) { m = j ; }",
      "indent": 4
    },
    {
      "line": 14,
      "text": "increment x",
      "code": "x ++ ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "set g to i",
      "code": "g = i ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "set o to j",
      "code": "o = j ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if not s and z is - 1 , set z to i",
      "code": "if ( ! s && z == - 1 ) { z = i ; }",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if m is less than v , set v to m",
      "code": "if ( m < v ) v = m ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if o is greater than e , set e to o",
      "code": "if ( o > e ) e = o ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "if x is greater than y , set y to x",
      "code": "if ( x > y ) { y = x ; }",
      "indent": 2
    },
    {
      "line": 23,
      "text": "set c1 to 0",
      "code": "c1 = 0 ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "set x to 0",
      "code": "x = 0 ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "if not s",
      "code": "if ( ! s )",
      "indent": 1
    },
    {
      "line": 27,
      "text": "set m to v",
      "code": "m = v ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "set o to e",
      "code": "o = e ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "create integer p with p = g - z + 1",
      "code": "int p = g - z + 1 ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "set y to o - m + 1",
      "code": "y = o - m + 1 ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "create 2d character array arr1 with size p by y",
      "code": "char arr1 [ p ] [ y ] ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "create integers k , l with k = 0 , l = 0",
      "code": "int k = 0 , l = 0 ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "for i = z to g inclusive",
      "code": "for ( int i = z ; i <= g ; i ++ )",
      "indent": 2
    },
    {
      "line": 34,
      "text": "for j = m to o inclusive",
      "code": "for ( int j = m ; j <= o ; j ++ )",
      "indent": 3
    },
    {
      "line": 35,
      "text": "set arr1 [ k ] [ l ] to arr [ i ] [ j ]",
      "code": "arr1 [ k ] [ l ] = arr [ i ] [ j ] ;",
      "indent": 4
    },
    {
      "line": 36,
      "text": "increment l",
      "code": "l ++ ;",
      "indent": 4
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 38,
      "text": "set l to 0",
      "code": "l = 0 ;",
      "indent": 3
    },
    {
      "line": 39,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 3
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 41,
      "text": "for i = 0 to p exclusive",
      "code": "for ( int i = 0 ; i < p ; i ++ )",
      "indent": 2
    },
    {
      "line": 42,
      "text": "for j = 0 to y exclusive , print arr1 [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < y ; j ++ ) { cout << arr1 [ i ] [ j ] ; }",
      "indent": 3
    },
    {
      "line": 43,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 3
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 45,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 46,
      "text": "for i = 0 to r exclusive",
      "code": "for ( int i = 0 ; i < r ; i ++ )",
      "indent": 2
    },
    {
      "line": 47,
      "text": "for j = 0 to c exclusive , print arr [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < c ; j ++ ) { cout << arr [ i ] [ j ] ; }",
      "indent": 3
    },
    {
      "line": 48,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 3
    },
    {
      "line": 49,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 50,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 51,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 52,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , o = - 1 , e = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < c ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else if ( arr [ i ] [ j ] == ' * ' )"
      ],
      "err_line": 10,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "o to ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 35,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "int k , l = 0 , l = 0 ;"
      ],
      "err_line": 32,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "for ( i = z ; i <= g ; i ++ )"
      ],
      "err_line": 33,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "for ( j = m ; j <= o ; j ++ )"
      ],
      "err_line": 34,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;"
      ],
      "err_line": 35,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "for ( i = 0 ; i < p ; i ++ )"
      ],
      "err_line": 41,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        46
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 46,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        34
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "for ( j = m ; j <= o ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        34,
        7
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "for ( j = m ; j <= o ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        34,
        7,
        35
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "for ( j = m ; j <= o ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        34,
        7,
        46
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "for ( j = m ; j <= o ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        34,
        7,
        31
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "for ( j = m ; j <= o ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        34,
        35
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "for ( j = m ; j <= o ; j ++ )",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        34,
        35,
        46
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "for ( j = m ; j <= o ; j ++ )",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        34,
        35,
        31
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "for ( j = m ; j <= o ; j ++ )",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        34,
        46
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "for ( j = m ; j <= o ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        34,
        46,
        31
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "for ( j = m ; j <= o ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        34,
        31
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "for ( j = m ; j <= o ; j ++ )",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        7,
        35
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        7,
        35,
        46
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        7,
        35,
        31
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        7,
        46
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        7,
        46,
        31
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        7,
        31
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        35
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        35,
        46
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        35,
        46,
        31
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        35,
        31
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        46
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        46,
        31
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        1,
        31
      ],
      "mod_code": [
        "int r , c , x , y , z , m , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , c1 = - 1 , e = 0 ;",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int c1’"
    },
    {
      "mod_line": [
        34,
        7
      ],
      "mod_code": [
        "for ( j = m ; j <= o ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        7,
        35
      ],
      "mod_code": [
        "for ( j = m ; j <= o ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        7,
        35,
        46
      ],
      "mod_code": [
        "for ( j = m ; j <= o ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        7,
        35,
        31
      ],
      "mod_code": [
        "for ( j = m ; j <= o ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        7,
        46
      ],
      "mod_code": [
        "for ( j = m ; j <= o ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        7,
        46,
        31
      ],
      "mod_code": [
        "for ( j = m ; j <= o ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )",
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        7,
        31
      ],
      "mod_code": [
        "for ( j = m ; j <= o ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        35
      ],
      "mod_code": [
        "for ( j = m ; j <= o ; j ++ )",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;"
      ],
      "err_line": 34,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        35,
        46
      ],
      "mod_code": [
        "for ( j = m ; j <= o ; j ++ )",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 34,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        35,
        46,
        31
      ],
      "mod_code": [
        "for ( j = m ; j <= o ; j ++ )",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 34,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        35,
        31
      ],
      "mod_code": [
        "for ( j = m ; j <= o ; j ++ )",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 34,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        46
      ],
      "mod_code": [
        "for ( j = m ; j <= o ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 34,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        46,
        31
      ],
      "mod_code": [
        "for ( j = m ; j <= o ; j ++ )",
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 34,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        31
      ],
      "mod_code": [
        "for ( j = m ; j <= o ; j ++ )",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 34,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        35
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        35,
        46
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        35,
        46,
        31
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        35,
        31
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        46
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        46,
        31
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )",
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        31
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        46
      ],
      "mod_code": [
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;",
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 35,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        35,
        46,
        31
      ],
      "mod_code": [
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;",
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 35,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        35,
        31
      ],
      "mod_code": [
        "char arr1 [ k ] [ l ] = arr [ i ] [ j ] ;",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 35,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        46,
        31
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )",
        "char arr1 [ p + y ] ;"
      ],
      "err_line": 35,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    }
  ]
}