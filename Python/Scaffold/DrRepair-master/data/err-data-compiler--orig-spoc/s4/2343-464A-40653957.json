{
  "meta": {
    "index": 2343,
    "hitid": "3NC6WP7WJHERRL1KDI1I5I5ANDGWWB",
    "workerid": "AIWEXPJAU66D9",
    "probid": "464A",
    "subid": "40653957"
  },
  "lines": [
    {
      "line": 0,
      "text": "create const int MAXN = 1005",
      "code": "const int MAXN = 1005 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create character c",
      "code": "char c ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare integer array s with size MAXN",
      "code": "int s [ MAXN ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integers n and p",
      "code": "int n , p ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "function work2 with int argument x",
      "code": "void work2 ( int x )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "if x is greater than n",
      "code": "if ( x > n )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i from 1 to n inclusive , print s [ i ] + ' a ' - 1 as char",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cout << ( char ) ( s [ i ] + ' a ' - 1 ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print a new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "call exit with argument 0",
      "code": "exit ( 0 ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i from 1 to p inclusive incrementing i",
      "code": "for ( int i = 1 ; i <= p ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "declare boolean ch1 = ( x - 1 < = 0 | | i ! = s [ x - 1 ] )",
      "code": "bool ch1 = ( x - 1 <= 0 || i != s [ x - 1 ] ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "declare boolean ch2 = ( x - 2 < = 0 | | i ! = s [ x - 2 ] )",
      "code": "bool ch2 = ( x - 2 <= 0 || i != s [ x - 2 ] ) ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if ch1 is true and ch2 is true",
      "code": "if ( ch1 && ch2 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "assign i to s [ x ]",
      "code": "s [ x ] = i ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "call function work2 with arguments x + 1",
      "code": "work2 ( x + 1 ) ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 19,
      "text": "function work with int argument x",
      "code": "void work ( int x )",
      "indent": 0
    },
    {
      "line": 20,
      "text": "while s [ x ] < p",
      "code": "while ( s [ x ] < p )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "increment s [ x ] by one",
      "code": "s [ x ] ++ ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "declare bool ch1 = ( x - 1 < = 0 | | s [ x - 1 ] ! = s [ x ] )",
      "code": "bool ch1 = ( x - 1 <= 0 || s [ x - 1 ] != s [ x ] ) ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "create boolean ch2 = ( x - 2 < = 0 | | s [ x - 2 ] ! = s [ x ] )",
      "code": "bool ch2 = ( x - 2 <= 0 || s [ x - 2 ] != s [ x ] ) ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "if ch1 & & ch2 are both true , call work2 ( x + 1 )",
      "code": "if ( ch1 && ch2 ) work2 ( x + 1 ) ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 28,
      "text": "read from the input to n and p",
      "code": "cin >> n >> p ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "for i = 1 to n inclusive , read c and set s [ i ] to c - ' a ' + 1",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> c , s [ i ] = c - ' a ' + 1 ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "for integer i = n to 1 inclusive , decrementing i , call work ( i )",
      "code": "for ( int i = n ; i >= 1 ; i -- ) work ( i ) ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const int const MAXN = 1005 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "character = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘character’ does not name a type"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid use of void expression"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= p ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "bool ch1 = ( x - 1 <= s . 0 || s [ x - 1 ] != s [ x ] ) ;"
      ],
      "err_line": 22,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 28,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "const int const MAXN = 1005 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        6,
        0,
        28
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "const int const MAXN = 1005 ;",
        "cin >> n >> k ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        6,
        0,
        28,
        5
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "const int const MAXN = 1005 ;",
        "cin >> n >> k ;",
        "if ( x >= n )"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        6,
        0,
        28,
        14
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "const int const MAXN = 1005 ;",
        "cin >> n >> k ;",
        "s [ x ] = ' i ' ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        6,
        0,
        28,
        8
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "const int const MAXN = 1005 ;",
        "cin >> n >> k ;",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        6,
        0,
        5
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "const int const MAXN = 1005 ;",
        "if ( x >= n )"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        6,
        0,
        5,
        14
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "const int const MAXN = 1005 ;",
        "if ( x >= n )",
        "s [ x ] = ' i ' ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        6,
        0,
        5,
        8
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "const int const MAXN = 1005 ;",
        "if ( x >= n )",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        6,
        0,
        14
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "const int const MAXN = 1005 ;",
        "s [ x ] = ' i ' ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        6,
        0,
        14,
        8
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "const int const MAXN = 1005 ;",
        "s [ x ] = ' i ' ;",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        6,
        0,
        8
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "const int const MAXN = 1005 ;",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        6,
        28
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "cin >> n >> k ;"
      ],
      "err_line": 28,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        28,
        5
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "cin >> n >> k ;",
        "if ( x >= n )"
      ],
      "err_line": 28,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        28,
        5,
        14
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "cin >> n >> k ;",
        "if ( x >= n )",
        "s [ x ] = ' i ' ;"
      ],
      "err_line": 28,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        28,
        5,
        8
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "cin >> n >> k ;",
        "if ( x >= n )",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid use of void expression"
    },
    {
      "mod_line": [
        6,
        28,
        14
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "cin >> n >> k ;",
        "s [ x ] = ' i ' ;"
      ],
      "err_line": 28,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        28,
        14,
        8
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "cin >> n >> k ;",
        "s [ x ] = ' i ' ;",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid use of void expression"
    },
    {
      "mod_line": [
        6,
        28,
        8
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "cin >> n >> k ;",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid use of void expression"
    },
    {
      "mod_line": [
        6,
        5,
        14,
        8
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "if ( x >= n )",
        "s [ x ] = ' i ' ;",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid use of void expression"
    },
    {
      "mod_line": [
        6,
        5,
        8
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "if ( x >= n )",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid use of void expression"
    },
    {
      "mod_line": [
        6,
        14,
        8
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "s [ x ] = ' i ' ;",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid use of void expression"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "for ( char i = 1 ; i <= n ; i ++ ) cout << s [ i ] + ' a ' - 1 ;",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid use of void expression"
    },
    {
      "mod_line": [
        0,
        28
      ],
      "mod_code": [
        "const int const MAXN = 1005 ;",
        "cin >> n >> k ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        28,
        5
      ],
      "mod_code": [
        "const int const MAXN = 1005 ;",
        "cin >> n >> k ;",
        "if ( x >= n )"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        28,
        5,
        14
      ],
      "mod_code": [
        "const int const MAXN = 1005 ;",
        "cin >> n >> k ;",
        "if ( x >= n )",
        "s [ x ] = ' i ' ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        28,
        5,
        8
      ],
      "mod_code": [
        "const int const MAXN = 1005 ;",
        "cin >> n >> k ;",
        "if ( x >= n )",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        28,
        14
      ],
      "mod_code": [
        "const int const MAXN = 1005 ;",
        "cin >> n >> k ;",
        "s [ x ] = ' i ' ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        28,
        14,
        8
      ],
      "mod_code": [
        "const int const MAXN = 1005 ;",
        "cin >> n >> k ;",
        "s [ x ] = ' i ' ;",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        28,
        8
      ],
      "mod_code": [
        "const int const MAXN = 1005 ;",
        "cin >> n >> k ;",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "const int const MAXN = 1005 ;",
        "if ( x >= n )"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        5,
        14
      ],
      "mod_code": [
        "const int const MAXN = 1005 ;",
        "if ( x >= n )",
        "s [ x ] = ' i ' ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        5,
        14,
        8
      ],
      "mod_code": [
        "const int const MAXN = 1005 ;",
        "if ( x >= n )",
        "s [ x ] = ' i ' ;",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        5,
        8
      ],
      "mod_code": [
        "const int const MAXN = 1005 ;",
        "if ( x >= n )",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "const int const MAXN = 1005 ;",
        "s [ x ] = ' i ' ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        14,
        8
      ],
      "mod_code": [
        "const int const MAXN = 1005 ;",
        "s [ x ] = ' i ' ;",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "const int const MAXN = 1005 ;",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        28,
        5
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "if ( x >= n )"
      ],
      "err_line": 28,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        5,
        14
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "if ( x >= n )",
        "s [ x ] = ' i ' ;"
      ],
      "err_line": 28,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        5,
        14,
        8
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "if ( x >= n )",
        "s [ x ] = ' i ' ;",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid use of void expression"
    },
    {
      "mod_line": [
        28,
        5,
        8
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "if ( x >= n )",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid use of void expression"
    },
    {
      "mod_line": [
        28,
        14
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "s [ x ] = ' i ' ;"
      ],
      "err_line": 28,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        14,
        8
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "s [ x ] = ' i ' ;",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid use of void expression"
    },
    {
      "mod_line": [
        28,
        8
      ],
      "mod_code": [
        "cin >> n >> k ;",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid use of void expression"
    },
    {
      "mod_line": [
        5,
        14,
        8
      ],
      "mod_code": [
        "if ( x >= n )",
        "s [ x ] = ' i ' ;",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid use of void expression"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "if ( x >= n )",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid use of void expression"
    },
    {
      "mod_line": [
        14,
        8
      ],
      "mod_code": [
        "s [ x ] = ' i ' ;",
        "exit ( exit ( 0 ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid use of void expression"
    }
  ]
}