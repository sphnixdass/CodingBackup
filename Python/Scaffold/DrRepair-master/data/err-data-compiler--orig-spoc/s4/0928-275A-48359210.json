{
  "meta": {
    "index": 928,
    "hitid": "329E6HTMSWW35N5FEK7DCA0I2DFK3Z",
    "workerid": "A1APYLD4DUK33J",
    "probid": "275A",
    "subid": "48359210"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create 2d integer vector v with size 3 by 3",
      "code": "int v [ 3 ] [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create 2d integer vector n with size 3 by 3",
      "code": "int n [ 3 ] [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for j = 0 to 3 exclusive",
      "code": "for ( int j = 0 ; j < 3 ; j ++ )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read v [ i ] [ j ]",
      "code": "cin >> v [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "set n [ i ] [ j ] to 1",
      "code": "n [ i ] [ j ] = 1 ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for j = 0 to 3 exclusive",
      "code": "for ( int j = 0 ; j < 3 ; j ++ )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "while v [ i ] [ j ] is true",
      "code": "while ( v [ i ] [ j ] )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if i + 1 is less than 3 , set n [ i + 1 ] [ j ] to not n [ i + 1 ] [ j ]",
      "code": "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = ! n [ i + 1 ] [ j ] ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "if i - 1 is greater than - 1 , set n [ i - 1 ] [ j ] to not n [ i - 1 ] [ j ]",
      "code": "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = ! n [ i - 1 ] [ j ] ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "if j + 1 is less than 3 , set n [ i ] [ j + 1 ] to not n [ i ] [ j + 1 ]",
      "code": "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = ! n [ i ] [ j + 1 ] ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "if j - 1 is greater than - 1 , set n [ i ] [ j - 1 ] to not n [ i ] [ j - 1 ]",
      "code": "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = ! n [ i ] [ j - 1 ] ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "set n [ i ] [ j ] to not n [ i ] [ j ]",
      "code": "n [ i ] [ j ] = ! n [ i ] [ j ] ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "decrement v [ i ] [ j ]",
      "code": "v [ i ] [ j ] -- ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for j = 0 to 3 exclusive , print n [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < 3 ; j ++ ) { cout << n [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 23,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "vector < int > v ( 3 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "n [ ' i ' ] = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [3]’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "vector < int > n [ 3 ] [ 3 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        2,
        12
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        2,
        12,
        13
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        2,
        12,
        14
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        2,
        12,
        15
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        2,
        12,
        16
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        2,
        13
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        2,
        13,
        14
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        2,
        13,
        15
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        2,
        13,
        16
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        2,
        14
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        2,
        14,
        15
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        2,
        14,
        16
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        2,
        15
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        2,
        15,
        16
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        2,
        16
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "vector < int > n [ 3 ] [ 3 ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        12,
        13
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        12,
        13,
        14
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        12,
        13,
        15
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        12,
        13,
        16
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        12,
        14
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        12,
        14,
        15
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        12,
        14,
        16
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        12,
        15
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        12,
        15,
        16
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        12,
        16
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        13,
        14
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        13,
        14,
        15
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        13,
        14,
        16
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        13,
        15
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        13,
        15,
        16
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        13,
        16
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        14,
        15
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        14,
        15,
        16
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        14,
        16
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        15,
        16
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "vector < int > v [ 3 ] [ 3 ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        12,
        13
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        14
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        15
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        16
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        12,
        14
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        12,
        14,
        15
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        12,
        14,
        16
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        12,
        15
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        12,
        15,
        16
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        12,
        16
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i + 1 < 3 ) n [ i + 1 ] [ j ] = n [ i + 1 ] [ j ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        13,
        14
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        13,
        14,
        15
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        13,
        14,
        16
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        13,
        15
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        13,
        15,
        16
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        13,
        16
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( i - 1 > - 1 ) n [ i - 1 ] [ j ] = n [ i - 1 ] [ j ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        14,
        15
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        14,
        15,
        16
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        14,
        16
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( j + 1 < 3 ) n [ i ] [ j + 1 ] = n [ i ] [ j + 1 ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        15,
        16
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "if ( j - 1 > - 1 ) n [ i ] [ j - 1 ] = n [ i ] [ j - 1 ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "vector < int > n [ 3 ] [ 3 ] ;",
        "n [ i ] [ j ] = n [ i ] [ j ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    }
  ]
}