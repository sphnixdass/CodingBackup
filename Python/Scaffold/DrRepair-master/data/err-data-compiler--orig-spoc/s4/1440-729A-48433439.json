{
  "meta": {
    "index": 1440,
    "hitid": "3URJ6VVYUPH7DA9YCQ4PTW9X0IIO45",
    "workerid": "A1APYLD4DUK33J",
    "probid": "729A",
    "subid": "48433439"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string a",
      "code": "string a ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integers found , fin with fin = 0",
      "code": "int found , fin = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "do",
      "code": "do",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set found to first index of \" ogo \" in a",
      "code": "found = a . find ( \" ogo \" ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set fin to found + 2",
      "code": "fin = found + 2 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "while ( a [ fin + 1 ] is ' g ' and a [ fin + 2 ] is ' o ' ) , increment fin by 2",
      "code": "while ( a [ fin + 1 ] == ' g ' && a [ fin + 2 ] == ' o ' ) fin += 2 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if found is not - 1 , replace from found to find + 1 - found with \" * * * \"",
      "code": "if ( found != - 1 ) a . replace ( found , fin + 1 - found , \" *** \" ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "while found is not - 1",
      "code": "while ( found != - 1 ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print a print newline",
      "code": "cout << a << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( found != - 1 ) found = \" * 1 ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "while ( found != - 1 )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char a ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘find’ in ‘a’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( found != - 1 ) found . find ( found , find ( found ) - \" * \" ) ;"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘find’ in ‘found’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "while ( found )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "fin += 2 ;",
        "if ( found != - 1 ) found = \" * 1 ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        11
      ],
      "mod_code": [
        "fin += 2 ;",
        "if ( found != - 1 ) found = \" * 1 ;",
        "while ( found != - 1 )"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        11,
        6
      ],
      "mod_code": [
        "fin += 2 ;",
        "if ( found != - 1 ) found = \" * 1 ;",
        "while ( found != - 1 )",
        "2. ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        6
      ],
      "mod_code": [
        "fin += 2 ;",
        "if ( found != - 1 ) found = \" * 1 ;",
        "2. ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        6,
        11
      ],
      "mod_code": [
        "fin += 2 ;",
        "if ( found != - 1 ) found = \" * 1 ;",
        "2. ;",
        "while ( found )"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        10,
        11
      ],
      "mod_code": [
        "fin += 2 ;",
        "if ( found != - 1 ) found = \" * 1 ;",
        "while ( found )"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "fin += 2 ;",
        "while ( found != - 1 )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8,
        11,
        10
      ],
      "mod_code": [
        "fin += 2 ;",
        "while ( found != - 1 )",
        "if ( found != - 1 ) found . find ( found , find ( found ) - \" * \" ) ;"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘find’ in ‘found’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        11,
        10,
        6
      ],
      "mod_code": [
        "fin += 2 ;",
        "while ( found != - 1 )",
        "if ( found != - 1 ) found . find ( found , find ( found ) - \" * \" ) ;",
        "2. ;"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘find’ in ‘found’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "fin += 2 ;",
        "if ( found != - 1 ) found . find ( found , find ( found ) - \" * \" ) ;"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘find’ in ‘found’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        10,
        6
      ],
      "mod_code": [
        "fin += 2 ;",
        "if ( found != - 1 ) found . find ( found , find ( found ) - \" * \" ) ;",
        "2. ;"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘find’ in ‘found’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        10,
        6,
        11
      ],
      "mod_code": [
        "fin += 2 ;",
        "if ( found != - 1 ) found . find ( found , find ( found ) - \" * \" ) ;",
        "2. ;",
        "while ( found )"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘find’ in ‘found’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        10,
        11
      ],
      "mod_code": [
        "fin += 2 ;",
        "if ( found != - 1 ) found . find ( found , find ( found ) - \" * \" ) ;",
        "while ( found )"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘find’ in ‘found’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "fin += 2 ;",
        "while ( found )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "if ( found != - 1 ) found = \" * 1 ;",
        "while ( found != - 1 )"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11,
        6
      ],
      "mod_code": [
        "if ( found != - 1 ) found = \" * 1 ;",
        "while ( found != - 1 )",
        "2. ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "if ( found != - 1 ) found = \" * 1 ;",
        "2. ;"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        6,
        11
      ],
      "mod_code": [
        "if ( found != - 1 ) found = \" * 1 ;",
        "2. ;",
        "while ( found )"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "if ( found != - 1 ) found = \" * 1 ;",
        "while ( found )"
      ],
      "err_line": 10,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "while ( found != - 1 )",
        "if ( found != - 1 ) found . find ( found , find ( found ) - \" * \" ) ;"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘find’ in ‘found’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        11,
        10,
        6
      ],
      "mod_code": [
        "while ( found != - 1 )",
        "if ( found != - 1 ) found . find ( found , find ( found ) - \" * \" ) ;",
        "2. ;"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘find’ in ‘found’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "if ( found != - 1 ) found . find ( found , find ( found ) - \" * \" ) ;",
        "2. ;"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘find’ in ‘found’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        10,
        6,
        11
      ],
      "mod_code": [
        "if ( found != - 1 ) found . find ( found , find ( found ) - \" * \" ) ;",
        "2. ;",
        "while ( found )"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘find’ in ‘found’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "if ( found != - 1 ) found . find ( found , find ( found ) - \" * \" ) ;",
        "while ( found )"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘find’ in ‘found’, which is of non-class type ‘int’"
    }
  ]
}