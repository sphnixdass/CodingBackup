{
  "meta": {
    "index": 2615,
    "hitid": "3PKVGQTFIHEQ8UFYTP903GI966BYRJ",
    "workerid": "A1AYVATMT88U1W",
    "probid": "1055A",
    "subid": "48705493"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , s be long integers , a = array of integers of length 1001 , b = array of integers of length 1001",
      "code": "long long int n , s , a [ 1001 ] , b [ 1001 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , s",
      "code": "cin >> n >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for long integer i = 1 to n inclusive , read a [ i ]",
      "code": "for ( long long int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for long integer i = 1 to n inclusive , read b [ i ]",
      "code": "for ( long long int i = 1 ; i <= n ; i ++ ) cin >> b [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if a [ 1 ] equals 0",
      "code": "if ( a [ 1 ] == 0 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print NO and newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if a [ s ] equals 1",
      "code": "if ( a [ s ] == 1 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print YES and newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "the boolean value of flag = false",
      "code": "bool flag = false ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for long integer i = s + 1 to n inclusive",
      "code": "for ( long long int i = s + 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if a [ i ] equals 1 and b [ i ] equals 1",
      "code": "if ( a [ i ] == 1 && b [ i ] == 1 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "flag is equal to true",
      "code": "flag = true ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "stop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if flag is equal to false",
      "code": "if ( flag == false )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print NO and newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "if b [ s ] equals 1",
      "code": "if ( b [ s ] == 1 )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print YES and newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "print NO and newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "flag = false ;"
      ],
      "err_line": 13,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "flag to ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 17,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        17
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "if ( a [ 1 ] == ' 0 ' )",
        "stop ;"
      ],
      "err_line": 17,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        17,
        2
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "if ( a [ 1 ] == ' 0 ' )",
        "stop ;",
        "cin >> n , s ;"
      ],
      "err_line": 17,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        17,
        16
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "if ( a [ 1 ] == ' 0 ' )",
        "stop ;",
        "flag to ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        5,
        17,
        1
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "if ( a [ 1 ] == ' 0 ' )",
        "stop ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        9,
        5,
        2,
        16
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "if ( a [ 1 ] == ' 0 ' )",
        "cin >> n , s ;",
        "flag to ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        5,
        2,
        1
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "if ( a [ 1 ] == ' 0 ' )",
        "cin >> n , s ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘long long int [1001][long long int [1001]]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        5,
        16
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "if ( a [ 1 ] == ' 0 ' )",
        "flag to ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        5,
        16,
        1
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "if ( a [ 1 ] == ' 0 ' )",
        "flag to ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        9,
        5,
        1
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "if ( a [ 1 ] == ' 0 ' )",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "stop ;"
      ],
      "err_line": 17,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        2
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "stop ;",
        "cin >> n , s ;"
      ],
      "err_line": 17,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        17,
        2,
        16
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "stop ;",
        "cin >> n , s ;",
        "flag to ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        17,
        2,
        1
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "stop ;",
        "cin >> n , s ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘long long int [1001][long long int [1001]]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        17,
        16
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "stop ;",
        "flag to ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        17,
        16,
        1
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "stop ;",
        "flag to ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        9,
        17,
        1
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "stop ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        9,
        2,
        16
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "cin >> n , s ;",
        "flag to ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        2,
        16,
        1
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "cin >> n , s ;",
        "flag to ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘long long int [1001][long long int [1001]]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        2,
        1
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "cin >> n , s ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘long long int [1001][long long int [1001]]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "flag to ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        9,
        16,
        1
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "flag to ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "if ( a [ s ] == ' 1 ' )",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "if ( a [ 1 ] == ' 0 ' )",
        "stop ;"
      ],
      "err_line": 17,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        2
      ],
      "mod_code": [
        "if ( a [ 1 ] == ' 0 ' )",
        "stop ;",
        "cin >> n , s ;"
      ],
      "err_line": 17,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        2,
        16
      ],
      "mod_code": [
        "if ( a [ 1 ] == ' 0 ' )",
        "stop ;",
        "cin >> n , s ;",
        "flag to ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        5,
        17,
        2,
        1
      ],
      "mod_code": [
        "if ( a [ 1 ] == ' 0 ' )",
        "stop ;",
        "cin >> n , s ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘long long int [1001][long long int [1001]]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        17,
        16
      ],
      "mod_code": [
        "if ( a [ 1 ] == ' 0 ' )",
        "stop ;",
        "flag to ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        5,
        17,
        16,
        1
      ],
      "mod_code": [
        "if ( a [ 1 ] == ' 0 ' )",
        "stop ;",
        "flag to ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        5,
        17,
        1
      ],
      "mod_code": [
        "if ( a [ 1 ] == ' 0 ' )",
        "stop ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        5,
        2,
        16
      ],
      "mod_code": [
        "if ( a [ 1 ] == ' 0 ' )",
        "cin >> n , s ;",
        "flag to ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        5,
        2,
        16,
        1
      ],
      "mod_code": [
        "if ( a [ 1 ] == ' 0 ' )",
        "cin >> n , s ;",
        "flag to ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘long long int [1001][long long int [1001]]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        2,
        1
      ],
      "mod_code": [
        "if ( a [ 1 ] == ' 0 ' )",
        "cin >> n , s ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘long long int [1001][long long int [1001]]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "if ( a [ 1 ] == ' 0 ' )",
        "flag to ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        5,
        16,
        1
      ],
      "mod_code": [
        "if ( a [ 1 ] == ' 0 ' )",
        "flag to ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "if ( a [ 1 ] == ' 0 ' )",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        17,
        2
      ],
      "mod_code": [
        "stop ;",
        "cin >> n , s ;"
      ],
      "err_line": 17,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        2,
        16
      ],
      "mod_code": [
        "stop ;",
        "cin >> n , s ;",
        "flag to ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        17,
        2,
        16,
        1
      ],
      "mod_code": [
        "stop ;",
        "cin >> n , s ;",
        "flag to ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘long long int [1001][long long int [1001]]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        2,
        1
      ],
      "mod_code": [
        "stop ;",
        "cin >> n , s ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘long long int [1001][long long int [1001]]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        16
      ],
      "mod_code": [
        "stop ;",
        "flag to ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        17,
        16,
        1
      ],
      "mod_code": [
        "stop ;",
        "flag to ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        17,
        1
      ],
      "mod_code": [
        "stop ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "cin >> n , s ;",
        "flag to ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        2,
        16,
        1
      ],
      "mod_code": [
        "cin >> n , s ;",
        "flag to ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘long long int [1001][long long int [1001]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "cin >> n , s ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘long long int [1001][long long int [1001]]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        1
      ],
      "mod_code": [
        "flag to ;",
        "long long n , a [ 1001 ] , b [ 1001 ] , s [ 1001 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘long long int [1001]’)"
    }
  ]
}