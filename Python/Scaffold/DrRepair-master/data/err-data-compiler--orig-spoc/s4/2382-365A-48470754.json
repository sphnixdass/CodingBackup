{
  "meta": {
    "index": 2382,
    "hitid": "3RHLQY6EDTYG9DI9MHQ9I2XYW4ED40",
    "workerid": "A1APYLD4DUK33J",
    "probid": "365A",
    "subid": "48470754"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , k , x , ans with ans = 0",
      "code": "int n , k , x , ans = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n read k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while decrement n is true",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "create integer array arr with size 10 , with arr = { } , create integer c with c = 0",
      "code": "int arr [ 10 ] = { } , c = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "while x is greater than 0",
      "code": "while ( x > 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if not arr [ x % 10 ] and x % 10 is less than or equal to k",
      "code": "if ( ! arr [ x % 10 ] && x % 10 <= k )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "increment c",
      "code": "c ++ ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "set arr [ x % 10 ] to 1",
      "code": "arr [ x % 10 ] = 1 ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "set x to x / 10",
      "code": "x /= 10 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if c is k + 1 , increment ans",
      "code": "if ( c == k + 1 ) ans ++ ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print ans print \" \\ n \"",
      "code": "cout << ans << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( n n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "n >> n >> k ;"
      ],
      "err_line": 5,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        7
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "n >> n >> k ;",
        "if ( arr [ x % 10 ] && x % 10 <= k )"
      ],
      "err_line": 5,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        7,
        6
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "n >> n >> k ;",
        "if ( arr [ x % 10 ] && x % 10 <= k )",
        "while ( x >= 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        7,
        3
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "n >> n >> k ;",
        "if ( arr [ x % 10 ] && x % 10 <= k )",
        "while ( n n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        2,
        7,
        9
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "n >> n >> k ;",
        "if ( arr [ x % 10 ] && x % 10 <= k )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        6
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "n >> n >> k ;",
        "while ( x >= 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        6,
        3
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "n >> n >> k ;",
        "while ( x >= 0 )",
        "while ( n n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        2,
        6,
        9
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "n >> n >> k ;",
        "while ( x >= 0 )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        3
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "n >> n >> k ;",
        "while ( n n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        2,
        3,
        9
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "n >> n >> k ;",
        "while ( n n )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        2,
        9
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "n >> n >> k ;",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "if ( arr [ x % 10 ] && x % 10 <= k )"
      ],
      "err_line": 5,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        6
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "if ( arr [ x % 10 ] && x % 10 <= k )",
        "while ( x >= 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        6,
        3
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "if ( arr [ x % 10 ] && x % 10 <= k )",
        "while ( x >= 0 )",
        "while ( n n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        7,
        6,
        9
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "if ( arr [ x % 10 ] && x % 10 <= k )",
        "while ( x >= 0 )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        3
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "if ( arr [ x % 10 ] && x % 10 <= k )",
        "while ( n n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        7,
        3,
        9
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "if ( arr [ x % 10 ] && x % 10 <= k )",
        "while ( n n )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "if ( arr [ x % 10 ] && x % 10 <= k )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "while ( x >= 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "while ( x >= 0 )",
        "while ( n n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        6,
        3,
        9
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "while ( x >= 0 )",
        "while ( n n )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "while ( x >= 0 )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "while ( n n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        3,
        9
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "while ( n n )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "int arr [ 10 ] = { 0 , c = 0 ;",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        6,
        3
      ],
      "mod_code": [
        "n >> n >> k ;",
        "if ( arr [ x % 10 ] && x % 10 <= k )",
        "while ( x >= 0 )",
        "while ( n n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        2,
        7,
        6,
        9
      ],
      "mod_code": [
        "n >> n >> k ;",
        "if ( arr [ x % 10 ] && x % 10 <= k )",
        "while ( x >= 0 )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        7,
        3
      ],
      "mod_code": [
        "n >> n >> k ;",
        "if ( arr [ x % 10 ] && x % 10 <= k )",
        "while ( n n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        2,
        7,
        3,
        9
      ],
      "mod_code": [
        "n >> n >> k ;",
        "if ( arr [ x % 10 ] && x % 10 <= k )",
        "while ( n n )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        2,
        7,
        9
      ],
      "mod_code": [
        "n >> n >> k ;",
        "if ( arr [ x % 10 ] && x % 10 <= k )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        6,
        3
      ],
      "mod_code": [
        "n >> n >> k ;",
        "while ( x >= 0 )",
        "while ( n n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        2,
        6,
        3,
        9
      ],
      "mod_code": [
        "n >> n >> k ;",
        "while ( x >= 0 )",
        "while ( n n )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        2,
        6,
        9
      ],
      "mod_code": [
        "n >> n >> k ;",
        "while ( x >= 0 )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "n >> n >> k ;",
        "while ( n n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        2,
        3,
        9
      ],
      "mod_code": [
        "n >> n >> k ;",
        "while ( n n )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "n >> n >> k ;",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        6,
        3
      ],
      "mod_code": [
        "if ( arr [ x % 10 ] && x % 10 <= k )",
        "while ( x >= 0 )",
        "while ( n n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        7,
        6,
        3,
        9
      ],
      "mod_code": [
        "if ( arr [ x % 10 ] && x % 10 <= k )",
        "while ( x >= 0 )",
        "while ( n n )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        7,
        6,
        9
      ],
      "mod_code": [
        "if ( arr [ x % 10 ] && x % 10 <= k )",
        "while ( x >= 0 )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "if ( arr [ x % 10 ] && x % 10 <= k )",
        "while ( n n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        7,
        3,
        9
      ],
      "mod_code": [
        "if ( arr [ x % 10 ] && x % 10 <= k )",
        "while ( n n )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "if ( arr [ x % 10 ] && x % 10 <= k )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "while ( x >= 0 )",
        "while ( n n )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        6,
        3,
        9
      ],
      "mod_code": [
        "while ( x >= 0 )",
        "while ( n n )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "while ( x >= 0 )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( n n )",
        "arr [ x % 10 ] ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘n’"
    }
  ]
}