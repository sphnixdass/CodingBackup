{
  "meta": {
    "index": 433,
    "hitid": "32L724R85LEJ6HKECFJ8CXO6F5JIPZ",
    "workerid": "A1APYLD4DUK33J",
    "probid": "869A",
    "subid": "48530096"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant long long inf = 0x3f3f3f3f",
      "code": "const long long inf = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer array x size 3005",
      "code": "int x [ 3005 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare integer array y size 3005",
      "code": "int y [ 3005 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare boolean array mark size 5000005",
      "code": "bool mark [ 5000005 ] ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "declare integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read character",
      "code": "cin . get ( ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read x [ i ]",
      "code": "cin >> x [ i ] ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "let mark [ x [ i ] ] be true",
      "code": "mark [ x [ i ] ] = true ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "read y [ i ]",
      "code": "cin >> y [ i ] ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "let mark [ y [ i ] ] be true",
      "code": "mark [ y [ i ] ] = true ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "declare number = 0 as integer",
      "code": "int number = 0 ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for j = 1 to n inclusive",
      "code": "for ( int j = 1 ; j <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "declare integer temp = x [ i ] ^ y [ j ]",
      "code": "int temp = x [ i ] ^ y [ j ] ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "if mark [ temp ] , increment number",
      "code": "if ( mark [ temp ] ) number ++ ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "if number % 2",
      "code": "if ( number % 2 )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print \" Koyomi \" , newline",
      "code": "cout << \" Koyomi \" << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print \" Karen \" , newline",
      "code": "cout << \" Karen \" << endl ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cin >> x >> x [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [3005]’)"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "mark [ x [ i ] ] ] = true ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cin >> y >> y [ i ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [3005]’)"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "mark [ y [ i ] ] ] = true ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 18,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        24
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        24,
        9
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "else else",
        "cin >> x >> x [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        24,
        9,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "else else",
        "cin >> x >> x [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        24,
        9,
        14
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "else else",
        "cin >> x >> x [ i ] ;",
        "mark [ y [ i ] ] ] = true ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        24,
        9,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "else else",
        "cin >> x >> x [ i ] ;",
        "while ( cin >> n )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        24,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "else else",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        24,
        12,
        14
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "else else",
        "for ( i = 1 ; i <= n ; i ++ )",
        "mark [ y [ i ] ] ] = true ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        24,
        12,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "else else",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        24,
        14
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "else else",
        "mark [ y [ i ] ] ] = true ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        24,
        14,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "else else",
        "mark [ y [ i ] ] ] = true ;",
        "while ( cin >> n )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        24,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "else else",
        "while ( cin >> n )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> x >> x [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> x >> x [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        14
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> x >> x [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "mark [ y [ i ] ] ] = true ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> x >> x [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        14
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> x >> x [ i ] ;",
        "mark [ y [ i ] ] ] = true ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        14,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> x >> x [ i ] ;",
        "mark [ y [ i ] ] ] = true ;",
        "while ( cin >> n )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> x >> x [ i ] ;",
        "while ( cin >> n )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        14
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "mark [ y [ i ] ] ] = true ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "mark [ y [ i ] ] ] = true ;",
        "while ( cin >> n )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "mark [ y [ i ] ] ] = true ;"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "mark [ y [ i ] ] ] = true ;",
        "while ( cin >> n )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        9
      ],
      "mod_code": [
        "else else",
        "cin >> x >> x [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [3005]’)"
    },
    {
      "mod_line": [
        24,
        9,
        12
      ],
      "mod_code": [
        "else else",
        "cin >> x >> x [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [3005]’)"
    },
    {
      "mod_line": [
        24,
        9,
        12,
        14
      ],
      "mod_code": [
        "else else",
        "cin >> x >> x [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "mark [ y [ i ] ] ] = true ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [3005]’)"
    },
    {
      "mod_line": [
        24,
        9,
        12,
        6
      ],
      "mod_code": [
        "else else",
        "cin >> x >> x [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [3005]’)"
    },
    {
      "mod_line": [
        24,
        9,
        14
      ],
      "mod_code": [
        "else else",
        "cin >> x >> x [ i ] ;",
        "mark [ y [ i ] ] ] = true ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [3005]’)"
    },
    {
      "mod_line": [
        24,
        9,
        14,
        6
      ],
      "mod_code": [
        "else else",
        "cin >> x >> x [ i ] ;",
        "mark [ y [ i ] ] ] = true ;",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [3005]’)"
    },
    {
      "mod_line": [
        24,
        9,
        6
      ],
      "mod_code": [
        "else else",
        "cin >> x >> x [ i ] ;",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [3005]’)"
    },
    {
      "mod_line": [
        24,
        12
      ],
      "mod_code": [
        "else else",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        24,
        12,
        14
      ],
      "mod_code": [
        "else else",
        "for ( i = 1 ; i <= n ; i ++ )",
        "mark [ y [ i ] ] ] = true ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        24,
        12,
        14,
        6
      ],
      "mod_code": [
        "else else",
        "for ( i = 1 ; i <= n ; i ++ )",
        "mark [ y [ i ] ] ] = true ;",
        "while ( cin >> n )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        24,
        12,
        6
      ],
      "mod_code": [
        "else else",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        24,
        14
      ],
      "mod_code": [
        "else else",
        "mark [ y [ i ] ] ] = true ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        24,
        14,
        6
      ],
      "mod_code": [
        "else else",
        "mark [ y [ i ] ] ] = true ;",
        "while ( cin >> n )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        24,
        6
      ],
      "mod_code": [
        "else else",
        "while ( cin >> n )"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "cin >> x >> x [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [3005]’)"
    },
    {
      "mod_line": [
        9,
        12,
        14
      ],
      "mod_code": [
        "cin >> x >> x [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "mark [ y [ i ] ] ] = true ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [3005]’)"
    },
    {
      "mod_line": [
        9,
        12,
        14,
        6
      ],
      "mod_code": [
        "cin >> x >> x [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "mark [ y [ i ] ] ] = true ;",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [3005]’)"
    },
    {
      "mod_line": [
        9,
        12,
        6
      ],
      "mod_code": [
        "cin >> x >> x [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [3005]’)"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "cin >> x >> x [ i ] ;",
        "mark [ y [ i ] ] ] = true ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [3005]’)"
    },
    {
      "mod_line": [
        9,
        14,
        6
      ],
      "mod_code": [
        "cin >> x >> x [ i ] ;",
        "mark [ y [ i ] ] ] = true ;",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [3005]’)"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "cin >> x >> x [ i ] ;",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [3005]’)"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "mark [ y [ i ] ] ] = true ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "mark [ y [ i ] ] ] = true ;",
        "while ( cin >> n )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "mark [ y [ i ] ] ] = true ;",
        "while ( cin >> n )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘]’ token"
    }
  ]
}