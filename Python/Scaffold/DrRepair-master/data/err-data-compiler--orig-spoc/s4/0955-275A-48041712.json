{
  "meta": {
    "index": 955,
    "hitid": "3K2CEDRACBV3US3CEBQK90WKLHNMTN",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "275A",
    "subid": "48041712"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a = integer array of size 5 and width 5",
      "code": "int a [ 5 ] [ 5 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "b = integer array of size 5 and width 5",
      "code": "int b [ 5 ] [ 5 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "i , j = integer",
      "code": "int i , j ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to 5 exclusive",
      "code": "for ( i = 0 ; i < 5 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "a [ 0 ] [ i ] = 0",
      "code": "a [ 0 ] [ i ] = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "a [ 4 ] [ i ] = 0",
      "code": "a [ 4 ] [ i ] = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "a [ i ] [ 0 ] = 0",
      "code": "a [ i ] [ 0 ] = 0 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "a [ i ] [ 4 ] = 0",
      "code": "a [ i ] [ 4 ] = 0 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 1 to 4 exclusive",
      "code": "for ( i = 1 ; i < 4 ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for j = 1 to 4 exclusive , then read a [ i ] [ j ]",
      "code": "for ( j = 1 ; j < 4 ; j ++ ) cin >> a [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "for i = 1 to 4 exclusive",
      "code": "for ( i = 1 ; i < 4 ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for j = 1 to 4 exclusive",
      "code": "for ( j = 1 ; j < 4 ; j ++ )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "( a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j ] ) modulo 2 is 0",
      "code": "if ( ( a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j ] ) % 2 == 0 )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "b [ i ] [ j ] = 1",
      "code": "b [ i ] [ j ] = 1 ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 17,
      "text": "b [ i ] [ j ] = 0",
      "code": "b [ i ] [ j ] = 0 ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "for i = 1 to 4 exclusive",
      "code": "for ( i = 1 ; i < 4 ; i ++ )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for j = 1 to 4 exclusive , then print b [ i ] [ j ]",
      "code": "for ( j = 1 ; j < 4 ; j ++ ) cout << b [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print endline",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a [ 5 ] = { 0 } ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int b [ 5 ] = { 0 } ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        16
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "else ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        16,
        19
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "else ;",
        "for ( int i = 1 ; i <= 4 ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        2
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "else ;",
        "for ( int i = 1 ; i <= 4 ; i ++ )",
        "int b [ 5 ] = { 0 } ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        1
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "else ;",
        "for ( int i = 1 ; i <= 4 ; i ++ )",
        "int a [ 5 ] = { 0 } ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        16,
        19,
        17
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "else ;",
        "for ( int i = 1 ; i <= 4 ; i ++ )",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        16,
        2
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "else ;",
        "int b [ 5 ] = { 0 } ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        16,
        2,
        1
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "else ;",
        "int b [ 5 ] = { 0 } ;",
        "int a [ 5 ] = { 0 } ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        16,
        2,
        17
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "else ;",
        "int b [ 5 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        16,
        1
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "else ;",
        "int a [ 5 ] = { 0 } ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        16,
        1,
        17
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "else ;",
        "int a [ 5 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        16,
        17
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "else ;",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "for ( int i = 1 ; i <= 4 ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        19,
        2
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "for ( int i = 1 ; i <= 4 ; i ++ )",
        "int b [ 5 ] = { 0 } ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        19,
        2,
        1
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "for ( int i = 1 ; i <= 4 ; i ++ )",
        "int b [ 5 ] = { 0 } ;",
        "int a [ 5 ] = { 0 } ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        19,
        2,
        17
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "for ( int i = 1 ; i <= 4 ; i ++ )",
        "int b [ 5 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        19,
        1
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "for ( int i = 1 ; i <= 4 ; i ++ )",
        "int a [ 5 ] = { 0 } ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        19,
        1,
        17
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "for ( int i = 1 ; i <= 4 ; i ++ )",
        "int a [ 5 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        19,
        17
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "for ( int i = 1 ; i <= 4 ; i ++ )",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "int b [ 5 ] = { 0 } ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        2,
        1
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "int b [ 5 ] = { 0 } ;",
        "int a [ 5 ] = { 0 } ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        2,
        1,
        17
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "int b [ 5 ] = { 0 } ;",
        "int a [ 5 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        2,
        17
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "int b [ 5 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "int a [ 5 ] = { 0 } ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        1,
        17
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "int a [ 5 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        17
      ],
      "mod_code": [
        "a [ i - 1 ] [ j ] + a [ i + 1 ] [ j ] + a [ i ] [ j - 1 ] + a [ i ] [ j + 1 ] + a [ i ] [ j + 1 ] ) ;",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        19,
        2
      ],
      "mod_code": [
        "else ;",
        "for ( int i = 1 ; i <= 4 ; i ++ )",
        "int b [ 5 ] = { 0 } ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        19,
        2,
        1
      ],
      "mod_code": [
        "else ;",
        "for ( int i = 1 ; i <= 4 ; i ++ )",
        "int b [ 5 ] = { 0 } ;",
        "int a [ 5 ] = { 0 } ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        19,
        2,
        17
      ],
      "mod_code": [
        "else ;",
        "for ( int i = 1 ; i <= 4 ; i ++ )",
        "int b [ 5 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        19,
        1
      ],
      "mod_code": [
        "else ;",
        "for ( int i = 1 ; i <= 4 ; i ++ )",
        "int a [ 5 ] = { 0 } ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        19,
        1,
        17
      ],
      "mod_code": [
        "else ;",
        "for ( int i = 1 ; i <= 4 ; i ++ )",
        "int a [ 5 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        2
      ],
      "mod_code": [
        "else ;",
        "int b [ 5 ] = { 0 } ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        2,
        1
      ],
      "mod_code": [
        "else ;",
        "int b [ 5 ] = { 0 } ;",
        "int a [ 5 ] = { 0 } ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        2,
        1,
        17
      ],
      "mod_code": [
        "else ;",
        "int b [ 5 ] = { 0 } ;",
        "int a [ 5 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        2,
        17
      ],
      "mod_code": [
        "else ;",
        "int b [ 5 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        1
      ],
      "mod_code": [
        "else ;",
        "int a [ 5 ] = { 0 } ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        1,
        17
      ],
      "mod_code": [
        "else ;",
        "int a [ 5 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 4 ; i ++ )",
        "int b [ 5 ] = { 0 } ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        2,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 4 ; i ++ )",
        "int b [ 5 ] = { 0 } ;",
        "int a [ 5 ] = { 0 } ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        2,
        1,
        17
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 4 ; i ++ )",
        "int b [ 5 ] = { 0 } ;",
        "int a [ 5 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        2,
        17
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 4 ; i ++ )",
        "int b [ 5 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 4 ; i ++ )",
        "int a [ 5 ] = { 0 } ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        1,
        17
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 4 ; i ++ )",
        "int a [ 5 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "int b [ 5 ] = { 0 } ;",
        "int a [ 5 ] = { 0 } ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        1,
        17
      ],
      "mod_code": [
        "int b [ 5 ] = { 0 } ;",
        "int a [ 5 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "int b [ 5 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        17
      ],
      "mod_code": [
        "int a [ 5 ] = { 0 } ;",
        "b [ i ] [ j ] = ' 0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    }
  ]
}