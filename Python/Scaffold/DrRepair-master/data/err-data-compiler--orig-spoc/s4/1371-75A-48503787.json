{
  "meta": {
    "index": 1371,
    "hitid": "3DW3BNF1GHC3MV5XP5GG50JAYXC8VZ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "75A",
    "subid": "48503787"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare empty string variables x , y and x1",
      "code": "string x , y , x1 = \" \" , y1 = \" \" , c = \" \" ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare long long variables a , b , z , k and m",
      "code": "long long a , b , z , k , m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read input to x and y",
      "code": "cin >> x >> y ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set a to value of x converted to integer",
      "code": "a = atoi ( x . c_str ( ) ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set b to value of y converted to integer",
      "code": "b = atoi ( y . c_str ( ) ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set z to a + b",
      "code": "z = a + b ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while z ! = 0",
      "code": "while ( z != 0 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "declare integer variable d = z modulo 10",
      "code": "int d = z % 10 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if d = 0",
      "code": "if ( d == 0 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "divide z by 10",
      "code": "z /= 10 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "continue the loop",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "create strings stream and ss",
      "code": "stringstream ss ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "ss < < d",
      "code": "ss << d ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "create string f = ss . str ( )",
      "code": "string f = ss . str ( ) ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "increase c by f",
      "code": "c += f ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "divide z by 10",
      "code": "z /= 10 ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "reverse c",
      "code": "reverse ( c . begin ( ) , c . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "loop i from 0 to length of x exclusive",
      "code": "for ( int i = 0 ; i < x . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if x [ i ] is not ' 0 ' , add x [ i ] to x1",
      "code": "if ( x [ i ] != ' 0 ' ) x1 += x [ i ] ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for i from 0 to length of x exclusive",
      "code": "for ( int i = 0 ; i < x . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "if y [ i ] is not ' 0 ' , add y [ i ] to y1",
      "code": "if ( y [ i ] != ' 0 ' ) y1 += y [ i ] ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "assign x1 converted to integer to a",
      "code": "a = atoi ( x1 . c_str ( ) ) ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "assign y1 converted to integer to b",
      "code": "b = atoi ( y1 . c_str ( ) ) ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "change k to a + b",
      "code": "k = a + b ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "assign c converted to integer to m",
      "code": "m = atoi ( c . c_str ( ) ) ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "if m is equal to k",
      "code": "if ( m == k )",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 33,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string x , y , x1 ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "a = atoi ( x ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "b = int ( y ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "string stream , ss ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "int a = x1 ;"
      ],
      "err_line": 26,
      "err_msg": "conflicting declaration ‘int a’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "int b = y1 ;"
      ],
      "err_line": 27,
      "err_msg": "conflicting declaration ‘int b’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char x , y , x1 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘c_str’ in ‘x’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "a = int ( x ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "b = atoi ( y ) ;"
      ],
      "err_line": 5,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int d %= 10 ;"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘%=’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "continue continue ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "stream = ss ;"
      ],
      "err_line": 13,
      "err_msg": "‘stream’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "string f = ss . ss ( ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘std::stringstream {aka class std::__cxx11::basic_stringstream<char>}’ has no member named ‘ss’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "reverse ( c , c + n ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "int converted = x1 ;"
      ],
      "err_line": 26,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "int b = b ;"
      ],
      "err_line": 27,
      "err_msg": "conflicting declaration ‘int b’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "int converted = c ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 32,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        5
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "b = int ( y ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        6
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "z += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        13
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "string stream , ss ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        26
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "int a = x1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        27
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "int b = y1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        6
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "z += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        6,
        13
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "z += b ;",
        "string stream , ss ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        6,
        26
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "z += b ;",
        "int a = x1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        6,
        27
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "z += b ;",
        "int b = y1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        6,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "z += b ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        6,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "z += b ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        13
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "string stream , ss ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        13,
        26
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "string stream , ss ;",
        "int a = x1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        13,
        27
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "string stream , ss ;",
        "int b = y1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        13,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "string stream , ss ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        13,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "string stream , ss ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        26
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "int a = x1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        26,
        27
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "int a = x1 ;",
        "int b = y1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        26,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "int a = x1 ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        26,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "int a = x1 ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        27
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "int b = y1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        27,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        27,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        28,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        4,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "a = atoi ( x ) ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        6
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "z += b ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        6,
        13
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "z += b ;",
        "string stream , ss ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        6,
        26
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "z += b ;",
        "int a = x1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        6,
        27
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "z += b ;",
        "int b = y1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        6,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "z += b ;",
        "k += b ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        6,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "z += b ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        13
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "string stream , ss ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        13,
        26
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "string stream , ss ;",
        "int a = x1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        13,
        27
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "string stream , ss ;",
        "int b = y1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        13,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "string stream , ss ;",
        "k += b ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        13,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "string stream , ss ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        26
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "int a = x1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        26,
        27
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "int a = x1 ;",
        "int b = y1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        26,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "int a = x1 ;",
        "k += b ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        26,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "int a = x1 ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        27
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "int b = y1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        27,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        27,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "k += b ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        28,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        5,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "b = int ( y ) ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "z += b ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        13
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "z += b ;",
        "string stream , ss ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        6,
        13,
        26
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "z += b ;",
        "string stream , ss ;",
        "int a = x1 ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        6,
        13,
        27
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "z += b ;",
        "string stream , ss ;",
        "int b = y1 ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        6,
        13,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "z += b ;",
        "string stream , ss ;",
        "k += b ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        6,
        13,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "z += b ;",
        "string stream , ss ;",
        "int converted = m ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        6,
        26
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "z += b ;",
        "int a = x1 ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        26,
        27
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "z += b ;",
        "int a = x1 ;",
        "int b = y1 ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        26,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "z += b ;",
        "int a = x1 ;",
        "k += b ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        26,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "z += b ;",
        "int a = x1 ;",
        "int converted = m ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        27
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "z += b ;",
        "int b = y1 ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        27,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "z += b ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        27,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "z += b ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "z += b ;",
        "k += b ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        28,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "z += b ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "z += b ;",
        "int converted = m ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "string stream , ss ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        13,
        26
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "string stream , ss ;",
        "int a = x1 ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        13,
        26,
        27
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "string stream , ss ;",
        "int a = x1 ;",
        "int b = y1 ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        13,
        26,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "string stream , ss ;",
        "int a = x1 ;",
        "k += b ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        13,
        26,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "string stream , ss ;",
        "int a = x1 ;",
        "int converted = m ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        13,
        27
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "string stream , ss ;",
        "int b = y1 ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        13,
        27,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "string stream , ss ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        13,
        27,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "string stream , ss ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        13,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "string stream , ss ;",
        "k += b ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        13,
        28,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "string stream , ss ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        13,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "string stream , ss ;",
        "int converted = m ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        26
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "int a = x1 ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        26,
        27
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "int a = x1 ;",
        "int b = y1 ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        26,
        27,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "int a = x1 ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        26,
        27,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "int a = x1 ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        26,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "int a = x1 ;",
        "k += b ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        26,
        28,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "int a = x1 ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        26,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "int a = x1 ;",
        "int converted = m ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        27
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "int b = y1 ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        27,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        27,
        28,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "int b = y1 ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        27,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "k += b ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        29
      ],
      "mod_code": [
        "string x , y , x1 ;",
        "int converted = m ;"
      ],
      "err_line": 16,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "z += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        13
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "z += b ;",
        "string stream , ss ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        26
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "z += b ;",
        "int a = x1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        27
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "z += b ;",
        "int b = y1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        28
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "z += b ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "z += b ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        13
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "string stream , ss ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        26
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "string stream , ss ;",
        "int a = x1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        27
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "string stream , ss ;",
        "int b = y1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        28
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "string stream , ss ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "string stream , ss ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        26
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "int a = x1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        26,
        27
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "int a = x1 ;",
        "int b = y1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        26,
        28
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "int a = x1 ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        26,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "int a = x1 ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        27
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "int b = y1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        27,
        28
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        27,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        28
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        28,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "b = int ( y ) ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "z += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        13
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "z += b ;",
        "string stream , ss ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        26
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "z += b ;",
        "string stream , ss ;",
        "int a = x1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        27
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "z += b ;",
        "string stream , ss ;",
        "int b = y1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        28
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "z += b ;",
        "string stream , ss ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "z += b ;",
        "string stream , ss ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        26
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "z += b ;",
        "int a = x1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        26,
        27
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "z += b ;",
        "int a = x1 ;",
        "int b = y1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        26,
        28
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "z += b ;",
        "int a = x1 ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        26,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "z += b ;",
        "int a = x1 ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        27
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "z += b ;",
        "int b = y1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        27,
        28
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "z += b ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        27,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "z += b ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        28
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "z += b ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        28,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "z += b ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "z += b ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "string stream , ss ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        13,
        26
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "string stream , ss ;",
        "int a = x1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        13,
        26,
        27
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "string stream , ss ;",
        "int a = x1 ;",
        "int b = y1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        13,
        26,
        28
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "string stream , ss ;",
        "int a = x1 ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        13,
        26,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "string stream , ss ;",
        "int a = x1 ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        13,
        27
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "string stream , ss ;",
        "int b = y1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        13,
        27,
        28
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "string stream , ss ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        13,
        27,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "string stream , ss ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        13,
        28
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "string stream , ss ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        13,
        28,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "string stream , ss ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        13,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "string stream , ss ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        26
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "int a = x1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        26,
        27
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "int a = x1 ;",
        "int b = y1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        26,
        27,
        28
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "int a = x1 ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        26,
        27,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "int a = x1 ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        26,
        28
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "int a = x1 ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        26,
        28,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "int a = x1 ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        26,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "int a = x1 ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        27
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "int b = y1 ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        27,
        28
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        27,
        28,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "int b = y1 ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        27,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        28
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "k += b ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        28,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        4,
        29
      ],
      "mod_code": [
        "a = atoi ( x ) ;",
        "int converted = m ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘int atoi(const char*)’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "z += b ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        6,
        13
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "z += b ;",
        "string stream , ss ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        26
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "z += b ;",
        "string stream , ss ;",
        "int a = x1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        27
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "z += b ;",
        "string stream , ss ;",
        "int b = y1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        28
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "z += b ;",
        "string stream , ss ;",
        "k += b ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        29
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "z += b ;",
        "string stream , ss ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        6,
        26
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "z += b ;",
        "int a = x1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        6,
        26,
        27
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "z += b ;",
        "int a = x1 ;",
        "int b = y1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        6,
        26,
        28
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "z += b ;",
        "int a = x1 ;",
        "k += b ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        6,
        26,
        29
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "z += b ;",
        "int a = x1 ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        6,
        27
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "z += b ;",
        "int b = y1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        6,
        27,
        28
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "z += b ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        6,
        27,
        29
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "z += b ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        6,
        28
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "z += b ;",
        "k += b ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        6,
        28,
        29
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "z += b ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        6,
        29
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "z += b ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "string stream , ss ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        13,
        26
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "string stream , ss ;",
        "int a = x1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        13,
        26,
        27
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "string stream , ss ;",
        "int a = x1 ;",
        "int b = y1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        13,
        26,
        28
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "string stream , ss ;",
        "int a = x1 ;",
        "k += b ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        13,
        26,
        29
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "string stream , ss ;",
        "int a = x1 ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        13,
        27
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "string stream , ss ;",
        "int b = y1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        13,
        27,
        28
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "string stream , ss ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        13,
        27,
        29
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "string stream , ss ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        13,
        28
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "string stream , ss ;",
        "k += b ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        13,
        28,
        29
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "string stream , ss ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        13,
        29
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "string stream , ss ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        26
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "int a = x1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        26,
        27
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "int a = x1 ;",
        "int b = y1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        26,
        27,
        28
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "int a = x1 ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        26,
        27,
        29
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "int a = x1 ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        26,
        28
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "int a = x1 ;",
        "k += b ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        26,
        28,
        29
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "int a = x1 ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        26,
        29
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "int a = x1 ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        27
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "int b = y1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        27,
        28
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        27,
        28,
        29
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "int b = y1 ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        27,
        29
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        28
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "k += b ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        28,
        29
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        5,
        29
      ],
      "mod_code": [
        "b = int ( y ) ;",
        "int converted = m ;"
      ],
      "err_line": 5,
      "err_msg": "invalid cast from type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to type ‘int’"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "z += b ;",
        "string stream , ss ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        13,
        26
      ],
      "mod_code": [
        "z += b ;",
        "string stream , ss ;",
        "int a = x1 ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        13,
        26,
        27
      ],
      "mod_code": [
        "z += b ;",
        "string stream , ss ;",
        "int a = x1 ;",
        "int b = y1 ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        13,
        26,
        28
      ],
      "mod_code": [
        "z += b ;",
        "string stream , ss ;",
        "int a = x1 ;",
        "k += b ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        13,
        26,
        29
      ],
      "mod_code": [
        "z += b ;",
        "string stream , ss ;",
        "int a = x1 ;",
        "int converted = m ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        13,
        27
      ],
      "mod_code": [
        "z += b ;",
        "string stream , ss ;",
        "int b = y1 ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        13,
        27,
        28
      ],
      "mod_code": [
        "z += b ;",
        "string stream , ss ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        13,
        27,
        29
      ],
      "mod_code": [
        "z += b ;",
        "string stream , ss ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        13,
        28
      ],
      "mod_code": [
        "z += b ;",
        "string stream , ss ;",
        "k += b ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        13,
        28,
        29
      ],
      "mod_code": [
        "z += b ;",
        "string stream , ss ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        13,
        29
      ],
      "mod_code": [
        "z += b ;",
        "string stream , ss ;",
        "int converted = m ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        6,
        26
      ],
      "mod_code": [
        "z += b ;",
        "int a = x1 ;"
      ],
      "err_line": 26,
      "err_msg": "conflicting declaration ‘int a’"
    },
    {
      "mod_line": [
        6,
        26,
        27
      ],
      "mod_code": [
        "z += b ;",
        "int a = x1 ;",
        "int b = y1 ;"
      ],
      "err_line": 26,
      "err_msg": "conflicting declaration ‘int a’"
    },
    {
      "mod_line": [
        6,
        26,
        27,
        28
      ],
      "mod_code": [
        "z += b ;",
        "int a = x1 ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 26,
      "err_msg": "conflicting declaration ‘int a’"
    },
    {
      "mod_line": [
        6,
        26,
        27,
        29
      ],
      "mod_code": [
        "z += b ;",
        "int a = x1 ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 26,
      "err_msg": "conflicting declaration ‘int a’"
    },
    {
      "mod_line": [
        6,
        26,
        28
      ],
      "mod_code": [
        "z += b ;",
        "int a = x1 ;",
        "k += b ;"
      ],
      "err_line": 26,
      "err_msg": "conflicting declaration ‘int a’"
    },
    {
      "mod_line": [
        6,
        26,
        28,
        29
      ],
      "mod_code": [
        "z += b ;",
        "int a = x1 ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 26,
      "err_msg": "conflicting declaration ‘int a’"
    },
    {
      "mod_line": [
        6,
        26,
        29
      ],
      "mod_code": [
        "z += b ;",
        "int a = x1 ;",
        "int converted = m ;"
      ],
      "err_line": 26,
      "err_msg": "conflicting declaration ‘int a’"
    },
    {
      "mod_line": [
        6,
        27
      ],
      "mod_code": [
        "z += b ;",
        "int b = y1 ;"
      ],
      "err_line": 27,
      "err_msg": "conflicting declaration ‘int b’"
    },
    {
      "mod_line": [
        6,
        27,
        28
      ],
      "mod_code": [
        "z += b ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 27,
      "err_msg": "conflicting declaration ‘int b’"
    },
    {
      "mod_line": [
        6,
        27,
        28,
        29
      ],
      "mod_code": [
        "z += b ;",
        "int b = y1 ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 27,
      "err_msg": "conflicting declaration ‘int b’"
    },
    {
      "mod_line": [
        6,
        27,
        29
      ],
      "mod_code": [
        "z += b ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 27,
      "err_msg": "conflicting declaration ‘int b’"
    },
    {
      "mod_line": [
        13,
        26
      ],
      "mod_code": [
        "string stream , ss ;",
        "int a = x1 ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        26,
        27
      ],
      "mod_code": [
        "string stream , ss ;",
        "int a = x1 ;",
        "int b = y1 ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        26,
        27,
        28
      ],
      "mod_code": [
        "string stream , ss ;",
        "int a = x1 ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        26,
        27,
        29
      ],
      "mod_code": [
        "string stream , ss ;",
        "int a = x1 ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        26,
        28
      ],
      "mod_code": [
        "string stream , ss ;",
        "int a = x1 ;",
        "k += b ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        26,
        28,
        29
      ],
      "mod_code": [
        "string stream , ss ;",
        "int a = x1 ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        26,
        29
      ],
      "mod_code": [
        "string stream , ss ;",
        "int a = x1 ;",
        "int converted = m ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        27
      ],
      "mod_code": [
        "string stream , ss ;",
        "int b = y1 ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        27,
        28
      ],
      "mod_code": [
        "string stream , ss ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        27,
        28,
        29
      ],
      "mod_code": [
        "string stream , ss ;",
        "int b = y1 ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        27,
        29
      ],
      "mod_code": [
        "string stream , ss ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        28
      ],
      "mod_code": [
        "string stream , ss ;",
        "k += b ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        28,
        29
      ],
      "mod_code": [
        "string stream , ss ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        13,
        29
      ],
      "mod_code": [
        "string stream , ss ;",
        "int converted = m ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        26,
        27
      ],
      "mod_code": [
        "int a = x1 ;",
        "int b = y1 ;"
      ],
      "err_line": 26,
      "err_msg": "conflicting declaration ‘int a’"
    },
    {
      "mod_line": [
        26,
        27,
        28
      ],
      "mod_code": [
        "int a = x1 ;",
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 26,
      "err_msg": "conflicting declaration ‘int a’"
    },
    {
      "mod_line": [
        26,
        27,
        28,
        29
      ],
      "mod_code": [
        "int a = x1 ;",
        "int b = y1 ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 26,
      "err_msg": "conflicting declaration ‘int a’"
    },
    {
      "mod_line": [
        26,
        27,
        29
      ],
      "mod_code": [
        "int a = x1 ;",
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 26,
      "err_msg": "conflicting declaration ‘int a’"
    },
    {
      "mod_line": [
        26,
        28
      ],
      "mod_code": [
        "int a = x1 ;",
        "k += b ;"
      ],
      "err_line": 26,
      "err_msg": "conflicting declaration ‘int a’"
    },
    {
      "mod_line": [
        26,
        28,
        29
      ],
      "mod_code": [
        "int a = x1 ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 26,
      "err_msg": "conflicting declaration ‘int a’"
    },
    {
      "mod_line": [
        26,
        29
      ],
      "mod_code": [
        "int a = x1 ;",
        "int converted = m ;"
      ],
      "err_line": 26,
      "err_msg": "conflicting declaration ‘int a’"
    },
    {
      "mod_line": [
        27,
        28
      ],
      "mod_code": [
        "int b = y1 ;",
        "k += b ;"
      ],
      "err_line": 27,
      "err_msg": "conflicting declaration ‘int b’"
    },
    {
      "mod_line": [
        27,
        28,
        29
      ],
      "mod_code": [
        "int b = y1 ;",
        "k += b ;",
        "int converted = m ;"
      ],
      "err_line": 27,
      "err_msg": "conflicting declaration ‘int b’"
    },
    {
      "mod_line": [
        27,
        29
      ],
      "mod_code": [
        "int b = y1 ;",
        "int converted = m ;"
      ],
      "err_line": 27,
      "err_msg": "conflicting declaration ‘int b’"
    }
  ]
}