{
  "meta": {
    "index": 2604,
    "hitid": "3UEDKCTP9VKL6662GWA3PRCY7F1K74",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "906A",
    "subid": "49048370"
  },
  "lines": [
    {
      "line": 0,
      "text": "s = character array of size 100010",
      "code": "char s [ 100010 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "flag , ok , exist = bool with ok , exist = array of size 1010",
      "code": "bool flag , ok [ 1010 ] , exist [ 1010 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "ans = integer",
      "code": "int ans ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "flag = false",
      "code": "flag = false ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "ans = 0",
      "code": "ans = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = a , z , ok [ i ] = 1",
      "code": "for ( int i = ' a ' ; i <= ' z ' ; i ++ ) ok [ i ] = 1 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "num = integer with num = 26",
      "code": "int num = 26 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "c = character",
      "code": "char c ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "read c , s",
      "code": "cin >> c >> s ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if flag",
      "code": "if ( flag )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if c is not . and i is not n - 1 , increment ans",
      "code": "if ( c != ' . ' && i != n - 1 ) ++ ans ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if c is !",
      "code": "if ( c == ' ! ' )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "len = integer with len = strlen of s",
      "code": "int len = strlen ( s ) ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "set all contents of exist to 0",
      "code": "memset ( exist , 0 , sizeof ( exist ) ) ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "for j = 0 to len exclusive , exist [ s [ j ] ] = 1",
      "code": "for ( int j = 0 ; j < len ; j ++ ) exist [ s [ j ] ] = 1 ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "for j = a to z",
      "code": "for ( int j = ' a ' ; j <= ' z ' ; ++ j )",
      "indent": 4
    },
    {
      "line": 21,
      "text": "if ok [ j ] and not exist [ j ]",
      "code": "if ( ok [ j ] && ! exist [ j ] )",
      "indent": 5
    },
    {
      "line": 22,
      "text": "decrement num",
      "code": "-- num ;",
      "indent": 6
    },
    {
      "line": 23,
      "text": "ok [ j ] = 0",
      "code": "ok [ j ] = 0 ;",
      "indent": 6
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 26,
      "text": "if num is 1 , flag = true",
      "code": "if ( num == 1 ) flag = true ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "else if c is .",
      "code": "else if ( c == ' . ' )",
      "indent": 3
    },
    {
      "line": 28,
      "text": "len = integer with len = strlen of s",
      "code": "int len = strlen ( s ) ;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "set all contents of exist to 0",
      "code": "memset ( exist , 0 , sizeof ( exist ) ) ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "for j = 0 to len exclusive , exist [ s [ j ] ] = 1",
      "code": "for ( int j = 0 ; j < len ; j ++ ) exist [ s [ j ] ] = 1 ;",
      "indent": 4
    },
    {
      "line": 31,
      "text": "for j = a to z",
      "code": "for ( int j = ' a ' ; j <= ' z ' ; ++ j )",
      "indent": 4
    },
    {
      "line": 32,
      "text": "if ok [ j ] and exist [ j ]",
      "code": "if ( ok [ j ] && exist [ j ] )",
      "indent": 5
    },
    {
      "line": 33,
      "text": "decrement num",
      "code": "-- num ;",
      "indent": 6
    },
    {
      "line": 34,
      "text": "ok [ j ] = 0",
      "code": "ok [ j ] = 0 ;",
      "indent": 6
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 37,
      "text": "if num is 1 , flag = true",
      "code": "if ( num == 1 ) flag = true ;",
      "indent": 4
    },
    {
      "line": 38,
      "text": "else if , c is ?",
      "code": "else if ( c == ' ? ' )",
      "indent": 3
    },
    {
      "line": 39,
      "text": "if ok [ s [ 0 ] ]",
      "code": "if ( ok [ s [ 0 ] ] )",
      "indent": 4
    },
    {
      "line": 40,
      "text": "decrement num",
      "code": "-- num ;",
      "indent": 5
    },
    {
      "line": 41,
      "text": "ok [ s [ 0 ] ] = 0",
      "code": "ok [ s [ 0 ] ] = 0 ;",
      "indent": 5
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 43,
      "text": "if num is 1 , flag = true",
      "code": "if ( num == 1 ) flag = true ;",
      "indent": 4
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 47,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 48,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 49,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 20,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 31,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool flag [ 1010 ] , flag [ 1010 ] , exist [ 1010 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘bool flag [1010]’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( int i = a , z , ok [ i ] = 1 ; ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "set < char > c ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::set<char>’)"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "len = strlen ( s ) ;"
      ],
      "err_line": 17,
      "err_msg": "‘len’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( j = a ; j <= z ; j ++ )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "len = strlen ( s ) ;"
      ],
      "err_line": 28,
      "err_msg": "‘len’ was not declared in this scope"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "for ( j = a ; j <= z ; j ++ )"
      ],
      "err_line": 31,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        8,
        14
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "if ( c != i && i != n - 1 ) ans ++ ;"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        8,
        14,
        20
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        8,
        14,
        21
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "if ( ok [ j ] != exist [ j ] )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        8,
        14,
        31
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        8,
        20
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        8,
        20,
        21
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "for ( int j = a ; j <= z ; j ++ )",
        "if ( ok [ j ] != exist [ j ] )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        8,
        20,
        31
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "for ( int j = a ; j <= z ; j ++ )",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        8,
        21
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "if ( ok [ j ] != exist [ j ] )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        8,
        21,
        31
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "if ( ok [ j ] != exist [ j ] )",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        8,
        31
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "if ( c != i && i != n - 1 ) ans ++ ;"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        14,
        20
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        14,
        20,
        21
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "for ( int j = a ; j <= z ; j ++ )",
        "if ( ok [ j ] != exist [ j ] )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        14,
        20,
        31
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "for ( int j = a ; j <= z ; j ++ )",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        14,
        21
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "if ( ok [ j ] != exist [ j ] )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        14,
        21,
        31
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "if ( ok [ j ] != exist [ j ] )",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        14,
        31
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        20
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        20,
        21
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "for ( int j = a ; j <= z ; j ++ )",
        "if ( ok [ j ] != exist [ j ] )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        20,
        21,
        31
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "for ( int j = a ; j <= z ; j ++ )",
        "if ( ok [ j ] != exist [ j ] )",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        20,
        31
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "for ( int j = a ; j <= z ; j ++ )",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        21
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "if ( ok [ j ] != exist [ j ] )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        21,
        31
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "if ( ok [ j ] != exist [ j ] )",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        1,
        31
      ],
      "mod_code": [
        "bool flag [ 1010 ] , ok [ 1010 ] , exist [ 1010 ] ;",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘bool [1010]’"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "if ( c != i && i != n - 1 ) ans ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        20
      ],
      "mod_code": [
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        21
      ],
      "mod_code": [
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "for ( int j = a ; j <= z ; j ++ )",
        "if ( ok [ j ] != exist [ j ] )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        31
      ],
      "mod_code": [
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "for ( int j = a ; j <= z ; j ++ )",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        21
      ],
      "mod_code": [
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "if ( ok [ j ] != exist [ j ] )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        21,
        31
      ],
      "mod_code": [
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "if ( ok [ j ] != exist [ j ] )",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        31
      ],
      "mod_code": [
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        20
      ],
      "mod_code": [
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        20,
        21
      ],
      "mod_code": [
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "for ( int j = a ; j <= z ; j ++ )",
        "if ( ok [ j ] != exist [ j ] )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        20,
        21,
        31
      ],
      "mod_code": [
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "for ( int j = a ; j <= z ; j ++ )",
        "if ( ok [ j ] != exist [ j ] )",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        20,
        31
      ],
      "mod_code": [
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "for ( int j = a ; j <= z ; j ++ )",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21
      ],
      "mod_code": [
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "if ( ok [ j ] != exist [ j ] )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        21,
        31
      ],
      "mod_code": [
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "if ( ok [ j ] != exist [ j ] )",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        31
      ],
      "mod_code": [
        "for ( int i = a ; i <= z ; i ++ ) { ok [ i ] = 1 ; }",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20
      ],
      "mod_code": [
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 20,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        21
      ],
      "mod_code": [
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "for ( int j = a ; j <= z ; j ++ )",
        "if ( ok [ j ] != exist [ j ] )"
      ],
      "err_line": 20,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        21,
        31
      ],
      "mod_code": [
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "for ( int j = a ; j <= z ; j ++ )",
        "if ( ok [ j ] != exist [ j ] )",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 20,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        31
      ],
      "mod_code": [
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "for ( int j = a ; j <= z ; j ++ )",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 20,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        21,
        31
      ],
      "mod_code": [
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "if ( ok [ j ] != exist [ j ] )",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 31,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31
      ],
      "mod_code": [
        "if ( c != i && i != n - 1 ) ans ++ ;",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 31,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        21
      ],
      "mod_code": [
        "for ( int j = a ; j <= z ; j ++ )",
        "if ( ok [ j ] != exist [ j ] )"
      ],
      "err_line": 20,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        21,
        31
      ],
      "mod_code": [
        "for ( int j = a ; j <= z ; j ++ )",
        "if ( ok [ j ] != exist [ j ] )",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 20,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        31
      ],
      "mod_code": [
        "for ( int j = a ; j <= z ; j ++ )",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 20,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        31
      ],
      "mod_code": [
        "if ( ok [ j ] != exist [ j ] )",
        "for ( int j = a ; j <= z ; j ++ )"
      ],
      "err_line": 31,
      "err_msg": "‘a’ was not declared in this scope"
    }
  ]
}