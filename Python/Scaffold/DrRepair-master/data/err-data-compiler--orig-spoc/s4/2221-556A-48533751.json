{
  "meta": {
    "index": 2221,
    "hitid": "3QTFNPMJC6C5YMXBW4U283M1B3INZ3",
    "workerid": "AIWEXPJAU66D9",
    "probid": "556A",
    "subid": "48533751"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integers cnt1 and cnt2 = 0",
      "code": "int cnt1 = 0 , cnt2 = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s [ i ] is equal to ' 0 '",
      "code": "if ( s [ i ] == ' 0 ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment cnt1",
      "code": "cnt1 ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment cnt2",
      "code": "cnt2 ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if cnt1 is greater than cnt2",
      "code": "if ( cnt1 > cnt2 )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "assign n - 2 * cnt1 to n",
      "code": "n = n - 2 * cnt1 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 15,
      "text": "change n to n - 2 * cnt2",
      "code": "n = n - 2 * cnt2 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print absolute value of n",
      "code": "cout << abs ( n ) << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string s s ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16,
        3
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "string s s ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        16,
        3,
        2
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "string s s ;",
        "while ( cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        16,
        3,
        2,
        7
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "string s s ;",
        "while ( cin >> n )",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        16,
        3,
        2,
        4
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "string s s ;",
        "while ( cin >> n )",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        16,
        3,
        2,
        5
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "string s s ;",
        "while ( cin >> n )",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        16,
        3,
        7
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "string s s ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        16,
        3,
        7,
        4
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "string s s ;",
        "if ( s [ i ] == ' l ' )",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        16,
        3,
        7,
        5
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "string s s ;",
        "if ( s [ i ] == ' l ' )",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        16,
        3,
        4
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "string s s ;",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        16,
        3,
        4,
        5
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "string s s ;",
        "s >> s ;",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        16,
        3,
        5
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "string s s ;",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        16,
        2
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2,
        7
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "while ( cin >> n )",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2,
        7,
        4
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "while ( cin >> n )",
        "if ( s [ i ] == ' l ' )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2,
        7,
        5
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "while ( cin >> n )",
        "if ( s [ i ] == ' l ' )",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2,
        4
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "while ( cin >> n )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2,
        4,
        5
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "while ( cin >> n )",
        "s >> s ;",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2,
        5
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "while ( cin >> n )",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        7,
        4
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "if ( s [ i ] == ' l ' )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        16,
        7,
        4,
        5
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "if ( s [ i ] == ' l ' )",
        "s >> s ;",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        16,
        7,
        5
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "if ( s [ i ] == ' l ' )",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        16,
        4
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        16,
        4,
        5
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "s >> s ;",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        16,
        5
      ],
      "mod_code": [
        "cout << abs ( n ) ;",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "string s s ;",
        "while ( cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        3,
        2,
        7
      ],
      "mod_code": [
        "string s s ;",
        "while ( cin >> n )",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        3,
        2,
        7,
        4
      ],
      "mod_code": [
        "string s s ;",
        "while ( cin >> n )",
        "if ( s [ i ] == ' l ' )",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        3,
        2,
        7,
        5
      ],
      "mod_code": [
        "string s s ;",
        "while ( cin >> n )",
        "if ( s [ i ] == ' l ' )",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        3,
        2,
        4
      ],
      "mod_code": [
        "string s s ;",
        "while ( cin >> n )",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        3,
        2,
        4,
        5
      ],
      "mod_code": [
        "string s s ;",
        "while ( cin >> n )",
        "s >> s ;",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        3,
        2,
        5
      ],
      "mod_code": [
        "string s s ;",
        "while ( cin >> n )",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "string s s ;",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        3,
        7,
        4
      ],
      "mod_code": [
        "string s s ;",
        "if ( s [ i ] == ' l ' )",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        3,
        7,
        4,
        5
      ],
      "mod_code": [
        "string s s ;",
        "if ( s [ i ] == ' l ' )",
        "s >> s ;",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        3,
        7,
        5
      ],
      "mod_code": [
        "string s s ;",
        "if ( s [ i ] == ' l ' )",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "string s s ;",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "string s s ;",
        "s >> s ;",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "string s s ;",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘s’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "while ( cin >> n )",
        "if ( s [ i ] == ' l ' )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        4
      ],
      "mod_code": [
        "while ( cin >> n )",
        "if ( s [ i ] == ' l ' )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        4,
        5
      ],
      "mod_code": [
        "while ( cin >> n )",
        "if ( s [ i ] == ' l ' )",
        "s >> s ;",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        5
      ],
      "mod_code": [
        "while ( cin >> n )",
        "if ( s [ i ] == ' l ' )",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "while ( cin >> n )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        5
      ],
      "mod_code": [
        "while ( cin >> n )",
        "s >> s ;",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "while ( cin >> n )",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "if ( s [ i ] == ' l ' )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        4,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' l ' )",
        "s >> s ;",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' l ' )",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int cnt2’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "s >> s ;",
        "int cnt2 = 0 , cnt2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}