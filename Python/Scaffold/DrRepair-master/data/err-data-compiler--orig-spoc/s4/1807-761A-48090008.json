{
  "meta": {
    "index": 1807,
    "hitid": "3RQVKZ7ZRKDQPQ2CRQ4ZPVQ4QFJ274",
    "workerid": "AIWEXPJAU66D9",
    "probid": "761A",
    "subid": "48090008"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new int variables a and b",
      "code": "int a , b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read from the input to a and b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if ( a = b or abs ( a - b ) = 1 ) and ( a and b are not 0 )",
      "code": "if ( ( a == b || abs ( a - b ) == 1 ) && ( a != 0 || b != 0 ) )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print \" NO \" to the standard output",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a && b ) != 0 ) )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a , b b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> a >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a != 0 ) ) && ( a != 0 ) )"
      ],
      "err_line": 3,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a && b ) != 0 ) )",
        "int a , b b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        3,
        1,
        2
      ],
      "mod_code": [
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a && b ) != 0 ) )",
        "int a , b b ;",
        "cin >> a >> k ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        3,
        1,
        2,
        5
      ],
      "mod_code": [
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a && b ) != 0 ) )",
        "int a , b b ;",
        "cin >> a >> k ;",
        "else ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        3,
        1,
        2,
        6
      ],
      "mod_code": [
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a && b ) != 0 ) )",
        "int a , b b ;",
        "cin >> a >> k ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        3,
        1,
        5
      ],
      "mod_code": [
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a && b ) != 0 ) )",
        "int a , b b ;",
        "else ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        3,
        1,
        5,
        6
      ],
      "mod_code": [
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a && b ) != 0 ) )",
        "int a , b b ;",
        "else ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        3,
        1,
        6
      ],
      "mod_code": [
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a && b ) != 0 ) )",
        "int a , b b ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a && b ) != 0 ) )",
        "cin >> a >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        5
      ],
      "mod_code": [
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a && b ) != 0 ) )",
        "cin >> a >> k ;",
        "else ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        5,
        6
      ],
      "mod_code": [
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a && b ) != 0 ) )",
        "cin >> a >> k ;",
        "else ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        6
      ],
      "mod_code": [
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a && b ) != 0 ) )",
        "cin >> a >> k ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a && b ) != 0 ) )",
        "else ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a && b ) != 0 ) )",
        "else ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a && b ) != 0 ) )",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int a , b b ;",
        "cin >> a >> k ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        2,
        5
      ],
      "mod_code": [
        "int a , b b ;",
        "cin >> a >> k ;",
        "else ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        2,
        5,
        3
      ],
      "mod_code": [
        "int a , b b ;",
        "cin >> a >> k ;",
        "else ;",
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a != 0 ) ) && ( a != 0 ) )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        2,
        5,
        6
      ],
      "mod_code": [
        "int a , b b ;",
        "cin >> a >> k ;",
        "else ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        2,
        3
      ],
      "mod_code": [
        "int a , b b ;",
        "cin >> a >> k ;",
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a != 0 ) ) && ( a != 0 ) )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        6
      ],
      "mod_code": [
        "int a , b b ;",
        "cin >> a >> k ;",
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a != 0 ) ) && ( a != 0 ) )",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        2,
        6
      ],
      "mod_code": [
        "int a , b b ;",
        "cin >> a >> k ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int a , b b ;",
        "else ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        5,
        3
      ],
      "mod_code": [
        "int a , b b ;",
        "else ;",
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a != 0 ) ) && ( a != 0 ) )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        5,
        3,
        6
      ],
      "mod_code": [
        "int a , b b ;",
        "else ;",
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a != 0 ) ) && ( a != 0 ) )",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        5,
        6
      ],
      "mod_code": [
        "int a , b b ;",
        "else ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int a , b b ;",
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a != 0 ) ) && ( a != 0 ) )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        3,
        6
      ],
      "mod_code": [
        "int a , b b ;",
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a != 0 ) ) && ( a != 0 ) )",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int a , b b ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "cin >> a >> k ;",
        "else ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        3
      ],
      "mod_code": [
        "cin >> a >> k ;",
        "else ;",
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a != 0 ) ) && ( a != 0 ) )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        3,
        6
      ],
      "mod_code": [
        "cin >> a >> k ;",
        "else ;",
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a != 0 ) ) && ( a != 0 ) )",
        "cout << \" NO \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        6
      ],
      "mod_code": [
        "cin >> a >> k ;",
        "else ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cin >> a >> k ;",
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a != 0 ) ) && ( a != 0 ) )"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        6
      ],
      "mod_code": [
        "cin >> a >> k ;",
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a != 0 ) ) && ( a != 0 ) )",
        "cout << \" NO \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "cin >> a >> k ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "else ;",
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a != 0 ) ) && ( a != 0 ) )"
      ],
      "err_line": 3,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        5,
        3,
        6
      ],
      "mod_code": [
        "else ;",
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a != 0 ) ) && ( a != 0 ) )",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "if ( ( a == b || abs ( a - b ) == 1 ) && ( a != 0 ) ) && ( a != 0 ) )",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "expected identifier before ‘(’ token"
    }
  ]
}