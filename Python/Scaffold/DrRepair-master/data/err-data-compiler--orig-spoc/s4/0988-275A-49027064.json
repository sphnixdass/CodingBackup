{
  "meta": {
    "index": 988,
    "hitid": "3Y3N5A7N4G3ZBE26OHDJHHOZ0J5MYC",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "275A",
    "subid": "49027064"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let s , k be string",
      "code": "string s , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let a and b be 3x3 int matrices",
      "code": "int a [ 3 ] [ 3 ] , b [ 3 ] [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to 3 , increment i",
      "code": "for ( int i = 0 ; i < 3 ; ++ i )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for j = 0 to 3 , increment j , set b [ i ] [ j ] to 1",
      "code": "for ( int j = 0 ; j < 3 ; ++ j ) { b [ i ] [ j ] = 1 ; }",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to 3 increment i",
      "code": "for ( int i = 0 ; i < 3 ; ++ i )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j = 0 to 3 increment j",
      "code": "for ( int j = 0 ; j < 3 ; ++ j )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read a [ i ] [ j ]",
      "code": "cin >> a [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if a [ i ] [ j ] is even",
      "code": "if ( a [ i ] [ j ] % 2 )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set b [ i ] [ j ] = not b [ i ] [ j ]",
      "code": "b [ i ] [ j ] = ! b [ i ] [ j ] ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "if i > 0 then set b [ i - 1 ] [ j ] = not b [ i - 1 ] [ j ]",
      "code": "if ( i > 0 ) b [ i - 1 ] [ j ] = ! b [ i - 1 ] [ j ] ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "if j > 0 then set b [ i ] [ j - 1 ] to not b [ i ] [ j - 1 ]",
      "code": "if ( j > 0 ) b [ i ] [ j - 1 ] = ! b [ i ] [ j - 1 ] ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "if i < 2 then b [ i + 1 ] [ j ] = not b [ i + 1 ] [ j ]",
      "code": "if ( i < 2 ) b [ i + 1 ] [ j ] = ! b [ i + 1 ] [ j ] ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "j < 2 then b [ i ] [ j + 1 ] = not b [ i ] [ j + 1 ]",
      "code": "if ( j < 2 ) b [ i ] [ j + 1 ] = ! b [ i ] [ j + 1 ] ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for i = 0 to 3 increment i",
      "code": "for ( int i = 0 ; i < 3 ; ++ i )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for j = 0 to 3 increment j , print b [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < 3 ; ++ j ) { cout << b [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int a , b ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int a , b [ 100 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "b [ i ] [ j ] = bool b [ i ] [ j ] ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘bool’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "int a , b ;",
        "if ( a [ i ] [ j ] % 2 == 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        10
      ],
      "mod_code": [
        "int a , b ;",
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "b [ i ] [ j ] = b [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        10,
        11
      ],
      "mod_code": [
        "int a , b ;",
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        10,
        12
      ],
      "mod_code": [
        "int a , b ;",
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        10,
        13
      ],
      "mod_code": [
        "int a , b ;",
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        10,
        14
      ],
      "mod_code": [
        "int a , b ;",
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        11
      ],
      "mod_code": [
        "int a , b ;",
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        11,
        12
      ],
      "mod_code": [
        "int a , b ;",
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        11,
        13
      ],
      "mod_code": [
        "int a , b ;",
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        11,
        14
      ],
      "mod_code": [
        "int a , b ;",
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        12
      ],
      "mod_code": [
        "int a , b ;",
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        12,
        13
      ],
      "mod_code": [
        "int a , b ;",
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        12,
        14
      ],
      "mod_code": [
        "int a , b ;",
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        13
      ],
      "mod_code": [
        "int a , b ;",
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        13,
        14
      ],
      "mod_code": [
        "int a , b ;",
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        9,
        14
      ],
      "mod_code": [
        "int a , b ;",
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "int a , b ;",
        "b [ i ] [ j ] = b [ i ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        10,
        11
      ],
      "mod_code": [
        "int a , b ;",
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        10,
        11,
        12
      ],
      "mod_code": [
        "int a , b ;",
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        10,
        11,
        13
      ],
      "mod_code": [
        "int a , b ;",
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        10,
        11,
        14
      ],
      "mod_code": [
        "int a , b ;",
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        10,
        12
      ],
      "mod_code": [
        "int a , b ;",
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        10,
        12,
        13
      ],
      "mod_code": [
        "int a , b ;",
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        10,
        12,
        14
      ],
      "mod_code": [
        "int a , b ;",
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        10,
        13
      ],
      "mod_code": [
        "int a , b ;",
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        10,
        13,
        14
      ],
      "mod_code": [
        "int a , b ;",
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        10,
        14
      ],
      "mod_code": [
        "int a , b ;",
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "int a , b ;",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        11,
        12
      ],
      "mod_code": [
        "int a , b ;",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        11,
        12,
        13
      ],
      "mod_code": [
        "int a , b ;",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        11,
        12,
        14
      ],
      "mod_code": [
        "int a , b ;",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        11,
        13
      ],
      "mod_code": [
        "int a , b ;",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        11,
        13,
        14
      ],
      "mod_code": [
        "int a , b ;",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        11,
        14
      ],
      "mod_code": [
        "int a , b ;",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "int a , b ;",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        12,
        13
      ],
      "mod_code": [
        "int a , b ;",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        12,
        13,
        14
      ],
      "mod_code": [
        "int a , b ;",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        12,
        14
      ],
      "mod_code": [
        "int a , b ;",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "int a , b ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        13,
        14
      ],
      "mod_code": [
        "int a , b ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "int a , b ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        14
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        14
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        10,
        13,
        14
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        10,
        14
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        14
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        14
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        14
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        12,
        13,
        14
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        12,
        14
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        13,
        14
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "if ( a [ i ] [ j ] % 2 == 0 )",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        14
      ],
      "mod_code": [
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        11,
        13,
        14
      ],
      "mod_code": [
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        11,
        14
      ],
      "mod_code": [
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        12,
        13,
        14
      ],
      "mod_code": [
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        12,
        14
      ],
      "mod_code": [
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        13,
        14
      ],
      "mod_code": [
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "b [ i ] [ j ] = b [ i ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        12,
        13,
        14
      ],
      "mod_code": [
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        12,
        14
      ],
      "mod_code": [
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        13,
        14
      ],
      "mod_code": [
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "if ( i > 0 ) b [ i - 1 ] [ j ] = b [ i - 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        13,
        14
      ],
      "mod_code": [
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;",
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "if ( j > 0 ) b [ i ] [ j - 1 ] = b [ i ] [ j - 1 ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "if ( i < 2 ) b [ i + 1 ] [ j ] |= b [ i + 1 ] [ j ] ;",
        "j [ i ] [ j + 1 ] = b [ i ] [ j + 1 ] != b [ i ] [ j + 1 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    }
  ]
}