{
  "meta": {
    "index": 1426,
    "hitid": "3E24UO25QZKLSXDCVEX4QUTBVMY6O7",
    "workerid": "A1APYLD4DUK33J",
    "probid": "729A",
    "subid": "40072687"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create character arrays a , b , with a size 105 , b size 105",
      "code": "char a [ 105 ] , b [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "while read n is true",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n + 1 exclusive",
      "code": "for ( int i = 1 ; i < n + 1 ; i ++ )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "set b [ i ] to a [ i ]",
      "code": "b [ i ] = a [ i ] ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for i = 1 to n - 1 exclusive",
      "code": "for ( int i = 1 ; i < n - 1 ; i ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if a [ i ] is ' o ' and a [ a + 1 ] is ' g ' and a [ i + 2 ] is ' o '",
      "code": "if ( a [ i ] == ' o ' && a [ i + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if b [ i ] is ' * ' or b [ i ] is ' 0 '",
      "code": "if ( b [ i ] == ' * ' || b [ i ] == ' 0 ' )",
      "indent": 4
    },
    {
      "line": 11,
      "text": "set b [ i + 1 ] to ' 0 '",
      "code": "b [ i + 1 ] = ' 0 ' ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "set b [ i + 2 ] to ' 0 '",
      "code": "b [ i + 2 ] = ' 0 ' ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 14,
      "text": "set b [ i ] to ' * '",
      "code": "b [ i ] = ' * ' ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "set b [ i + 1 ] to ' * '",
      "code": "b [ i + 1 ] = ' * ' ;",
      "indent": 5
    },
    {
      "line": 16,
      "text": "set b [ i + 2 ] to ' * '",
      "code": "b [ i + 2 ] = ' * ' ;",
      "indent": 5
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "for i = 1 to n + 1 exclusive",
      "code": "for ( int i = 1 ; i < n + 1 ; i ++ )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if b [ i ] is not ' 0 ' , print b [ i ]",
      "code": "if ( b [ i ] != ' 0 ' ) cout << b [ i ] ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char [105][char*]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char a [ 105 ] [ 105 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "a >> a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘char [105]’ and ‘char’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "char b [ i ] = a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        21
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char [105][char*]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        21,
        6
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "char b [ i ] = a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        21,
        6,
        11
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "char b [ i ] = a [ i ] ;",
        "b [ i + 1 ] = ' \\0 ' ;"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        21,
        6,
        1
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "char b [ i ] = a [ i ] ;",
        "char a [ 105 ] [ 105 ] ;"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        21,
        6,
        3
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "char b [ i ] = a [ i ] ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        21,
        11
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "b [ i + 1 ] = ' \\0 ' ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char [105][char*]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        21,
        11,
        1
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "b [ i + 1 ] = ' \\0 ' ;",
        "char a [ 105 ] [ 105 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        11,
        3
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "b [ i + 1 ] = ' \\0 ' ;",
        "while ( n -- )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char [105][char*]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        21,
        1
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "char a [ 105 ] [ 105 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        1,
        3
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "char a [ 105 ] [ 105 ] ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21,
        3
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "while ( n -- )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char [105][char*]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "char b [ i ] = a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        6,
        11
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "char b [ i ] = a [ i ] ;",
        "b [ i + 1 ] = ' \\0 ' ;"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        6,
        11,
        1
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "char b [ i ] = a [ i ] ;",
        "b [ i + 1 ] = ' \\0 ' ;",
        "char a [ 105 ] [ 105 ] ;"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        6,
        11,
        3
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "char b [ i ] = a [ i ] ;",
        "b [ i + 1 ] = ' \\0 ' ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        6,
        1
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "char b [ i ] = a [ i ] ;",
        "char a [ 105 ] [ 105 ] ;"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        6,
        1,
        3
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "char b [ i ] = a [ i ] ;",
        "char a [ 105 ] [ 105 ] ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        6,
        3
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "char b [ i ] = a [ i ] ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "b [ i + 1 ] = ' \\0 ' ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char [105][char*]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        11,
        1
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "b [ i + 1 ] = ' \\0 ' ;",
        "char a [ 105 ] [ 105 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        1,
        3
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "b [ i + 1 ] = ' \\0 ' ;",
        "char a [ 105 ] [ 105 ] ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        3
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "b [ i + 1 ] = ' \\0 ' ;",
        "while ( n -- )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char [105][char*]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "char a [ 105 ] [ 105 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        1,
        3
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "char a [ 105 ] [ 105 ] ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "if ( a [ i ] == ' o ' && a [ a + 1 ] == ' g ' && a [ i + 2 ] == ' o ' )",
        "while ( n -- )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘char [105][char*]’ for array subscript"
    },
    {
      "mod_line": [
        21,
        6
      ],
      "mod_code": [
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "char b [ i ] = a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        21,
        6,
        11
      ],
      "mod_code": [
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "char b [ i ] = a [ i ] ;",
        "b [ i + 1 ] = ' \\0 ' ;"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        21,
        6,
        11,
        1
      ],
      "mod_code": [
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "char b [ i ] = a [ i ] ;",
        "b [ i + 1 ] = ' \\0 ' ;",
        "char a [ 105 ] [ 105 ] ;"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        21,
        6,
        11,
        3
      ],
      "mod_code": [
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "char b [ i ] = a [ i ] ;",
        "b [ i + 1 ] = ' \\0 ' ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        21,
        6,
        1
      ],
      "mod_code": [
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "char b [ i ] = a [ i ] ;",
        "char a [ 105 ] [ 105 ] ;"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        21,
        6,
        1,
        3
      ],
      "mod_code": [
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "char b [ i ] = a [ i ] ;",
        "char a [ 105 ] [ 105 ] ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        21,
        6,
        3
      ],
      "mod_code": [
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "char b [ i ] = a [ i ] ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        21,
        11,
        1
      ],
      "mod_code": [
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "b [ i + 1 ] = ' \\0 ' ;",
        "char a [ 105 ] [ 105 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        11,
        1,
        3
      ],
      "mod_code": [
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "b [ i + 1 ] = ' \\0 ' ;",
        "char a [ 105 ] [ 105 ] ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        1
      ],
      "mod_code": [
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "char a [ 105 ] [ 105 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        1,
        3
      ],
      "mod_code": [
        "if ( b [ i ] != ' 0 ' ) cout << b [ i ] << endl ;",
        "char a [ 105 ] [ 105 ] ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "char b [ i ] = a [ i ] ;",
        "b [ i + 1 ] = ' \\0 ' ;"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        6,
        11,
        1
      ],
      "mod_code": [
        "char b [ i ] = a [ i ] ;",
        "b [ i + 1 ] = ' \\0 ' ;",
        "char a [ 105 ] [ 105 ] ;"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        6,
        11,
        1,
        3
      ],
      "mod_code": [
        "char b [ i ] = a [ i ] ;",
        "b [ i + 1 ] = ' \\0 ' ;",
        "char a [ 105 ] [ 105 ] ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        6,
        11,
        3
      ],
      "mod_code": [
        "char b [ i ] = a [ i ] ;",
        "b [ i + 1 ] = ' \\0 ' ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "char b [ i ] = a [ i ] ;",
        "char a [ 105 ] [ 105 ] ;"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        6,
        1,
        3
      ],
      "mod_code": [
        "char b [ i ] = a [ i ] ;",
        "char a [ 105 ] [ 105 ] ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "char b [ i ] = a [ i ] ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "b [ i + 1 ] = ' \\0 ' ;",
        "char a [ 105 ] [ 105 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        1,
        3
      ],
      "mod_code": [
        "b [ i + 1 ] = ' \\0 ' ;",
        "char a [ 105 ] [ 105 ] ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "char a [ 105 ] [ 105 ] ;",
        "while ( n -- )"
      ],
      "err_line": 6,
      "err_msg": "‘b’ was not declared in this scope"
    }
  ]
}