{
  "meta": {
    "index": 2664,
    "hitid": "3U18MJKL1UGSQTM14QAUX5LG1JLNCO",
    "workerid": "A1APYLD4DUK33J",
    "probid": "12A",
    "subid": "41570650"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer c with c = 0",
      "code": "int c = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create strings n , m , s",
      "code": "string n , m , s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n read m read s",
      "code": "cin >> n >> m >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to 3 inclusive",
      "code": "for ( int i = 1 ; i <= 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if n [ 0 ] is s [ 2 ] and n [ 1 ] is s [ 1 ] and n [ 2 ] is s [ 0 ] and m [ 0 ] is m [ 2 ] , increment c",
      "code": "if ( ( n [ 0 ] == s [ 2 ] ) && ( n [ 1 ] == s [ 1 ] ) && ( n [ 2 ] == s [ 0 ] ) && ( m [ 0 ] == m [ 2 ] ) ) { c ++ ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if c is greater than 0",
      "code": "if ( c > 0 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print \" YES \" print newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "c = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string n , m , s , s ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "n >> n >> m >> s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "c = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        9
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "c = 0 ;",
        "else ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        9,
        2
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "c = 0 ;",
        "else ;",
        "string n , m , s , s ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        9,
        3
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "c = 0 ;",
        "else ;",
        "n >> n >> m >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        9,
        4
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "c = 0 ;",
        "else ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        2
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "c = 0 ;",
        "string n , m , s , s ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        2,
        3
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "c = 0 ;",
        "string n , m , s , s ;",
        "n >> n >> m >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        2,
        4
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "c = 0 ;",
        "string n , m , s , s ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        3
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "c = 0 ;",
        "n >> n >> m >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        3,
        4
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "c = 0 ;",
        "n >> n >> m >> s ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        4
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "c = 0 ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        2
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "else ;",
        "string n , m , s , s ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        5,
        9,
        2,
        3
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "else ;",
        "string n , m , s , s ;",
        "n >> n >> m >> s ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        5,
        9,
        2,
        4
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "else ;",
        "string n , m , s , s ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        5,
        9,
        3
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "else ;",
        "n >> n >> m >> s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        9,
        3,
        4
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "else ;",
        "n >> n >> m >> s ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        9,
        4
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "else ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "string n , m , s , s ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        5,
        2,
        3
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "string n , m , s , s ;",
        "n >> n >> m >> s ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        5,
        2,
        3,
        4
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "string n , m , s , s ;",
        "n >> n >> m >> s ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        5,
        2,
        4
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "string n , m , s , s ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "n >> n >> m >> s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        3,
        4
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "n >> n >> m >> s ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "if ( n [ 0 ] == s [ 2 ] && n [ 1 ] == s [ 1 ] && n [ 2 ] == s [ 2 ] && m [ 0 ] == m [ 2 ] ) c ++ ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "c = 0 ;",
        "else ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        2
      ],
      "mod_code": [
        "c = 0 ;",
        "else ;",
        "string n , m , s , s ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        2,
        3
      ],
      "mod_code": [
        "c = 0 ;",
        "else ;",
        "string n , m , s , s ;",
        "n >> n >> m >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        2,
        4
      ],
      "mod_code": [
        "c = 0 ;",
        "else ;",
        "string n , m , s , s ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        3
      ],
      "mod_code": [
        "c = 0 ;",
        "else ;",
        "n >> n >> m >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        3,
        4
      ],
      "mod_code": [
        "c = 0 ;",
        "else ;",
        "n >> n >> m >> s ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        4
      ],
      "mod_code": [
        "c = 0 ;",
        "else ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "c = 0 ;",
        "string n , m , s , s ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        3
      ],
      "mod_code": [
        "c = 0 ;",
        "string n , m , s , s ;",
        "n >> n >> m >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        4
      ],
      "mod_code": [
        "c = 0 ;",
        "string n , m , s , s ;",
        "n >> n >> m >> s ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        4
      ],
      "mod_code": [
        "c = 0 ;",
        "string n , m , s , s ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "c = 0 ;",
        "n >> n >> m >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "c = 0 ;",
        "n >> n >> m >> s ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "c = 0 ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "else ;",
        "string n , m , s , s ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        9,
        2,
        3
      ],
      "mod_code": [
        "else ;",
        "string n , m , s , s ;",
        "n >> n >> m >> s ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        9,
        2,
        3,
        4
      ],
      "mod_code": [
        "else ;",
        "string n , m , s , s ;",
        "n >> n >> m >> s ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        9,
        2,
        4
      ],
      "mod_code": [
        "else ;",
        "string n , m , s , s ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "else ;",
        "n >> n >> m >> s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        3,
        4
      ],
      "mod_code": [
        "else ;",
        "n >> n >> m >> s ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "else ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "string n , m , s , s ;",
        "n >> n >> m >> s ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        2,
        3,
        4
      ],
      "mod_code": [
        "string n , m , s , s ;",
        "n >> n >> m >> s ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "string n , m , s , s ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "n >> n >> m >> s ;",
        "for ( i = 1 ; i <= 3 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}