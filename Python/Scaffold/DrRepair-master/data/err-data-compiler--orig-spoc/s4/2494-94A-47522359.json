{
  "meta": {
    "index": 2494,
    "hitid": "3HEM8MA6H96WNF8XPNOHLZFS6F4PQD",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "94A",
    "subid": "47522359"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "mp = map from string to integer",
      "code": "map < string , int > mp ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to 9",
      "code": "for ( int i = 0 ; i < 10 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "p = string",
      "code": "string p ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read p",
      "code": "cin >> p ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "mp [ p ] = i",
      "code": "mp [ p ] = i ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to 79 with i = i + 10 , print mp [ s . substr ( i , 10 ) ]",
      "code": "for ( int i = 0 ; i < 80 ; i += 10 ) { cout << mp [ s . substr ( i , 10 ) ] ; }",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print new line",
      "code": "cout << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "gets ( p ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "mp [ ' p ' ] = i ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 9 ; i ++ )",
        "gets ( p ) ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 9 ; i ++ )",
        "gets ( p ) ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        6,
        2,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 9 ; i ++ )",
        "gets ( p ) ;",
        "s >> s ;",
        "mp [ ' p ' ] = i ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        6,
        2,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 9 ; i ++ )",
        "gets ( p ) ;",
        "s >> s ;",
        "map < string , string > mp ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        6,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 9 ; i ++ )",
        "gets ( p ) ;",
        "mp [ ' p ' ] = i ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 9 ; i ++ )",
        "gets ( p ) ;",
        "mp [ ' p ' ] = i ;",
        "map < string , string > mp ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 9 ; i ++ )",
        "gets ( p ) ;",
        "map < string , string > mp ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 9 ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        2,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 9 ; i ++ )",
        "s >> s ;",
        "mp [ ' p ' ] = i ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        2,
        7,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 9 ; i ++ )",
        "s >> s ;",
        "mp [ ' p ' ] = i ;",
        "map < string , string > mp ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        2,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 9 ; i ++ )",
        "s >> s ;",
        "map < string , string > mp ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 9 ; i ++ )",
        "mp [ ' p ' ] = i ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        7,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 9 ; i ++ )",
        "mp [ ' p ' ] = i ;",
        "map < string , string > mp ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "gets ( p ) ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        2,
        4
      ],
      "mod_code": [
        "gets ( p ) ;",
        "s >> s ;",
        "for ( int i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        2,
        4,
        7
      ],
      "mod_code": [
        "gets ( p ) ;",
        "s >> s ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "mp [ ' p ' ] = i ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        2,
        4,
        3
      ],
      "mod_code": [
        "gets ( p ) ;",
        "s >> s ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "map < string , string > mp ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        2,
        7
      ],
      "mod_code": [
        "gets ( p ) ;",
        "s >> s ;",
        "mp [ ' p ' ] = i ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        2,
        7,
        3
      ],
      "mod_code": [
        "gets ( p ) ;",
        "s >> s ;",
        "mp [ ' p ' ] = i ;",
        "map < string , string > mp ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        2,
        3
      ],
      "mod_code": [
        "gets ( p ) ;",
        "s >> s ;",
        "map < string , string > mp ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "gets ( p ) ;",
        "for ( int i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        4,
        7
      ],
      "mod_code": [
        "gets ( p ) ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "mp [ ' p ' ] = i ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        4,
        7,
        3
      ],
      "mod_code": [
        "gets ( p ) ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "mp [ ' p ' ] = i ;",
        "map < string , string > mp ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        4,
        3
      ],
      "mod_code": [
        "gets ( p ) ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "map < string , string > mp ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "gets ( p ) ;",
        "mp [ ' p ' ] = i ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        7,
        3
      ],
      "mod_code": [
        "gets ( p ) ;",
        "mp [ ' p ' ] = i ;",
        "map < string , string > mp ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "gets ( p ) ;",
        "map < string , string > mp ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "s >> s ;",
        "for ( int i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        4,
        7
      ],
      "mod_code": [
        "s >> s ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "mp [ ' p ' ] = i ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        4,
        7,
        3
      ],
      "mod_code": [
        "s >> s ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "mp [ ' p ' ] = i ;",
        "map < string , string > mp ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        4,
        3
      ],
      "mod_code": [
        "s >> s ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "map < string , string > mp ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "s >> s ;",
        "mp [ ' p ' ] = i ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        7,
        3
      ],
      "mod_code": [
        "s >> s ;",
        "mp [ ' p ' ] = i ;",
        "map < string , string > mp ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "s >> s ;",
        "map < string , string > mp ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "mp [ ' p ' ] = i ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘char’)"
    },
    {
      "mod_line": [
        4,
        7,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "mp [ ' p ' ] = i ;",
        "map < string , string > mp ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘char’)"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "mp [ ' p ' ] = i ;",
        "map < string , string > mp ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘char’)"
    }
  ]
}