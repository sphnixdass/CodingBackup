{
  "meta": {
    "index": 302,
    "hitid": "3QGHA0EA0JUZ3I39IR5MI4SPDCYWBV",
    "workerid": "A1APYLD4DUK33J",
    "probid": "1073A",
    "subid": "49114894"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers t , cp , ck , with cp = 1 , ck = 0",
      "code": "int t , cp = 1 , ck = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if t is 1 , set cp to 0",
      "code": "if ( t == 1 ) cp = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to t - 1 exclusive",
      "code": "for ( int i = 0 ; i < t - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s [ i ] is not s [ i + 1 ]",
      "code": "if ( s [ i ] != s [ i + 1 ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set ck to 1",
      "code": "ck = 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "print \" YES \" print newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "print s [ i ] print s [ i + 1 ] print newline",
      "code": "cout << s [ i ] << s [ i + 1 ] << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "break loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "set cp to 0",
      "code": "cp = 0 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if cp is 0 and ck is 0 , print \" NO \" print newline",
      "code": "if ( cp == 0 && ck == 0 ) cout << \" NO \" << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int t , cp , ck = 0 , ck = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int t , cp , ck = 1 , ck = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin read t ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < t - 1 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int t , cp , ck = 0 , ck = 0 ;",
        "cout << s [ i ] << \" \" << s [ i + 1 ] << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        10,
        6
      ],
      "mod_code": [
        "int t , cp , ck = 0 , ck = 0 ;",
        "cout << s [ i ] << \" \" << s [ i + 1 ] << endl ;",
        "for ( i = 0 ; i < t - 1 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        10,
        6,
        8
      ],
      "mod_code": [
        "int t , cp , ck = 0 , ck = 0 ;",
        "cout << s [ i ] << \" \" << s [ i + 1 ] << endl ;",
        "for ( i = 0 ; i < t - 1 ; i ++ )",
        "int ck = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        10,
        6,
        11
      ],
      "mod_code": [
        "int t , cp , ck = 0 , ck = 0 ;",
        "cout << s [ i ] << \" \" << s [ i + 1 ] << endl ;",
        "for ( i = 0 ; i < t - 1 ; i ++ )",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        10,
        8
      ],
      "mod_code": [
        "int t , cp , ck = 0 , ck = 0 ;",
        "cout << s [ i ] << \" \" << s [ i + 1 ] << endl ;",
        "int ck = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        10,
        8,
        11
      ],
      "mod_code": [
        "int t , cp , ck = 0 , ck = 0 ;",
        "cout << s [ i ] << \" \" << s [ i + 1 ] << endl ;",
        "int ck = 1 ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        10,
        11
      ],
      "mod_code": [
        "int t , cp , ck = 0 , ck = 0 ;",
        "cout << s [ i ] << \" \" << s [ i + 1 ] << endl ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int t , cp , ck = 0 , ck = 0 ;",
        "for ( i = 0 ; i < t - 1 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        6,
        8
      ],
      "mod_code": [
        "int t , cp , ck = 0 , ck = 0 ;",
        "for ( i = 0 ; i < t - 1 ; i ++ )",
        "int ck = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        6,
        8,
        11
      ],
      "mod_code": [
        "int t , cp , ck = 0 , ck = 0 ;",
        "for ( i = 0 ; i < t - 1 ; i ++ )",
        "int ck = 1 ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        6,
        11
      ],
      "mod_code": [
        "int t , cp , ck = 0 , ck = 0 ;",
        "for ( i = 0 ; i < t - 1 ; i ++ )",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int t , cp , ck = 0 , ck = 0 ;",
        "int ck = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        8,
        11
      ],
      "mod_code": [
        "int t , cp , ck = 0 , ck = 0 ;",
        "int ck = 1 ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int t , cp , ck = 0 , ck = 0 ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ i + 1 ] << endl ;",
        "for ( i = 0 ; i < t - 1 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        6,
        1
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ i + 1 ] << endl ;",
        "for ( i = 0 ; i < t - 1 ; i ++ )",
        "int t , cp , ck = 1 , ck = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        10,
        6,
        1,
        8
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ i + 1 ] << endl ;",
        "for ( i = 0 ; i < t - 1 ; i ++ )",
        "int t , cp , ck = 1 , ck = 0 ;",
        "int ck = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        10,
        6,
        1,
        11
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ i + 1 ] << endl ;",
        "for ( i = 0 ; i < t - 1 ; i ++ )",
        "int t , cp , ck = 1 , ck = 0 ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        10,
        6,
        8
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ i + 1 ] << endl ;",
        "for ( i = 0 ; i < t - 1 ; i ++ )",
        "int ck = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        6,
        8,
        11
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ i + 1 ] << endl ;",
        "for ( i = 0 ; i < t - 1 ; i ++ )",
        "int ck = 1 ;",
        "break break ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        6,
        11
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ i + 1 ] << endl ;",
        "for ( i = 0 ; i < t - 1 ; i ++ )",
        "break break ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ i + 1 ] << endl ;",
        "int t , cp , ck = 1 , ck = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        10,
        1,
        8
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ i + 1 ] << endl ;",
        "int t , cp , ck = 1 , ck = 0 ;",
        "int ck = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        10,
        1,
        8,
        11
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ i + 1 ] << endl ;",
        "int t , cp , ck = 1 , ck = 0 ;",
        "int ck = 1 ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        10,
        1,
        11
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ i + 1 ] << endl ;",
        "int t , cp , ck = 1 , ck = 0 ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        10,
        8,
        11
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ i + 1 ] << endl ;",
        "int ck = 1 ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "cout << s [ i ] << \" \" << s [ i + 1 ] << endl ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < t - 1 ; i ++ )",
        "int t , cp , ck = 1 , ck = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        6,
        1,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < t - 1 ; i ++ )",
        "int t , cp , ck = 1 , ck = 0 ;",
        "int ck = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        6,
        1,
        8,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < t - 1 ; i ++ )",
        "int t , cp , ck = 1 , ck = 0 ;",
        "int ck = 1 ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        6,
        1,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < t - 1 ; i ++ )",
        "int t , cp , ck = 1 , ck = 0 ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < t - 1 ; i ++ )",
        "int ck = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < t - 1 ; i ++ )",
        "int ck = 1 ;",
        "break break ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < t - 1 ; i ++ )",
        "break break ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int t , cp , ck = 1 , ck = 0 ;",
        "int ck = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        8,
        11
      ],
      "mod_code": [
        "int t , cp , ck = 1 , ck = 0 ;",
        "int ck = 1 ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int t , cp , ck = 1 , ck = 0 ;",
        "break break ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "int ck = 1 ;",
        "break break ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘break’"
    }
  ]
}