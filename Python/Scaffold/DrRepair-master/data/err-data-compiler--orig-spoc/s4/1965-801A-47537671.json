{
  "meta": {
    "index": 1965,
    "hitid": "30UZJB2POH60N4KC7X37ALH05NK53Z",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "801A",
    "subid": "47537671"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant integer oo = 1e9",
      "code": "const int oo = 1e9 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create int n = ( int ) s . size ( )",
      "code": "int n = ( int ) s . size ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer vector a of size n",
      "code": "vector < int > a ( n ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "let ints ans = 0 and ok = 0",
      "code": "int ans = 0 , ok = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to i + 1 < n",
      "code": "for ( int i = 0 ; i + 1 < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if s [ i ] is equal to ' V ' and s [ i + 1 ] is equal to ' K ' , increment ans and set a [ i ] and a [ i + 1 ] to 1",
      "code": "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) ans ++ , a [ i ] = 1 , a [ i + 1 ] = 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to i + 1 < n",
      "code": "for ( int i = 0 ; i + 1 < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if a [ i ] is equal to 0 and a [ i + 1 ] is equal to 0 and s [ i ] is equal to s [ i + 1 ] , set ok to 1",
      "code": "if ( a [ i ] == 0 && a [ i + 1 ] == 0 && s [ i ] == s [ i + 1 ] ) ok = 1 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set ans to ans + ok",
      "code": "ans += ok ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print ans",
      "code": "cout << ans << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const int oo = ;"
      ],
      "err_line": 0,
      "err_msg": "expected primary-expression before ‘;’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int n = ( int ) ( s . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "vector < int > a [ n ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int ans = 0 , ans = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        13
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "string n ;",
        "cout << ans ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        13,
        4
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "string n ;",
        "cout << ans ;",
        "int n = ( int ) ( s . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        13,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "string n ;",
        "cout << ans ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        13,
        10
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "string n ;",
        "cout << ans ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        4
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "string n ;",
        "int n = ( int ) ( s . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        4,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "string n ;",
        "int n = ( int ) ( s . size ( ) ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        4,
        10
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "string n ;",
        "int n = ( int ) ( s . size ( ) ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "string n ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        3,
        10
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "string n ;",
        "gets ( s ) ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        10
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "string n ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        4
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "cout << ans ;",
        "int n = ( int ) ( s . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        13,
        4,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "cout << ans ;",
        "int n = ( int ) ( s . size ( ) ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        13,
        4,
        10
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "cout << ans ;",
        "int n = ( int ) ( s . size ( ) ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        13,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "cout << ans ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        13,
        3,
        10
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "cout << ans ;",
        "gets ( s ) ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        13,
        10
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "cout << ans ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "int n = ( int ) ( s . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        4,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "int n = ( int ) ( s . size ( ) ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        4,
        3,
        10
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "int n = ( int ) ( s . size ( ) ;",
        "gets ( s ) ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        4,
        10
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "int n = ( int ) ( s . size ( ) ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        3,
        10
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "gets ( s ) ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "if ( s [ i ] == ' V ' && s [ i + 1 ] == ' K ' ) a [ i + 1 ] = a [ i + 1 ] = 1 ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "string n ;",
        "cout << ans ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        4
      ],
      "mod_code": [
        "string n ;",
        "cout << ans ;",
        "int n = ( int ) ( s . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        4,
        3
      ],
      "mod_code": [
        "string n ;",
        "cout << ans ;",
        "int n = ( int ) ( s . size ( ) ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        4,
        10
      ],
      "mod_code": [
        "string n ;",
        "cout << ans ;",
        "int n = ( int ) ( s . size ( ) ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        3
      ],
      "mod_code": [
        "string n ;",
        "cout << ans ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        3,
        10
      ],
      "mod_code": [
        "string n ;",
        "cout << ans ;",
        "gets ( s ) ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        10
      ],
      "mod_code": [
        "string n ;",
        "cout << ans ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "string n ;",
        "int n = ( int ) ( s . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        3
      ],
      "mod_code": [
        "string n ;",
        "int n = ( int ) ( s . size ( ) ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        3,
        10
      ],
      "mod_code": [
        "string n ;",
        "int n = ( int ) ( s . size ( ) ;",
        "gets ( s ) ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        10
      ],
      "mod_code": [
        "string n ;",
        "int n = ( int ) ( s . size ( ) ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "string n ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        10
      ],
      "mod_code": [
        "string n ;",
        "gets ( s ) ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "string n ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "cout << ans ;",
        "int n = ( int ) ( s . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        13,
        4,
        3
      ],
      "mod_code": [
        "cout << ans ;",
        "int n = ( int ) ( s . size ( ) ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        13,
        4,
        3,
        10
      ],
      "mod_code": [
        "cout << ans ;",
        "int n = ( int ) ( s . size ( ) ;",
        "gets ( s ) ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        13,
        4,
        10
      ],
      "mod_code": [
        "cout << ans ;",
        "int n = ( int ) ( s . size ( ) ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "cout << ans ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        13,
        3,
        10
      ],
      "mod_code": [
        "cout << ans ;",
        "gets ( s ) ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        13,
        10
      ],
      "mod_code": [
        "cout << ans ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "int n = ( int ) ( s . size ( ) ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        3,
        10
      ],
      "mod_code": [
        "int n = ( int ) ( s . size ( ) ;",
        "gets ( s ) ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "int n = ( int ) ( s . size ( ) ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "gets ( s ) ;",
        "for ( i = 0 ; i + 1 < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    }
  ]
}