{
  "meta": {
    "index": 2389,
    "hitid": "30Z7M1Q8UYEJU72ZEAPK9D5XDNK8A7",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "392A",
    "subid": "38906847"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , x , y = long long",
      "code": "long long n , x , y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "ny = long long",
      "code": "long long ny ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "wasOut = bool",
      "code": "bool wasOut ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "borderPoints = 0",
      "code": "long long borderPoints = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "nx = 0",
      "code": "long long nx = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if n is 0",
      "code": "if ( n == 0 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print 1",
      "code": "cout << 1 << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else if n < 0",
      "code": "else if ( n < 0 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "subtract n from x",
      "code": "x = - n ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "while x < = 0",
      "code": "while ( x <= 0 )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "wasOut = true",
      "code": "wasOut = true ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "ny = sqrt ( n * n - x * x ) + 1",
      "code": "ny = sqrt ( n * n - x * x ) + 1 ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "for y = - ny to 0 inclusive",
      "code": "for ( y = - ny ; y <= 0 ; y ++ )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if x * x + y * y < = n * n",
      "code": "if ( x * x + y * y <= n * n )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "if wasOut is true",
      "code": "if ( wasOut == true )",
      "indent": 4
    },
    {
      "line": 20,
      "text": "wasOut = false",
      "code": "wasOut = false ;",
      "indent": 5
    },
    {
      "line": 21,
      "text": "increment borderPoints",
      "code": "borderPoints ++ ;",
      "indent": 5
    },
    {
      "line": 22,
      "text": "if x is 0 increment nx",
      "code": "if ( x == 0 ) { nx ++ ; }",
      "indent": 5
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 24,
      "text": "if x < 0",
      "code": "if ( x < 0 )",
      "indent": 5
    },
    {
      "line": 25,
      "text": "if ( x - 1 ) ^ 2 + y ^ 2 > n ^ 2",
      "code": "if ( ( x - 1 ) * ( x - 1 ) + y * y > n * n )",
      "indent": 6
    },
    {
      "line": 26,
      "text": "increment borderPoints",
      "code": "borderPoints ++ ;",
      "indent": 7
    },
    {
      "line": 27,
      "text": "if x is 0 increment nx",
      "code": "if ( x == 0 ) { nx ++ ; }",
      "indent": 7
    },
    {
      "line": 28,
      "text": "else",
      "code": "else",
      "indent": 6
    },
    {
      "line": 29,
      "text": "y = n + 1",
      "code": "y = n + 1 ;",
      "indent": 7
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 6
    },
    {
      "line": 31,
      "text": "else if x > 0",
      "code": "else if ( x > 0 )",
      "indent": 5
    },
    {
      "line": 32,
      "text": "if ( x + 1 ) ^ 2 + y ^ 2 > n ^ 2",
      "code": "if ( ( x + 1 ) * ( x + 1 ) + y * y > n * n )",
      "indent": 6
    },
    {
      "line": 33,
      "text": "increment borderPoints",
      "code": "borderPoints ++ ;",
      "indent": 7
    },
    {
      "line": 34,
      "text": "if x is 0 increment nx",
      "code": "if ( x == 0 ) { nx ++ ; }",
      "indent": 7
    },
    {
      "line": 35,
      "text": "else",
      "code": "else",
      "indent": 6
    },
    {
      "line": 36,
      "text": "y = n + 1",
      "code": "y = n + 1 ;",
      "indent": 7
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 6
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 42,
      "text": "increment x",
      "code": "x ++ ;",
      "indent": 2
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 44,
      "text": "print 2 * ( borderPoints * 2 - nx ) - 2",
      "code": "cout << 2 * ( borderPoints * 2 - nx ) - 2 << endl ;",
      "indent": 1
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "borderPoints = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "nx = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘nx’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 25,
      "err_msg": "invalid conversion from ‘long long int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 32,
      "err_msg": "invalid conversion from ‘long long int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 28,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 35,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "nx = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        17
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "nx = 0 ;",
        "for ( int y = - ny ; y >= 0 ; y -- )"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        17,
        25
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "nx = 0 ;",
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        17,
        32
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "nx = 0 ;",
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        17,
        35
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "nx = 0 ;",
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        25
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "nx = 0 ;",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        25,
        32
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "nx = 0 ;",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        25,
        35
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "nx = 0 ;",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        32
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "nx = 0 ;",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        32,
        35
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "nx = 0 ;",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        35
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "nx = 0 ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "for ( int y = - ny ; y >= 0 ; y -- )"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        25
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        25,
        32
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        25,
        35
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        32
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        32,
        35
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        35
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        25
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        25,
        32
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        25,
        32,
        35
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        25,
        35
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        32
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        32,
        35
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        35
      ],
      "mod_code": [
        "borderPoints = 0 ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘borderPoints’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "nx = 0 ;",
        "for ( int y = - ny ; y >= 0 ; y -- )"
      ],
      "err_line": 5,
      "err_msg": "‘nx’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        25
      ],
      "mod_code": [
        "nx = 0 ;",
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘nx’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        25,
        32
      ],
      "mod_code": [
        "nx = 0 ;",
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘nx’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        25,
        35
      ],
      "mod_code": [
        "nx = 0 ;",
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "‘nx’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        32
      ],
      "mod_code": [
        "nx = 0 ;",
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘nx’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        32,
        35
      ],
      "mod_code": [
        "nx = 0 ;",
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "‘nx’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        35
      ],
      "mod_code": [
        "nx = 0 ;",
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "‘nx’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        25
      ],
      "mod_code": [
        "nx = 0 ;",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘nx’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        25,
        32
      ],
      "mod_code": [
        "nx = 0 ;",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘nx’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        25,
        32,
        35
      ],
      "mod_code": [
        "nx = 0 ;",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "‘nx’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        25,
        35
      ],
      "mod_code": [
        "nx = 0 ;",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "‘nx’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        32
      ],
      "mod_code": [
        "nx = 0 ;",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘nx’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        32,
        35
      ],
      "mod_code": [
        "nx = 0 ;",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "‘nx’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        35
      ],
      "mod_code": [
        "nx = 0 ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "‘nx’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        25
      ],
      "mod_code": [
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 25,
      "err_msg": "invalid conversion from ‘long long int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        25,
        32
      ],
      "mod_code": [
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 25,
      "err_msg": "invalid conversion from ‘long long int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        25,
        32,
        35
      ],
      "mod_code": [
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;",
        "else else"
      ],
      "err_line": 25,
      "err_msg": "invalid conversion from ‘long long int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        25,
        35
      ],
      "mod_code": [
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;",
        "else else"
      ],
      "err_line": 25,
      "err_msg": "invalid conversion from ‘long long int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        32
      ],
      "mod_code": [
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 32,
      "err_msg": "invalid conversion from ‘long long int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        32,
        35
      ],
      "mod_code": [
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;",
        "else else"
      ],
      "err_line": 32,
      "err_msg": "invalid conversion from ‘long long int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        35
      ],
      "mod_code": [
        "for ( int y = - ny ; y >= 0 ; y -- )",
        "else else"
      ],
      "err_line": 35,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        25,
        32
      ],
      "mod_code": [
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;"
      ],
      "err_line": 25,
      "err_msg": "invalid conversion from ‘long long int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        25,
        32,
        35
      ],
      "mod_code": [
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;",
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;",
        "else else"
      ],
      "err_line": 25,
      "err_msg": "invalid conversion from ‘long long int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        25,
        35
      ],
      "mod_code": [
        "if ( ( x - 1 ) * 2 != n ) freopen ( n ^ 2 ) ;",
        "else else"
      ],
      "err_line": 25,
      "err_msg": "invalid conversion from ‘long long int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        32,
        35
      ],
      "mod_code": [
        "if ( ( x + 1 ) ^ 2 + y ) freopen ( n ^ 2 ) ;",
        "else else"
      ],
      "err_line": 32,
      "err_msg": "invalid conversion from ‘long long int’ to ‘const char*’ [-fpermissive]"
    }
  ]
}