{
  "meta": {
    "index": 311,
    "hitid": "32W3UF2EZOF64LCVMLVYYWFGAH7C4T",
    "workerid": "AIWEXPJAU66D9",
    "probid": "555A",
    "subid": "45974611"
  },
  "lines": [
    {
      "line": 0,
      "text": "function gcd with long long arguments a and b that returns long long",
      "code": "long long gcd ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return a if b = 0 , or gcd ( b , a % b )",
      "code": "return b == 0 ? a : gcd ( b , a % b ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "long long function lcm with long long arguments a and b",
      "code": "long long lcm ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 4,
      "text": "return a * ( b / gcd ( a , b ) )",
      "code": "return a * ( b / gcd ( a , b ) ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "create constant integer q = 1e9 + 9",
      "code": "const int q = 1e9 + 9 ;",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "declare integers n , k , ans , c and b with ans and c = 0 and array of integers a with 100007 elements",
      "code": "int n , k , ans = 0 , a [ 100007 ] , c = 0 , b ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for integer i = 0 to k exclusive",
      "code": "for ( int i = 0 ; i < k ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read b",
      "code": "cin >> b ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "for j = 0 to b exclusive",
      "code": "for ( int j = 0 ; j < b ; j ++ )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "read a [ j ]",
      "code": "cin >> a [ j ] ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "increment ans if j is greater than 0",
      "code": "if ( j > 0 ) ans ++ ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "for o = 1 to b exclusive",
      "code": "for ( int o = 1 ; o < b ; o ++ )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if a [ 0 ] = 1 & & a [ o ] - 1 = a [ o - 1 ]",
      "code": "if ( a [ 0 ] == 1 && a [ o ] - 1 == a [ o - 1 ] )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "increase c by one",
      "code": "c ++ ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 20,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "decrease ans by c",
      "code": "ans -= c ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "increase ans by ( n - 1 ) - c",
      "code": "ans += ( n - 1 ) - c ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int n , k , a [ 100007 ] , ans = 0 , c , c , b ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "long long lcm ( long long a , long long b ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int n , k , a [ 100007 ] , ans = 0 , c , b , b ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( j = 0 ; j < b ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "a >> a [ j ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int [100007]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "int n , k , a [ 100007 ] , ans = 0 , c , c , b ;",
        "for ( j = 0 ; j < b ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        8,
        12,
        13
      ],
      "mod_code": [
        "int n , k , a [ 100007 ] , ans = 0 , c , c , b ;",
        "for ( j = 0 ; j < b ; j ++ )",
        "a >> a [ j ] ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        3
      ],
      "mod_code": [
        "int n , k , a [ 100007 ] , ans = 0 , c , c , b ;",
        "for ( j = 0 ; j < b ; j ++ )",
        "a >> a [ j ] ;",
        "long long lcm ( long long a , long long b ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        4
      ],
      "mod_code": [
        "int n , k , a [ 100007 ] , ans = 0 , c , c , b ;",
        "for ( j = 0 ; j < b ; j ++ )",
        "a >> a [ j ] ;",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        12,
        3
      ],
      "mod_code": [
        "int n , k , a [ 100007 ] , ans = 0 , c , c , b ;",
        "for ( j = 0 ; j < b ; j ++ )",
        "long long lcm ( long long a , long long b ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        12,
        3,
        4
      ],
      "mod_code": [
        "int n , k , a [ 100007 ] , ans = 0 , c , c , b ;",
        "for ( j = 0 ; j < b ; j ++ )",
        "long long lcm ( long long a , long long b ) ;",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        12,
        4
      ],
      "mod_code": [
        "int n , k , a [ 100007 ] , ans = 0 , c , c , b ;",
        "for ( j = 0 ; j < b ; j ++ )",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "int n , k , a [ 100007 ] , ans = 0 , c , c , b ;",
        "a >> a [ j ] ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        8,
        13,
        3
      ],
      "mod_code": [
        "int n , k , a [ 100007 ] , ans = 0 , c , c , b ;",
        "a >> a [ j ] ;",
        "long long lcm ( long long a , long long b ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        13,
        3,
        4
      ],
      "mod_code": [
        "int n , k , a [ 100007 ] , ans = 0 , c , c , b ;",
        "a >> a [ j ] ;",
        "long long lcm ( long long a , long long b ) ;",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        13,
        4
      ],
      "mod_code": [
        "int n , k , a [ 100007 ] , ans = 0 , c , c , b ;",
        "a >> a [ j ] ;",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "int n , k , a [ 100007 ] , ans = 0 , c , c , b ;",
        "long long lcm ( long long a , long long b ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        3,
        4
      ],
      "mod_code": [
        "int n , k , a [ 100007 ] , ans = 0 , c , c , b ;",
        "long long lcm ( long long a , long long b ) ;",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "int n , k , a [ 100007 ] , ans = 0 , c , c , b ;",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "for ( j = 0 ; j < b ; j ++ )",
        "a >> a [ j ] ;"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13,
        3
      ],
      "mod_code": [
        "for ( j = 0 ; j < b ; j ++ )",
        "a >> a [ j ] ;",
        "long long lcm ( long long a , long long b ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        13,
        3,
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < b ; j ++ )",
        "a >> a [ j ] ;",
        "long long lcm ( long long a , long long b ) ;",
        "int n , k , a [ 100007 ] , ans = 0 , c , b , b ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        13,
        3,
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < b ; j ++ )",
        "a >> a [ j ] ;",
        "long long lcm ( long long a , long long b ) ;",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        13,
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < b ; j ++ )",
        "a >> a [ j ] ;",
        "int n , k , a [ 100007 ] , ans = 0 , c , b , b ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        12,
        13,
        8,
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < b ; j ++ )",
        "a >> a [ j ] ;",
        "int n , k , a [ 100007 ] , ans = 0 , c , b , b ;",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        12,
        13,
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < b ; j ++ )",
        "a >> a [ j ] ;",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "for ( j = 0 ; j < b ; j ++ )",
        "long long lcm ( long long a , long long b ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        3,
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < b ; j ++ )",
        "long long lcm ( long long a , long long b ) ;",
        "int n , k , a [ 100007 ] , ans = 0 , c , b , b ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        3,
        8,
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < b ; j ++ )",
        "long long lcm ( long long a , long long b ) ;",
        "int n , k , a [ 100007 ] , ans = 0 , c , b , b ;",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        3,
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < b ; j ++ )",
        "long long lcm ( long long a , long long b ) ;",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < b ; j ++ )",
        "int n , k , a [ 100007 ] , ans = 0 , c , b , b ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        12,
        8,
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < b ; j ++ )",
        "int n , k , a [ 100007 ] , ans = 0 , c , b , b ;",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < b ; j ++ )",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "a >> a [ j ] ;",
        "long long lcm ( long long a , long long b ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        3,
        8
      ],
      "mod_code": [
        "a >> a [ j ] ;",
        "long long lcm ( long long a , long long b ) ;",
        "int n , k , a [ 100007 ] , ans = 0 , c , b , b ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        3,
        8,
        4
      ],
      "mod_code": [
        "a >> a [ j ] ;",
        "long long lcm ( long long a , long long b ) ;",
        "int n , k , a [ 100007 ] , ans = 0 , c , b , b ;",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        3,
        4
      ],
      "mod_code": [
        "a >> a [ j ] ;",
        "long long lcm ( long long a , long long b ) ;",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "a >> a [ j ] ;",
        "int n , k , a [ 100007 ] , ans = 0 , c , b , b ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        13,
        8,
        4
      ],
      "mod_code": [
        "a >> a [ j ] ;",
        "int n , k , a [ 100007 ] , ans = 0 , c , b , b ;",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "a >> a [ j ] ;",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "long long lcm ( long long a , long long b ) ;",
        "int n , k , a [ 100007 ] , ans = 0 , c , b , b ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        8,
        4
      ],
      "mod_code": [
        "long long lcm ( long long a , long long b ) ;",
        "int n , k , a [ 100007 ] , ans = 0 , c , b , b ;",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "long long lcm ( long long a , long long b ) ;",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "int n , k , a [ 100007 ] , ans = 0 , c , b , b ;",
        "return ( a * ( b / gcd ( a , b ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘;’ token"
    }
  ]
}