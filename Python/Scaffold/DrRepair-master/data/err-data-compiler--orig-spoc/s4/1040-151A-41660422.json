{
  "meta": {
    "index": 1040,
    "hitid": "3566S7OX5DDJ05KG8M4LKCGZY9171O",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "151A",
    "subid": "41660422"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , k , l , c , d , p , nl , np = int",
      "code": "int n , k , l , c , d , p , nl , np ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "loop while reading n then k then l then c then d then p then nl then np",
      "code": "while ( cin >> n >> k >> l >> c >> d >> p >> nl >> np )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "x , y , z = int",
      "code": "int x , y , z ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "set x to ( k * l ) / nl",
      "code": "x = ( k * l ) / nl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "set y to c * d",
      "code": "y = c * d ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set z to p / np",
      "code": "z = p / np ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "ans = int with ans = min of x and y",
      "code": "int ans = min ( x , y ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set ans to min of ans and z",
      "code": "ans = min ( ans , z ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print ans / n",
      "code": "cout << ans / n << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "noop",
      "code": ";",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int x , y , z , z ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int x = ( k * l ) / nl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        2,
        5,
        1
      ],
      "mod_code": [
        "while ( cin >> n >> k >> l >> c >> d >> p >> nl )",
        "y *= d ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        5,
        1,
        4
      ],
      "mod_code": [
        "while ( cin >> n >> k >> l >> c >> d >> p >> nl )",
        "y *= d ;",
        "int n , k , l , c , d , p , p , np ;",
        "int x = ( k * l ) / nl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        5,
        1,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> k >> l >> c >> d >> p >> nl )",
        "y *= d ;",
        "int n , k , l , c , d , p , p , np ;",
        "ans = __gcd ( ans , z ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        5,
        4
      ],
      "mod_code": [
        "while ( cin >> n >> k >> l >> c >> d >> p >> nl )",
        "y *= d ;",
        "int x = ( k * l ) / nl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        2,
        5,
        4,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> k >> l >> c >> d >> p >> nl )",
        "y *= d ;",
        "int x = ( k * l ) / nl ;",
        "ans = __gcd ( ans , z ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "while ( cin >> n >> k >> l >> c >> d >> p >> nl )",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        1,
        4
      ],
      "mod_code": [
        "while ( cin >> n >> k >> l >> c >> d >> p >> nl )",
        "int n , k , l , c , d , p , p , np ;",
        "int x = ( k * l ) / nl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        1,
        4,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> k >> l >> c >> d >> p >> nl )",
        "int n , k , l , c , d , p , p , np ;",
        "int x = ( k * l ) / nl ;",
        "ans = __gcd ( ans , z ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        1,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> k >> l >> c >> d >> p >> nl )",
        "int n , k , l , c , d , p , p , np ;",
        "ans = __gcd ( ans , z ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "while ( cin >> n >> k >> l >> c >> d >> p >> nl )",
        "int x = ( k * l ) / nl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        2,
        4,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> k >> l >> c >> d >> p >> nl )",
        "int x = ( k * l ) / nl ;",
        "ans = __gcd ( ans , z ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "y *= d ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        1,
        2
      ],
      "mod_code": [
        "y *= d ;",
        "int n , k , l , c , d , p , p , np ;",
        "while ( cin >> n >> k >> l >> c >> d >> p >> p )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        1,
        2,
        4
      ],
      "mod_code": [
        "y *= d ;",
        "int n , k , l , c , d , p , p , np ;",
        "while ( cin >> n >> k >> l >> c >> d >> p >> p )",
        "int x = ( k * l ) / nl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        1,
        2,
        8
      ],
      "mod_code": [
        "y *= d ;",
        "int n , k , l , c , d , p , p , np ;",
        "while ( cin >> n >> k >> l >> c >> d >> p >> p )",
        "ans = __gcd ( ans , z ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        1,
        4
      ],
      "mod_code": [
        "y *= d ;",
        "int n , k , l , c , d , p , p , np ;",
        "int x = ( k * l ) / nl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        1,
        4,
        8
      ],
      "mod_code": [
        "y *= d ;",
        "int n , k , l , c , d , p , p , np ;",
        "int x = ( k * l ) / nl ;",
        "ans = __gcd ( ans , z ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        1,
        8
      ],
      "mod_code": [
        "y *= d ;",
        "int n , k , l , c , d , p , p , np ;",
        "ans = __gcd ( ans , z ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        2,
        4
      ],
      "mod_code": [
        "y *= d ;",
        "while ( cin >> n >> k >> l >> c >> d >> p >> p )",
        "int x = ( k * l ) / nl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        5,
        2,
        4,
        8
      ],
      "mod_code": [
        "y *= d ;",
        "while ( cin >> n >> k >> l >> c >> d >> p >> p )",
        "int x = ( k * l ) / nl ;",
        "ans = __gcd ( ans , z ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "y *= d ;",
        "int x = ( k * l ) / nl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        5,
        4,
        8
      ],
      "mod_code": [
        "y *= d ;",
        "int x = ( k * l ) / nl ;",
        "ans = __gcd ( ans , z ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "while ( cin >> n >> k >> l >> c >> d >> p >> p )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        2,
        4
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "while ( cin >> n >> k >> l >> c >> d >> p >> p )",
        "int x = ( k * l ) / nl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        2,
        4,
        8
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "while ( cin >> n >> k >> l >> c >> d >> p >> p )",
        "int x = ( k * l ) / nl ;",
        "ans = __gcd ( ans , z ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        2,
        8
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "while ( cin >> n >> k >> l >> c >> d >> p >> p )",
        "ans = __gcd ( ans , z ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "int x = ( k * l ) / nl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        4,
        8
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "int x = ( k * l ) / nl ;",
        "ans = __gcd ( ans , z ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "ans = __gcd ( ans , z ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "while ( cin >> n >> k >> l >> c >> d >> p >> p )",
        "int x = ( k * l ) / nl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        2,
        4,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> k >> l >> c >> d >> p >> p )",
        "int x = ( k * l ) / nl ;",
        "ans = __gcd ( ans , z ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int x’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "int x = ( k * l ) / nl ;",
        "ans = __gcd ( ans , z ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int x’"
    }
  ]
}