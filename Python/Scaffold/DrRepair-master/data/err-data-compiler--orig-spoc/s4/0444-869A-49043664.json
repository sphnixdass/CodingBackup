{
  "meta": {
    "index": 444,
    "hitid": "3DQYSJDTYL5CZLKJ2N3YLVCHPBLXET",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "869A",
    "subid": "49043664"
  },
  "lines": [
    {
      "line": 0,
      "text": "maxn = 4e6 + 10",
      "code": "const int maxn = 4e6 + 10 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int n , x [ 2005 ] , y [ 2005 ] , ans , set ans to 0",
      "code": "int n , x [ 2005 ] , y [ 2005 ] , ans = 0 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "set mark [ maxn ] to 0",
      "code": "bool mark [ maxn ] = { 0 } ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read x [ i ]",
      "code": "cin >> x [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read y [ i ]",
      "code": "cin >> y [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set mark [ x [ i ] ] = 1",
      "code": "mark [ x [ i ] ] = 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "assign 1 to mark [ y [ i ] ]",
      "code": "mark [ y [ i ] ] = 1 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for j = 1 to n inclusive",
      "code": "for ( int j = 1 ; j <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if mark [ x [ i ] ^ y [ j ] ] , increment ans",
      "code": "if ( mark [ x [ i ] ^ y [ j ] ] ) ans ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if ans mod 2 = 1",
      "code": "if ( ans % 2 == 1 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print Koyomi",
      "code": "cout << \" Koyomi \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print Karen and a newline",
      "code": "cout << \" Karen \" << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "maxn += 10 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "mark [ maxn ] = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘mark’ does not name a type"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cout << Koyomi << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Koyomi’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "cout << Karen << endl ;"
      ],
      "err_line": 18,
      "err_msg": "‘Karen’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "maxn = 4e6 + 10 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , x [ 2005 ] , y [ 2005 ] , ans , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "mark [ maxn ] = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "‘mark’ does not name a type"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cin >> x >> x [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [2005]’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cin >> y >> y [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [2005]’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "mark [ x [ i ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "char mark [ y [ i ] ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cout << Koyomi ;"
      ],
      "err_line": 16,
      "err_msg": "‘Koyomi’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 17,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "cout << Karen << ' \\n ' ;"
      ],
      "err_line": 18,
      "err_msg": "‘Karen’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "maxn += 10 ;",
        "mark [ maxn ] = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        16
      ],
      "mod_code": [
        "maxn += 10 ;",
        "mark [ maxn ] = 0 ;",
        "cout << Koyomi << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        16,
        18
      ],
      "mod_code": [
        "maxn += 10 ;",
        "mark [ maxn ] = 0 ;",
        "cout << Koyomi << endl ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        16,
        8
      ],
      "mod_code": [
        "maxn += 10 ;",
        "mark [ maxn ] = 0 ;",
        "cout << Koyomi << endl ;",
        "mark [ x [ i ] = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        18
      ],
      "mod_code": [
        "maxn += 10 ;",
        "mark [ maxn ] = 0 ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        18,
        8
      ],
      "mod_code": [
        "maxn += 10 ;",
        "mark [ maxn ] = 0 ;",
        "cout << Karen << endl ;",
        "mark [ x [ i ] = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        18,
        16
      ],
      "mod_code": [
        "maxn += 10 ;",
        "mark [ maxn ] = 0 ;",
        "cout << Karen << endl ;",
        "cout << Koyomi ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        8
      ],
      "mod_code": [
        "maxn += 10 ;",
        "mark [ maxn ] = 0 ;",
        "mark [ x [ i ] = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        8,
        16
      ],
      "mod_code": [
        "maxn += 10 ;",
        "mark [ maxn ] = 0 ;",
        "mark [ x [ i ] = 1 ;",
        "cout << Koyomi ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        16
      ],
      "mod_code": [
        "maxn += 10 ;",
        "mark [ maxn ] = 0 ;",
        "cout << Koyomi ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "maxn += 10 ;",
        "cout << Koyomi << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        0,
        16,
        18
      ],
      "mod_code": [
        "maxn += 10 ;",
        "cout << Koyomi << endl ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        0,
        16,
        18,
        8
      ],
      "mod_code": [
        "maxn += 10 ;",
        "cout << Koyomi << endl ;",
        "cout << Karen << endl ;",
        "mark [ x [ i ] = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        0,
        16,
        8
      ],
      "mod_code": [
        "maxn += 10 ;",
        "cout << Koyomi << endl ;",
        "mark [ x [ i ] = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        0,
        18
      ],
      "mod_code": [
        "maxn += 10 ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        0,
        18,
        8
      ],
      "mod_code": [
        "maxn += 10 ;",
        "cout << Karen << endl ;",
        "mark [ x [ i ] = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        0,
        18,
        8,
        16
      ],
      "mod_code": [
        "maxn += 10 ;",
        "cout << Karen << endl ;",
        "mark [ x [ i ] = 1 ;",
        "cout << Koyomi ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        0,
        18,
        16
      ],
      "mod_code": [
        "maxn += 10 ;",
        "cout << Karen << endl ;",
        "cout << Koyomi ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "maxn += 10 ;",
        "mark [ x [ i ] = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        16
      ],
      "mod_code": [
        "maxn += 10 ;",
        "mark [ x [ i ] = 1 ;",
        "cout << Koyomi ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "maxn += 10 ;",
        "cout << Koyomi ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "mark [ maxn ] = 0 ;",
        "cout << Koyomi << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘mark’ does not name a type"
    },
    {
      "mod_line": [
        2,
        16,
        18
      ],
      "mod_code": [
        "mark [ maxn ] = 0 ;",
        "cout << Koyomi << endl ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘mark’ does not name a type"
    },
    {
      "mod_line": [
        2,
        16,
        18,
        8
      ],
      "mod_code": [
        "mark [ maxn ] = 0 ;",
        "cout << Koyomi << endl ;",
        "cout << Karen << endl ;",
        "mark [ x [ i ] = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘mark’ does not name a type"
    },
    {
      "mod_line": [
        2,
        16,
        8
      ],
      "mod_code": [
        "mark [ maxn ] = 0 ;",
        "cout << Koyomi << endl ;",
        "mark [ x [ i ] = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘mark’ does not name a type"
    },
    {
      "mod_line": [
        2,
        18
      ],
      "mod_code": [
        "mark [ maxn ] = 0 ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘mark’ does not name a type"
    },
    {
      "mod_line": [
        2,
        18,
        8
      ],
      "mod_code": [
        "mark [ maxn ] = 0 ;",
        "cout << Karen << endl ;",
        "mark [ x [ i ] = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘mark’ does not name a type"
    },
    {
      "mod_line": [
        2,
        18,
        8,
        16
      ],
      "mod_code": [
        "mark [ maxn ] = 0 ;",
        "cout << Karen << endl ;",
        "mark [ x [ i ] = 1 ;",
        "cout << Koyomi ;"
      ],
      "err_line": 2,
      "err_msg": "‘mark’ does not name a type"
    },
    {
      "mod_line": [
        2,
        18,
        16
      ],
      "mod_code": [
        "mark [ maxn ] = 0 ;",
        "cout << Karen << endl ;",
        "cout << Koyomi ;"
      ],
      "err_line": 2,
      "err_msg": "‘mark’ does not name a type"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "mark [ maxn ] = 0 ;",
        "mark [ x [ i ] = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘mark’ does not name a type"
    },
    {
      "mod_line": [
        2,
        8,
        16
      ],
      "mod_code": [
        "mark [ maxn ] = 0 ;",
        "mark [ x [ i ] = 1 ;",
        "cout << Koyomi ;"
      ],
      "err_line": 2,
      "err_msg": "‘mark’ does not name a type"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "mark [ maxn ] = 0 ;",
        "cout << Koyomi ;"
      ],
      "err_line": 2,
      "err_msg": "‘mark’ does not name a type"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "cout << Koyomi << endl ;",
        "cout << Karen << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Koyomi’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        8
      ],
      "mod_code": [
        "cout << Koyomi << endl ;",
        "cout << Karen << endl ;",
        "mark [ x [ i ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "cout << Koyomi << endl ;",
        "mark [ x [ i ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        18,
        8
      ],
      "mod_code": [
        "cout << Karen << endl ;",
        "mark [ x [ i ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        18,
        8,
        16
      ],
      "mod_code": [
        "cout << Karen << endl ;",
        "mark [ x [ i ] = 1 ;",
        "cout << Koyomi ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        18,
        16
      ],
      "mod_code": [
        "cout << Karen << endl ;",
        "cout << Koyomi ;"
      ],
      "err_line": 16,
      "err_msg": "‘Koyomi’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "mark [ x [ i ] = 1 ;",
        "cout << Koyomi ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘]’ before ‘;’ token"
    }
  ]
}