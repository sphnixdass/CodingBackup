{
  "meta": {
    "index": 127,
    "hitid": "3OLZC0DJ8J9WB1HAYRS7IPDO0R7VIF",
    "workerid": "AIWEXPJAU66D9",
    "probid": "3A",
    "subid": "47648016"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare strings called s1 and s2",
      "code": "string s1 , s2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s1 and s2",
      "code": "cin >> s1 >> s2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "a and b = integers",
      "code": "int a , b ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "a = s1 [ 0 ] - s2 [ 0 ]",
      "code": "a = s1 [ 0 ] - s2 [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "b = s1 [ 1 ] - s2 [ 1 ]",
      "code": "b = s1 [ 1 ] - s2 [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set a to abs ( a )",
      "code": "a = abs ( a ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set b to abs ( b )",
      "code": "b = abs ( b ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "integer l = a if a > b or b otherwise",
      "code": "int l = ( a > b ) ? a : b ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print l and a new line",
      "code": "cout << l << endl ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "while s1 ! = s2",
      "code": "while ( s1 != s2 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if s1 [ 0 ] is greater than s2 [ 0 ]",
      "code": "if ( s1 [ 0 ] > s2 [ 0 ] )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print \" L \"",
      "code": "cout << \" L \" ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "set s1 [ 0 ] to s1 [ 0 ] - 1",
      "code": "s1 [ 0 ] = s1 [ 0 ] - 1 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else if s1 [ 0 ] is less than s2 [ 0 ]",
      "code": "else if ( s1 [ 0 ] < s2 [ 0 ] )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print \" R \"",
      "code": "cout << \" R \" ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "set s1 [ 0 ] to s1 [ 0 ] + 1",
      "code": "s1 [ 0 ] = s1 [ 0 ] + 1 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if s1 [ 1 ] is greater than s2 [ 1 ]",
      "code": "if ( s1 [ 1 ] > s2 [ 1 ] )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print \" D \"",
      "code": "cout << \" D \" ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "set s1 [ 1 ] = s1 [ 1 ] - 1",
      "code": "s1 [ 1 ] = s1 [ 1 ] - 1 ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else if s1 [ 1 ] is less than s2 [ 1 ]",
      "code": "else if ( s1 [ 1 ] < s2 [ 1 ] )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print \" U \"",
      "code": "cout << \" U \" ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "set s1 [ 1 ] = s1 [ 1 ] + 1",
      "code": "s1 [ 1 ] = s1 [ 1 ] + 1 ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s1 , s2 s2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘s2’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s1 >> s1 >> s2 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int a = abs ( a ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int b = abs ( b ) ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "while ( s1 )"
      ],
      "err_line": 10,
      "err_msg": "could not convert ‘s1’ from ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘bool’"
    },
    {
      "mod_line": [
        12,
        15,
        22,
        7
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "int b = abs ( b ) ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        12,
        15,
        7
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;",
        "int b = abs ( b ) ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        12,
        15,
        7,
        20
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;",
        "int b = abs ( b ) ;",
        "s1 [ 1 ] = s1 [ 1 ] - ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        12,
        15,
        7,
        16
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "cout << \" R \" << endl ;",
        "int b = abs ( b ) ;",
        "s1 [ 0 ] = s1 [ 0 ] + ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        12,
        22,
        7
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "cout << \" U \" << endl ;",
        "int b = abs ( b ) ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        12,
        22,
        7,
        20
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "cout << \" U \" << endl ;",
        "int b = abs ( b ) ;",
        "s1 [ 1 ] = s1 [ 1 ] - ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        12,
        22,
        7,
        16
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "cout << \" U \" << endl ;",
        "int b = abs ( b ) ;",
        "s1 [ 0 ] = s1 [ 0 ] + ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "int b = abs ( b ) ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        12,
        7,
        20
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "int b = abs ( b ) ;",
        "s1 [ 1 ] = s1 [ 1 ] - ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        12,
        7,
        20,
        16
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "int b = abs ( b ) ;",
        "s1 [ 1 ] = s1 [ 1 ] - ' 1 ' ;",
        "s1 [ 0 ] = s1 [ 0 ] + ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        12,
        7,
        16
      ],
      "mod_code": [
        "cout << \" L \" << endl ;",
        "int b = abs ( b ) ;",
        "s1 [ 0 ] = s1 [ 0 ] + ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        15,
        22,
        7
      ],
      "mod_code": [
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "int b = abs ( b ) ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        15,
        22,
        7,
        20
      ],
      "mod_code": [
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "int b = abs ( b ) ;",
        "s1 [ 1 ] = s1 [ 1 ] - ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        15,
        22,
        7,
        16
      ],
      "mod_code": [
        "cout << \" R \" << endl ;",
        "cout << \" U \" << endl ;",
        "int b = abs ( b ) ;",
        "s1 [ 0 ] = s1 [ 0 ] + ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        15,
        7
      ],
      "mod_code": [
        "cout << \" R \" << endl ;",
        "int b = abs ( b ) ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        15,
        7,
        20
      ],
      "mod_code": [
        "cout << \" R \" << endl ;",
        "int b = abs ( b ) ;",
        "s1 [ 1 ] = s1 [ 1 ] - ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        15,
        7,
        20,
        16
      ],
      "mod_code": [
        "cout << \" R \" << endl ;",
        "int b = abs ( b ) ;",
        "s1 [ 1 ] = s1 [ 1 ] - ' 1 ' ;",
        "s1 [ 0 ] = s1 [ 0 ] + ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        15,
        7,
        16
      ],
      "mod_code": [
        "cout << \" R \" << endl ;",
        "int b = abs ( b ) ;",
        "s1 [ 0 ] = s1 [ 0 ] + ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        22,
        7
      ],
      "mod_code": [
        "cout << \" U \" << endl ;",
        "int b = abs ( b ) ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        22,
        7,
        20
      ],
      "mod_code": [
        "cout << \" U \" << endl ;",
        "int b = abs ( b ) ;",
        "s1 [ 1 ] = s1 [ 1 ] - ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        22,
        7,
        20,
        16
      ],
      "mod_code": [
        "cout << \" U \" << endl ;",
        "int b = abs ( b ) ;",
        "s1 [ 1 ] = s1 [ 1 ] - ' 1 ' ;",
        "s1 [ 0 ] = s1 [ 0 ] + ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        22,
        7,
        16
      ],
      "mod_code": [
        "cout << \" U \" << endl ;",
        "int b = abs ( b ) ;",
        "s1 [ 0 ] = s1 [ 0 ] + ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        7,
        20
      ],
      "mod_code": [
        "int b = abs ( b ) ;",
        "s1 [ 1 ] = s1 [ 1 ] - ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        7,
        20,
        16
      ],
      "mod_code": [
        "int b = abs ( b ) ;",
        "s1 [ 1 ] = s1 [ 1 ] - ' 1 ' ;",
        "s1 [ 0 ] = s1 [ 0 ] + ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "int b = abs ( b ) ;",
        "s1 [ 0 ] = s1 [ 0 ] + ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int b’"
    }
  ]
}