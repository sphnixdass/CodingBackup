{
  "meta": {
    "index": 866,
    "hitid": "338GLSUI435W9IYG3OHH45GPLA0FSC",
    "workerid": "A1APYLD4DUK33J",
    "probid": "820A",
    "subid": "44163916"
  },
  "lines": [
    {
      "line": 0,
      "text": "create long longs c , v0 , v1 , a , l",
      "code": "long long c , v0 , v1 , a , l ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare input with no arguments , returning void",
      "code": "void input ( )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read c read v0 read v1 read a read l",
      "code": "cin >> c >> v0 >> v1 >> a >> l ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "run input",
      "code": "input ( ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create long long speed with speed = v0",
      "code": "long long speed = v0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create long long cur with cur = 0",
      "code": "long long cur = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create long long ans with ans = 0",
      "code": "long long ans = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "while cur is less than c",
      "code": "while ( cur < c )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if cur is true , decrement cur by l",
      "code": "if ( cur ) cur -= l ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increment cur by speed",
      "code": "cur += speed ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set speed to minimum of speed + a and v1",
      "code": "speed = min ( speed + a , v1 ) ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print ans print \" \\ n \"",
      "code": "cout << ans << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void input ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "void input ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        1,
        12
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "void input ( ) ;",
        "speed = min ( speed , a + v1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        1,
        12,
        11
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "void input ( ) ;",
        "speed = min ( speed , a + v1 ) ;",
        "cur += 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        1,
        12,
        9
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "void input ( ) ;",
        "speed = min ( speed , a + v1 ) ;",
        "while ( cur <= c )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        1,
        11
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "void input ( ) ;",
        "cur += 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        1,
        11,
        9
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "void input ( ) ;",
        "cur += 2 ;",
        "while ( cur <= c )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        1,
        9
      ],
      "mod_code": [
        "cin >> c >> v0 >> v1 >> l >> l ;",
        "void input ( ) ;",
        "while ( cur <= c )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "void input ( ) ;",
        "speed = min ( speed , a + v1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        11
      ],
      "mod_code": [
        "void input ( ) ;",
        "speed = min ( speed , a + v1 ) ;",
        "cur += 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        11,
        9
      ],
      "mod_code": [
        "void input ( ) ;",
        "speed = min ( speed , a + v1 ) ;",
        "cur += 2 ;",
        "while ( cur <= c )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        12,
        9
      ],
      "mod_code": [
        "void input ( ) ;",
        "speed = min ( speed , a + v1 ) ;",
        "while ( cur <= c )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "void input ( ) ;",
        "cur += 2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        9
      ],
      "mod_code": [
        "void input ( ) ;",
        "cur += 2 ;",
        "while ( cur <= c )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "void input ( ) ;",
        "while ( cur <= c )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}