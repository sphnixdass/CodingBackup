{
  "meta": {
    "index": 578,
    "hitid": "3UQVX1UPFSBC7F2S6RJQAGGHHEF02T",
    "workerid": "A1AYVATMT88U1W",
    "probid": "281A",
    "subid": "48093281"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let str be a string",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if ( ( ( int ) str [ 0 ] is less than or equal to ( int ) ' z ' ) and ( ( int ) str [ 0 ] is greater than or equal to a ) ) , the 0th element of array str is equal to ( char ) ( ( int ) str [ 0 ] - 32 )",
      "code": "if ( ( ( int ) str [ 0 ] <= ( int ) ' z ' ) && ( ( int ) str [ 0 ] >= ' a ' ) ) str [ 0 ] = ( char ) ( ( int ) str [ 0 ] - 32 ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print str and newline",
      "code": "cout << str << endl ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "if ( ( int ) str [ 0 ] <= ( int ) str [ 0 ] <= ' z ' ) and ( ( int ) str [ 0 ] >= a [ 0 ] - 32 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char str ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "if ( ( int ) str [ 0 ] <= ( int ) ' z ' ) && ( ( int ) str [ 0 ] >= a ) && ( ( int ) str [ 0 ] >= a [ 0 ] - 32 ) )"
      ],
      "err_line": 3,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "if ( ( int ) str [ 0 ] <= ( int ) str [ 0 ] <= ' z ' ) and ( ( int ) str [ 0 ] >= a [ 0 ] - 32 ) ;",
        "char str ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        1,
        2
      ],
      "mod_code": [
        "if ( ( int ) str [ 0 ] <= ( int ) str [ 0 ] <= ' z ' ) and ( ( int ) str [ 0 ] >= a [ 0 ] - 32 ) ;",
        "char str ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "if ( ( int ) str [ 0 ] <= ( int ) str [ 0 ] <= ' z ' ) and ( ( int ) str [ 0 ] >= a [ 0 ] - 32 ) ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "char str ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2,
        3
      ],
      "mod_code": [
        "char str ;",
        "gets ( str ) ;",
        "if ( ( int ) str [ 0 ] <= ( int ) ' z ' ) && ( ( int ) str [ 0 ] >= a ) && ( ( int ) str [ 0 ] >= a [ 0 ] - 32 ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "char str ;",
        "if ( ( int ) str [ 0 ] <= ( int ) ' z ' ) && ( ( int ) str [ 0 ] >= a ) && ( ( int ) str [ 0 ] >= a [ 0 ] - 32 ) )"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "gets ( str ) ;",
        "if ( ( int ) str [ 0 ] <= ( int ) ' z ' ) && ( ( int ) str [ 0 ] >= a ) && ( ( int ) str [ 0 ] >= a [ 0 ] - 32 ) )"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    }
  ]
}