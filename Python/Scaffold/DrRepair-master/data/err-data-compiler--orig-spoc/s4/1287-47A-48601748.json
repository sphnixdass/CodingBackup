{
  "meta": {
    "index": 1287,
    "hitid": "3ZZAYRN1I6LRUVOORR5X14LPFFQOTN",
    "workerid": "A1APYLD4DUK33J",
    "probid": "47A",
    "subid": "48601748"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer y",
      "code": "int y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create doubles n , x",
      "code": "double n , x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set x to 8 * n + 1",
      "code": "x = 8 * n + 1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set x to square root of x",
      "code": "x = sqrt ( x ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "decrement x",
      "code": "x -- ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set x to x / 2",
      "code": "x /= 2 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set y to integer casted x",
      "code": "y = ( int ) x ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if x is y",
      "code": "if ( x == y )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" YES \" print newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "const double n , x ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin read n ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "x = x . top ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘top’ in ‘x’, which is of non-class type ‘double’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "const double n , x ;",
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const double n’"
    },
    {
      "mod_line": [
        2,
        1,
        11
      ],
      "mod_code": [
        "const double n , x ;",
        "int n ;",
        "else else"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const double n’"
    },
    {
      "mod_line": [
        2,
        1,
        11,
        4
      ],
      "mod_code": [
        "const double n , x ;",
        "int n ;",
        "else else",
        "x = 8 * ( n + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const double n’"
    },
    {
      "mod_line": [
        2,
        1,
        11,
        5
      ],
      "mod_code": [
        "const double n , x ;",
        "int n ;",
        "else else",
        "x = x . top ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const double n’"
    },
    {
      "mod_line": [
        2,
        1,
        11,
        9
      ],
      "mod_code": [
        "const double n , x ;",
        "int n ;",
        "else else",
        "if ( x == ' y ' )"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const double n’"
    },
    {
      "mod_line": [
        2,
        1,
        4
      ],
      "mod_code": [
        "const double n , x ;",
        "int n ;",
        "x = 8 * ( n + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const double n’"
    },
    {
      "mod_line": [
        2,
        1,
        4,
        5
      ],
      "mod_code": [
        "const double n , x ;",
        "int n ;",
        "x = 8 * ( n + 1 ) ;",
        "x = x . top ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const double n’"
    },
    {
      "mod_line": [
        2,
        1,
        4,
        9
      ],
      "mod_code": [
        "const double n , x ;",
        "int n ;",
        "x = 8 * ( n + 1 ) ;",
        "if ( x == ' y ' )"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const double n’"
    },
    {
      "mod_line": [
        2,
        1,
        5
      ],
      "mod_code": [
        "const double n , x ;",
        "int n ;",
        "x = x . top ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const double n’"
    },
    {
      "mod_line": [
        2,
        1,
        5,
        9
      ],
      "mod_code": [
        "const double n , x ;",
        "int n ;",
        "x = x . top ( ) ;",
        "if ( x == ' y ' )"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const double n’"
    },
    {
      "mod_line": [
        2,
        1,
        9
      ],
      "mod_code": [
        "const double n , x ;",
        "int n ;",
        "if ( x == ' y ' )"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const double n’"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "const double n , x ;",
        "else else"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        11,
        4
      ],
      "mod_code": [
        "const double n , x ;",
        "else else",
        "x = 8 * ( n + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        11,
        4,
        5
      ],
      "mod_code": [
        "const double n , x ;",
        "else else",
        "x = 8 * ( n + 1 ) ;",
        "x = x . top ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        11,
        4,
        9
      ],
      "mod_code": [
        "const double n , x ;",
        "else else",
        "x = 8 * ( n + 1 ) ;",
        "if ( x == ' y ' )"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        11,
        5
      ],
      "mod_code": [
        "const double n , x ;",
        "else else",
        "x = x . top ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        11,
        5,
        9
      ],
      "mod_code": [
        "const double n , x ;",
        "else else",
        "x = x . top ( ) ;",
        "if ( x == ' y ' )"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        11,
        9
      ],
      "mod_code": [
        "const double n , x ;",
        "else else",
        "if ( x == ' y ' )"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "const double n , x ;",
        "x = 8 * ( n + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        5
      ],
      "mod_code": [
        "const double n , x ;",
        "x = 8 * ( n + 1 ) ;",
        "x = x . top ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        5,
        9
      ],
      "mod_code": [
        "const double n , x ;",
        "x = 8 * ( n + 1 ) ;",
        "x = x . top ( ) ;",
        "if ( x == ' y ' )"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        9
      ],
      "mod_code": [
        "const double n , x ;",
        "x = 8 * ( n + 1 ) ;",
        "if ( x == ' y ' )"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "const double n , x ;",
        "x = x . top ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        9
      ],
      "mod_code": [
        "const double n , x ;",
        "x = x . top ( ) ;",
        "if ( x == ' y ' )"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "const double n , x ;",
        "if ( x == ' y ' )"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int n ;",
        "else else"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        11,
        4
      ],
      "mod_code": [
        "int n ;",
        "else else",
        "x = 8 * ( n + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        11,
        4,
        5
      ],
      "mod_code": [
        "int n ;",
        "else else",
        "x = 8 * ( n + 1 ) ;",
        "x = x . top ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        11,
        4,
        9
      ],
      "mod_code": [
        "int n ;",
        "else else",
        "x = 8 * ( n + 1 ) ;",
        "if ( x == ' y ' )"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        11,
        5
      ],
      "mod_code": [
        "int n ;",
        "else else",
        "x = x . top ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        11,
        5,
        9
      ],
      "mod_code": [
        "int n ;",
        "else else",
        "x = x . top ( ) ;",
        "if ( x == ' y ' )"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        11,
        9
      ],
      "mod_code": [
        "int n ;",
        "else else",
        "if ( x == ' y ' )"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n ;",
        "x = 8 * ( n + 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        4,
        5
      ],
      "mod_code": [
        "int n ;",
        "x = 8 * ( n + 1 ) ;",
        "x = x . top ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        9
      ],
      "mod_code": [
        "int n ;",
        "x = 8 * ( n + 1 ) ;",
        "x = x . top ( ) ;",
        "if ( x == ' y ' )"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        4,
        9
      ],
      "mod_code": [
        "int n ;",
        "x = 8 * ( n + 1 ) ;",
        "if ( x == ' y ' )"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n ;",
        "x = x . top ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        5,
        9
      ],
      "mod_code": [
        "int n ;",
        "x = x . top ( ) ;",
        "if ( x == ' y ' )"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int n ;",
        "if ( x == ' y ' )"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "else else",
        "x = 8 * ( n + 1 ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        4,
        5
      ],
      "mod_code": [
        "else else",
        "x = 8 * ( n + 1 ) ;",
        "x = x . top ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘top’ in ‘x’, which is of non-class type ‘double’"
    },
    {
      "mod_line": [
        11,
        4,
        5,
        9
      ],
      "mod_code": [
        "else else",
        "x = 8 * ( n + 1 ) ;",
        "x = x . top ( ) ;",
        "if ( x == ' y ' )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘top’ in ‘x’, which is of non-class type ‘double’"
    },
    {
      "mod_line": [
        11,
        4,
        9
      ],
      "mod_code": [
        "else else",
        "x = 8 * ( n + 1 ) ;",
        "if ( x == ' y ' )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "else else",
        "x = x . top ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘top’ in ‘x’, which is of non-class type ‘double’"
    },
    {
      "mod_line": [
        11,
        5,
        9
      ],
      "mod_code": [
        "else else",
        "x = x . top ( ) ;",
        "if ( x == ' y ' )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘top’ in ‘x’, which is of non-class type ‘double’"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "else else",
        "if ( x == ' y ' )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "x = 8 * ( n + 1 ) ;",
        "x = x . top ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘top’ in ‘x’, which is of non-class type ‘double’"
    },
    {
      "mod_line": [
        4,
        5,
        9
      ],
      "mod_code": [
        "x = 8 * ( n + 1 ) ;",
        "x = x . top ( ) ;",
        "if ( x == ' y ' )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘top’ in ‘x’, which is of non-class type ‘double’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "x = x . top ( ) ;",
        "if ( x == ' y ' )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘top’ in ‘x’, which is of non-class type ‘double’"
    }
  ]
}