{
  "meta": {
    "index": 2239,
    "hitid": "36U4VBVNQO79RLVTJOCB0VCWAIRRU5",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "336A",
    "subid": "46844040"
  },
  "lines": [
    {
      "line": 0,
      "text": "mod = constant long long = 1e9 + 7",
      "code": "const long long mod = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "N = constant integer = 1e6 + 5",
      "code": "const int N = 1e6 + 5 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "in function gcd with arguments of long long a and long b and returns a long long",
      "code": "long long gcd ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "return either the result of calling gcd with arguments of b and a modulo b if b is true else return b",
      "code": "return b ? gcd ( b , a % b ) : a ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "in function pwr with arguments long long x and long long y and returns a long long",
      "code": "long long pwr ( long long x , long long y ) ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "in function isprime with arguments of long long x and returns a boolean",
      "code": "bool isprime ( long long x ) ;",
      "indent": 0
    },
    {
      "line": 7,
      "text": "a , b are long long arrays with size N",
      "code": "long long a [ N ] , b [ N ] ;",
      "indent": 0
    },
    {
      "line": 8,
      "text": "v , vv are long long vectors with size N",
      "code": "vector < long long > v [ N ] , vv [ N ] ;",
      "indent": 0
    },
    {
      "line": 9,
      "text": "itr = interator of a long long vector",
      "code": "vector < long long > :: iterator itr ;",
      "indent": 0
    },
    {
      "line": 10,
      "text": "x = boolean of size 6 and width 6",
      "code": "bool x [ 6 ] [ 6 ] ;",
      "indent": 0
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 12,
      "text": "n , ans , y , x = long long , sum = integer = 0",
      "code": "long long n , ans , y , x , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "s1 , s2 = string",
      "code": "string s1 , s2 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "read x , y",
      "code": "cin >> x >> y ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "ans = absolute value of x + absolute value of y",
      "code": "ans = ( abs ( x ) + abs ( y ) ) ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if x > 0 and y > 0",
      "code": "if ( x > 0 && y > 0 )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print 0 ans ans 0",
      "code": "cout << 0 << ' ' << ans << ' ' << ans << ' ' << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "else if x > 0 and y < 0",
      "code": "else if ( x > 0 && y < 0 )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print 0 ( - 1 * ans ) ans 0",
      "code": "cout << 0 << ' ' << ( - 1 * ans ) << ' ' << ans << ' ' << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else if x < 0 and y > 0",
      "code": "else if ( x < 0 && y > 0 )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print ( - 1 * ans ) 0 0 ans",
      "code": "cout << ( - 1 * ans ) << ' ' << 0 << ' ' << 0 << ' ' << ans << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 23,
      "text": "ans = ans * - 1",
      "code": "ans *= - 1 ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "print ans 0 0 ans",
      "code": "cout << ans << ' ' << 0 << ' ' << 0 << ' ' << ans << endl ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 28,
      "text": "in function pwr with arguments of long long x and long long y and returns a long long",
      "code": "long long pwr ( long long x , long long y )",
      "indent": 0
    },
    {
      "line": 29,
      "text": "ans = long long = 1",
      "code": "long long ans = 1 ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "x = x modulo mod",
      "code": "x = x % mod ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "while y > 0",
      "code": "while ( y > 0 )",
      "indent": 1
    },
    {
      "line": 32,
      "text": "if the last bit of y in binary is 1 then ans = ( x * ans ) modulo mod",
      "code": "if ( y & 1 ) ans = ( x * ans ) % mod ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "( x * x ) modulo mod",
      "code": "x = ( x * x ) % mod ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "y = y / 2",
      "code": "y = y / 2 ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 36,
      "text": "return ans",
      "code": "return ans ;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 38,
      "text": "in function isprime with argument long long x and returns a boolean",
      "code": "bool isprime ( long long x )",
      "indent": 0
    },
    {
      "line": 39,
      "text": "if x < 2 , then return false",
      "code": "if ( x < 2 ) return false ;",
      "indent": 1
    },
    {
      "line": 40,
      "text": "if x < 4 , then return true",
      "code": "if ( x < 4 ) return true ;",
      "indent": 1
    },
    {
      "line": 41,
      "text": "if x is even or x modulo 3 is 0 then retrun false",
      "code": "if ( x % 2 == 0 || x % 3 == 0 ) return false ;",
      "indent": 1
    },
    {
      "line": 42,
      "text": "for i = 5 where i is squared to x inclusive and after the loop is run increase the value of i by 6",
      "code": "for ( long long i = 5 ; i * i <= x ; i += 6 )",
      "indent": 1
    },
    {
      "line": 43,
      "text": "if x modulo i is 0 or x modulo ( i + 2 ) is 0 , then return false",
      "code": "if ( x % i == 0 || x % ( i + 2 ) == 0 ) return false ;",
      "indent": 2
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 45,
      "text": "return true",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "bool isprime ( long long x )"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "return gcd ( b , a % b ? gcd ( b , b ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "vector < long long > itr [ a ] ;"
      ],
      "err_line": 9,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "cout << 0 ( - 1 * ans ) << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expression cannot be used as a function"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        38
      ],
      "mod_code": [
        "bool isprime ( long long x ) ;"
      ],
      "err_line": 39,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "if ( x % 2 == 0 || x % 3 == 0 ) { retrun = false ; }"
      ],
      "err_line": 41,
      "err_msg": "‘retrun’ was not declared in this scope"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "for ( i = 5 ; i * i <= x ; i += 6 )"
      ],
      "err_line": 42,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        10
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        12
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        15
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        17
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        19
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        12
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        15
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        17
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        19
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        12,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        15
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        15,
        17
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        15,
        19
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        15,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        15,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        15,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        17
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        17,
        19
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        17,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        17,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        17,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        19
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        19,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        19,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        19,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        21,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        21,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        24,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        9,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "vector < long long > itr ( a ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        12
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        12,
        15
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        12,
        17
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        12,
        19
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        12,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        12,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        12,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        15
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        15,
        17
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        15,
        19
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        15,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        15,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        15,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        17
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        17,
        19
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        17,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        17,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        17,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        19
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        19,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        19,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        19,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        21,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        21,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        24,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        10,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool x [ 6 ] , x ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        15
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        15,
        17
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        15,
        19
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        15,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        15,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        15,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        17
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        17,
        19
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        17,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        17,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        17,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        19
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        19,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        19,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        19,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        21,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        21,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        24,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        12,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "ans = abs ( x + abs ( y ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        15,
        17
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        15,
        17,
        19
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        15,
        17,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        15,
        17,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        15,
        17,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        15,
        19
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        15,
        19,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        15,
        19,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        15,
        19,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        15,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        15,
        21,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        15,
        21,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        15,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        15,
        24,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        15,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "ans = abs ( x + abs ( y ) ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        17,
        19
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        17,
        19,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        17,
        19,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        17,
        19,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        17,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        17,
        21,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        17,
        21,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        17,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        17,
        24,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        17,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << 0 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        19
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        19,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        19,
        21,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        19,
        21,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        19,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        19,
        24,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        19,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        21
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        21,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        21,
        24,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        21,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        24
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        24,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        6,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘long’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        12
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        15
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        17
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        19
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        21
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        15
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        17
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        19
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        21
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        17
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        17,
        19
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        17,
        21
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        17,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        17,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        19
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        19,
        21
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        19,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        19,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        21
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        21,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        21,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        24,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        10,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "bool x [ 6 ] , x ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        15
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        15,
        17
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        15,
        19
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        15,
        21
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        15,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        15,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        17
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        17,
        19
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        17,
        21
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        17,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        17,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        19
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        19,
        21
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        19,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        19,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        21
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        21,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        21,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        24,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        12,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        15,
        17
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        15,
        17,
        19
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        15,
        17,
        21
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        15,
        17,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        15,
        17,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        15,
        19
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        15,
        19,
        21
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        15,
        19,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        15,
        19,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        15,
        21
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        15,
        21,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        15,
        21,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        15,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        15,
        24,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        15,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        17,
        19
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        17,
        19,
        21
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        17,
        19,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        17,
        19,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        17,
        21
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        17,
        21,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        17,
        21,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        17,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        17,
        24,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        17,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        19
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        19,
        21
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        19,
        21,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        19,
        21,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        19,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        19,
        24,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        19,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        21
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        21,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        21,
        24,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        21,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        24
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        24,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        9,
        28
      ],
      "mod_code": [
        "vector < long long > itr ( a ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::vector(long long int [1000005])’"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        15
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        15,
        17
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        15,
        19
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        15,
        21
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        15,
        24
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        15,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        17
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        17,
        19
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        17,
        21
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        17,
        24
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        17,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        19
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        19,
        21
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        19,
        24
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        19,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        21
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        21,
        24
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        21,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        24
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        24,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        12,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        15
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        15,
        17
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        15,
        17,
        19
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        15,
        17,
        21
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        15,
        17,
        24
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        15,
        17,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        15,
        19
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        15,
        19,
        21
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        15,
        19,
        24
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        15,
        19,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        15,
        21
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        15,
        21,
        24
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        15,
        21,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        15,
        24
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        15,
        24,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        15,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        17
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        17,
        19
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        17,
        19,
        21
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        17,
        19,
        24
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        17,
        19,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        17,
        21
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        17,
        21,
        24
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        17,
        21,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        17,
        24
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        17,
        24,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        17,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        19,
        21
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        19,
        21,
        24
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        19,
        21,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        19,
        24
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        19,
        24,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        19,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        21
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        21,
        24
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        21,
        24,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        21,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        24
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        24,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        10,
        28
      ],
      "mod_code": [
        "bool x [ 6 ] , x ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘bool x’"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        15,
        17
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        15,
        17,
        19
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        15,
        17,
        21
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        15,
        17,
        24
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        15,
        17,
        28
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        15,
        19
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        15,
        19,
        21
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        15,
        19,
        24
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        15,
        19,
        28
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        15,
        21
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        15,
        21,
        24
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        15,
        21,
        28
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        15,
        24
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        15,
        24,
        28
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        15,
        28
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "ans = abs ( x + abs ( y ) ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        17,
        19
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        17,
        19,
        21
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        17,
        19,
        24
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        17,
        19,
        28
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        17,
        21
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        17,
        21,
        24
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        17,
        21,
        28
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        17,
        24
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        17,
        24,
        28
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        17,
        28
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        19
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        19,
        21
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        19,
        21,
        24
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        19,
        21,
        28
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        19,
        24
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        19,
        24,
        28
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        19,
        28
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        21
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ( - 1 * ans ) << 0 << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        21,
        24
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        21,
        24,
        28
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        21,
        28
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        24
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ans << \" \" << ans << endl ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        24,
        28
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        12,
        28
      ],
      "mod_code": [
        "long long n , ans , y , sum = 0 , sum = 0 ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘long long int sum’"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        28
      ],
      "mod_code": [
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        17,
        21,
        28
      ],
      "mod_code": [
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        17,
        24,
        28
      ],
      "mod_code": [
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        17,
        28
      ],
      "mod_code": [
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        19,
        21,
        28
      ],
      "mod_code": [
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        19,
        24,
        28
      ],
      "mod_code": [
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        19,
        28
      ],
      "mod_code": [
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        21,
        24,
        28
      ],
      "mod_code": [
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        21,
        28
      ],
      "mod_code": [
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        24,
        28
      ],
      "mod_code": [
        "ans = abs ( x + abs ( y ) ) ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        28
      ],
      "mod_code": [
        "ans = abs ( x + abs ( y ) ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        19,
        21,
        28
      ],
      "mod_code": [
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        19,
        24,
        28
      ],
      "mod_code": [
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        19,
        28
      ],
      "mod_code": [
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        21,
        24,
        28
      ],
      "mod_code": [
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        21,
        28
      ],
      "mod_code": [
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        24,
        28
      ],
      "mod_code": [
        "cout << 0 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        28
      ],
      "mod_code": [
        "cout << 0 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        21,
        24,
        28
      ],
      "mod_code": [
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        21,
        28
      ],
      "mod_code": [
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        24,
        28
      ],
      "mod_code": [
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        28
      ],
      "mod_code": [
        "cout << 0 * 1 << \" \" << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        24,
        28
      ],
      "mod_code": [
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        28
      ],
      "mod_code": [
        "cout << ( - 1 * ans ) << 0 << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        24,
        28
      ],
      "mod_code": [
        "cout << ans << \" \" << ans << endl ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}