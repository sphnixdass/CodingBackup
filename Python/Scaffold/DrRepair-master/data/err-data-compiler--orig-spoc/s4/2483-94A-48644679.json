{
  "meta": {
    "index": 2483,
    "hitid": "311HQEI8RSAGV15OGXDDC60BBOJ7ZI",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "94A",
    "subid": "48644679"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string , digit = string array of size 10",
      "code": "string s , digit [ 10 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to size of digit / digit [ 0 ] exclusive , then read digit [ i ]",
      "code": "for ( size_t i = 0 ; i < sizeof ( digit ) / sizeof ( digit [ 0 ] ) ; ++ i ) { cin >> digit [ i ] ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to 8 exclusive",
      "code": "for ( size_t i = 0 ; i < 8 ; ++ i )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "x = string = steal the elements of s from s [ i * 10 ] to s [ ( i * 10 ) + 10 ]",
      "code": "string x = s . substr ( i * 10 , 10 ) ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for j = 0 to 10 exclusive",
      "code": "for ( size_t j = 0 ; j < 10 ; ++ j )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if x is digit [ j ]",
      "code": "if ( x == digit [ j ] )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "print j",
      "code": "cout << j ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "exit for loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print endline",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s , digit , digit ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘digit’, which is of non-class type ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) { cin >> digit [ i ] ; }"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘digit’, which is of non-class type ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "string x [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( ! digit [ j ] )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator!’ (operand type is ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( ; ; )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        8
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "cout << j << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        6
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        4
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        3,
        8
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "cout << j << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        3,
        8,
        6
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "cout << j << endl ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        3,
        8,
        4
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "cout << j << endl ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        3,
        6
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        3,
        6,
        4
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "for ( j = 0 ; j < 10 ; j ++ )",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        5,
        8
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "cout << j << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        5,
        8,
        6
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "cout << j << endl ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        5,
        8,
        4
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "cout << j << endl ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        5,
        6
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        5,
        6,
        4
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "for ( j = 0 ; j < 10 ; j ++ )",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        5,
        4
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "cout << j << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        8,
        6
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "cout << j << endl ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        8,
        6,
        4
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "cout << j << endl ;",
        "for ( j = 0 ; j < 10 ; j ++ )",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        8,
        4
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "cout << j << endl ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        6,
        4
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "for ( j = 0 ; j < 10 ; j ++ )",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "string s , digit , digit ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘std::__cxx11::string digit’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘digit’, which is of non-class type ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’"
    },
    {
      "mod_line": [
        3,
        5,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "cout << j << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘digit’, which is of non-class type ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’"
    },
    {
      "mod_line": [
        3,
        5,
        8,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "cout << j << endl ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘digit’, which is of non-class type ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’"
    },
    {
      "mod_line": [
        3,
        5,
        8,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "cout << j << endl ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘digit’, which is of non-class type ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘digit’, which is of non-class type ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "for ( j = 0 ; j < 10 ; j ++ )",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘digit’, which is of non-class type ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’"
    },
    {
      "mod_line": [
        3,
        5,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘digit’, which is of non-class type ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "cout << j << endl ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘digit’, which is of non-class type ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’"
    },
    {
      "mod_line": [
        3,
        8,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "cout << j << endl ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘digit’, which is of non-class type ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’"
    },
    {
      "mod_line": [
        3,
        8,
        6,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "cout << j << endl ;",
        "for ( j = 0 ; j < 10 ; j ++ )",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘digit’, which is of non-class type ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’"
    },
    {
      "mod_line": [
        3,
        8,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "cout << j << endl ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘digit’, which is of non-class type ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘digit’, which is of non-class type ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’"
    },
    {
      "mod_line": [
        3,
        6,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "for ( j = 0 ; j < 10 ; j ++ )",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘digit’, which is of non-class type ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < digit . size ( ) ; i ++ ) cin >> digit [ i ] ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘digit’, which is of non-class type ‘std::__cxx11::string [10] {aka std::__cxx11::basic_string<char> [10]}’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "cout << j << endl ;"
      ],
      "err_line": 5,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        5,
        8,
        6
      ],
      "mod_code": [
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "cout << j << endl ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        5,
        8,
        6,
        4
      ],
      "mod_code": [
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "cout << j << endl ;",
        "for ( j = 0 ; j < 10 ; j ++ )",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        8,
        4
      ],
      "mod_code": [
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "cout << j << endl ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        5,
        6,
        4
      ],
      "mod_code": [
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "for ( j = 0 ; j < 10 ; j ++ )",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "string x = s [ i * 10 ] = s [ i * 10 ] = s [ ( i * 10 ) + 10 ] ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "cout << j << endl ;",
        "for ( j = 0 ; j < 10 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        4
      ],
      "mod_code": [
        "cout << j << endl ;",
        "for ( j = 0 ; j < 10 ; j ++ )",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "cout << j << endl ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < 10 ; j ++ )",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}