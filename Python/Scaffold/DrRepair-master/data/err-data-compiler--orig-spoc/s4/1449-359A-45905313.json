{
  "meta": {
    "index": 1449,
    "hitid": "3C8QQOM6JPVTFW5GKNQ1VGFMAVIIL1",
    "workerid": "A1APYLD4DUK33J",
    "probid": "359A",
    "subid": "45905313"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare maxx with long long integer addresses a , b , returning long long integer",
      "code": "long long int maxx ( long long int & a , long long int & b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return a if a is greater than b , else b",
      "code": "return a > b ? a : b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare minn with long long integer addresses a , b , returning long long integer",
      "code": "long long int minn ( long long int & a , long long int & b )",
      "indent": 0
    },
    {
      "line": 4,
      "text": "return b if a is greater than b , else a",
      "code": "return a > b ? b : a ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "declare boostIO with no arguments , returning void",
      "code": "void boostIO ( ) { }",
      "indent": 0
    },
    {
      "line": 7,
      "text": "declare gcd with long long integers a , b , returning long long integer",
      "code": "long long int gcd ( long long int a , long long int b )",
      "indent": 0
    },
    {
      "line": 8,
      "text": "return a if b is 0 , else result of run gcd ( b , a % b )",
      "code": "return b == 0 ? a : gcd ( b , a % b ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "declare int_gcd with integers a , b as arguments , returning integer",
      "code": "int int_gcd ( int a , int b )",
      "indent": 0
    },
    {
      "line": 11,
      "text": "return a if b is 0 , else result of run int_gcd ( b , a % b )",
      "code": "return b == 0 ? a : int_gcd ( b , a % b ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 13,
      "text": "declare lcm with long long integers a , b as arguments , returning long long integer",
      "code": "long long int lcm ( long long int a , long long int b )",
      "indent": 0
    },
    {
      "line": 14,
      "text": "return a / result of run gcd with a , b as arguments * b",
      "code": "return a / gcd ( a , b ) * b ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 16,
      "text": "declare poww with long long integers base , exp , mod as arguments , returning long long integer",
      "code": "long long int poww ( long long int base , long long int exp , long long int mod )",
      "indent": 0
    },
    {
      "line": 17,
      "text": "let base be base % mod",
      "code": "base %= mod ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "declare long long integer result = 1",
      "code": "long long int result = 1 ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "while exp is greater than 0",
      "code": "while ( exp > 0 )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if exp bitwise and 1 , let result be ( result * base ) % mod",
      "code": "if ( exp & 1 ) result = ( result * base ) % mod ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "let base be ( base * base ) % mod",
      "code": "base = ( base * base ) % mod ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "let exp be exp bitshift right 1",
      "code": "exp >>= 1 ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "return result from function",
      "code": "return result ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 27,
      "text": "declare n , m as integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "declare ans = 4 as integers",
      "code": "int ans = 4 ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 31,
      "text": "for j = 1 to m inclusive",
      "code": "for ( int j = 1 ; j <= m ; j ++ )",
      "indent": 2
    },
    {
      "line": 32,
      "text": "declare integer x",
      "code": "int x ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "if x is 1 and ( j is 1 or j is m or i is 1 or i is n ) , let ans be 2",
      "code": "if ( x == 1 && ( j == 1 || j == m || i == 1 || i == n ) ) { ans = 2 ; }",
      "indent": 3
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 37,
      "text": "print ans , newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )"
      ],
      "err_line": 19,
      "err_msg": "invalid operands of types ‘<unresolved overloaded function type>’ and ‘int’ to binary ‘operator>’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "return b == 0 ? a % gcd ( b , a % b ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int int_gcd ( int a , int b ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "return b == 0 ? a % int_gcd ( b , a % b ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "return ;"
      ],
      "err_line": 24,
      "err_msg": "return-statement with no value, in function returning ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 30,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 31,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        11
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "return b == 0 ? a % int_gcd ( b , a % b ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        16,
        11,
        33
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "cin >> n ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        16,
        11,
        33,
        29
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "cin >> n ;",
        "int ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        16,
        11,
        33,
        8
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "cin >> n ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        16,
        11,
        33,
        31
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "cin >> n ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        16,
        11,
        29
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "int ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        16,
        11,
        29,
        8
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "int ans = 1 ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        16,
        11,
        29,
        31
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "int ans = 1 ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        16,
        11,
        8
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        16,
        11,
        8,
        31
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        16,
        11,
        31
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        16,
        33
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "cin >> n ;"
      ],
      "err_line": 19,
      "err_msg": "invalid operands of types ‘<unresolved overloaded function type>’ and ‘int’ to binary ‘operator>’"
    },
    {
      "mod_line": [
        16,
        33,
        29
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "cin >> n ;",
        "int ans = 1 ;"
      ],
      "err_line": 19,
      "err_msg": "invalid operands of types ‘<unresolved overloaded function type>’ and ‘int’ to binary ‘operator>’"
    },
    {
      "mod_line": [
        16,
        33,
        29,
        8
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "cin >> n ;",
        "int ans = 1 ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        16,
        33,
        29,
        31
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "cin >> n ;",
        "int ans = 1 ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 19,
      "err_msg": "invalid operands of types ‘<unresolved overloaded function type>’ and ‘int’ to binary ‘operator>’"
    },
    {
      "mod_line": [
        16,
        33,
        8
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "cin >> n ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        16,
        33,
        8,
        31
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "cin >> n ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        16,
        33,
        31
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "cin >> n ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 19,
      "err_msg": "invalid operands of types ‘<unresolved overloaded function type>’ and ‘int’ to binary ‘operator>’"
    },
    {
      "mod_line": [
        16,
        29
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "int ans = 1 ;"
      ],
      "err_line": 19,
      "err_msg": "invalid operands of types ‘<unresolved overloaded function type>’ and ‘int’ to binary ‘operator>’"
    },
    {
      "mod_line": [
        16,
        29,
        8
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "int ans = 1 ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        16,
        29,
        8,
        31
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "int ans = 1 ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        16,
        29,
        31
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "int ans = 1 ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 19,
      "err_msg": "invalid operands of types ‘<unresolved overloaded function type>’ and ‘int’ to binary ‘operator>’"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "return b == 0 ? a % gcd ( b , a % b ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        16,
        8,
        31
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "return b == 0 ? a % gcd ( b , a % b ) ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        16,
        31
      ],
      "mod_code": [
        "long long int poww ( long long int base , long long int mod )",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 19,
      "err_msg": "invalid operands of types ‘<unresolved overloaded function type>’ and ‘int’ to binary ‘operator>’"
    },
    {
      "mod_line": [
        11,
        33
      ],
      "mod_code": [
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "cin >> n ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        33,
        29
      ],
      "mod_code": [
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "cin >> n ;",
        "int ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        33,
        29,
        8
      ],
      "mod_code": [
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "cin >> n ;",
        "int ans = 1 ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        33,
        29,
        31
      ],
      "mod_code": [
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "cin >> n ;",
        "int ans = 1 ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        33,
        8
      ],
      "mod_code": [
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "cin >> n ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        33,
        8,
        31
      ],
      "mod_code": [
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "cin >> n ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        33,
        31
      ],
      "mod_code": [
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "cin >> n ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        29
      ],
      "mod_code": [
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "int ans = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        29,
        8
      ],
      "mod_code": [
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "int ans = 1 ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        29,
        8,
        31
      ],
      "mod_code": [
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "int ans = 1 ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        29,
        31
      ],
      "mod_code": [
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "int ans = 1 ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        8,
        31
      ],
      "mod_code": [
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        31
      ],
      "mod_code": [
        "return b == 0 ? a % int_gcd ( b , a % b ) ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        33,
        29,
        8
      ],
      "mod_code": [
        "cin >> n ;",
        "int ans = 1 ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        33,
        29,
        8,
        31
      ],
      "mod_code": [
        "cin >> n ;",
        "int ans = 1 ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        33,
        29,
        31
      ],
      "mod_code": [
        "cin >> n ;",
        "int ans = 1 ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 31,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        8
      ],
      "mod_code": [
        "cin >> n ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        33,
        8,
        31
      ],
      "mod_code": [
        "cin >> n ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        33,
        31
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 31,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        8
      ],
      "mod_code": [
        "int ans = 1 ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        29,
        8,
        31
      ],
      "mod_code": [
        "int ans = 1 ;",
        "return b == 0 ? a % gcd ( b , a % b ) ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        29,
        31
      ],
      "mod_code": [
        "int ans = 1 ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 31,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        31
      ],
      "mod_code": [
        "return b == 0 ? a % gcd ( b , a % b ) ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘:’ before ‘;’ token"
    }
  ]
}