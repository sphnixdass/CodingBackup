{
  "meta": {
    "index": 725,
    "hitid": "3RBI0I35XEXYPSUWIZ84LIFT0SPY39",
    "workerid": "A1AYVATMT88U1W",
    "probid": "157A",
    "subid": "40900454"
  },
  "lines": [
    {
      "line": 0,
      "text": "let n be a integer",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a = 2d array of integers with 200 rows and 200 columns respectively",
      "code": "int a [ 200 ] [ 200 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let judge be a function that accepts integer elements i , j",
      "code": "int judge ( int i , int j )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let sum1 , sum2 be integers with sum1 = 0 , sum2 = 0",
      "code": "int sum1 = 0 , sum2 = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for k = 0 to n exclusive",
      "code": "for ( int k = 0 ; k < n ; k ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "the value of sum1 is equal to sum1 + a [ i ] [ k ]",
      "code": "sum1 += a [ i ] [ k ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "the value of sum2 is equal to sum2 + a [ k ] [ j ]",
      "code": "sum2 += a [ k ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if sum2 is greater than sum1",
      "code": "if ( sum2 > sum1 )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "return true",
      "code": "return 1 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 14,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "let ans be a integer with ans is equal to 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for j = 0 to n exclusive , read a [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < n ; j ++ ) { cin >> a [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if judge ( i , j ) is equal to 1 , increment ans by 1",
      "code": "if ( judge ( i , j ) == 1 ) { ans ++ ; }",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print ans and newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int sum1 , sum2 = 0 , sum2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 21,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "ans = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 20,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10,
        8
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "else else",
        "if ( sum2 >= sum1 )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10,
        8,
        3
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "else else",
        "if ( sum2 >= sum1 )",
        "int sum1 , sum2 = 0 , sum2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10,
        8,
        19
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "else else",
        "if ( sum2 >= sum1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10,
        8,
        4
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "else else",
        "if ( sum2 >= sum1 )",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10,
        3
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "else else",
        "int sum1 , sum2 = 0 , sum2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10,
        3,
        19
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "else else",
        "int sum1 , sum2 = 0 , sum2 = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10,
        3,
        4
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "else else",
        "int sum1 , sum2 = 0 , sum2 = 0 ;",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10,
        19
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10,
        19,
        4
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10,
        4
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "else else",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "if ( sum2 >= sum1 )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        8,
        3
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "if ( sum2 >= sum1 )",
        "int sum1 , sum2 = 0 , sum2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        8,
        3,
        19
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "if ( sum2 >= sum1 )",
        "int sum1 , sum2 = 0 , sum2 = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        8,
        3,
        4
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "if ( sum2 >= sum1 )",
        "int sum1 , sum2 = 0 , sum2 = 0 ;",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        8,
        19
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "if ( sum2 >= sum1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        8,
        19,
        4
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "if ( sum2 >= sum1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        8,
        4
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "if ( sum2 >= sum1 )",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "int sum1 , sum2 = 0 , sum2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3,
        19
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "int sum1 , sum2 = 0 , sum2 = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3,
        19,
        4
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "int sum1 , sum2 = 0 , sum2 = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3,
        4
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "int sum1 , sum2 = 0 , sum2 = 0 ;",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        19
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        19,
        4
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "int judge ( int i , int j ) ;",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "else else",
        "if ( sum2 >= sum1 )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        8,
        3
      ],
      "mod_code": [
        "else else",
        "if ( sum2 >= sum1 )",
        "int sum1 , sum2 = 0 , sum2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        10,
        8,
        3,
        19
      ],
      "mod_code": [
        "else else",
        "if ( sum2 >= sum1 )",
        "int sum1 , sum2 = 0 , sum2 = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        10,
        8,
        3,
        4
      ],
      "mod_code": [
        "else else",
        "if ( sum2 >= sum1 )",
        "int sum1 , sum2 = 0 , sum2 = 0 ;",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        10,
        8,
        19
      ],
      "mod_code": [
        "else else",
        "if ( sum2 >= sum1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        8,
        19,
        4
      ],
      "mod_code": [
        "else else",
        "if ( sum2 >= sum1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8,
        4
      ],
      "mod_code": [
        "else else",
        "if ( sum2 >= sum1 )",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "else else",
        "int sum1 , sum2 = 0 , sum2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        10,
        3,
        19
      ],
      "mod_code": [
        "else else",
        "int sum1 , sum2 = 0 , sum2 = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        10,
        3,
        19,
        4
      ],
      "mod_code": [
        "else else",
        "int sum1 , sum2 = 0 , sum2 = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        10,
        3,
        4
      ],
      "mod_code": [
        "else else",
        "int sum1 , sum2 = 0 , sum2 = 0 ;",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        19,
        4
      ],
      "mod_code": [
        "else else",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "else else",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "if ( sum2 >= sum1 )",
        "int sum1 , sum2 = 0 , sum2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        8,
        3,
        19
      ],
      "mod_code": [
        "if ( sum2 >= sum1 )",
        "int sum1 , sum2 = 0 , sum2 = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        8,
        3,
        19,
        4
      ],
      "mod_code": [
        "if ( sum2 >= sum1 )",
        "int sum1 , sum2 = 0 , sum2 = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        8,
        3,
        4
      ],
      "mod_code": [
        "if ( sum2 >= sum1 )",
        "int sum1 , sum2 = 0 , sum2 = 0 ;",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "if ( sum2 >= sum1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        19,
        4
      ],
      "mod_code": [
        "if ( sum2 >= sum1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "if ( sum2 >= sum1 )",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19
      ],
      "mod_code": [
        "int sum1 , sum2 = 0 , sum2 = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        3,
        19,
        4
      ],
      "mod_code": [
        "int sum1 , sum2 = 0 , sum2 = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int sum1 , sum2 = 0 , sum2 = 0 ;",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        19,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    }
  ]
}