{
  "meta": {
    "index": 2322,
    "hitid": "3MZ3TAMYTLH4IU0TP7NXHSOLF09IRI",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "891A",
    "subid": "46363031"
  },
  "lines": [
    {
      "line": 0,
      "text": "a = array of 2005 int filled with 0",
      "code": "int a [ 2005 ] = { 0 } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "function gcd ( get two ints , return int )",
      "code": "int gcd ( int a , int b )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "t = 0",
      "code": "int t = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while a ! = 0",
      "code": "while ( a != 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "t = b modulo a",
      "code": "t = b % a ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "b = a",
      "code": "b = a ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "a = t",
      "code": "a = t ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return b",
      "code": "return b ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 11,
      "text": "n , j , b = int , i = 0 , s = 0x3f3f3f3f , c = 0",
      "code": "int n , i = 0 , j , s = 0x3f3f3f3f , c = 0 , b ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "while i < n",
      "code": "while ( i < n )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if a [ i ] is 1 increment c",
      "code": "if ( a [ i ] == 1 ) c ++ ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if c",
      "code": "if ( c )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print n - c",
      "code": "cout << n - c << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "b = a [ i ]",
      "code": "b = a [ i ] ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "for j = i + 1 to n exclusive",
      "code": "for ( j = i + 1 ; j < n ; j ++ )",
      "indent": 3
    },
    {
      "line": 24,
      "text": "b = gcd ( b , a [ j ] ) , if b is 1 s = min ( s , j - 1 )",
      "code": "if ( ( b = gcd ( b , a [ j ] ) ) == 1 ) { s = min ( s , j - i ) ; }",
      "indent": 4
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 27,
      "text": "if s is 0x3f3f3f3f",
      "code": "if ( s == 0x3f3f3f3f )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 30,
      "text": "print n - 1 + s",
      "code": "cout << n - 1 + s << endl ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int gcd ( int get ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "t = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "if ( b == 1 )"
      ],
      "err_line": 25,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "a [ 2005 ] = { 0 } ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int gcd ( int get )"
      ],
      "err_line": 4,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "a >> a [ i ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘int [2005]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "else if ( s == 0x3f3f3f3f )"
      ],
      "err_line": 27,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "t = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        11
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "t = 0 ;",
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        11,
        24
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "t = 0 ;",
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "if ( b == 1 )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        11,
        4
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "t = 0 ;",
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "t %= a ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        11,
        5
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "t = 0 ;",
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "int b = a ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        24
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "t = 0 ;",
        "if ( b == 1 )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        24,
        4
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "t = 0 ;",
        "if ( b == 1 )",
        "t %= a ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        24,
        5
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "t = 0 ;",
        "if ( b == 1 )",
        "int b = a ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        4
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "t = 0 ;",
        "t %= a ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        4,
        5
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "t = 0 ;",
        "t %= a ;",
        "int b = a ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        5
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "t = 0 ;",
        "int b = a ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        24
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "if ( b == 1 )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        24,
        4
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "if ( b == 1 )",
        "t %= a ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        24,
        5
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "if ( b == 1 )",
        "int b = a ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        4
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "t %= a ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        4,
        5
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "t %= a ;",
        "int b = a ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        11,
        5
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "int b = a ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        24
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "if ( b == 1 )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        24,
        4
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "if ( b == 1 )",
        "t %= a ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        24,
        4,
        5
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "if ( b == 1 )",
        "t %= a ;",
        "int b = a ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        24,
        5
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "if ( b == 1 )",
        "int b = a ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "t %= a ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        4,
        5
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "t %= a ;",
        "int b = a ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int gcd ( int get ) ;",
        "int b = a ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "t = 0 ;",
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        24
      ],
      "mod_code": [
        "t = 0 ;",
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "if ( b == 1 )"
      ],
      "err_line": 2,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        24,
        4
      ],
      "mod_code": [
        "t = 0 ;",
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "if ( b == 1 )",
        "t %= a ;"
      ],
      "err_line": 2,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        24,
        5
      ],
      "mod_code": [
        "t = 0 ;",
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "if ( b == 1 )",
        "int b = a ;"
      ],
      "err_line": 2,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        4
      ],
      "mod_code": [
        "t = 0 ;",
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "t %= a ;"
      ],
      "err_line": 2,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        4,
        5
      ],
      "mod_code": [
        "t = 0 ;",
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "t %= a ;",
        "int b = a ;"
      ],
      "err_line": 2,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        5
      ],
      "mod_code": [
        "t = 0 ;",
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "int b = a ;"
      ],
      "err_line": 2,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        24
      ],
      "mod_code": [
        "t = 0 ;",
        "if ( b == 1 )"
      ],
      "err_line": 2,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        24,
        4
      ],
      "mod_code": [
        "t = 0 ;",
        "if ( b == 1 )",
        "t %= a ;"
      ],
      "err_line": 2,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        24,
        4,
        5
      ],
      "mod_code": [
        "t = 0 ;",
        "if ( b == 1 )",
        "t %= a ;",
        "int b = a ;"
      ],
      "err_line": 2,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        24,
        5
      ],
      "mod_code": [
        "t = 0 ;",
        "if ( b == 1 )",
        "int b = a ;"
      ],
      "err_line": 2,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "t = 0 ;",
        "t %= a ;"
      ],
      "err_line": 2,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        5
      ],
      "mod_code": [
        "t = 0 ;",
        "t %= a ;",
        "int b = a ;"
      ],
      "err_line": 2,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "t = 0 ;",
        "int b = a ;"
      ],
      "err_line": 2,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        24
      ],
      "mod_code": [
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "if ( b == 1 )"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        11,
        24,
        4
      ],
      "mod_code": [
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "if ( b == 1 )",
        "t %= a ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        11,
        24,
        4,
        5
      ],
      "mod_code": [
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "if ( b == 1 )",
        "t %= a ;",
        "int b = a ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        11,
        24,
        5
      ],
      "mod_code": [
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "if ( b == 1 )",
        "int b = a ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "t %= a ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        11,
        4,
        5
      ],
      "mod_code": [
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "t %= a ;",
        "int b = a ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "int n , j , i , i = 0 , s = 0x3f3f3f3f , c = 0 ;",
        "int b = a ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        24,
        4
      ],
      "mod_code": [
        "if ( b == 1 )",
        "t %= a ;"
      ],
      "err_line": 25,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        4,
        5
      ],
      "mod_code": [
        "if ( b == 1 )",
        "t %= a ;",
        "int b = a ;"
      ],
      "err_line": 25,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        24,
        5
      ],
      "mod_code": [
        "if ( b == 1 )",
        "int b = a ;"
      ],
      "err_line": 25,
      "err_msg": "expected primary-expression before ‘}’ token"
    }
  ]
}