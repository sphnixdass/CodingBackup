{
  "meta": {
    "index": 348,
    "hitid": "3HXCEECSQMNZAL1P363DPJK8FNLYZ3",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "617A",
    "subid": "48706043"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "x = integer with 0",
      "code": "int x = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while reading values x",
      "code": "while ( cin >> x )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "n = integer with 0",
      "code": "int n = 0 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "if x is less than 6",
      "code": "if ( x < 6 )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "set n to 1",
      "code": "n = 1 ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else if x modulo 5 is 0",
      "code": "else if ( x % 5 == 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set n to x / 5",
      "code": "n = x / 5 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set n to x / 5 + 1",
      "code": "n = x / 5 + 1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "print n and a new line",
      "code": "cout << n << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        9,
        6,
        8
      ],
      "mod_code": [
        "n /= 5 ;",
        "n -= 5 + 1 ;",
        "else if ( x % 2 == 0 )",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        9,
        5,
        8
      ],
      "mod_code": [
        "n /= 5 ;",
        "n -= 5 + 1 ;",
        "int n = 1 ;",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        9,
        2,
        8
      ],
      "mod_code": [
        "n /= 5 ;",
        "n -= 5 + 1 ;",
        "while ( x -- )",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        9,
        8
      ],
      "mod_code": [
        "n /= 5 ;",
        "n -= 5 + 1 ;",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        6,
        5,
        8
      ],
      "mod_code": [
        "n /= 5 ;",
        "else if ( x % 2 == 0 )",
        "int n = 1 ;",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        6,
        2,
        8
      ],
      "mod_code": [
        "n /= 5 ;",
        "else if ( x % 2 == 0 )",
        "while ( x -- )",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        6,
        8
      ],
      "mod_code": [
        "n /= 5 ;",
        "else if ( x % 2 == 0 )",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        5,
        2,
        8
      ],
      "mod_code": [
        "n /= 5 ;",
        "int n = 1 ;",
        "while ( x -- )",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        5,
        8
      ],
      "mod_code": [
        "n /= 5 ;",
        "int n = 1 ;",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        2,
        8
      ],
      "mod_code": [
        "n /= 5 ;",
        "while ( x -- )",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "n /= 5 ;",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        6,
        5,
        8
      ],
      "mod_code": [
        "n -= 5 + 1 ;",
        "else if ( x % 2 == 0 )",
        "int n = 1 ;",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        6,
        2,
        8
      ],
      "mod_code": [
        "n -= 5 + 1 ;",
        "else if ( x % 2 == 0 )",
        "while ( x -- )",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        6,
        8
      ],
      "mod_code": [
        "n -= 5 + 1 ;",
        "else if ( x % 2 == 0 )",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        5,
        2,
        8
      ],
      "mod_code": [
        "n -= 5 + 1 ;",
        "int n = 1 ;",
        "while ( x -- )",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        5,
        8
      ],
      "mod_code": [
        "n -= 5 + 1 ;",
        "int n = 1 ;",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        2,
        8
      ],
      "mod_code": [
        "n -= 5 + 1 ;",
        "while ( x -- )",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "n -= 5 + 1 ;",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5,
        2,
        8
      ],
      "mod_code": [
        "else if ( x % 2 == 0 )",
        "int n = 1 ;",
        "while ( x -- )",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5,
        8
      ],
      "mod_code": [
        "else if ( x % 2 == 0 )",
        "int n = 1 ;",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        2,
        8
      ],
      "mod_code": [
        "else if ( x % 2 == 0 )",
        "while ( x -- )",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "else if ( x % 2 == 0 )",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        2,
        8
      ],
      "mod_code": [
        "int n = 1 ;",
        "while ( x -- )",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "int n = 1 ;",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "while ( x -- )",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}