{
  "meta": {
    "index": 2188,
    "hitid": "3VMHWJRYHVA45ZKFXYN43DXH1C0FXT",
    "workerid": "AIWEXPJAU66D9",
    "probid": "744A",
    "subid": "41609291"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare new array of integers fa with 202002 elements",
      "code": "int fa [ 202002 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "sum is a new array of integers with 202002 elements",
      "code": "int sum [ 202002 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create and array of integers c with size 202002",
      "code": "int c [ 202002 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "function max with int arguments a and b that returns int",
      "code": "int max ( int a , int b )",
      "indent": 0
    },
    {
      "line": 4,
      "text": "if a is greater than b",
      "code": "if ( a > b )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "return a",
      "code": "return a ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 7,
      "text": "return b as a result",
      "code": "return b ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "int function findfa with int argument x",
      "code": "int findfa ( int x )",
      "indent": 0
    },
    {
      "line": 10,
      "text": "if fa [ x ] is equal to x",
      "code": "if ( fa [ x ] == x )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "return x",
      "code": "return x ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "return the result of findfa ( fa [ x ] )",
      "code": "return findfa ( fa [ x ] ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 15,
      "text": "function U with int arguments x and y",
      "code": "void U ( int x , int y )",
      "indent": 0
    },
    {
      "line": 16,
      "text": "rx is a new integer variable = findfa ( x )",
      "code": "int rx = findfa ( x ) ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "declare integer ry = findfa ( y )",
      "code": "int ry = findfa ( y ) ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if rx is not equal to ry",
      "code": "if ( rx != ry )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "set fa [ rx ] to ry",
      "code": "fa [ rx ] = ry ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "add sum [ rx ] to sum [ ry ]",
      "code": "sum [ ry ] += sum [ rx ] ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 23,
      "text": "vis is an array of booleans with size 202002",
      "code": "bool vis [ 202002 ] ;",
      "indent": 0
    },
    {
      "line": 24,
      "text": "declare vector of integers called vec",
      "code": "vector < int > vec ;",
      "indent": 0
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 26,
      "text": "create integers n , m and k",
      "code": "int n , m , k ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "read variables n , m and k from the input",
      "code": "cin >> n >> m >> k ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "remove all elements from vec",
      "code": "vec . clear ( ) ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "for i from 0 to n inclusive",
      "code": "for ( int i = 0 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "assign i to fa [ i ]",
      "code": "fa [ i ] = i ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "assign 1 to sum [ i ]",
      "code": "sum [ i ] = 1 ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 33,
      "text": "for i = 0 to k exclusive , read from the input to c [ i ]",
      "code": "for ( int i = 0 ; i < k ; i ++ ) cin >> c [ i ] ;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "declare new ints x and y",
      "code": "int x , y ;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 36,
      "text": "read user input to x and y",
      "code": "cin >> x >> y ;",
      "indent": 2
    },
    {
      "line": 37,
      "text": "call U of x and y",
      "code": "U ( x , y ) ;",
      "indent": 2
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 39,
      "text": "set first sizeof ( vis ) bytes at the pointer vis to 0",
      "code": "memset ( vis , 0 , sizeof ( vis ) ) ;",
      "indent": 1
    },
    {
      "line": 40,
      "text": "for i = 0 to k exclusive , change the value of vis [ findfa ( c [ i ] ) ] to 1",
      "code": "for ( int i = 0 ; i < k ; i ++ ) vis [ findfa ( c [ i ] ) ] = 1 ;",
      "indent": 1
    },
    {
      "line": 41,
      "text": "create integer variable with name MAX with value - 1",
      "code": "int MAX = - 1 ;",
      "indent": 1
    },
    {
      "line": 42,
      "text": "create new long long called ans with value 0",
      "code": "long long ans = 0 ;",
      "indent": 1
    },
    {
      "line": 43,
      "text": "start for loop from i = 1 to n inclusive incrementing i",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 44,
      "text": "if fa [ i ] is equal to i",
      "code": "if ( fa [ i ] == i )",
      "indent": 2
    },
    {
      "line": 45,
      "text": "if vis [ i ] is equal to 1",
      "code": "if ( vis [ i ] == 1 )",
      "indent": 3
    },
    {
      "line": 46,
      "text": "set MAX to max of MAX and sum [ i ]",
      "code": "MAX = max ( MAX , sum [ i ] ) ;",
      "indent": 4
    },
    {
      "line": 47,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 48,
      "text": "push sum [ i ] to the vec",
      "code": "vec . push_back ( sum [ i ] ) ;",
      "indent": 4
    },
    {
      "line": 49,
      "text": "add sum [ i ] * ( sum [ i ] - 1 ) / 2 to ans",
      "code": "ans += sum [ i ] * ( sum [ i ] - 1 ) / 2 ;",
      "indent": 3
    },
    {
      "line": 50,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 51,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 52,
      "text": "declare integer len with value length of vec",
      "code": "int len = vec . size ( ) ;",
      "indent": 1
    },
    {
      "line": 53,
      "text": "start for loop from i = 0 to len exclusive incrementing i",
      "code": "for ( int i = 0 ; i < len ; i ++ )",
      "indent": 1
    },
    {
      "line": 54,
      "text": "start for loop from j = i + 1 to len exclusive , changing ans to the sum of ans and vec [ i ] * vec [ j ] on each iteration",
      "code": "for ( int j = i + 1 ; j < len ; j ++ ) { ans += vec [ i ] * vec [ j ] ; }",
      "indent": 2
    },
    {
      "line": 55,
      "text": "change ans to ans + vec [ i ] * MAX",
      "code": "ans += vec [ i ] * MAX ;",
      "indent": 2
    },
    {
      "line": 56,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 57,
      "text": "change ans to ans - m",
      "code": "ans = ans - m ;",
      "indent": 1
    },
    {
      "line": 58,
      "text": "if ans is greater than 0",
      "code": "if ( ans > 0 )",
      "indent": 1
    },
    {
      "line": 59,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 60,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 61,
      "text": "print \" 0 \" to the standard output",
      "code": "cout << \" 0 \" << endl ;",
      "indent": 2
    },
    {
      "line": 62,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 63,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int max ( int a , int b ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ 202002 ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘fa’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int findfa ( int x ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( strcmp ( fa [ x ] ) == x )"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "int rx = new int ( x ) ;"
      ],
      "err_line": 16,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "int ry = findfa ( y ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘,’ or ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "vec . remove = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "‘class std::vector<int>’ has no member named ‘remove’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "for ( i = 0 ; i <= n ; i ++ )"
      ],
      "err_line": 29,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "for ( i = 0 ; i < k ; i ++ ) cin >> c [ i ] ;"
      ],
      "err_line": 33,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "U ( U , y ) ;"
      ],
      "err_line": 37,
      "err_msg": "invalid conversion from ‘void (*)(int, int)’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "memset ( vis + 0 , sizeof ( vis ) ) ;"
      ],
      "err_line": 39,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "int MAX create ;"
      ],
      "err_line": 41,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 43,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        44
      ],
      "mod_code": [
        "if ( strcmp ( fa [ i ] ) == i )"
      ],
      "err_line": 44,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        48
      ],
      "mod_code": [
        "vec . push ( sum [ i ] ) ;"
      ],
      "err_line": 48,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        52
      ],
      "mod_code": [
        "int len = vec . length ( ) ;"
      ],
      "err_line": 52,
      "err_msg": "‘class std::vector<int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        53
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 53,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        17
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "int ry = findfa ( y ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        17,
        20
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "int ry = findfa ( y ) ) ;",
        "sum [ ry ] += sum [ ry ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        17,
        20,
        35
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "int ry = findfa ( y ) ) ;",
        "sum [ ry ] += sum [ ry ] ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        17,
        20,
        43
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "int ry = findfa ( y ) ) ;",
        "sum [ ry ] += sum [ ry ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        17,
        20,
        31
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "int ry = findfa ( y ) ) ;",
        "sum [ ry ] += sum [ ry ] ;",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        17,
        35
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "int ry = findfa ( y ) ) ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        17,
        35,
        43
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "int ry = findfa ( y ) ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        17,
        35,
        31
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "int ry = findfa ( y ) ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        17,
        43
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "int ry = findfa ( y ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        17,
        43,
        31
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "int ry = findfa ( y ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        17,
        31
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "int ry = findfa ( y ) ) ;",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        20
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "sum [ ry ] += sum [ ry ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        20,
        35
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "sum [ ry ] += sum [ ry ] ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        20,
        35,
        43
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "sum [ ry ] += sum [ ry ] ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        20,
        35,
        31
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "sum [ ry ] += sum [ ry ] ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        20,
        43
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "sum [ ry ] += sum [ ry ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        20,
        43,
        31
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "sum [ ry ] += sum [ ry ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        20,
        31
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "sum [ ry ] += sum [ ry ] ;",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        35
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        35,
        43
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        35,
        43,
        31
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        35,
        31
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        43
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        43,
        31
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        31
      ],
      "mod_code": [
        "int max ( int a , int b ) ;",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        20
      ],
      "mod_code": [
        "int ry = findfa ( y ) ) ;",
        "sum [ ry ] += sum [ ry ] ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘,’ or ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        20,
        35
      ],
      "mod_code": [
        "int ry = findfa ( y ) ) ;",
        "sum [ ry ] += sum [ ry ] ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘,’ or ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        20,
        35,
        43
      ],
      "mod_code": [
        "int ry = findfa ( y ) ) ;",
        "sum [ ry ] += sum [ ry ] ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘,’ or ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        20,
        35,
        31
      ],
      "mod_code": [
        "int ry = findfa ( y ) ) ;",
        "sum [ ry ] += sum [ ry ] ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘,’ or ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        20,
        43
      ],
      "mod_code": [
        "int ry = findfa ( y ) ) ;",
        "sum [ ry ] += sum [ ry ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘,’ or ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        20,
        43,
        31
      ],
      "mod_code": [
        "int ry = findfa ( y ) ) ;",
        "sum [ ry ] += sum [ ry ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘,’ or ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        20,
        31
      ],
      "mod_code": [
        "int ry = findfa ( y ) ) ;",
        "sum [ ry ] += sum [ ry ] ;",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘,’ or ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        35
      ],
      "mod_code": [
        "int ry = findfa ( y ) ) ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘,’ or ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        35,
        43
      ],
      "mod_code": [
        "int ry = findfa ( y ) ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘,’ or ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        35,
        43,
        31
      ],
      "mod_code": [
        "int ry = findfa ( y ) ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘,’ or ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        35,
        31
      ],
      "mod_code": [
        "int ry = findfa ( y ) ) ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘,’ or ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        43
      ],
      "mod_code": [
        "int ry = findfa ( y ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘,’ or ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        43,
        31
      ],
      "mod_code": [
        "int ry = findfa ( y ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘,’ or ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        31
      ],
      "mod_code": [
        "int ry = findfa ( y ) ) ;",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘,’ or ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        20,
        35
      ],
      "mod_code": [
        "sum [ ry ] += sum [ ry ] ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        35,
        43
      ],
      "mod_code": [
        "sum [ ry ] += sum [ ry ] ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        35,
        43,
        31
      ],
      "mod_code": [
        "sum [ ry ] += sum [ ry ] ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        35,
        31
      ],
      "mod_code": [
        "sum [ ry ] += sum [ ry ] ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        43
      ],
      "mod_code": [
        "sum [ ry ] += sum [ ry ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 43,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        43,
        31
      ],
      "mod_code": [
        "sum [ ry ] += sum [ ry ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 43,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        35,
        43
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        35,
        43,
        31
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        35,
        31
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        43,
        31
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "sum [ i ] = ' 1 ' ;"
      ],
      "err_line": 43,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}