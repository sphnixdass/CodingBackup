{
  "meta": {
    "index": 1351,
    "hitid": "3HYV4299H0QMKKJBUFR65WVOXFH8EQ",
    "workerid": "A1APYLD4DUK33J",
    "probid": "75A",
    "subid": "48083018"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare removeZeros with integer num as argument , returning integer",
      "code": "int removeZeros ( int num )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer ret with ret = 0",
      "code": "int ret = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integer ten with ten = 1",
      "code": "int ten = 1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while num is true",
      "code": "while ( num )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer dig with dig = num % 10",
      "code": "int dig = num % 10 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "set num to num / 10",
      "code": "num /= 10 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if dig is true",
      "code": "if ( dig )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment ret by dig * ten",
      "code": "ret += dig * ten ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set ten to ten * 10",
      "code": "ten *= 10 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "return ret from function",
      "code": "return ret ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 14,
      "text": "create integers a , b , c",
      "code": "int a , b , c ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "read a read b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "set c to a + b",
      "code": "c = a + b ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "set a to result of run removeZeros with a as argument",
      "code": "a = removeZeros ( a ) ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "set b to result of run removeZeros with b as argument",
      "code": "b = removeZeros ( b ) ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "set c to result of run removeZeros with c as argument",
      "code": "c = removeZeros ( c ) ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print \" YES \" if a + b is c else \" NO \"",
      "code": "puts ( a + b == c ? \" YES \" : \" NO \" ) ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int removeZeros ( int num ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "ret = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘ret’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "ten = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "int a , b , c , c ;"
      ],
      "err_line": 14,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "a = removeZeros ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "b = removeZeros ( ) ;"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "c = removeZeros ( ) ;"
      ],
      "err_line": 19,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        16,
        17
      ],
      "mod_code": [
        "c += b ;",
        "a = removeZeros ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        16,
        17,
        6
      ],
      "mod_code": [
        "c += b ;",
        "a = removeZeros ( ) ;",
        "if ( dig == true )"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        16,
        17,
        6,
        3
      ],
      "mod_code": [
        "c += b ;",
        "a = removeZeros ( ) ;",
        "if ( dig == true )",
        "while ( num == true )"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        16,
        17,
        6,
        18
      ],
      "mod_code": [
        "c += b ;",
        "a = removeZeros ( ) ;",
        "if ( dig == true )",
        "b = removeZeros ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        16,
        17,
        6,
        11
      ],
      "mod_code": [
        "c += b ;",
        "a = removeZeros ( ) ;",
        "if ( dig == true )",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        16,
        17,
        3
      ],
      "mod_code": [
        "c += b ;",
        "a = removeZeros ( ) ;",
        "while ( num == true )"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        16,
        17,
        3,
        18
      ],
      "mod_code": [
        "c += b ;",
        "a = removeZeros ( ) ;",
        "while ( num == true )",
        "b = removeZeros ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        16,
        17,
        3,
        11
      ],
      "mod_code": [
        "c += b ;",
        "a = removeZeros ( ) ;",
        "while ( num == true )",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        16,
        17,
        18
      ],
      "mod_code": [
        "c += b ;",
        "a = removeZeros ( ) ;",
        "b = removeZeros ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        16,
        17,
        18,
        11
      ],
      "mod_code": [
        "c += b ;",
        "a = removeZeros ( ) ;",
        "b = removeZeros ( ) ;",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        16,
        17,
        11
      ],
      "mod_code": [
        "c += b ;",
        "a = removeZeros ( ) ;",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        16,
        6,
        3,
        18
      ],
      "mod_code": [
        "c += b ;",
        "if ( dig == true )",
        "while ( num == true )",
        "b = removeZeros ( ) ;"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        16,
        6,
        3,
        11
      ],
      "mod_code": [
        "c += b ;",
        "if ( dig == true )",
        "while ( num == true )",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        16,
        6,
        18
      ],
      "mod_code": [
        "c += b ;",
        "if ( dig == true )",
        "b = removeZeros ( ) ;"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        16,
        6,
        18,
        11
      ],
      "mod_code": [
        "c += b ;",
        "if ( dig == true )",
        "b = removeZeros ( ) ;",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        16,
        6,
        11
      ],
      "mod_code": [
        "c += b ;",
        "if ( dig == true )",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        16,
        3,
        18
      ],
      "mod_code": [
        "c += b ;",
        "while ( num == true )",
        "b = removeZeros ( ) ;"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        16,
        3,
        18,
        11
      ],
      "mod_code": [
        "c += b ;",
        "while ( num == true )",
        "b = removeZeros ( ) ;",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        16,
        3,
        11
      ],
      "mod_code": [
        "c += b ;",
        "while ( num == true )",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "c += b ;",
        "b = removeZeros ( ) ;"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        16,
        18,
        11
      ],
      "mod_code": [
        "c += b ;",
        "b = removeZeros ( ) ;",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        16,
        11
      ],
      "mod_code": [
        "c += b ;",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        17,
        6
      ],
      "mod_code": [
        "a = removeZeros ( ) ;",
        "if ( dig == true )"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        17,
        6,
        3
      ],
      "mod_code": [
        "a = removeZeros ( ) ;",
        "if ( dig == true )",
        "while ( num == true )"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        17,
        6,
        3,
        18
      ],
      "mod_code": [
        "a = removeZeros ( ) ;",
        "if ( dig == true )",
        "while ( num == true )",
        "b = removeZeros ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        17,
        6,
        3,
        11
      ],
      "mod_code": [
        "a = removeZeros ( ) ;",
        "if ( dig == true )",
        "while ( num == true )",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        17,
        6,
        18
      ],
      "mod_code": [
        "a = removeZeros ( ) ;",
        "if ( dig == true )",
        "b = removeZeros ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        17,
        6,
        18,
        11
      ],
      "mod_code": [
        "a = removeZeros ( ) ;",
        "if ( dig == true )",
        "b = removeZeros ( ) ;",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        17,
        6,
        11
      ],
      "mod_code": [
        "a = removeZeros ( ) ;",
        "if ( dig == true )",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        17,
        3
      ],
      "mod_code": [
        "a = removeZeros ( ) ;",
        "while ( num == true )"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        17,
        3,
        18
      ],
      "mod_code": [
        "a = removeZeros ( ) ;",
        "while ( num == true )",
        "b = removeZeros ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        17,
        3,
        18,
        11
      ],
      "mod_code": [
        "a = removeZeros ( ) ;",
        "while ( num == true )",
        "b = removeZeros ( ) ;",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        17,
        3,
        11
      ],
      "mod_code": [
        "a = removeZeros ( ) ;",
        "while ( num == true )",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        17,
        18
      ],
      "mod_code": [
        "a = removeZeros ( ) ;",
        "b = removeZeros ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        17,
        18,
        11
      ],
      "mod_code": [
        "a = removeZeros ( ) ;",
        "b = removeZeros ( ) ;",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        17,
        11
      ],
      "mod_code": [
        "a = removeZeros ( ) ;",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        6,
        3,
        18
      ],
      "mod_code": [
        "if ( dig == true )",
        "while ( num == true )",
        "b = removeZeros ( ) ;"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        6,
        3,
        18,
        11
      ],
      "mod_code": [
        "if ( dig == true )",
        "while ( num == true )",
        "b = removeZeros ( ) ;",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        6,
        3,
        11
      ],
      "mod_code": [
        "if ( dig == true )",
        "while ( num == true )",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        6,
        18
      ],
      "mod_code": [
        "if ( dig == true )",
        "b = removeZeros ( ) ;"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        6,
        18,
        11
      ],
      "mod_code": [
        "if ( dig == true )",
        "b = removeZeros ( ) ;",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "if ( dig == true )",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        3,
        18
      ],
      "mod_code": [
        "while ( num == true )",
        "b = removeZeros ( ) ;"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘int removeZeros(int)’"
    },
    {
      "mod_line": [
        3,
        18,
        11
      ],
      "mod_code": [
        "while ( num == true )",
        "b = removeZeros ( ) ;",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "while ( num == true )",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    },
    {
      "mod_line": [
        18,
        11
      ],
      "mod_code": [
        "b = removeZeros ( ) ;",
        "return ret ret ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘ret’"
    }
  ]
}