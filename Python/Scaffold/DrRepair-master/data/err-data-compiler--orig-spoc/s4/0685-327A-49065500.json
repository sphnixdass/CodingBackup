{
  "meta": {
    "index": 685,
    "hitid": "378G7J1SJLSXALFTSI7CJCYAG9KEWM",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "327A",
    "subid": "49065500"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "make ints n , a , cnt_1 = 0 , cnt_0 = 0 , and cnt_max0 = - 1",
      "code": "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_max0 = - 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while n - - is truthy",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if a is equal to 1",
      "code": "if ( a == 1 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "add 1 to cnt_1",
      "code": "cnt_1 ++ ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if cnt_0 is greater than 0 , subtract 1 from cnt_0",
      "code": "if ( cnt_0 > 0 ) { cnt_0 -- ; }",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if a is equal to 0",
      "code": "if ( a == 0 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "add 1 to cnt_0",
      "code": "cnt_0 ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if cnt_0 is greater than cnt_max0 , set cnt_max0 is equal to cnt_0",
      "code": "if ( cnt_0 > cnt_max0 ) cnt_max0 = cnt_0 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "make integer ans = cnt_1 + cnt_max0",
      "code": "int ans = cnt_1 + cnt_max0 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "display ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "int ans += cnt_max0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "while ( -- n )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "while ( -- n )",
        "if ( a == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        14
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "while ( -- n )",
        "if ( a == ' 1 ' )",
        "int ans += cnt_max0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        4
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "while ( -- n )",
        "if ( a == ' 1 ' )",
        "gets ( a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        9
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "while ( -- n )",
        "if ( a == ' 1 ' )",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        3,
        14
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "while ( -- n )",
        "int ans += cnt_max0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        3,
        14,
        4
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "while ( -- n )",
        "int ans += cnt_max0 ;",
        "gets ( a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        3,
        14,
        9
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "while ( -- n )",
        "int ans += cnt_max0 ;",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "while ( -- n )",
        "gets ( a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        9
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "while ( -- n )",
        "gets ( a ) ;",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        3,
        9
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "while ( -- n )",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "if ( a == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        5,
        14
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "if ( a == ' 1 ' )",
        "int ans += cnt_max0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        5,
        14,
        4
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "if ( a == ' 1 ' )",
        "int ans += cnt_max0 ;",
        "gets ( a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        5,
        14,
        9
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "if ( a == ' 1 ' )",
        "int ans += cnt_max0 ;",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        5,
        4
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "if ( a == ' 1 ' )",
        "gets ( a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        5,
        4,
        9
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "if ( a == ' 1 ' )",
        "gets ( a ) ;",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        5,
        9
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "if ( a == ' 1 ' )",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "int ans += cnt_max0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        14,
        4
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "int ans += cnt_max0 ;",
        "gets ( a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        14,
        4,
        9
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "int ans += cnt_max0 ;",
        "gets ( a ) ;",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        14,
        9
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "int ans += cnt_max0 ;",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "gets ( a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        4,
        9
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "gets ( a ) ;",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int n , a , cnt_1 = 0 , cnt_0 = 0 , cnt_0 = - 1 ;",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int cnt_0’"
    },
    {
      "mod_line": [
        3,
        5,
        14
      ],
      "mod_code": [
        "while ( -- n )",
        "if ( a == ' 1 ' )",
        "int ans += cnt_max0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        3,
        5,
        14,
        4
      ],
      "mod_code": [
        "while ( -- n )",
        "if ( a == ' 1 ' )",
        "int ans += cnt_max0 ;",
        "gets ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5,
        14,
        9
      ],
      "mod_code": [
        "while ( -- n )",
        "if ( a == ' 1 ' )",
        "int ans += cnt_max0 ;",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        3,
        5,
        4
      ],
      "mod_code": [
        "while ( -- n )",
        "if ( a == ' 1 ' )",
        "gets ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5,
        4,
        9
      ],
      "mod_code": [
        "while ( -- n )",
        "if ( a == ' 1 ' )",
        "gets ( a ) ;",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "while ( -- n )",
        "int ans += cnt_max0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        3,
        14,
        4
      ],
      "mod_code": [
        "while ( -- n )",
        "int ans += cnt_max0 ;",
        "gets ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        14,
        4,
        9
      ],
      "mod_code": [
        "while ( -- n )",
        "int ans += cnt_max0 ;",
        "gets ( a ) ;",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        14,
        9
      ],
      "mod_code": [
        "while ( -- n )",
        "int ans += cnt_max0 ;",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "while ( -- n )",
        "gets ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4,
        9
      ],
      "mod_code": [
        "while ( -- n )",
        "gets ( a ) ;",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "if ( a == ' 1 ' )",
        "int ans += cnt_max0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        5,
        14,
        4
      ],
      "mod_code": [
        "if ( a == ' 1 ' )",
        "int ans += cnt_max0 ;",
        "gets ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        14,
        4,
        9
      ],
      "mod_code": [
        "if ( a == ' 1 ' )",
        "int ans += cnt_max0 ;",
        "gets ( a ) ;",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        14,
        9
      ],
      "mod_code": [
        "if ( a == ' 1 ' )",
        "int ans += cnt_max0 ;",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "if ( a == ' 1 ' )",
        "gets ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        4,
        9
      ],
      "mod_code": [
        "if ( a == ' 1 ' )",
        "gets ( a ) ;",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "int ans += cnt_max0 ;",
        "gets ( a ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        4,
        9
      ],
      "mod_code": [
        "int ans += cnt_max0 ;",
        "gets ( a ) ;",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        9
      ],
      "mod_code": [
        "int ans += cnt_max0 ;",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "gets ( a ) ;",
        "if ( a == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}