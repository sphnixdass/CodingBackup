{
  "meta": {
    "index": 155,
    "hitid": "3E9VAUV7BW8Y9DTHRENE8QTZ504YAN",
    "workerid": "AIWEXPJAU66D9",
    "probid": "3A",
    "subid": "48445361"
  },
  "lines": [
    {
      "line": 0,
      "text": "let rx = array of 8 integers with values 1 , 1 , - 1 , 0 , 0 , - 1 , - 1 , 1",
      "code": "int rx [ 8 ] = { 1 , 1 , - 1 , 0 , 0 , - 1 , - 1 , 1 } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let ry = array of 8 integers with values 0 , 1 , 0 , - 1 , 1 , 1 , - 1 , - 1",
      "code": "int ry [ 8 ] = { 0 , 1 , 0 , - 1 , 1 , 1 , - 1 , - 1 } ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare string variable s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "integer x = s [ 0 ] - ' a '",
      "code": "int x = s [ 0 ] - ' a ' ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "integer y = s [ 1 ] - ' 0 ' - 1",
      "code": "int y = s [ 1 ] - ' 0 ' - 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "integer xf = s [ 0 ] - ' a '",
      "code": "int xf = s [ 0 ] - ' a ' ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "integer yf = s [ 1 ] - ' 0 ' - 1 ;",
      "code": "int yf = s [ 1 ] - ' 0 ' - 1 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "create integer kol with value 0",
      "code": "int kol = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "ans = vector of strings",
      "code": "vector < string > ans ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "while 1",
      "code": "while ( 1 )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if xf = = x & & yf is equal to y",
      "code": "if ( xf == x && yf == y ) break ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if x < xf & & y is less than yf",
      "code": "if ( x < xf && y < yf )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increment kol , push \" RU \" into ans , increment x , increment y",
      "code": "kol ++ , ans . push_back ( \" RU \" ) , x ++ , y ++ ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else if x > xf & & y is greater than yf",
      "code": "else if ( x > xf && y > yf )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increment kol , push \" LD \" into ans , increment x , decrement y",
      "code": "kol ++ , ans . push_back ( \" LD \" ) , x -- , y -- ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else if x > xf & & y is less than yf",
      "code": "else if ( x > xf && y < yf )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "increment kol , push \" LU \" into ans , decrement x , increment y",
      "code": "kol ++ , ans . push_back ( \" LU \" ) , x -- , y ++ ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else if x < xf & & y is greater than yf",
      "code": "else if ( x < xf && y > yf )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "increment kol , push \" RD \" into ans , increment x , decrement y",
      "code": "kol ++ , ans . push_back ( \" RD \" ) , x ++ , y -- ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "else if x = = xf & & y is less than yf",
      "code": "else if ( x == xf && y < yf )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "increment kol , push \" U \" into ans , increment y",
      "code": "kol ++ , ans . push_back ( \" U \" ) , y ++ ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "else if x = = xf & & y is greater than yf",
      "code": "else if ( x == xf && y > yf )",
      "indent": 2
    },
    {
      "line": 25,
      "text": "increment kol , push \" D \" into ans , decrement y",
      "code": "kol ++ , ans . push_back ( \" D \" ) , y -- ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "else if x > xf & & y is equal to yf",
      "code": "else if ( x > xf && y == yf )",
      "indent": 2
    },
    {
      "line": 27,
      "text": "increment kol , push \" L \" into ans , decrement x",
      "code": "kol ++ , ans . push_back ( \" L \" ) , x -- ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "else if x < xf & & y is equal to yf",
      "code": "else if ( x < xf && y == yf )",
      "indent": 2
    },
    {
      "line": 29,
      "text": "increment kol , push \" R \" into ans , increment x",
      "code": "kol ++ , ans . push_back ( \" R \" ) , x ++ ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print kol and ' \\ n '",
      "code": "cout << kol << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "for integer i = 0 to the length of ans exclusive print ans [ i ]",
      "code": "for ( int i = 0 ; i < int ( ans . size ( ) ) ; ++ i ) { cout << ans [ i ] << ' \\n ' ; }",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 27,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 7,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int kol create ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "pair < string , string > ans ;"
      ],
      "err_line": 15,
      "err_msg": "‘struct std::pair<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "while ( l )"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RU \" , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y -- ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "ans ++ , ans += \" LU \" , x , y ;"
      ],
      "err_line": 19,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y -- ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "ans += \" U \" , ans += \" U \" ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "ans += \" D \" , y -- , y -- ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "ans += \" L \" , ans -- , x -- ;"
      ],
      "err_line": 27,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" R \" ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        17
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        19
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        21
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        23
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        25
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        19
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        21
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        23
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        25
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        21
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        21,
        23
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        21,
        25
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        21,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        21,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        21,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        23
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        23,
        25
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        23,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        23,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        23,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        25
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        25,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        25,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        25,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        27,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        27,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        29,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        15,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        19
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        21
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        23
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        25
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        21
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        21,
        23
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        21,
        25
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        21,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        21,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        21,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        23
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        23,
        25
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        23,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        23,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        23,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        25
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        25,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        25,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        25,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        27,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        27,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        29,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        17,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        19
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        21
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        21,
        23
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        21,
        25
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        21,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        21,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        21,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        23
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        23,
        25
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        23,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        23,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        23,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        25
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        25,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        25,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        25,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        27,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        27,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        29,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        19,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        13,
        21
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" RD \" , y ++ ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        21,
        23
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        21,
        23,
        25
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        21,
        23,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        21,
        23,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        21,
        23,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        21,
        25
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        21,
        25,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        21,
        25,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        21,
        25,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        21,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        21,
        27,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        21,
        27,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        21,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        21,
        29,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        21,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        23
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        23,
        25
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        23,
        25,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        23,
        25,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        23,
        25,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        23,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        23,
        27,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        23,
        27,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        23,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        23,
        29,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        23,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" U \" , ans ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        25
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        25,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        25,
        27,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        25,
        27,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        25,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        25,
        29,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        25,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        27
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 27,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        27,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 27,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        27,
        29,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 27,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        27,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 27,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        29
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        13,
        29,
        32
      ],
      "mod_code": [
        "if ( xf == x && yf == y )",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        15,
        17
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        19
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        21
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        23
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        25
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        27
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        19,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        21
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        21,
        23
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        21,
        25
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        21,
        27
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        21,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        21,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        23
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        23,
        25
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        23,
        27
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        23,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        23,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        25
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        25,
        27
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        25,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        25,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        27
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        27,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        27,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        29,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        17,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        21
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        21,
        23
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        21,
        25
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        21,
        27
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        21,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        21,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        23
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        23,
        25
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        23,
        27
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        23,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        23,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        25
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        25,
        27
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        25,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        25,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        27
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        27,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        27,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        29,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        19,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        21
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        21,
        23
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        21,
        23,
        25
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        21,
        23,
        27
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        21,
        23,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        21,
        23,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        21,
        25
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        21,
        25,
        27
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        21,
        25,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        21,
        25,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        21,
        27
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        21,
        27,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        21,
        27,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        21,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        21,
        29,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        21,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        23
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        23,
        25
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        23,
        25,
        27
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        23,
        25,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        23,
        25,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        23,
        27
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        23,
        27,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        23,
        27,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        23,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        23,
        29,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        23,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        25
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        25,
        27
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        25,
        27,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        25,
        27,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        25,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        25,
        29,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        25,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        27
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        27,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        27,
        29,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        27,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        29
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        29,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        15,
        32
      ],
      "mod_code": [
        "ans += \" RU \" , ans ++ , y ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        17,
        19
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        21
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        21,
        23
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        21,
        25
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        21,
        27
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        21,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        21,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        23
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        23,
        25
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        23,
        27
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        23,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        23,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        25
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        25,
        27
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        25,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        25,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        27
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        27,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        27,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        29,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        19,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        21
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        21,
        23
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        21,
        23,
        25
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        21,
        23,
        27
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        21,
        23,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        21,
        23,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        21,
        25
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        21,
        25,
        27
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        21,
        25,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        21,
        25,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        21,
        27
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        21,
        27,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        21,
        27,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        21,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        21,
        29,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        21,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        23
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        23,
        25
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        23,
        25,
        27
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        23,
        25,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        23,
        25,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        23,
        27
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        23,
        27,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        23,
        27,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        23,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        23,
        29,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        23,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        25
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        25,
        27
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        25,
        27,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        25,
        27,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        25,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        25,
        29,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        25,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        27
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        27,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        27,
        29,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        27,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        29,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        17,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" LD \" , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        19,
        21
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        21,
        23
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        21,
        23,
        25
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        21,
        23,
        27
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        21,
        23,
        29
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        21,
        23,
        32
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        21,
        25
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        21,
        25,
        27
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        21,
        25,
        29
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        21,
        25,
        32
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        21,
        27
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        21,
        27,
        29
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        21,
        27,
        32
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        21,
        29
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        21,
        29,
        32
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        21,
        32
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        23
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        23,
        25
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        23,
        25,
        27
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        23,
        25,
        29
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        23,
        25,
        32
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        23,
        27
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        23,
        27,
        29
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        23,
        27,
        32
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        23,
        29
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        23,
        29,
        32
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        23,
        32
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        25
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        25,
        27
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        25,
        27,
        29
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        25,
        27,
        32
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        25,
        29
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        25,
        29,
        32
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        25,
        32
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        27
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        27,
        29
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        27,
        29,
        32
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        27,
        32
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        29
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        29,
        32
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        19,
        32
      ],
      "mod_code": [
        "ans += \" LU \" , x -- , x ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        21,
        23
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        23,
        25
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        23,
        25,
        27
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        23,
        25,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        23,
        25,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        23,
        27
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        23,
        27,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        23,
        27,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        23,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        23,
        29,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        23,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" U \" , ans ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        25
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        25,
        27
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        25,
        27,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        25,
        27,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        25,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        25,
        29,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        25,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        27
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        27,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        27,
        29,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        27,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        29
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        29,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        21,
        32
      ],
      "mod_code": [
        "ans += \" \" , ans += \" RD \" , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        23,
        25
      ],
      "mod_code": [
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        23,
        25,
        27
      ],
      "mod_code": [
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        23,
        25,
        27,
        29
      ],
      "mod_code": [
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        23,
        25,
        27,
        32
      ],
      "mod_code": [
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        23,
        25,
        29
      ],
      "mod_code": [
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        23,
        25,
        29,
        32
      ],
      "mod_code": [
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        23,
        25,
        32
      ],
      "mod_code": [
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        23,
        27
      ],
      "mod_code": [
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        23,
        27,
        29
      ],
      "mod_code": [
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        23,
        27,
        29,
        32
      ],
      "mod_code": [
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        23,
        27,
        32
      ],
      "mod_code": [
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        23,
        29
      ],
      "mod_code": [
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        23,
        29,
        32
      ],
      "mod_code": [
        "ans += \" U \" , ans ++ , y ++ ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        23,
        32
      ],
      "mod_code": [
        "ans += \" U \" , ans ++ , y ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        25,
        27
      ],
      "mod_code": [
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        25,
        27,
        29
      ],
      "mod_code": [
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        25,
        27,
        29,
        32
      ],
      "mod_code": [
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        25,
        27,
        32
      ],
      "mod_code": [
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        25,
        29
      ],
      "mod_code": [
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        25,
        29,
        32
      ],
      "mod_code": [
        "ans += \" \" D \" D \" D \" D \" ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        25,
        32
      ],
      "mod_code": [
        "ans += \" \" D \" D \" D \" D \" ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        27,
        29
      ],
      "mod_code": [
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;"
      ],
      "err_line": 27,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        27,
        29,
        32
      ],
      "mod_code": [
        "ans += \" L \" , x -- , x -- ;",
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 27,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        27,
        32
      ],
      "mod_code": [
        "ans += \" L \" , x -- , x -- ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 27,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    },
    {
      "mod_line": [
        29,
        32
      ],
      "mod_code": [
        "ans += \" R \" , ans ++ , x ++ ;",
        "for ( int i = 0 ; i < ans . size ( ) ; i ++ ) cout << ans [ i ] ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [2]’)"
    }
  ]
}