{
  "meta": {
    "index": 594,
    "hitid": "3D1UCPY6GG3JAM3E5VAAM5RR6BA38J",
    "workerid": "A1APYLD4DUK33J",
    "probid": "14A",
    "subid": "48308807"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers m , n",
      "code": "int m , n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create 2d character array ar with size n by m",
      "code": "char ar [ n ] [ m ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integers uper , lowar , left , right",
      "code": "int uper , lowar , left , right ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integers ck with ck = 0",
      "code": "int ck = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set left to m",
      "code": "left = m ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set right to 0",
      "code": "right = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create integers con with con = 0",
      "code": "int con = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "read ar [ i ] [ j ]",
      "code": "cin >> ar [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if ck is 0 and ar [ i ] [ j ] is ' * '",
      "code": "if ( ck == 0 && ar [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "set uper to i",
      "code": "uper = i ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "set ck to 1",
      "code": "ck = 1 ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "else if ar [ i ] [ j ] is ' * '",
      "code": "else if ( ar [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "set lowar to i",
      "code": "lowar = i ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "if ar [ i ] [ j ] is ' * ' '",
      "code": "if ( ar [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "increment con",
      "code": "con ++ ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "if j is less than left , set left to j",
      "code": "if ( j < left ) { left = j ; }",
      "indent": 4
    },
    {
      "line": 21,
      "text": "if right is less than j , set right to j",
      "code": "if ( right < j ) { right = j ; }",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "if con is 1 , print \" * \" print newline",
      "code": "if ( con == 1 ) { cout << \" * \" << endl ; }",
      "indent": 1
    },
    {
      "line": 26,
      "text": "if con is greater than 1",
      "code": "if ( con > 1 )",
      "indent": 1
    },
    {
      "line": 27,
      "text": "for i = uper to lowar inclusive",
      "code": "for ( int i = uper ; i <= lowar ; i ++ )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "for j = left to right inclusive , print ar [ i ] [ j ]",
      "code": "for ( int j = left ; j <= right ; j ++ ) { cout << ar [ i ] [ j ] ; }",
      "indent": 3
    },
    {
      "line": 29,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char ar [ n + m ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int uper , lowar , left , right , right ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "ck = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘ck’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int right = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "con = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘con’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "uper to ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "lowar to ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "for ( i = uper ; i <= lowar ; i ++ )"
      ],
      "err_line": 27,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        10
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        10,
        4
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < m ; j ++ )",
        "int uper , lowar , left , right , right ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        3,
        9,
        10,
        16
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < m ; j ++ )",
        "lowar to ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        10,
        18
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        4
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int uper , lowar , left , right , right ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        3,
        9,
        4,
        16
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int uper , lowar , left , right , right ;",
        "lowar to ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        3,
        9,
        4,
        18
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int uper , lowar , left , right , right ;",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        3,
        9,
        16
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "lowar to ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        16,
        18
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "lowar to ;",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        18
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        4
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int uper , lowar , left , right , right ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        3,
        10,
        4,
        16
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int uper , lowar , left , right , right ;",
        "lowar to ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        3,
        10,
        4,
        18
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "int uper , lowar , left , right , right ;",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        3,
        10,
        16
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "lowar to ;"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        16,
        18
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "lowar to ;",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        18
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "int uper , lowar , left , right , right ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        3,
        4,
        16
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "int uper , lowar , left , right , right ;",
        "lowar to ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        3,
        4,
        16,
        18
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "int uper , lowar , left , right , right ;",
        "lowar to ;",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        3,
        4,
        18
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "int uper , lowar , left , right , right ;",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "lowar to ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        16,
        18
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "lowar to ;",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        18
      ],
      "mod_code": [
        "char ar [ n + m ] ;",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < m ; j ++ )",
        "int uper , lowar , left , right , right ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        9,
        10,
        4,
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < m ; j ++ )",
        "int uper , lowar , left , right , right ;",
        "lowar to ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        9,
        10,
        4,
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < m ; j ++ )",
        "int uper , lowar , left , right , right ;",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        9,
        10,
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < m ; j ++ )",
        "lowar to ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        16,
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < m ; j ++ )",
        "lowar to ;",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int uper , lowar , left , right , right ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        9,
        4,
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int uper , lowar , left , right , right ;",
        "lowar to ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        9,
        4,
        16,
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int uper , lowar , left , right , right ;",
        "lowar to ;",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        9,
        4,
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int uper , lowar , left , right , right ;",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "lowar to ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        16,
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "lowar to ;",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "int uper , lowar , left , right , right ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        10,
        4,
        16
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "int uper , lowar , left , right , right ;",
        "lowar to ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        10,
        4,
        16,
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "int uper , lowar , left , right , right ;",
        "lowar to ;",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        10,
        4,
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "int uper , lowar , left , right , right ;",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        10,
        16
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "lowar to ;"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        16,
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "lowar to ;",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "int uper , lowar , left , right , right ;",
        "lowar to ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        4,
        16,
        18
      ],
      "mod_code": [
        "int uper , lowar , left , right , right ;",
        "lowar to ;",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        4,
        18
      ],
      "mod_code": [
        "int uper , lowar , left , right , right ;",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "lowar to ;",
        "if ( ar [ i ] [ j ] != ' * ' )"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘to’"
    }
  ]
}