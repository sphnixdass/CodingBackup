{
  "meta": {
    "index": 57,
    "hitid": "3CZH926SIC8L1JW9IC1TOKFJWGGE4V",
    "workerid": "AIWEXPJAU66D9",
    "probid": "263A",
    "subid": "49071046"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer variables x and y , and array of integers X with size 5 by 5",
      "code": "int X [ 5 ] [ 5 ] , x , y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "in a for loop , change i from 0 to 5 exclusive incrementing i",
      "code": "for ( int i = 0 ; i < 5 ; ++ i )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "increment j from 0 to 5 exclusive in a loop",
      "code": "for ( int j = 0 ; j < 5 ; ++ j )",
      "indent": 2
    },
    {
      "line": 4,
      "text": "read input to X [ i ] [ j ]",
      "code": "cin >> X [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 5,
      "text": "if X [ i ] [ j ] = 1",
      "code": "if ( X [ i ] [ j ] == 1 )",
      "indent": 3
    },
    {
      "line": 6,
      "text": "assign the new value = i + 1 to x",
      "code": "x = i + 1 ;",
      "indent": 4
    },
    {
      "line": 7,
      "text": "set y to j + 1",
      "code": "y = j + 1 ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "declare integer variable moves = abs ( 3 - x ) + abs ( 3 - y )",
      "code": "int moves = abs ( 3 - x ) + abs ( 3 - y ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print moves",
      "code": "cout << moves << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int x , X , X [ 5 ] [ 5 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int X [5][5]’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> X ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [5][5]’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘moves’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        2
      ],
      "mod_code": [
        "cout << moves ;",
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        2,
        3
      ],
      "mod_code": [
        "cout << moves ;",
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( j = 0 ; j < 5 ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        2,
        7
      ],
      "mod_code": [
        "cout << moves ;",
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "y += 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        2,
        11
      ],
      "mod_code": [
        "cout << moves ;",
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        3
      ],
      "mod_code": [
        "cout << moves ;",
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "for ( j = 0 ; j < 5 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        3,
        7
      ],
      "mod_code": [
        "cout << moves ;",
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "y += 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        3,
        11
      ],
      "mod_code": [
        "cout << moves ;",
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        7,
        11
      ],
      "mod_code": [
        "cout << moves ;",
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "y += 1 ;",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘moves’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        5,
        11
      ],
      "mod_code": [
        "cout << moves ;",
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘moves’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "cout << moves ;",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        3
      ],
      "mod_code": [
        "cout << moves ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( j = 0 ; j < 5 ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        3,
        7
      ],
      "mod_code": [
        "cout << moves ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "y += 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        3,
        11
      ],
      "mod_code": [
        "cout << moves ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        7
      ],
      "mod_code": [
        "cout << moves ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "y += 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        7,
        11
      ],
      "mod_code": [
        "cout << moves ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "y += 1 ;",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        11
      ],
      "mod_code": [
        "cout << moves ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "cout << moves ;",
        "for ( j = 0 ; j < 5 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3,
        7
      ],
      "mod_code": [
        "cout << moves ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "y += 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3,
        7,
        11
      ],
      "mod_code": [
        "cout << moves ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "y += 1 ;",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3,
        11
      ],
      "mod_code": [
        "cout << moves ;",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7,
        11
      ],
      "mod_code": [
        "cout << moves ;",
        "y += 1 ;",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘moves’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "cout << moves ;",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘moves’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        3
      ],
      "mod_code": [
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( j = 0 ; j < 5 ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        3,
        7
      ],
      "mod_code": [
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "y += 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        3,
        11
      ],
      "mod_code": [
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        7
      ],
      "mod_code": [
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "y += 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        7,
        11
      ],
      "mod_code": [
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "y += 1 ;",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        11
      ],
      "mod_code": [
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "for ( j = 0 ; j < 5 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        7
      ],
      "mod_code": [
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "y += 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        7,
        11
      ],
      "mod_code": [
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "y += 1 ;",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        11
      ],
      "mod_code": [
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        11
      ],
      "mod_code": [
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "y += 1 ;",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘moves’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "if ( X [ i ] [ j ] == ' 1 ' )",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘moves’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( j = 0 ; j < 5 ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "y += 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "y += 1 ;",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "for ( j = 0 ; j < 5 ; j ++ )",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "y += 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "y += 1 ;",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )",
        "y += 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        11
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )",
        "y += 1 ;",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "y += 1 ;",
        "moves = abs ( 3 - x ) + abs ( 3 - y ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘moves’ was not declared in this scope"
    }
  ]
}