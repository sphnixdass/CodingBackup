{
  "meta": {
    "index": 1304,
    "hitid": "3UAU495MIIM6U83DRWV7607RYTXOUE",
    "workerid": "AIWEXPJAU66D9",
    "probid": "47A",
    "subid": "42466572"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n and k = 0",
      "code": "int n , k = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "a is an array of integers of length 500",
      "code": "int a [ 500 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to 500 exclusive set a [ i ] to ( ( i + 1 ) * ( i + 2 ) ) / 2 ;",
      "code": "for ( int i = 0 ; i < 500 ; i ++ ) { a [ i ] = ( ( i + 1 ) * ( i + 2 ) ) / 2 ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if a [ i ] is equal to n",
      "code": "if ( a [ i ] == n )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print \" YES \" and a new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set value of k to 1",
      "code": "k = 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "break the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if k is equal to 0 print \" NO \" and a new line",
      "code": "if ( k == 0 ) { cout << \" NO \" << endl ; }",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "* k = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "while ( cin >> n )",
        "* k = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        9
      ],
      "mod_code": [
        "while ( cin >> n )",
        "* k = 1 ;",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        9,
        5
      ],
      "mod_code": [
        "while ( cin >> n )",
        "* k = 1 ;",
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        9,
        6
      ],
      "mod_code": [
        "while ( cin >> n )",
        "* k = 1 ;",
        "break break ;",
        "if ( a [ i ] == ' n ' )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        5
      ],
      "mod_code": [
        "while ( cin >> n )",
        "* k = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        5,
        6
      ],
      "mod_code": [
        "while ( cin >> n )",
        "* k = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] == ' n ' )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        6
      ],
      "mod_code": [
        "while ( cin >> n )",
        "* k = 1 ;",
        "if ( a [ i ] == ' n ' )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "while ( cin >> n )",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9,
        5
      ],
      "mod_code": [
        "while ( cin >> n )",
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9,
        5,
        6
      ],
      "mod_code": [
        "while ( cin >> n )",
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] == ' n ' )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9,
        6
      ],
      "mod_code": [
        "while ( cin >> n )",
        "break break ;",
        "if ( a [ i ] == ' n ' )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        6
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] == ' n ' )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "while ( cin >> n )",
        "if ( a [ i ] == ' n ' )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "* k = 1 ;",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        8,
        9,
        5
      ],
      "mod_code": [
        "* k = 1 ;",
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        9,
        5,
        6
      ],
      "mod_code": [
        "* k = 1 ;",
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] == ' n ' )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        9,
        6
      ],
      "mod_code": [
        "* k = 1 ;",
        "break break ;",
        "if ( a [ i ] == ' n ' )"
      ],
      "err_line": 8,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "* k = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        5,
        6
      ],
      "mod_code": [
        "* k = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] == ' n ' )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "* k = 1 ;",
        "if ( a [ i ] == ' n ' )"
      ],
      "err_line": 8,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        5,
        6
      ],
      "mod_code": [
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] == ' n ' )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "break break ;",
        "if ( a [ i ] == ' n ' )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( a [ i ] == ' n ' )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}