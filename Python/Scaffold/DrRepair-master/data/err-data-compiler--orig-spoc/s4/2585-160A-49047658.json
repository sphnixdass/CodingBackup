{
  "meta": {
    "index": 2585,
    "hitid": "3XBYQ44Z6PYZZ4XQIDW7IYYBJJ0TWK",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "160A",
    "subid": "49047658"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function selection_insert taking an int array a and an int n",
      "code": "void selection_insert ( int a [ ] , int n )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "for i = 0 to n - 1",
      "code": "for ( int i = 0 ; i < n - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "imin = int with imin = i",
      "code": "int imin = i ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "for j = i + 1 to n",
      "code": "for ( int j = i + 1 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 4,
      "text": "if a [ j ] is less than a [ imin ] set imin to j",
      "code": "if ( a [ j ] < a [ imin ] ) { imin = j ; }",
      "indent": 3
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 6,
      "text": "temp = int",
      "code": "int temp ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set temp to a [ i ]",
      "code": "temp = a [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set a [ i ] to a [ imin ]",
      "code": "a [ i ] = a [ imin ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set a [ imin ] to temp",
      "code": "a [ imin ] = temp ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 13,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "arr = int array of size n",
      "code": "int arr [ n ] ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "z = int with z = 0",
      "code": "int z = 0 ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "read arr [ i ]",
      "code": "cin >> arr [ i ] ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "increment z by arr [ i ]",
      "code": "z = z + arr [ i ] ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "call selection_insert on arr and n",
      "code": "selection_insert ( arr , n ) ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "set z to z / 2",
      "code": "z = z / 2 ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "ans , cnt = int with ans = 0 and cnt = 0",
      "code": "int ans = 0 , cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "loop while ans is less or equal to z",
      "code": "while ( ans <= z )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "increment cnt",
      "code": "++ cnt ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "increment ans by arr [ n - cnt ]",
      "code": "ans += arr [ n - cnt ] ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "print cnt",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "char temp = a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "char a [ i ] = a [ imin ] ;"
      ],
      "err_line": 8,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 18,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "arr >> arr [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "z += arr [ i ] [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "selection_insert ( arr , selection_insert ) ;"
      ],
      "err_line": 21,
      "err_msg": "invalid conversion from ‘void (*)(int*, int)’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "int ans = 0 , ans = 0 ;"
      ],
      "err_line": 23,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        7,
        24
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "while ( ans <= z ) ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        24,
        19
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "while ( ans <= z ) ;",
        "z += arr [ i ] [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        24,
        19,
        2
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "while ( ans <= z ) ;",
        "z += arr [ i ] [ i ] ;",
        "int imin = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        24,
        19,
        21
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "while ( ans <= z ) ;",
        "z += arr [ i ] [ i ] ;",
        "selection_insert ( arr , selection_insert ) ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        24,
        19,
        18
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "while ( ans <= z ) ;",
        "z += arr [ i ] [ i ] ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        24,
        2
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "while ( ans <= z ) ;",
        "int imin = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        24,
        2,
        21
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "while ( ans <= z ) ;",
        "int imin = 1 ;",
        "selection_insert ( arr , selection_insert ) ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        24,
        2,
        18
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "while ( ans <= z ) ;",
        "int imin = 1 ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        24,
        21
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "while ( ans <= z ) ;",
        "selection_insert ( arr , selection_insert ) ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        24,
        21,
        18
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "while ( ans <= z ) ;",
        "selection_insert ( arr , selection_insert ) ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        24,
        18
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "while ( ans <= z ) ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        19
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "z += arr [ i ] [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        19,
        2
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "z += arr [ i ] [ i ] ;",
        "int imin = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        19,
        2,
        21
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "z += arr [ i ] [ i ] ;",
        "int imin = 1 ;",
        "selection_insert ( arr , selection_insert ) ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        19,
        2,
        18
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "z += arr [ i ] [ i ] ;",
        "int imin = 1 ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        19,
        21
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "z += arr [ i ] [ i ] ;",
        "selection_insert ( arr , selection_insert ) ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        19,
        21,
        18
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "z += arr [ i ] [ i ] ;",
        "selection_insert ( arr , selection_insert ) ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        19,
        18
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "z += arr [ i ] [ i ] ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "int imin = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        2,
        21
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "int imin = 1 ;",
        "selection_insert ( arr , selection_insert ) ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        2,
        21,
        18
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "int imin = 1 ;",
        "selection_insert ( arr , selection_insert ) ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        2,
        18
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "int imin = 1 ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        21
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "selection_insert ( arr , selection_insert ) ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        21,
        18
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "selection_insert ( arr , selection_insert ) ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        7,
        18
      ],
      "mod_code": [
        "char temp = a [ i ] ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘char temp’"
    },
    {
      "mod_line": [
        24,
        19
      ],
      "mod_code": [
        "while ( ans <= z ) ;",
        "z += arr [ i ] [ i ] ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        19,
        2
      ],
      "mod_code": [
        "while ( ans <= z ) ;",
        "z += arr [ i ] [ i ] ;",
        "int imin = 1 ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        19,
        2,
        21
      ],
      "mod_code": [
        "while ( ans <= z ) ;",
        "z += arr [ i ] [ i ] ;",
        "int imin = 1 ;",
        "selection_insert ( arr , selection_insert ) ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        19,
        2,
        18
      ],
      "mod_code": [
        "while ( ans <= z ) ;",
        "z += arr [ i ] [ i ] ;",
        "int imin = 1 ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        24,
        19,
        21
      ],
      "mod_code": [
        "while ( ans <= z ) ;",
        "z += arr [ i ] [ i ] ;",
        "selection_insert ( arr , selection_insert ) ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        19,
        21,
        18
      ],
      "mod_code": [
        "while ( ans <= z ) ;",
        "z += arr [ i ] [ i ] ;",
        "selection_insert ( arr , selection_insert ) ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        24,
        19,
        18
      ],
      "mod_code": [
        "while ( ans <= z ) ;",
        "z += arr [ i ] [ i ] ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        24,
        2,
        21
      ],
      "mod_code": [
        "while ( ans <= z ) ;",
        "int imin = 1 ;",
        "selection_insert ( arr , selection_insert ) ;"
      ],
      "err_line": 21,
      "err_msg": "invalid conversion from ‘void (*)(int*, int)’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        24,
        2,
        21,
        18
      ],
      "mod_code": [
        "while ( ans <= z ) ;",
        "int imin = 1 ;",
        "selection_insert ( arr , selection_insert ) ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        24,
        2,
        18
      ],
      "mod_code": [
        "while ( ans <= z ) ;",
        "int imin = 1 ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        24,
        21
      ],
      "mod_code": [
        "while ( ans <= z ) ;",
        "selection_insert ( arr , selection_insert ) ;"
      ],
      "err_line": 21,
      "err_msg": "invalid conversion from ‘void (*)(int*, int)’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        24,
        21,
        18
      ],
      "mod_code": [
        "while ( ans <= z ) ;",
        "selection_insert ( arr , selection_insert ) ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        24,
        18
      ],
      "mod_code": [
        "while ( ans <= z ) ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        19,
        2
      ],
      "mod_code": [
        "z += arr [ i ] [ i ] ;",
        "int imin = 1 ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        2,
        21
      ],
      "mod_code": [
        "z += arr [ i ] [ i ] ;",
        "int imin = 1 ;",
        "selection_insert ( arr , selection_insert ) ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        2,
        21,
        18
      ],
      "mod_code": [
        "z += arr [ i ] [ i ] ;",
        "int imin = 1 ;",
        "selection_insert ( arr , selection_insert ) ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        19,
        2,
        18
      ],
      "mod_code": [
        "z += arr [ i ] [ i ] ;",
        "int imin = 1 ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        19,
        21
      ],
      "mod_code": [
        "z += arr [ i ] [ i ] ;",
        "selection_insert ( arr , selection_insert ) ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        21,
        18
      ],
      "mod_code": [
        "z += arr [ i ] [ i ] ;",
        "selection_insert ( arr , selection_insert ) ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        19,
        18
      ],
      "mod_code": [
        "z += arr [ i ] [ i ] ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        2,
        21
      ],
      "mod_code": [
        "int imin = 1 ;",
        "selection_insert ( arr , selection_insert ) ;"
      ],
      "err_line": 21,
      "err_msg": "invalid conversion from ‘void (*)(int*, int)’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        21,
        18
      ],
      "mod_code": [
        "int imin = 1 ;",
        "selection_insert ( arr , selection_insert ) ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        2,
        18
      ],
      "mod_code": [
        "int imin = 1 ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        21,
        18
      ],
      "mod_code": [
        "selection_insert ( arr , selection_insert ) ;",
        "arr >> arr [ i ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int’ to binary ‘operator>>’"
    }
  ]
}