{
  "meta": {
    "index": 216,
    "hitid": "3NZ1E5QA6ZV5QZOPMQIDS4FCSS1B5P",
    "workerid": "A1APYLD4DUK33J",
    "probid": "793A",
    "subid": "41656990"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n read k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer vector v initialized with n",
      "code": "vector < int > v ( n ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive , read v [ i ]",
      "code": "for ( int ( i ) = 0 ; ( i ) < ( n ) ; ( i ) ++ ) cin >> v [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer mn with mn = value of smallest value in range beginning of v to end of v",
      "code": "int mn = * min_element ( ( v ) . begin ( ) , ( v ) . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create long long result with result = 0",
      "code": "long long result = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int ( i ) = 0 ; ( i ) < ( n ) ; ( i ) ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if v [ i ] - mn % k is 0",
      "code": "if ( ( v [ i ] - mn ) % k == 0 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment result by v [ i ] - mn / k",
      "code": "result += ( v [ i ] - mn ) / k ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print - 1 print newline",
      "code": "cout << - 1 << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print result print newline",
      "code": "cout << result << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int mn = * max_element ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘max_element()’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        9,
        7
      ],
      "mod_code": [
        "if ( v [ i ] - mn % k == 0 )",
        "result += v [ i ] - mn / k ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        9,
        7,
        2
      ],
      "mod_code": [
        "if ( v [ i ] - mn % k == 0 )",
        "result += v [ i ] - mn / k ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "n >> n >> k ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "if ( v [ i ] - mn % k == 0 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7,
        2
      ],
      "mod_code": [
        "if ( v [ i ] - mn % k == 0 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "n >> n >> k ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7,
        2,
        9
      ],
      "mod_code": [
        "if ( v [ i ] - mn % k == 0 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "n >> n >> k ;",
        "result += ( v [ i ] - mn / k ) ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7,
        9
      ],
      "mod_code": [
        "if ( v [ i ] - mn % k == 0 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "result += ( v [ i ] - mn / k ) ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        8,
        7
      ],
      "mod_code": [
        "result += v [ i ] - mn / k ;",
        "if ( ( v [ i ] - mn % k ) == 0 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        8,
        7,
        2
      ],
      "mod_code": [
        "result += v [ i ] - mn / k ;",
        "if ( ( v [ i ] - mn % k ) == 0 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "n >> n >> k ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "result += v [ i ] - mn / k ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        7,
        2
      ],
      "mod_code": [
        "result += v [ i ] - mn / k ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "n >> n >> k ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "if ( ( v [ i ] - mn % k ) == 0 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7,
        2
      ],
      "mod_code": [
        "if ( ( v [ i ] - mn % k ) == 0 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "n >> n >> k ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7,
        2,
        9
      ],
      "mod_code": [
        "if ( ( v [ i ] - mn % k ) == 0 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "n >> n >> k ;",
        "result += ( v [ i ] - mn / k ) ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7,
        9
      ],
      "mod_code": [
        "if ( ( v [ i ] - mn % k ) == 0 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "result += ( v [ i ] - mn / k ) ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "n >> n >> k ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        2,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "n >> n >> k ;",
        "result += ( v [ i ] - mn / k ) ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "result += ( v [ i ] - mn / k ) ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}