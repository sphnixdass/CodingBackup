{
  "meta": {
    "index": 1985,
    "hitid": "3XAOZ9UYRZLT6NPV4LDRK3XU3ZT1QG",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "801A",
    "subid": "48967999"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a = character array of size 128 with a = { 0 }",
      "code": "char a [ 128 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "vis = bool array of size 128 with vis = { 0 }",
      "code": "bool vis [ 128 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "len , count = integers with len = 0 , count = 0",
      "code": "int len = 0 , count = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "ch = character",
      "code": "char ch ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while ( ch = cin . get ( ) ) is not new line",
      "code": "while ( ( ch = cin . get ( ) ) != ' \\n ' )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "a [ increment len ] = ch",
      "code": "a [ len ++ ] = ch ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if len > 1 and a [ len - 1 ] is K and a [ len - 2 ] is V",
      "code": "if ( len > 1 && a [ len - 1 ] == ' K ' && a [ len - 2 ] == ' V ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "vis [ len - 1 ] = vis [ len - 2 ] = 1",
      "code": "vis [ len - 1 ] = vis [ len - 2 ] = 1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "a [ len ] = 0",
      "code": "a [ len ] = ' \\0 ' ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if len is 1",
      "code": "if ( len == 1 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print 0",
      "code": "cout << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i = 0 to len exclusive",
      "code": "for ( int i = 0 ; i < len ; i ++ )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if not vis [ i ]",
      "code": "if ( ! vis [ i ] )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "if a [ i ] is V",
      "code": "if ( a [ i ] == ' V ' )",
      "indent": 4
    },
    {
      "line": 19,
      "text": "if i is not 0 and a [ i - 1 ] is V",
      "code": "if ( i != 0 && a [ i - 1 ] == ' V ' )",
      "indent": 5
    },
    {
      "line": 20,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 6
    },
    {
      "line": 21,
      "text": "break loop",
      "code": "break ;",
      "indent": 6
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 24,
      "text": "if i is not len - 1 and a [ i + 1 ] is K",
      "code": "if ( i != len - 1 && a [ i + 1 ] == ' K ' )",
      "indent": 5
    },
    {
      "line": 25,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 6
    },
    {
      "line": 26,
      "text": "break loop",
      "code": "break ;",
      "indent": 6
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 31,
      "text": "print count",
      "code": "cout << count << endl ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "if ( a [ i ] == V )"
      ],
      "err_line": 18,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( i != 0 && a [ i - 1 ] == V )"
      ],
      "err_line": 19,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "if ( i != len - 1 && a [ i + 1 ] == K )"
      ],
      "err_line": 24,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int len , count = 0 , count = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int count’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "set < char > ch ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::set<char>’ and ‘std::basic_istream<char>::int_type {aka int}’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( ch == cin . not ( ) )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘not’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( len > 1 && a [ len - 1 ] == ' K ' && a [ len - 2 ] == V )"
      ],
      "err_line": 7,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( len == l )"
      ],
      "err_line": 13,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( i != 0 and a [ i - 1 ] == V )"
      ],
      "err_line": 19,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 23,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 26,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        18
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( a [ i ] == V )"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        18,
        19
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( a [ i ] == V )",
        "if ( i != 0 && a [ i - 1 ] == V )"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        18,
        24
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( a [ i ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        18,
        21
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( a [ i ] == V )",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        19
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( i != 0 && a [ i - 1 ] == V )"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        19,
        24
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( i != 0 && a [ i - 1 ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        19,
        21
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( i != 0 && a [ i - 1 ] == V )",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        24
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        24,
        21
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        21
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        18
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( a [ i ] == V )"
      ],
      "err_line": 18,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        18,
        19
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( a [ i ] == V )",
        "if ( i != 0 && a [ i - 1 ] == V )"
      ],
      "err_line": 18,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        18,
        19,
        24
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( a [ i ] == V )",
        "if ( i != 0 && a [ i - 1 ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )"
      ],
      "err_line": 18,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        18,
        19,
        21
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( a [ i ] == V )",
        "if ( i != 0 && a [ i - 1 ] == V )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        18,
        24
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( a [ i ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )"
      ],
      "err_line": 18,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        18,
        24,
        21
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( a [ i ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        18,
        21
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( a [ i ] == V )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        19
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( i != 0 && a [ i - 1 ] == V )"
      ],
      "err_line": 19,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        19,
        24
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( i != 0 && a [ i - 1 ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )"
      ],
      "err_line": 19,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        19,
        24,
        21
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( i != 0 && a [ i - 1 ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )",
        "break break ;"
      ],
      "err_line": 19,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        19,
        21
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( i != 0 && a [ i - 1 ] == V )",
        "break break ;"
      ],
      "err_line": 19,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        24
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( i != len - 1 && a [ i + 1 ] == K )"
      ],
      "err_line": 24,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        24,
        21
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "if ( i != len - 1 && a [ i + 1 ] == K )",
        "break break ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        5,
        21
      ],
      "mod_code": [
        "while ( ch == cin . get ( ) )",
        "break break ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        7,
        18
      ],
      "mod_code": [
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( a [ i ] == V )"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        18,
        19
      ],
      "mod_code": [
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( a [ i ] == V )",
        "if ( i != 0 && a [ i - 1 ] == V )"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        18,
        19,
        24
      ],
      "mod_code": [
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( a [ i ] == V )",
        "if ( i != 0 && a [ i - 1 ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        18,
        19,
        21
      ],
      "mod_code": [
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( a [ i ] == V )",
        "if ( i != 0 && a [ i - 1 ] == V )",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        18,
        24
      ],
      "mod_code": [
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( a [ i ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        18,
        24,
        21
      ],
      "mod_code": [
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( a [ i ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        18,
        21
      ],
      "mod_code": [
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( a [ i ] == V )",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        19
      ],
      "mod_code": [
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( i != 0 && a [ i - 1 ] == V )"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        19,
        24
      ],
      "mod_code": [
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( i != 0 && a [ i - 1 ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        19,
        24,
        21
      ],
      "mod_code": [
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( i != 0 && a [ i - 1 ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        19,
        21
      ],
      "mod_code": [
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( i != 0 && a [ i - 1 ] == V )",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        24
      ],
      "mod_code": [
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        24,
        21
      ],
      "mod_code": [
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        21
      ],
      "mod_code": [
        "if ( len > 1 && a [ len - 1 ] == K && a [ len - 2 ] == V )",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "‘K’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19
      ],
      "mod_code": [
        "if ( a [ i ] == V )",
        "if ( i != 0 && a [ i - 1 ] == V )"
      ],
      "err_line": 18,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        24
      ],
      "mod_code": [
        "if ( a [ i ] == V )",
        "if ( i != 0 && a [ i - 1 ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )"
      ],
      "err_line": 18,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        24,
        21
      ],
      "mod_code": [
        "if ( a [ i ] == V )",
        "if ( i != 0 && a [ i - 1 ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        21
      ],
      "mod_code": [
        "if ( a [ i ] == V )",
        "if ( i != 0 && a [ i - 1 ] == V )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24
      ],
      "mod_code": [
        "if ( a [ i ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )"
      ],
      "err_line": 18,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        24,
        21
      ],
      "mod_code": [
        "if ( a [ i ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        21
      ],
      "mod_code": [
        "if ( a [ i ] == V )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24
      ],
      "mod_code": [
        "if ( i != 0 && a [ i - 1 ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )"
      ],
      "err_line": 19,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        24,
        21
      ],
      "mod_code": [
        "if ( i != 0 && a [ i - 1 ] == V )",
        "if ( i != len - 1 && a [ i + 1 ] == K )",
        "break break ;"
      ],
      "err_line": 19,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        21
      ],
      "mod_code": [
        "if ( i != 0 && a [ i - 1 ] == V )",
        "break break ;"
      ],
      "err_line": 19,
      "err_msg": "‘V’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        21
      ],
      "mod_code": [
        "if ( i != len - 1 && a [ i + 1 ] == K )",
        "break break ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘break’"
    }
  ]
}