{
  "meta": {
    "index": 1078,
    "hitid": "362E9TQF2HKDT4RF9WTLIOAEDRZIGN",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "187A",
    "subid": "36252273"
  },
  "lines": [
    {
      "line": 0,
      "text": "N = int with N = 1e6 + 6",
      "code": "const int N = 1e6 + 6 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "pos , id , arr , BIT , brr = int array of size N each",
      "code": "int pos [ N ] , id [ N ] , arr [ N ] , BIT [ N ] , brr [ N ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive read arr [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to n inclusive read brr [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> brr [ i ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "now , s = int with now = 1 , s = 0",
      "code": "int now = 1 , s = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 1 to n inclusive increment now if arr [ now ] equals brr [ i ] else increment s",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { ( arr [ now ] == brr [ i ] ) ? now ++ : s ++ ; }",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print n - now + 1",
      "code": "cout << n - now + 1 << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int N = 1e6 + 6 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int N = ( 1e6 + 6 ) ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int id [1000006]’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int now = 1 , now = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int now’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "int N = 1e6 + 6 ;",
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        8,
        1
      ],
      "mod_code": [
        "int N = 1e6 + 6 ;",
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;",
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        8,
        1,
        7
      ],
      "mod_code": [
        "int N = 1e6 + 6 ;",
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;",
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;",
        "int now = 1 , now = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        8,
        1,
        3
      ],
      "mod_code": [
        "int N = 1e6 + 6 ;",
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;",
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;",
        "char n ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        8,
        7
      ],
      "mod_code": [
        "int N = 1e6 + 6 ;",
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;",
        "int now = 1 , now = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        8,
        7,
        3
      ],
      "mod_code": [
        "int N = 1e6 + 6 ;",
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;",
        "int now = 1 , now = 0 ;",
        "char n ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        8,
        3
      ],
      "mod_code": [
        "int N = 1e6 + 6 ;",
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;",
        "char n ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int N = 1e6 + 6 ;",
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        1,
        7
      ],
      "mod_code": [
        "int N = 1e6 + 6 ;",
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;",
        "int now = 1 , now = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        1,
        7,
        3
      ],
      "mod_code": [
        "int N = 1e6 + 6 ;",
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;",
        "int now = 1 , now = 0 ;",
        "char n ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        1,
        3
      ],
      "mod_code": [
        "int N = 1e6 + 6 ;",
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;",
        "char n ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int N = 1e6 + 6 ;",
        "int now = 1 , now = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        7,
        3
      ],
      "mod_code": [
        "int N = 1e6 + 6 ;",
        "int now = 1 , now = 0 ;",
        "char n ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int N = 1e6 + 6 ;",
        "char n ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;",
        "int N = ( 1e6 + 6 ) ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        0,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;",
        "int N = ( 1e6 + 6 ) ;",
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        0,
        1,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;",
        "int N = ( 1e6 + 6 ) ;",
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;",
        "int now = 1 , now = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        0,
        1,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;",
        "int N = ( 1e6 + 6 ) ;",
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;",
        "char n ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        0,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;",
        "int N = ( 1e6 + 6 ) ;",
        "int now = 1 , now = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        0,
        7,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;",
        "int N = ( 1e6 + 6 ) ;",
        "int now = 1 , now = 0 ;",
        "char n ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        0,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;",
        "int N = ( 1e6 + 6 ) ;",
        "char n ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;",
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int id [1000006]’"
    },
    {
      "mod_line": [
        8,
        1,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;",
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;",
        "int now = 1 , now = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int id [1000006]’"
    },
    {
      "mod_line": [
        8,
        1,
        7,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;",
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;",
        "int now = 1 , now = 0 ;",
        "char n ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int id [1000006]’"
    },
    {
      "mod_line": [
        8,
        1,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;",
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;",
        "char n ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int id [1000006]’"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;",
        "int now = 1 , now = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int now’"
    },
    {
      "mod_line": [
        8,
        7,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;",
        "int now = 1 , now = 0 ;",
        "char n ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int now’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) now [ now ] = brr [ i ] : brr [ now ] ;",
        "char n ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int N = ( 1e6 + 6 ) ;",
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        1,
        7
      ],
      "mod_code": [
        "int N = ( 1e6 + 6 ) ;",
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;",
        "int now = 1 , now = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        1,
        7,
        3
      ],
      "mod_code": [
        "int N = ( 1e6 + 6 ) ;",
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;",
        "int now = 1 , now = 0 ;",
        "char n ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        1,
        3
      ],
      "mod_code": [
        "int N = ( 1e6 + 6 ) ;",
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;",
        "char n ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int N = ( 1e6 + 6 ) ;",
        "int now = 1 , now = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        7,
        3
      ],
      "mod_code": [
        "int N = ( 1e6 + 6 ) ;",
        "int now = 1 , now = 0 ;",
        "char n ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int N = ( 1e6 + 6 ) ;",
        "char n ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;",
        "int now = 1 , now = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int id [1000006]’"
    },
    {
      "mod_line": [
        1,
        7,
        3
      ],
      "mod_code": [
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;",
        "int now = 1 , now = 0 ;",
        "char n ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int id [1000006]’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int pos [ N ] , id [ N ] , id [ N ] , brr [ N ] ;",
        "char n ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int id [1000006]’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "int now = 1 , now = 0 ;",
        "char n ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int now’"
    }
  ]
}