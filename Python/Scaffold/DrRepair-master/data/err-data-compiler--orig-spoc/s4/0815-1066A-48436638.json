{
  "meta": {
    "index": 815,
    "hitid": "3B9J25CZ257P66E6CMRGWZVMPK6SCN",
    "workerid": "A1APYLD4DUK33J",
    "probid": "1066A",
    "subid": "48436638"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers t , L , v , l , r",
      "code": "int t , L , v , l , r ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while decrement t",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read L , v , l , r",
      "code": "cin >> L >> v >> l >> r ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "print L / v - r / v + l / v - ( 1 if l % v is 0 , else 0 ) , \" \\ n \"",
      "code": "cout << L / v - r / v + l / v - ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cout << ( l % v - r / v + l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cout << ( l % v - r / v / l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "cout << ( l % v - r / v + l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "cin >> L >> v , l >> r ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        5,
        4,
        3
      ],
      "mod_code": [
        "cout << ( l % v - r / v + l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "cin >> L >> v , l >> r ;",
        "while ( -- t )"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        5,
        4,
        3,
        2
      ],
      "mod_code": [
        "cout << ( l % v - r / v + l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "cin >> L >> v , l >> r ;",
        "while ( -- t )",
        "{ t ; }"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        5,
        4,
        3,
        1
      ],
      "mod_code": [
        "cout << ( l % v - r / v + l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "cin >> L >> v , l >> r ;",
        "while ( -- t )",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        5,
        4,
        2
      ],
      "mod_code": [
        "cout << ( l % v - r / v + l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "cin >> L >> v , l >> r ;",
        "{ t ; }"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        5,
        4,
        2,
        1
      ],
      "mod_code": [
        "cout << ( l % v - r / v + l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "cin >> L >> v , l >> r ;",
        "{ t ; }",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        5,
        4,
        1
      ],
      "mod_code": [
        "cout << ( l % v - r / v + l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "cin >> L >> v , l >> r ;",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "cout << ( l % v - r / v + l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "while ( -- t )"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        5,
        3,
        2
      ],
      "mod_code": [
        "cout << ( l % v - r / v + l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "while ( -- t )",
        "{ t ; }"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        5,
        3,
        2,
        1
      ],
      "mod_code": [
        "cout << ( l % v - r / v + l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "while ( -- t )",
        "{ t ; }",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        5,
        3,
        1
      ],
      "mod_code": [
        "cout << ( l % v - r / v + l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "while ( -- t )",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "cout << ( l % v - r / v + l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "{ t ; }"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        5,
        2,
        1
      ],
      "mod_code": [
        "cout << ( l % v - r / v + l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "{ t ; }",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "cout << ( l % v - r / v + l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        3,
        2,
        5
      ],
      "mod_code": [
        "cin >> L >> v , l >> r ;",
        "while ( -- t )",
        "{ t ; }",
        "cout << ( l % v - r / v / l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        3,
        2,
        1
      ],
      "mod_code": [
        "cin >> L >> v , l >> r ;",
        "while ( -- t )",
        "{ t ; }",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        3,
        5
      ],
      "mod_code": [
        "cin >> L >> v , l >> r ;",
        "while ( -- t )",
        "cout << ( l % v - r / v / l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        3,
        5,
        1
      ],
      "mod_code": [
        "cin >> L >> v , l >> r ;",
        "while ( -- t )",
        "cout << ( l % v - r / v / l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        3,
        1
      ],
      "mod_code": [
        "cin >> L >> v , l >> r ;",
        "while ( -- t )",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        2,
        5
      ],
      "mod_code": [
        "cin >> L >> v , l >> r ;",
        "{ t ; }",
        "cout << ( l % v - r / v / l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        2,
        5,
        1
      ],
      "mod_code": [
        "cin >> L >> v , l >> r ;",
        "{ t ; }",
        "cout << ( l % v - r / v / l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        2,
        1
      ],
      "mod_code": [
        "cin >> L >> v , l >> r ;",
        "{ t ; }",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "cin >> L >> v , l >> r ;",
        "cout << ( l % v - r / v / l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        5,
        1
      ],
      "mod_code": [
        "cin >> L >> v , l >> r ;",
        "cout << ( l % v - r / v / l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "cin >> L >> v , l >> r ;",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        3,
        2,
        5
      ],
      "mod_code": [
        "while ( -- t )",
        "{ t ; }",
        "cout << ( l % v - r / v / l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        2,
        5,
        1
      ],
      "mod_code": [
        "while ( -- t )",
        "{ t ; }",
        "cout << ( l % v - r / v / l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        3,
        2,
        1
      ],
      "mod_code": [
        "while ( -- t )",
        "{ t ; }",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "while ( -- t )",
        "cout << ( l % v - r / v / l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        5,
        1
      ],
      "mod_code": [
        "while ( -- t )",
        "cout << ( l % v - r / v / l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "while ( -- t )",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "{ t ; }",
        "cout << ( l % v - r / v / l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        2,
        5,
        1
      ],
      "mod_code": [
        "{ t ; }",
        "cout << ( l % v - r / v / l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "{ t ; }",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "cout << ( l % v - r / v / l == 0 ? ( l % v == 0 ? 1 : 0 ) << \" \\n \" ;",
        "int t , L , v , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    }
  ]
}