{
  "meta": {
    "index": 2328,
    "hitid": "371QPA24C2I6Y3HNLP7MP88HN6Z1T1",
    "workerid": "A1APYLD4DUK33J",
    "probid": "834A",
    "subid": "46310854"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare characters A , B",
      "code": "char A , B ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare character array C = { ' ^ ' , ' > ' , ' v ' , ' < ' , ' ^ ' , ' > ' , ' v ' }",
      "code": "char C [ ] = { ' ^ ' , ' > ' , ' v ' , ' < ' , ' ^ ' , ' > ' , ' v ' } ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare character array D = { ' ^ ' , ' < ' , ' v ' , ' > ' , ' ^ ' , ' < ' , ' v ' }",
      "code": "char D [ ] = { ' ^ ' , ' < ' , ' v ' , ' > ' , ' ^ ' , ' < ' , ' v ' } ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare integer N",
      "code": "int N ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "read A , B , N",
      "code": "cin >> A >> B >> N ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if A is ' ^ '",
      "code": "if ( A == ' ^ ' )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if C [ 0 + ( N % 4 ) ] is D [ 0 + ( N % 4 ) ]",
      "code": "if ( C [ 0 + ( N % 4 ) ] == D [ 0 + ( N % 4 ) ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print \" undefined \\ n \"",
      "code": "cout << \" undefined\\n \" ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else if C [ 0 + ( N % 4 ) ] is B",
      "code": "else if ( C [ 0 + ( N % 4 ) ] == B )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print \" cw \\ n \"",
      "code": "cout << \" cw\\n \" ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print \" ccw \\ n \"",
      "code": "cout << \" ccw\\n \" ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if A is ' > '",
      "code": "if ( A == ' > ' )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if C [ 1 + ( N % 4 ) ] is D [ 3 + ( N % 4 ) ]",
      "code": "if ( C [ 1 + ( N % 4 ) ] == D [ 3 + ( N % 4 ) ] )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print \" undefined \\ n \"",
      "code": "cout << \" undefined\\n \" ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else if C [ 1 + ( N % 4 ) ] is B",
      "code": "else if ( C [ 1 + ( N % 4 ) ] == B )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print \" cw \\ n \"",
      "code": "cout << \" cw\\n \" ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print \" ccw \\ n \"",
      "code": "cout << \" ccw\\n \" ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "if A is ' v '",
      "code": "if ( A == ' v ' )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if C [ 2 + ( N % 4 ) ] is D [ 2 + ( N % 4 ) ]",
      "code": "if ( C [ 2 + ( N % 4 ) ] == D [ 2 + ( N % 4 ) ] )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "print \" undefined \\ n \"",
      "code": "cout << \" undefined\\n \" ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "else if C [ 2 + ( N % 4 ) ] is B",
      "code": "else if ( C [ 2 + ( N % 4 ) ] == B )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "print \" cw \\ n \"",
      "code": "cout << \" cw\\n \" ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 28,
      "text": "print \" ccw \\ n \"",
      "code": "cout << \" ccw\\n \" ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "if A is ' < '",
      "code": "if ( A == ' < ' )",
      "indent": 1
    },
    {
      "line": 31,
      "text": "if C [ 3 + ( N % 4 ) ] is D [ 1 + ( N % 4 ) ]",
      "code": "if ( C [ 3 + ( N % 4 ) ] == D [ 1 + ( N % 4 ) ] )",
      "indent": 2
    },
    {
      "line": 32,
      "text": "print \" undefined \\ n \"",
      "code": "cout << \" undefined\\n \" ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "else if C [ 3 + ( N % 4 ) ] is B",
      "code": "else if ( C [ 3 + ( N % 4 ) ] == B )",
      "indent": 2
    },
    {
      "line": 34,
      "text": "print \" cw \\ n \"",
      "code": "cout << \" cw\\n \" ;",
      "indent": 3
    },
    {
      "line": 35,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 36,
      "text": "print \" ccw \\ n \"",
      "code": "cout << \" ccw\\n \" ;",
      "indent": 3
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char A , B , B ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char B’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 5,
      "err_msg": "‘N’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( C [ 0 + ( N % 4 ) ] == \" D ( N % 4 ) ] )"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "<< \" \\n \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "<< \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( C [ 1 + ( N % 4 ) ] == \" D ( N % 4 ) ] )"
      ],
      "err_line": 15,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "<< \" \\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "<< \" \\n \" ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "if ( C [ 2 + ( N % 4 ) ] == ' D ' ) { D += 2 + ( N % 4 ) ] ; }"
      ],
      "err_line": 23,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [7]’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "<< \" \\n \" ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "<< \" \\n \" ;"
      ],
      "err_line": 28,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "<< \" \\n \" ;"
      ],
      "err_line": 32,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "<< \" \\n \" ;"
      ],
      "err_line": 36,
      "err_msg": "expected primary-expression before ‘<<’ token"
    }
  ]
}