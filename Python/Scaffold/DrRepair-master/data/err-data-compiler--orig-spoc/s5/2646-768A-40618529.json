{
  "meta": {
    "index": 2646,
    "hitid": "3BFNCI9LYKKFA8YVVQI485VWV6M73C",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "768A",
    "subid": "40618529"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "i , n , cnt = integers with cnt = 0 and a = array of 100001 integers",
      "code": "long long int i , n , cnt = 0 , a [ 100001 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "Read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "Read n values into array a",
      "code": "for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "mx = integer , set to a [ 0 ]",
      "code": "int mx = a [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "mn = integer , set to a [ 0 ]",
      "code": "int mn = a [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if a [ i ] is greater than mx , set mx to a [ i ]",
      "code": "if ( a [ i ] > mx ) mx = a [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if a [ i ] is less than mn , set mn to a [ i ]",
      "code": "if ( a [ i ] < mn ) mn = a [ i ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if a [ i ] is greater than mn and a [ i ] is less than mx",
      "code": "if ( a [ i ] > mn && a [ i ] < mx ) cnt ++ ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print cnt and a new line",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( a [ i ] > mn && a [ i ] < mx )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a [ 100001 ] , n , n , cnt = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "{ cin >> n ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( a [ i ] > mn and a [ i ] < mx )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "if ( a [ i ] > mn && a [ i ] < mx )",
        "{ cin >> n ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        2,
        1
      ],
      "mod_code": [
        "if ( a [ i ] > mn && a [ i ] < mx )",
        "{ cin >> n ;",
        "int a [ 100001 ] , n , n , cnt = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "if ( a [ i ] > mn && a [ i ] < mx )",
        "int a [ 100001 ] , n , n , cnt = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "{ cin >> n ;",
        "if ( a [ i ] > mn and a [ i ] < mx )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        11,
        1
      ],
      "mod_code": [
        "{ cin >> n ;",
        "if ( a [ i ] > mn and a [ i ] < mx )",
        "int a [ 100001 ] , n , n , cnt = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "{ cin >> n ;",
        "int a [ 100001 ] , n , n , cnt = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "if ( a [ i ] > mn and a [ i ] < mx )",
        "int a [ 100001 ] , n , n , cnt = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    }
  ]
}