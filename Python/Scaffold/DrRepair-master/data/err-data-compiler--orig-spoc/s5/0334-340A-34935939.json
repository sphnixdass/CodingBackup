{
  "meta": {
    "index": 334,
    "hitid": "3B9J25CZ257P66E6CMRGWZVMPK6CS7",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "340A",
    "subid": "34935939"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function gcd taking int a , int b and returning int",
      "code": "int gcd ( int a , int b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if b is 0 return a",
      "code": "if ( b == 0 ) return a ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return gcd of b , a mod b",
      "code": "return gcd ( b , a % b ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "in function LCM taking int a , int b and returning int",
      "code": "int LCM ( int a , int b )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "return ( a * b ) / gcd of a , b",
      "code": "return ( a * b ) / gcd ( a , b ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "ans , x , y , aa , bb , m = int",
      "code": "int ans , x , y , aa , bb , m ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read x then y then aa then bb",
      "code": "cin >> x >> y >> aa >> bb ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set m to LCM of max of x , y , min of x , y",
      "code": "m = LCM ( max ( x , y ) , min ( x , y ) ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set ans to ( bb / m ) - ( aa - 1 ) / m",
      "code": "ans = ( bb / m ) - ( aa - 1 ) / m ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int LCM ( int a , int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int ans , x , y , aa , aa , m ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int aa’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cin >> x >> y >> aa >> n ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "too many arguments to function ‘int LCM(int, int)’"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        0,
        4
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "int gcd ( int a , int b ) ;",
        "int LCM ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        0,
        4,
        9
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "int gcd ( int a , int b ) ;",
        "int LCM ( int a , int b ) ;",
        "cin >> x >> y >> aa >> n ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        0,
        4,
        8
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "int gcd ( int a , int b ) ;",
        "int LCM ( int a , int b ) ;",
        "int ans , x , y , aa , aa , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        0,
        4,
        10
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "int gcd ( int a , int b ) ;",
        "int LCM ( int a , int b ) ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        0,
        9
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "int gcd ( int a , int b ) ;",
        "cin >> x >> y >> aa >> n ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        0,
        9,
        8
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "int gcd ( int a , int b ) ;",
        "cin >> x >> y >> aa >> n ;",
        "int ans , x , y , aa , aa , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        0,
        9,
        10
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "int gcd ( int a , int b ) ;",
        "cin >> x >> y >> aa >> n ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        0,
        8
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "int gcd ( int a , int b ) ;",
        "int ans , x , y , aa , aa , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        0,
        8,
        10
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "int gcd ( int a , int b ) ;",
        "int ans , x , y , aa , aa , m ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        0,
        10
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "int gcd ( int a , int b ) ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "int LCM ( int a , int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        4,
        9
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "int LCM ( int a , int b ) ;",
        "cin >> x >> y >> aa >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        4,
        9,
        8
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "int LCM ( int a , int b ) ;",
        "cin >> x >> y >> aa >> n ;",
        "int ans , x , y , aa , aa , m ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        4,
        9,
        10
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "int LCM ( int a , int b ) ;",
        "cin >> x >> y >> aa >> n ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        4,
        8
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "int LCM ( int a , int b ) ;",
        "int ans , x , y , aa , aa , m ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        4,
        8,
        10
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "int LCM ( int a , int b ) ;",
        "int ans , x , y , aa , aa , m ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        4,
        10
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "int LCM ( int a , int b ) ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "cin >> x >> y >> aa >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        9,
        8
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "cin >> x >> y >> aa >> n ;",
        "int ans , x , y , aa , aa , m ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        9,
        8,
        10
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "cin >> x >> y >> aa >> n ;",
        "int ans , x , y , aa , aa , m ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        9,
        10
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "cin >> x >> y >> aa >> n ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "int ans , x , y , aa , aa , m ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        8,
        10
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "int ans , x , y , aa , aa , m ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "return a * b ) / gcd ( a , b ) ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;",
        "int LCM ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        9
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;",
        "int LCM ( int a , int b ) ;",
        "cin >> x >> y >> aa >> n ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        9,
        8
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;",
        "int LCM ( int a , int b ) ;",
        "cin >> x >> y >> aa >> n ;",
        "int ans , x , y , aa , aa , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        9,
        10
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;",
        "int LCM ( int a , int b ) ;",
        "cin >> x >> y >> aa >> n ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        8
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;",
        "int LCM ( int a , int b ) ;",
        "int ans , x , y , aa , aa , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        8,
        10
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;",
        "int LCM ( int a , int b ) ;",
        "int ans , x , y , aa , aa , m ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4,
        10
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;",
        "int LCM ( int a , int b ) ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;",
        "cin >> x >> y >> aa >> n ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9,
        8
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;",
        "cin >> x >> y >> aa >> n ;",
        "int ans , x , y , aa , aa , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9,
        8,
        10
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;",
        "cin >> x >> y >> aa >> n ;",
        "int ans , x , y , aa , aa , m ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9,
        10
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;",
        "cin >> x >> y >> aa >> n ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;",
        "int ans , x , y , aa , aa , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        8,
        10
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;",
        "int ans , x , y , aa , aa , m ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "int LCM ( int a , int b ) ;",
        "cin >> x >> y >> aa >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        9,
        8
      ],
      "mod_code": [
        "int LCM ( int a , int b ) ;",
        "cin >> x >> y >> aa >> n ;",
        "int ans , x , y , aa , aa , m ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        9,
        8,
        10
      ],
      "mod_code": [
        "int LCM ( int a , int b ) ;",
        "cin >> x >> y >> aa >> n ;",
        "int ans , x , y , aa , aa , m ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        9,
        10
      ],
      "mod_code": [
        "int LCM ( int a , int b ) ;",
        "cin >> x >> y >> aa >> n ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "int LCM ( int a , int b ) ;",
        "int ans , x , y , aa , aa , m ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10
      ],
      "mod_code": [
        "int LCM ( int a , int b ) ;",
        "int ans , x , y , aa , aa , m ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "int LCM ( int a , int b ) ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "cin >> x >> y >> aa >> n ;",
        "int ans , x , y , aa , aa , m ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int aa’"
    },
    {
      "mod_line": [
        9,
        8,
        10
      ],
      "mod_code": [
        "cin >> x >> y >> aa >> n ;",
        "int ans , x , y , aa , aa , m ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int aa’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "cin >> x >> y >> aa >> n ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "int ans , x , y , aa , aa , m ;",
        "m = LCM ( x , y , min ( x , y ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int aa’"
    }
  ]
}