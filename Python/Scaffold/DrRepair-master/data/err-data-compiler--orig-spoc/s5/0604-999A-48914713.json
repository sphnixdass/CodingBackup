{
  "meta": {
    "index": 604,
    "hitid": "3M93N4X8HKHCEKKCME82J38HF4DJSQ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "999A",
    "subid": "48914713"
  },
  "lines": [
    {
      "line": 0,
      "text": "create const int N = 110",
      "code": "const int N = 110 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long long constant MAX = 1e8 + 5",
      "code": "const long long MAX = 1e8 + 5 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integers n , k and ans and an integer array a with N elements",
      "code": "int a [ N ] , n , k , ans ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read input to n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i from 0 to n exclusive , read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create integers flag1 and flag2 = 1",
      "code": "int flag1 = 1 , flag2 = 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for integer i = 0 and integer j = n - 1 while i < = j , incrementing i and decrementing j",
      "code": "for ( int i = 0 , j = n - 1 ; i <= j ; i ++ , j -- )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if a [ i ] < = k and flag1 ! = 0 , increment ans",
      "code": "if ( ( a [ i ] <= k ) && flag1 ) { ans ++ ; }",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if a [ i ] is greater than k",
      "code": "if ( a [ i ] > k )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "change flag1 to 0",
      "code": "flag1 = 0 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "decrement i by one",
      "code": "i -- ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if a [ j ] < = k and flag2 ! = 0 and ans < n , increment ans",
      "code": "if ( ( a [ j ] <= k ) && flag2 && ( ans < n ) ) ans ++ ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if a [ j ] is greater than k",
      "code": "if ( a [ j ] > k )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "set flag2 to 0",
      "code": "flag2 = 0 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "increment j by one",
      "code": "j ++ ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if flag1 is 0 and flag2 is 0 , break the loop",
      "code": "if ( ! flag1 && ! flag2 ) break ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , k , a [ N ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= j ; i ++ ) { j = n - 1 ; }"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( int i = 0 , i = n - 1 ; i <= j ; i ++ , j -- )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( a [ i ] ] > k )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( a [ j ] ] > k )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "int n , k , a [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1,
        2,
        7
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "int n , k , a [ N ] ;",
        "for ( int i = 0 ; i <= j ; i ++ ) { j = n - 1 ; }"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1,
        2,
        7,
        0
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "int n , k , a [ N ] ;",
        "for ( int i = 0 ; i <= j ; i ++ ) { j = n - 1 ; }",
        "const int N = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1,
        2,
        7,
        15
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "int n , k , a [ N ] ;",
        "for ( int i = 0 ; i <= j ; i ++ ) { j = n - 1 ; }",
        "int flag2 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1,
        2,
        7
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "int n , k , a [ N ] ;",
        "for ( int i = 0 , i = n - 1 ; i <= j ; i ++ , j -- )"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1,
        2,
        7,
        0
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "int n , k , a [ N ] ;",
        "for ( int i = 0 , i = n - 1 ; i <= j ; i ++ , j -- )",
        "const int N = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1,
        2,
        7,
        15
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "int n , k , a [ N ] ;",
        "for ( int i = 0 , i = n - 1 ; i <= j ; i ++ , j -- )",
        "int flag2 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1,
        2,
        0
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "int n , k , a [ N ] ;",
        "const int N = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1,
        2,
        0,
        15
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "int n , k , a [ N ] ;",
        "const int N = 1 ;",
        "int flag2 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1,
        2,
        15
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "int n , k , a [ N ] ;",
        "int flag2 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "for ( int i = 0 ; i <= j ; i ++ ) { j = n - 1 ; }"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1,
        7,
        0
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "for ( int i = 0 ; i <= j ; i ++ ) { j = n - 1 ; }",
        "const int N = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1,
        7,
        0,
        15
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "for ( int i = 0 ; i <= j ; i ++ ) { j = n - 1 ; }",
        "const int N = 1 ;",
        "int flag2 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1,
        7,
        15
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "for ( int i = 0 ; i <= j ; i ++ ) { j = n - 1 ; }",
        "int flag2 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "for ( int i = 0 , i = n - 1 ; i <= j ; i ++ , j -- )"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1,
        7,
        0
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "for ( int i = 0 , i = n - 1 ; i <= j ; i ++ , j -- )",
        "const int N = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1,
        7,
        0,
        15
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "for ( int i = 0 , i = n - 1 ; i <= j ; i ++ , j -- )",
        "const int N = 1 ;",
        "int flag2 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1,
        7,
        15
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "for ( int i = 0 , i = n - 1 ; i <= j ; i ++ , j -- )",
        "int flag2 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "const int N = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1,
        0,
        15
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "const int N = 1 ;",
        "int flag2 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "const long long const MAX = 1e8 + 5 ;",
        "int flag2 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "int n , k , a [ N ] ;",
        "for ( int i = 0 ; i <= j ; i ++ ) { j = n - 1 ; }"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        0
      ],
      "mod_code": [
        "int n , k , a [ N ] ;",
        "for ( int i = 0 ; i <= j ; i ++ ) { j = n - 1 ; }",
        "const int N = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        0,
        15
      ],
      "mod_code": [
        "int n , k , a [ N ] ;",
        "for ( int i = 0 ; i <= j ; i ++ ) { j = n - 1 ; }",
        "const int N = 1 ;",
        "int flag2 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        15
      ],
      "mod_code": [
        "int n , k , a [ N ] ;",
        "for ( int i = 0 ; i <= j ; i ++ ) { j = n - 1 ; }",
        "int flag2 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "int n , k , a [ N ] ;",
        "for ( int i = 0 , i = n - 1 ; i <= j ; i ++ , j -- )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        2,
        7,
        0
      ],
      "mod_code": [
        "int n , k , a [ N ] ;",
        "for ( int i = 0 , i = n - 1 ; i <= j ; i ++ , j -- )",
        "const int N = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        2,
        7,
        0,
        15
      ],
      "mod_code": [
        "int n , k , a [ N ] ;",
        "for ( int i = 0 , i = n - 1 ; i <= j ; i ++ , j -- )",
        "const int N = 1 ;",
        "int flag2 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        2,
        7,
        15
      ],
      "mod_code": [
        "int n , k , a [ N ] ;",
        "for ( int i = 0 , i = n - 1 ; i <= j ; i ++ , j -- )",
        "int flag2 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        2,
        0
      ],
      "mod_code": [
        "int n , k , a [ N ] ;",
        "const int N = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        0,
        15
      ],
      "mod_code": [
        "int n , k , a [ N ] ;",
        "const int N = 1 ;",
        "int flag2 = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "int n , k , a [ N ] ;",
        "int flag2 = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= j ; i ++ ) { j = n - 1 ; }",
        "const int N = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        0,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= j ; i ++ ) { j = n - 1 ; }",
        "const int N = 1 ;",
        "int flag2 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= j ; i ++ ) { j = n - 1 ; }",
        "int flag2 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "for ( int i = 0 , i = n - 1 ; i <= j ; i ++ , j -- )",
        "const int N = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        7,
        0,
        15
      ],
      "mod_code": [
        "for ( int i = 0 , i = n - 1 ; i <= j ; i ++ , j -- )",
        "const int N = 1 ;",
        "int flag2 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        7,
        15
      ],
      "mod_code": [
        "for ( int i = 0 , i = n - 1 ; i <= j ; i ++ , j -- )",
        "int flag2 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int i’"
    }
  ]
}