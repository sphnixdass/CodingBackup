{
  "meta": {
    "index": 1214,
    "hitid": "3X4Q1O9UBHG4WXRHEO2WW8T7QXHO7N",
    "workerid": "A1APYLD4DUK33J",
    "probid": "870A",
    "subid": "42428230"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer array a with size n",
      "code": "int a [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive , read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer array b with size m",
      "code": "int b [ m ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to m exclusive , read b [ i ]",
      "code": "for ( int i = 0 ; i < m ; i ++ ) cin >> b [ i ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "sort elements from a to a + n",
      "code": "sort ( a , a + n ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "sort elements from b to a + m",
      "code": "sort ( b , b + m ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create integer done with done = 0",
      "code": "int done = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if a [ 0 ] is b [ 0 ]",
      "code": "if ( a [ 0 ] == b [ 0 ] )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print a [ 0 ] print newline",
      "code": "cout << a [ 0 ] << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if iterator of first element of a [ i ] between b and b + m is not b + m",
      "code": "if ( find ( b , b + m , a [ i ] ) != b + m )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "print a [ i ] print newline",
      "code": "cout << a [ i ] << endl ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "set done to 1",
      "code": "done = 1 ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if not done , print minimum of a [ 0 ] and b [ 0 ] print maximum of a [ 0 ] and b [ 0 ] print newline",
      "code": "if ( ! done ) cout << min ( a [ 0 ] , b [ 0 ] ) << max ( a [ 0 ] , b [ 0 ] ) << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( a [ i ] . first + m != b + m )"
      ],
      "err_line": 14,
      "err_msg": "request for member ‘first’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n read m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int * a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int * b [ m ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( a [ i ] . first && b + m != b + m )"
      ],
      "err_line": 14,
      "err_msg": "request for member ‘first’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "if ( a [ i ] . first + m != b + m )"
      ],
      "err_line": 14,
      "err_msg": "request for member ‘first’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        14,
        20
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "if ( a [ i ] . first + m != b + m )",
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }"
      ],
      "err_line": 14,
      "err_msg": "request for member ‘first’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        17
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "if ( a [ i ] . first + m != b + m )",
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "break break ;"
      ],
      "err_line": 14,
      "err_msg": "request for member ‘first’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        3
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "if ( a [ i ] . first + m != b + m )",
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "int * a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        8,
        14,
        20,
        13
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "if ( a [ i ] . first + m != b + m )",
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        14,
        17
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "if ( a [ i ] . first + m != b + m )",
        "break break ;"
      ],
      "err_line": 14,
      "err_msg": "request for member ‘first’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        3
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "if ( a [ i ] . first + m != b + m )",
        "break break ;",
        "int * a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        13
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "if ( a [ i ] . first + m != b + m )",
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        14,
        3
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "if ( a [ i ] . first + m != b + m )",
        "int * a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        8,
        14,
        3,
        13
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "if ( a [ i ] . first + m != b + m )",
        "int * a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        8,
        14,
        13
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "if ( a [ i ] . first + m != b + m )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        20,
        17
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        20,
        17,
        3
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "break break ;",
        "int * a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        8,
        20,
        17,
        13
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        20,
        3
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "int * a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        8,
        20,
        3,
        13
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "int * a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        8,
        20,
        13
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8,
        17,
        3
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "break break ;",
        "int * a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        8,
        17,
        3,
        13
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "break break ;",
        "int * a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        8,
        17,
        13
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "int * a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        8,
        3,
        13
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "int * a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "sort ( b , a + m ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        20
      ],
      "mod_code": [
        "if ( a [ i ] . first + m != b + m )",
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }"
      ],
      "err_line": 14,
      "err_msg": "request for member ‘first’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        14,
        20,
        17
      ],
      "mod_code": [
        "if ( a [ i ] . first + m != b + m )",
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "break break ;"
      ],
      "err_line": 14,
      "err_msg": "request for member ‘first’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        14,
        20,
        17,
        3
      ],
      "mod_code": [
        "if ( a [ i ] . first + m != b + m )",
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "break break ;",
        "int * a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        14,
        20,
        17,
        13
      ],
      "mod_code": [
        "if ( a [ i ] . first + m != b + m )",
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        20,
        3
      ],
      "mod_code": [
        "if ( a [ i ] . first + m != b + m )",
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "int * a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        14,
        20,
        3,
        13
      ],
      "mod_code": [
        "if ( a [ i ] . first + m != b + m )",
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "int * a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        14,
        20,
        13
      ],
      "mod_code": [
        "if ( a [ i ] . first + m != b + m )",
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        17
      ],
      "mod_code": [
        "if ( a [ i ] . first + m != b + m )",
        "break break ;"
      ],
      "err_line": 14,
      "err_msg": "request for member ‘first’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        14,
        17,
        3
      ],
      "mod_code": [
        "if ( a [ i ] . first + m != b + m )",
        "break break ;",
        "int * a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        14,
        17,
        3,
        13
      ],
      "mod_code": [
        "if ( a [ i ] . first + m != b + m )",
        "break break ;",
        "int * a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        14,
        17,
        13
      ],
      "mod_code": [
        "if ( a [ i ] . first + m != b + m )",
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "if ( a [ i ] . first + m != b + m )",
        "int * a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        14,
        3,
        13
      ],
      "mod_code": [
        "if ( a [ i ] . first + m != b + m )",
        "int * a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        14,
        13
      ],
      "mod_code": [
        "if ( a [ i ] . first + m != b + m )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        17
      ],
      "mod_code": [
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "break break ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        20,
        17,
        3
      ],
      "mod_code": [
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "break break ;",
        "int * a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        20,
        17,
        3,
        13
      ],
      "mod_code": [
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "break break ;",
        "int * a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        20,
        17,
        13
      ],
      "mod_code": [
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        3
      ],
      "mod_code": [
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "int * a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        20,
        3,
        13
      ],
      "mod_code": [
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "int * a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        20,
        13
      ],
      "mod_code": [
        "if ( ! done ) { cout << min ( a [ 0 ] , b [ 0 ] ) << b [ 0 ] << b [ 0 ] << endl ; }",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        3
      ],
      "mod_code": [
        "break break ;",
        "int * a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        17,
        3,
        13
      ],
      "mod_code": [
        "break break ;",
        "int * a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        17,
        13
      ],
      "mod_code": [
        "break break ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "int * a [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    }
  ]
}