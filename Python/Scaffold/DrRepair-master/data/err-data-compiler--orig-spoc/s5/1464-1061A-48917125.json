{
  "meta": {
    "index": 1464,
    "hitid": "3W3RSPVVGSLYON0GE4FFEJ3X4Q9ULP",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "1061A",
    "subid": "48917125"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , s = int",
      "code": "int n , s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n then s",
      "code": "cin >> n >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "ans = int with ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "loop while s",
      "code": "while ( s )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if s is 0 break",
      "code": "if ( s == 0 ) break ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if s > = n",
      "code": "if ( s >= n )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "decrement s by n then increment ans",
      "code": "s -= n , ans ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "decrement n",
      "code": "n -- ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int s , s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "{ cin >> n >> s ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "while ( ! s )",
        "{ cin >> n >> s ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4,
        2,
        1
      ],
      "mod_code": [
        "while ( ! s )",
        "{ cin >> n >> s ;",
        "int s , s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        4,
        2,
        1,
        3
      ],
      "mod_code": [
        "while ( ! s )",
        "{ cin >> n >> s ;",
        "int s , s ;",
        "int * ans = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        4,
        2,
        1,
        7
      ],
      "mod_code": [
        "while ( ! s )",
        "{ cin >> n >> s ;",
        "int s , s ;",
        "s -- , ans ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        4,
        2,
        1,
        6
      ],
      "mod_code": [
        "while ( ! s )",
        "{ cin >> n >> s ;",
        "int s , s ;",
        "if ( s >= ' n ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        4,
        2,
        3
      ],
      "mod_code": [
        "while ( ! s )",
        "{ cin >> n >> s ;",
        "int * ans = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4,
        2,
        3,
        7
      ],
      "mod_code": [
        "while ( ! s )",
        "{ cin >> n >> s ;",
        "int * ans = 0 ;",
        "s -- , ans ++ ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4,
        2,
        3,
        6
      ],
      "mod_code": [
        "while ( ! s )",
        "{ cin >> n >> s ;",
        "int * ans = 0 ;",
        "if ( s >= ' n ' )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4,
        2,
        7
      ],
      "mod_code": [
        "while ( ! s )",
        "{ cin >> n >> s ;",
        "s -- , ans ++ ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4,
        2,
        7,
        6
      ],
      "mod_code": [
        "while ( ! s )",
        "{ cin >> n >> s ;",
        "s -- , ans ++ ;",
        "if ( s >= ' n ' )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4,
        2,
        6
      ],
      "mod_code": [
        "while ( ! s )",
        "{ cin >> n >> s ;",
        "if ( s >= ' n ' )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "while ( ! s )",
        "int s , s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        4,
        1,
        3
      ],
      "mod_code": [
        "while ( ! s )",
        "int s , s ;",
        "int * ans = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        4,
        1,
        3,
        7
      ],
      "mod_code": [
        "while ( ! s )",
        "int s , s ;",
        "int * ans = 0 ;",
        "s -- , ans ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        4,
        1,
        3,
        6
      ],
      "mod_code": [
        "while ( ! s )",
        "int s , s ;",
        "int * ans = 0 ;",
        "if ( s >= ' n ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        4,
        1,
        7
      ],
      "mod_code": [
        "while ( ! s )",
        "int s , s ;",
        "s -- , ans ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        4,
        1,
        7,
        6
      ],
      "mod_code": [
        "while ( ! s )",
        "int s , s ;",
        "s -- , ans ++ ;",
        "if ( s >= ' n ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        4,
        1,
        6
      ],
      "mod_code": [
        "while ( ! s )",
        "int s , s ;",
        "if ( s >= ' n ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "{ cin >> n >> s ;",
        "int s , s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        2,
        1,
        3
      ],
      "mod_code": [
        "{ cin >> n >> s ;",
        "int s , s ;",
        "int * ans = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        2,
        1,
        3,
        7
      ],
      "mod_code": [
        "{ cin >> n >> s ;",
        "int s , s ;",
        "int * ans = 0 ;",
        "s -- , ans ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        2,
        1,
        3,
        6
      ],
      "mod_code": [
        "{ cin >> n >> s ;",
        "int s , s ;",
        "int * ans = 0 ;",
        "if ( s >= ' n ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        2,
        1,
        7
      ],
      "mod_code": [
        "{ cin >> n >> s ;",
        "int s , s ;",
        "s -- , ans ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        2,
        1,
        7,
        6
      ],
      "mod_code": [
        "{ cin >> n >> s ;",
        "int s , s ;",
        "s -- , ans ++ ;",
        "if ( s >= ' n ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        2,
        1,
        6
      ],
      "mod_code": [
        "{ cin >> n >> s ;",
        "int s , s ;",
        "if ( s >= ' n ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "{ cin >> n >> s ;",
        "int * ans = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        2,
        3,
        7
      ],
      "mod_code": [
        "{ cin >> n >> s ;",
        "int * ans = 0 ;",
        "s -- , ans ++ ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        6
      ],
      "mod_code": [
        "{ cin >> n >> s ;",
        "int * ans = 0 ;",
        "s -- , ans ++ ;",
        "if ( s >= ' n ' )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        2,
        3,
        6
      ],
      "mod_code": [
        "{ cin >> n >> s ;",
        "int * ans = 0 ;",
        "if ( s >= ' n ' )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "{ cin >> n >> s ;",
        "s -- , ans ++ ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        2,
        7,
        6
      ],
      "mod_code": [
        "{ cin >> n >> s ;",
        "s -- , ans ++ ;",
        "if ( s >= ' n ' )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "{ cin >> n >> s ;",
        "if ( s >= ' n ' )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int s , s ;",
        "int * ans = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        1,
        3,
        7
      ],
      "mod_code": [
        "int s , s ;",
        "int * ans = 0 ;",
        "s -- , ans ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        1,
        3,
        7,
        6
      ],
      "mod_code": [
        "int s , s ;",
        "int * ans = 0 ;",
        "s -- , ans ++ ;",
        "if ( s >= ' n ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        1,
        3,
        6
      ],
      "mod_code": [
        "int s , s ;",
        "int * ans = 0 ;",
        "if ( s >= ' n ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int s , s ;",
        "s -- , ans ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        1,
        7,
        6
      ],
      "mod_code": [
        "int s , s ;",
        "s -- , ans ++ ;",
        "if ( s >= ' n ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int s , s ;",
        "if ( s >= ' n ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s’"
    }
  ]
}