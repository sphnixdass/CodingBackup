{
  "meta": {
    "index": 1702,
    "hitid": "3ICOHX7ENC542VE8ZBERCHP6F46E0L",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "975A",
    "subid": "37848079"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "words = two dimensional char array of sizes 1000 and 1001",
      "code": "char words [ 1000 ] [ 1001 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "count = int with count = 0",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "letters = int array of size 1000 with all values set to 0",
      "code": "int letters [ 1000 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "letter = int array of size 26 with all values set to 0",
      "code": "int letter [ 26 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "m = int with m = 1",
      "code": "int m = 1 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to 26",
      "code": "for ( int i = 0 ; i < 26 ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set letter [ i ] to m",
      "code": "letter [ i ] = m ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set m to m * 2",
      "code": "m *= 2 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read n values into words",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> words [ i ] ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "len = int with len = strlen of words [ i ]",
      "code": "int len = strlen ( words [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "for j = 0 to len set letters [ i ] to letters [ i ] bitwise - or letter [ words [ i ] [ j ] - ' a ' ]",
      "code": "for ( int j = 0 ; j < len ; j ++ ) letters [ i ] |= letter [ words [ i ] [ j ] - ' a ' ] ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if letters [ i ] is 0 continue",
      "code": "if ( letters [ i ] == 0 ) continue ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "for j = i + 1 to n",
      "code": "for ( int j = i + 1 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if letters [ i ] is letters [ j ] set letters [ j ] to 0",
      "code": "if ( letters [ i ] == letters [ j ] ) { letters [ j ] = 0 ; }",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print count",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char words [ 1000 + 1001 ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 22,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "‘letter’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int * m = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 26 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "int len = strlen ( words ) ;"
      ],
      "err_line": 14,
      "err_msg": "cannot convert ‘char (*)[1001]’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "char count = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        7
      ],
      "mod_code": [
        "char count = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int * m = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        7,
        17
      ],
      "mod_code": [
        "char count = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int * m = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        7,
        9
      ],
      "mod_code": [
        "char count = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int * m = 1 ;",
        "char letter [ i ] = { m } ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        7,
        6
      ],
      "mod_code": [
        "char count = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int * m = 1 ;",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        17
      ],
      "mod_code": [
        "char count = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        9
      ],
      "mod_code": [
        "char count = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "char letter [ i ] = { m } ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        6
      ],
      "mod_code": [
        "char count = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "‘letter’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        9
      ],
      "mod_code": [
        "char count = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char letter [ i ] = { m } ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        9,
        6
      ],
      "mod_code": [
        "char count = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char letter [ i ] = { m } ;",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        13,
        6
      ],
      "mod_code": [
        "char count = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "‘letter’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "char count = 0 ;",
        "int * m = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        17
      ],
      "mod_code": [
        "char count = 0 ;",
        "int * m = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        17,
        9
      ],
      "mod_code": [
        "char count = 0 ;",
        "int * m = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char letter [ i ] = { m } ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        17,
        6
      ],
      "mod_code": [
        "char count = 0 ;",
        "int * m = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        9
      ],
      "mod_code": [
        "char count = 0 ;",
        "int * m = 1 ;",
        "char letter [ i ] = { m } ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        6
      ],
      "mod_code": [
        "char count = 0 ;",
        "int * m = 1 ;",
        "char letter [ i ] = { m } ;",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        6
      ],
      "mod_code": [
        "char count = 0 ;",
        "int * m = 1 ;",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "char count = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        17,
        9
      ],
      "mod_code": [
        "char count = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char letter [ i ] = { m } ;"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        17,
        9,
        6
      ],
      "mod_code": [
        "char count = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char letter [ i ] = { m } ;",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 15,
      "err_msg": "‘letter’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        6
      ],
      "mod_code": [
        "char count = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "‘letter’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        6
      ],
      "mod_code": [
        "char count = 0 ;",
        "char letter [ i ] = { m } ;",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 15,
      "err_msg": "‘letter’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "char count = 0 ;",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "‘letter’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int * m = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        7,
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int * m = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        7,
        17,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int * m = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char letter [ i ] = { m } ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        7,
        17,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int * m = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        7,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int * m = 1 ;",
        "char letter [ i ] = { m } ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        7,
        9,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int * m = 1 ;",
        "char letter [ i ] = { m } ;",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        7,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int * m = 1 ;",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "char letter [ i ] = { m } ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17,
        9,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "char letter [ i ] = { m } ;",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "‘letter’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "char letter [ i ] = { m } ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        9,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "char letter [ i ] = { m } ;",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "‘letter’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        17
      ],
      "mod_code": [
        "int * m = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        17,
        9
      ],
      "mod_code": [
        "int * m = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char letter [ i ] = { m } ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        17,
        9,
        6
      ],
      "mod_code": [
        "int * m = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char letter [ i ] = { m } ;",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        17,
        6
      ],
      "mod_code": [
        "int * m = 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "int * m = 1 ;",
        "char letter [ i ] = { m } ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        9,
        6
      ],
      "mod_code": [
        "int * m = 1 ;",
        "char letter [ i ] = { m } ;",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "int * m = 1 ;",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "char letter [ i ] = { m } ;"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        9,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "char letter [ i ] = { m } ;",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 15,
      "err_msg": "‘letter’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "‘letter’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "char letter [ i ] = { m } ;",
        "int a [ 26 ] = { 0 } ;"
      ],
      "err_line": 15,
      "err_msg": "‘letter’ was not declared in this scope"
    }
  ]
}