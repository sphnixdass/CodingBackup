{
  "meta": {
    "index": 901,
    "hitid": "3Y7LTZE0YTGITCHKT56OMYEVJZ9ZU5",
    "workerid": "AIWEXPJAU66D9",
    "probid": "252A",
    "subid": "48107975"
  },
  "lines": [
    {
      "line": 0,
      "text": "define function solve",
      "code": "void solve ( )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integers vector variable v",
      "code": "vector < int > v ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "loop i from 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare int x",
      "code": "int x ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "push x into v",
      "code": "v . push_back ( x ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "sort v",
      "code": "sort ( v . begin ( ) , v . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "declare integer i = 0",
      "code": "int i = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "declare int j = n - 1",
      "code": "int j = n - 1 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "create integer ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "while 2 * v [ i ] < v [ j ]",
      "code": "while ( 2 * v [ i ] < v [ j ] )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if 2 * v [ i + 1 ] > = v [ j ]",
      "code": "if ( 2 * v [ i + 1 ] >= v [ j ] )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increment i by one",
      "code": "i ++ ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else if 2 * v [ i ] > = v [ j - 1 ]",
      "code": "else if ( 2 * v [ i ] >= v [ j - 1 ] )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "decrement j",
      "code": "j -- ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "increment ans by one",
      "code": "ans ++ ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 21,
      "text": "add 2 to ans",
      "code": "ans += 2 ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "increment i by one",
      "code": "i ++ ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "decrement j by one",
      "code": "j -- ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 28,
      "text": "void function solve2",
      "code": "void solve2 ( )",
      "indent": 0
    },
    {
      "line": 29,
      "text": "declare integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "create long long mx = 0",
      "code": "long long mx = 0 ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "declare long long array a with size n",
      "code": "long long a [ n ] ;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "for i = 0 to n exclusive , read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 34,
      "text": "for len = 1 to 100 inclusive",
      "code": "for ( int len = 1 ; len <= 100 ; len ++ )",
      "indent": 1
    },
    {
      "line": 35,
      "text": "for i from 0 while i + len - 1 < n",
      "code": "for ( int i = 0 ; i + len - 1 < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 36,
      "text": "create long long k = a [ i ]",
      "code": "long long k = a [ i ] ;",
      "indent": 3
    },
    {
      "line": 37,
      "text": "for integer j = i + 1 to i + len exclusive , change k t = k ^ a [ j ]",
      "code": "for ( int j = i + 1 ; j < i + len ; j ++ ) { k ^= a [ j ] ; }",
      "indent": 3
    },
    {
      "line": 38,
      "text": "if k is greater than mx , change mx to k",
      "code": "if ( k > mx ) mx = k ;",
      "indent": 3
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 41,
      "text": "print mx",
      "code": "cout << mx << endl ;",
      "indent": 1
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 44,
      "text": "call solve2",
      "code": "solve2 ( ) ;",
      "indent": 1
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }"
      ],
      "err_line": 37,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "solve ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected constructor, destructor, or type conversion before ‘;’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 6,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "v . push ( x ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "sort ( v , v + n ) ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int * j = n - 1 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "while ( 2 * v [ i ] < v [ j ] ) 2 ++ ;"
      ],
      "err_line": 13,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "else if ( 2 * i [ i ] >= v [ j - 1 ] )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "void solve2 ( ) { }"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 38,
      "err_msg": "‘mx’ was not declared in this scope"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "for ( len = 1 ; len <= 100 ; len ++ )"
      ],
      "err_line": 34,
      "err_msg": "‘len’ was not declared in this scope"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "for ( i = 0 ; i + len - 1 < n ; i ++ )"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { t = k [ j ] ; }"
      ],
      "err_line": 37,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        44
      ],
      "mod_code": [
        "solve2 call ;"
      ],
      "err_line": 44,
      "err_msg": "expected ‘;’ before ‘call’"
    },
    {
      "mod_line": [
        37,
        11
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "int * j = n - 1 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        37,
        11,
        35
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "int * j = n - 1 ;",
        "for ( i = 0 ; i + len - 1 < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        37,
        11,
        35,
        4
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "int * j = n - 1 ;",
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        11,
        35,
        34
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "int * j = n - 1 ;",
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "for ( len = 1 ; len <= 100 ; len ++ )"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        37,
        11,
        35,
        44
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "int * j = n - 1 ;",
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "solve2 call ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        37,
        11,
        4
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "int * j = n - 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        11,
        4,
        34
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "int * j = n - 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( len = 1 ; len <= 100 ; len ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        11,
        4,
        44
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "int * j = n - 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "solve2 call ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        11,
        34
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "int * j = n - 1 ;",
        "for ( len = 1 ; len <= 100 ; len ++ )"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        37,
        11,
        34,
        44
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "int * j = n - 1 ;",
        "for ( len = 1 ; len <= 100 ; len ++ )",
        "solve2 call ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        37,
        11,
        44
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "int * j = n - 1 ;",
        "solve2 call ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        37,
        35
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "for ( i = 0 ; i + len - 1 < n ; i ++ )"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        37,
        35,
        4
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        35,
        4,
        34
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( len = 1 ; len <= 100 ; len ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        35,
        4,
        44
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "solve2 call ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        35,
        34
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "for ( len = 1 ; len <= 100 ; len ++ )"
      ],
      "err_line": 34,
      "err_msg": "‘len’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        35,
        34,
        44
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "for ( len = 1 ; len <= 100 ; len ++ )",
        "solve2 call ;"
      ],
      "err_line": 34,
      "err_msg": "‘len’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        35,
        44
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "solve2 call ;"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        37,
        4
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        4,
        34
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( len = 1 ; len <= 100 ; len ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        4,
        34,
        44
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( len = 1 ; len <= 100 ; len ++ )",
        "solve2 call ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        4,
        44
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "for ( i = 0 ; i < n ; i ++ )",
        "solve2 call ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        34
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "for ( len = 1 ; len <= 100 ; len ++ )"
      ],
      "err_line": 34,
      "err_msg": "‘len’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        34,
        44
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "for ( len = 1 ; len <= 100 ; len ++ )",
        "solve2 call ;"
      ],
      "err_line": 34,
      "err_msg": "‘len’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        44
      ],
      "mod_code": [
        "for ( int j = i + 1 ; j < i + len ; j += len ) { k = k [ j ] ; }",
        "solve2 call ;"
      ],
      "err_line": 37,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        35
      ],
      "mod_code": [
        "int * j = n - 1 ;",
        "for ( i = 0 ; i + len - 1 < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        35,
        4
      ],
      "mod_code": [
        "int * j = n - 1 ;",
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        35,
        4,
        34
      ],
      "mod_code": [
        "int * j = n - 1 ;",
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( len = 1 ; len <= 100 ; len ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        35,
        4,
        44
      ],
      "mod_code": [
        "int * j = n - 1 ;",
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "solve2 call ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        35,
        34
      ],
      "mod_code": [
        "int * j = n - 1 ;",
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "for ( len = 1 ; len <= 100 ; len ++ )"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        35,
        34,
        44
      ],
      "mod_code": [
        "int * j = n - 1 ;",
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "for ( len = 1 ; len <= 100 ; len ++ )",
        "solve2 call ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        35,
        44
      ],
      "mod_code": [
        "int * j = n - 1 ;",
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "solve2 call ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "int * j = n - 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        4,
        34
      ],
      "mod_code": [
        "int * j = n - 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( len = 1 ; len <= 100 ; len ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        4,
        34,
        44
      ],
      "mod_code": [
        "int * j = n - 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( len = 1 ; len <= 100 ; len ++ )",
        "solve2 call ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        4,
        44
      ],
      "mod_code": [
        "int * j = n - 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "solve2 call ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        34
      ],
      "mod_code": [
        "int * j = n - 1 ;",
        "for ( len = 1 ; len <= 100 ; len ++ )"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        34,
        44
      ],
      "mod_code": [
        "int * j = n - 1 ;",
        "for ( len = 1 ; len <= 100 ; len ++ )",
        "solve2 call ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        44
      ],
      "mod_code": [
        "int * j = n - 1 ;",
        "solve2 call ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        35,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        4,
        34
      ],
      "mod_code": [
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( len = 1 ; len <= 100 ; len ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        4,
        34,
        44
      ],
      "mod_code": [
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( len = 1 ; len <= 100 ; len ++ )",
        "solve2 call ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        4,
        44
      ],
      "mod_code": [
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "solve2 call ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        34
      ],
      "mod_code": [
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "for ( len = 1 ; len <= 100 ; len ++ )"
      ],
      "err_line": 34,
      "err_msg": "‘len’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        34,
        44
      ],
      "mod_code": [
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "for ( len = 1 ; len <= 100 ; len ++ )",
        "solve2 call ;"
      ],
      "err_line": 34,
      "err_msg": "‘len’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        44
      ],
      "mod_code": [
        "for ( i = 0 ; i + len - 1 < n ; i ++ )",
        "solve2 call ;"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        34
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( len = 1 ; len <= 100 ; len ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        34,
        44
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( len = 1 ; len <= 100 ; len ++ )",
        "solve2 call ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        44
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "solve2 call ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        44
      ],
      "mod_code": [
        "for ( len = 1 ; len <= 100 ; len ++ )",
        "solve2 call ;"
      ],
      "err_line": 34,
      "err_msg": "‘len’ was not declared in this scope"
    }
  ]
}