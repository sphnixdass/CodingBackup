{
  "meta": {
    "index": 2161,
    "hitid": "3KWGG5KP6JWM8B11SPVUKQWGXVKCMR",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "745A",
    "subid": "40972726"
  },
  "lines": [
    {
      "line": 0,
      "text": "integers = n , m",
      "code": "int n , m ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s , t = string",
      "code": "string s , t ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create set st using string",
      "code": "set < string > st ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set n to s . size ( )",
      "code": "n = s . size ( ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set m to n",
      "code": "m = n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if m - - is true do the following",
      "code": "while ( m -- )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set t to s [ n - 1 ]",
      "code": "t = s [ n - 1 ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "t equals t plus s . substr ( 0 , n - 1 )",
      "code": "t += s . substr ( 0 , n - 1 ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set s to t",
      "code": "s = t ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "insert of st = s",
      "code": "st . insert ( s ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "output st . size",
      "code": "cout << st . size ( ) << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "s . insert ( s ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s , t ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int t = s [ n - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘int’ and ‘std::__cxx11::basic_string<char>’)"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int s = t ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "s . insert ( st ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(std::set<std::__cxx11::basic_string<char> >&)’"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "if ( m -- )",
        "s . insert ( s ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        7,
        11,
        2
      ],
      "mod_code": [
        "if ( m -- )",
        "s . insert ( s ) ;",
        "set < string , string > st ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        7,
        11,
        2,
        10
      ],
      "mod_code": [
        "if ( m -- )",
        "s . insert ( s ) ;",
        "set < string , string > st ;",
        "int s = t ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        7,
        11,
        2,
        4
      ],
      "mod_code": [
        "if ( m -- )",
        "s . insert ( s ) ;",
        "set < string , string > st ;",
        "cout << s << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        7,
        11,
        2,
        13
      ],
      "mod_code": [
        "if ( m -- )",
        "s . insert ( s ) ;",
        "set < string , string > st ;",
        "cout << st . size ( ) << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        7,
        11,
        10
      ],
      "mod_code": [
        "if ( m -- )",
        "s . insert ( s ) ;",
        "int s = t ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        7,
        11,
        10,
        4
      ],
      "mod_code": [
        "if ( m -- )",
        "s . insert ( s ) ;",
        "int s = t ;",
        "cout << s << endl ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        7,
        11,
        10,
        13
      ],
      "mod_code": [
        "if ( m -- )",
        "s . insert ( s ) ;",
        "int s = t ;",
        "cout << st . size ( ) << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        7,
        11,
        4
      ],
      "mod_code": [
        "if ( m -- )",
        "s . insert ( s ) ;",
        "cout << s << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        7,
        11,
        4,
        13
      ],
      "mod_code": [
        "if ( m -- )",
        "s . insert ( s ) ;",
        "cout << s << endl ;",
        "cout << st . size ( ) << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        7,
        11,
        13
      ],
      "mod_code": [
        "if ( m -- )",
        "s . insert ( s ) ;",
        "cout << st . size ( ) << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        7,
        2,
        10
      ],
      "mod_code": [
        "if ( m -- )",
        "set < string , string > st ;",
        "int s = t ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        7,
        2,
        10,
        4
      ],
      "mod_code": [
        "if ( m -- )",
        "set < string , string > st ;",
        "int s = t ;",
        "cout << s << endl ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        7,
        2,
        10,
        13
      ],
      "mod_code": [
        "if ( m -- )",
        "set < string , string > st ;",
        "int s = t ;",
        "cout << st . size ( ) << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "if ( m -- )",
        "int s = t ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        7,
        10,
        4
      ],
      "mod_code": [
        "if ( m -- )",
        "int s = t ;",
        "cout << s << endl ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        7,
        10,
        4,
        13
      ],
      "mod_code": [
        "if ( m -- )",
        "int s = t ;",
        "cout << s << endl ;",
        "cout << st . size ( ) << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        7,
        10,
        13
      ],
      "mod_code": [
        "if ( m -- )",
        "int s = t ;",
        "cout << st . size ( ) << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "s . insert ( s ) ;",
        "set < string , string > st ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        2,
        10
      ],
      "mod_code": [
        "s . insert ( s ) ;",
        "set < string , string > st ;",
        "int s = t ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        11,
        2,
        10,
        4
      ],
      "mod_code": [
        "s . insert ( s ) ;",
        "set < string , string > st ;",
        "int s = t ;",
        "cout << s << endl ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        11,
        2,
        10,
        13
      ],
      "mod_code": [
        "s . insert ( s ) ;",
        "set < string , string > st ;",
        "int s = t ;",
        "cout << st . size ( ) << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        11,
        2,
        4
      ],
      "mod_code": [
        "s . insert ( s ) ;",
        "set < string , string > st ;",
        "cout << s << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        2,
        4,
        13
      ],
      "mod_code": [
        "s . insert ( s ) ;",
        "set < string , string > st ;",
        "cout << s << endl ;",
        "cout << st . size ( ) << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        2,
        13
      ],
      "mod_code": [
        "s . insert ( s ) ;",
        "set < string , string > st ;",
        "cout << st . size ( ) << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "s . insert ( s ) ;",
        "int s = t ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        11,
        10,
        4
      ],
      "mod_code": [
        "s . insert ( s ) ;",
        "int s = t ;",
        "cout << s << endl ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        11,
        10,
        4,
        13
      ],
      "mod_code": [
        "s . insert ( s ) ;",
        "int s = t ;",
        "cout << s << endl ;",
        "cout << st . size ( ) << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        11,
        10,
        13
      ],
      "mod_code": [
        "s . insert ( s ) ;",
        "int s = t ;",
        "cout << st . size ( ) << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "s . insert ( s ) ;",
        "cout << s << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        4,
        13
      ],
      "mod_code": [
        "s . insert ( s ) ;",
        "cout << s << endl ;",
        "cout << st . size ( ) << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "s . insert ( s ) ;",
        "cout << st . size ( ) << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "set < string , string > st ;",
        "int s = t ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        2,
        10,
        4
      ],
      "mod_code": [
        "set < string , string > st ;",
        "int s = t ;",
        "cout << s << endl ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        2,
        10,
        4,
        13
      ],
      "mod_code": [
        "set < string , string > st ;",
        "int s = t ;",
        "cout << s << endl ;",
        "cout << st . size ( ) << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        2,
        10,
        13
      ],
      "mod_code": [
        "set < string , string > st ;",
        "int s = t ;",
        "cout << st . size ( ) << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "int s = t ;",
        "cout << s << endl ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        10,
        4,
        13
      ],
      "mod_code": [
        "int s = t ;",
        "cout << s << endl ;",
        "cout << st . size ( ) << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "int s = t ;",
        "cout << st . size ( ) << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    }
  ]
}