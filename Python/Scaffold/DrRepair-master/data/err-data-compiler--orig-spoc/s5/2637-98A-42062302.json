{
  "meta": {
    "index": 2637,
    "hitid": "3R6RZGK0XF6I11WF29EA4D7CRCOYVC",
    "workerid": "AIWEXPJAU66D9",
    "probid": "98A",
    "subid": "42062302"
  },
  "lines": [
    {
      "line": 0,
      "text": "function rot with string reference argument & s",
      "code": "void rot ( string & s )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "swap s [ 1 ] and s [ 2 ] in place",
      "code": "swap ( s [ 1 ] , s [ 2 ] ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "swap s [ 2 ] and s [ 3 ]",
      "code": "swap ( s [ 2 ] , s [ 3 ] ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "swap s [ 3 ] and s [ 4 ]",
      "code": "swap ( s [ 3 ] , s [ 4 ] ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "void function rot2 with string reference argument & s",
      "code": "void rot2 ( string & s )",
      "indent": 0
    },
    {
      "line": 6,
      "text": "swap s [ 0 ] and s [ 3 ]",
      "code": "swap ( s [ 0 ] , s [ 3 ] ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "swap s [ 3 ] and s [ 5 ] in place",
      "code": "swap ( s [ 3 ] , s [ 5 ] ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "swap s [ 5 ] and s [ 1 ]",
      "code": "swap ( s [ 5 ] , s [ 1 ] ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "void function rot3 with string reference argument & s",
      "code": "void rot3 ( string & s )",
      "indent": 0
    },
    {
      "line": 11,
      "text": "swap s [ 0 ] and s [ 2 ]",
      "code": "swap ( s [ 0 ] , s [ 2 ] ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "swap s [ 2 ] and s [ 5 ]",
      "code": "swap ( s [ 2 ] , s [ 5 ] ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "swap s [ 5 ] and s [ 4 ] in place",
      "code": "swap ( s [ 5 ] , s [ 4 ] ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 15,
      "text": "string function all_rot with string reference argument s",
      "code": "string all_rot ( string s )",
      "indent": 0
    },
    {
      "line": 16,
      "text": "declare string variable with name minstring with value s",
      "code": "string minstring = s ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i from 0 to 4 exclusive",
      "code": "for ( int i = 0 ; i < 4 ; ++ i )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for integer j = 0 to 4 exclusive",
      "code": "for ( int j = 0 ; j < 4 ; ++ j )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "call rot ( s )",
      "code": "rot ( s ) ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "assign the new value = min of minstring and s to minstring",
      "code": "minstring = min ( minstring , s ) ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "call rot2 ( s )",
      "code": "rot2 ( s ) ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "for i from 0 to 4 exclusive",
      "code": "for ( int i = 0 ; i < 4 ; ++ i )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "for j from 0 to 4 exclusive",
      "code": "for ( int j = 0 ; j < 4 ; ++ j )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "call rot ( s )",
      "code": "rot ( s ) ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "change minstring to min of minstring and s",
      "code": "minstring = min ( minstring , s ) ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 29,
      "text": "call rot3 ( s )",
      "code": "rot3 ( s ) ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "return minstring",
      "code": "return minstring ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 34,
      "text": "declare new string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "read s from the user input",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 36,
      "text": "sort s",
      "code": "sort ( ( ( s ) . begin ( ) ) , ( ( s ) . end ( ) ) ) ;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "create new set of unique strings called ans",
      "code": "set < string > ans ;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "add new element = the result of all_rot ( s ) to the end of ans",
      "code": "ans . insert ( all_rot ( s ) ) ;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "insert the result of all_rot ( s ) into ans in a loop , and call next_permutation on s",
      "code": "while ( next_permutation ( ( ( s ) . begin ( ) ) , ( ( s ) . end ( ) ) ) ) { ans . insert ( all_rot ( s ) ) ; }",
      "indent": 1
    },
    {
      "line": 40,
      "text": "print length of ans and \" \\ n \"",
      "code": "cout << ans . size ( ) << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        38
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;"
      ],
      "err_line": 38,
      "err_msg": "no match for call to ‘(std::set<std::__cxx11::basic_string<char> >) (std::__cxx11::string (&)(std::__cxx11::string))’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void rot ( string & s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s [ 1 ] , s [ 2 ] ;"
      ],
      "err_line": 1,
      "err_msg": "declaration of ‘char s [1]’ shadows a parameter"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "swap ( s [ 2 ] and s [ 3 ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘swap(bool)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char s [ 3 ] , s [ 4 ] ;"
      ],
      "err_line": 3,
      "err_msg": "declaration of ‘char s [3]’ shadows a parameter"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "void rot2 ( string & s , string s )"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "swap ( s [ 0 ] and s [ 3 ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘swap(bool)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "swap ( s [ 3 ] , s [ 5 ] )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘swap’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "void rot3 ( string & s , string s )"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "swap ( s [ 2 ] and s [ 5 ] ) ;"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘swap(bool)’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "swap ( s [ 5 ] , s [ 4 ] )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "string all_rot ( string & s ) ;"
      ],
      "err_line": 16,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "int rot ( s ) ;"
      ],
      "err_line": 19,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "minstring = min ( minstring assign ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘)’ before ‘assign’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "int rot2 ( s ) ;"
      ],
      "err_line": 22,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 24,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "for ( j = 0 ; j < 4 ; j ++ )"
      ],
      "err_line": 25,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "int rot ( s ) ;"
      ],
      "err_line": 26,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "int minstring = min ( minstring , s ) ;"
      ],
      "err_line": 27,
      "err_msg": "no matching function for call to ‘min(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "int rot3 ( s ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 36,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 35,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "sort ( s , s + n ) ;"
      ],
      "err_line": 36,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "set < string > :: ans ;"
      ],
      "err_line": 37,
      "err_msg": "‘ans’ is not a member of ‘std::set<std::__cxx11::basic_string<char> >’"
    },
    {
      "mod_line": [
        38
      ],
      "mod_code": [
        "ans = ans ( s ) ;"
      ],
      "err_line": 38,
      "err_msg": "no match for call to ‘(std::set<std::__cxx11::basic_string<char> >) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "ans . insert ( s ( s ) ) ;"
      ],
      "err_line": 39,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "cout << ans . length ( ) << \" \\n \" ;"
      ],
      "err_line": 40,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘length’"
    },
    {
      "mod_line": [
        38,
        39
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "ans . insert ( all_rot ( s ) ) ;"
      ],
      "err_line": 38,
      "err_msg": "no match for call to ‘(std::set<std::__cxx11::basic_string<char> >) (std::__cxx11::string (&)(std::__cxx11::string))’"
    },
    {
      "mod_line": [
        38,
        39,
        11
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "ans . insert ( all_rot ( s ) ) ;",
        "swap ( s [ 2 ] , s [ 2 ] ) ;"
      ],
      "err_line": 38,
      "err_msg": "no match for call to ‘(std::set<std::__cxx11::basic_string<char> >) (std::__cxx11::string (&)(std::__cxx11::string))’"
    },
    {
      "mod_line": [
        38,
        39,
        11,
        29
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "ans . insert ( all_rot ( s ) ) ;",
        "swap ( s [ 2 ] , s [ 2 ] ) ;",
        "int rot3 ( s ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        38,
        39,
        11,
        8
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "ans . insert ( all_rot ( s ) ) ;",
        "swap ( s [ 2 ] , s [ 2 ] ) ;",
        "swap ( s [ 1 ] , s [ 1 ] ) ;"
      ],
      "err_line": 38,
      "err_msg": "no match for call to ‘(std::set<std::__cxx11::basic_string<char> >) (std::__cxx11::string (&)(std::__cxx11::string))’"
    },
    {
      "mod_line": [
        38,
        39,
        29
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "ans . insert ( all_rot ( s ) ) ;",
        "int rot3 ( s ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        38,
        39,
        29,
        8
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "ans . insert ( all_rot ( s ) ) ;",
        "int rot3 ( s ) ;",
        "swap ( s [ 1 ] , s [ 1 ] ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        38,
        39,
        8
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "ans . insert ( all_rot ( s ) ) ;",
        "swap ( s [ 1 ] , s [ 1 ] ) ;"
      ],
      "err_line": 38,
      "err_msg": "no match for call to ‘(std::set<std::__cxx11::basic_string<char> >) (std::__cxx11::string (&)(std::__cxx11::string))’"
    },
    {
      "mod_line": [
        38,
        11
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "swap ( s [ 2 ] , s [ 2 ] ) ;"
      ],
      "err_line": 38,
      "err_msg": "no match for call to ‘(std::set<std::__cxx11::basic_string<char> >) (std::__cxx11::string (&)(std::__cxx11::string))’"
    },
    {
      "mod_line": [
        38,
        11,
        29
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "swap ( s [ 2 ] , s [ 2 ] ) ;",
        "int rot3 ( s ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        38,
        11,
        29,
        8
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "swap ( s [ 2 ] , s [ 2 ] ) ;",
        "int rot3 ( s ) ;",
        "swap ( s [ 1 ] , s [ 1 ] ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        38,
        11,
        29,
        39
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "swap ( s [ 2 ] , s [ 2 ] ) ;",
        "int rot3 ( s ) ;",
        "ans . insert ( s ( s ) ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        38,
        11,
        8
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "swap ( s [ 2 ] , s [ 2 ] ) ;",
        "swap ( s [ 1 ] , s [ 1 ] ) ;"
      ],
      "err_line": 38,
      "err_msg": "no match for call to ‘(std::set<std::__cxx11::basic_string<char> >) (std::__cxx11::string (&)(std::__cxx11::string))’"
    },
    {
      "mod_line": [
        38,
        11,
        8,
        39
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "swap ( s [ 2 ] , s [ 2 ] ) ;",
        "swap ( s [ 1 ] , s [ 1 ] ) ;",
        "ans . insert ( s ( s ) ) ;"
      ],
      "err_line": 38,
      "err_msg": "no match for call to ‘(std::set<std::__cxx11::basic_string<char> >) (std::__cxx11::string (&)(std::__cxx11::string))’"
    },
    {
      "mod_line": [
        38,
        11,
        39
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "swap ( s [ 2 ] , s [ 2 ] ) ;",
        "ans . insert ( s ( s ) ) ;"
      ],
      "err_line": 38,
      "err_msg": "no match for call to ‘(std::set<std::__cxx11::basic_string<char> >) (std::__cxx11::string (&)(std::__cxx11::string))’"
    },
    {
      "mod_line": [
        38,
        29
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "int rot3 ( s ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        38,
        29,
        8
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "int rot3 ( s ) ;",
        "swap ( s [ 1 ] , s [ 1 ] ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        38,
        29,
        8,
        39
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "int rot3 ( s ) ;",
        "swap ( s [ 1 ] , s [ 1 ] ) ;",
        "ans . insert ( s ( s ) ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        38,
        29,
        39
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "int rot3 ( s ) ;",
        "ans . insert ( s ( s ) ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        38,
        8
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "swap ( s [ 1 ] , s [ 1 ] ) ;"
      ],
      "err_line": 38,
      "err_msg": "no match for call to ‘(std::set<std::__cxx11::basic_string<char> >) (std::__cxx11::string (&)(std::__cxx11::string))’"
    },
    {
      "mod_line": [
        38,
        8,
        39
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "swap ( s [ 1 ] , s [ 1 ] ) ;",
        "ans . insert ( s ( s ) ) ;"
      ],
      "err_line": 38,
      "err_msg": "no match for call to ‘(std::set<std::__cxx11::basic_string<char> >) (std::__cxx11::string (&)(std::__cxx11::string))’"
    },
    {
      "mod_line": [
        38,
        39
      ],
      "mod_code": [
        "ans = ans ( all_rot ) ;",
        "ans . insert ( s ( s ) ) ;"
      ],
      "err_line": 38,
      "err_msg": "no match for call to ‘(std::set<std::__cxx11::basic_string<char> >) (std::__cxx11::string (&)(std::__cxx11::string))’"
    },
    {
      "mod_line": [
        39,
        11,
        29
      ],
      "mod_code": [
        "ans . insert ( all_rot ( s ) ) ;",
        "swap ( s [ 2 ] , s [ 2 ] ) ;",
        "int rot3 ( s ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        39,
        11,
        29,
        8
      ],
      "mod_code": [
        "ans . insert ( all_rot ( s ) ) ;",
        "swap ( s [ 2 ] , s [ 2 ] ) ;",
        "int rot3 ( s ) ;",
        "swap ( s [ 1 ] , s [ 1 ] ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        39,
        29
      ],
      "mod_code": [
        "ans . insert ( all_rot ( s ) ) ;",
        "int rot3 ( s ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        39,
        29,
        8
      ],
      "mod_code": [
        "ans . insert ( all_rot ( s ) ) ;",
        "int rot3 ( s ) ;",
        "swap ( s [ 1 ] , s [ 1 ] ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        11,
        29
      ],
      "mod_code": [
        "swap ( s [ 2 ] , s [ 2 ] ) ;",
        "int rot3 ( s ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        11,
        29,
        8
      ],
      "mod_code": [
        "swap ( s [ 2 ] , s [ 2 ] ) ;",
        "int rot3 ( s ) ;",
        "swap ( s [ 1 ] , s [ 1 ] ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        11,
        29,
        8,
        39
      ],
      "mod_code": [
        "swap ( s [ 2 ] , s [ 2 ] ) ;",
        "int rot3 ( s ) ;",
        "swap ( s [ 1 ] , s [ 1 ] ) ;",
        "ans . insert ( s ( s ) ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        11,
        29,
        39
      ],
      "mod_code": [
        "swap ( s [ 2 ] , s [ 2 ] ) ;",
        "int rot3 ( s ) ;",
        "ans . insert ( s ( s ) ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        11,
        8,
        39
      ],
      "mod_code": [
        "swap ( s [ 2 ] , s [ 2 ] ) ;",
        "swap ( s [ 1 ] , s [ 1 ] ) ;",
        "ans . insert ( s ( s ) ) ;"
      ],
      "err_line": 39,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        39
      ],
      "mod_code": [
        "swap ( s [ 2 ] , s [ 2 ] ) ;",
        "ans . insert ( s ( s ) ) ;"
      ],
      "err_line": 39,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        29,
        8
      ],
      "mod_code": [
        "int rot3 ( s ) ;",
        "swap ( s [ 1 ] , s [ 1 ] ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        29,
        8,
        39
      ],
      "mod_code": [
        "int rot3 ( s ) ;",
        "swap ( s [ 1 ] , s [ 1 ] ) ;",
        "ans . insert ( s ( s ) ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        29,
        39
      ],
      "mod_code": [
        "int rot3 ( s ) ;",
        "ans . insert ( s ( s ) ) ;"
      ],
      "err_line": 29,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        8,
        39
      ],
      "mod_code": [
        "swap ( s [ 1 ] , s [ 1 ] ) ;",
        "ans . insert ( s ( s ) ) ;"
      ],
      "err_line": 39,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    }
  ]
}