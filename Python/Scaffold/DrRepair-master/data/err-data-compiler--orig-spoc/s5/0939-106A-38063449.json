{
  "meta": {
    "index": 939,
    "hitid": "3TKXBROM5T4NK6HGH2EOF12U66EJI1",
    "workerid": "AIWEXPJAU66D9",
    "probid": "106A",
    "subid": "38063449"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare string variables s1 , s2 and s",
      "code": "string s1 , s2 , s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare new integer variables i , pos1 and pos2",
      "code": "int i , pos1 , pos2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "a is a new array of characters with 10 elements",
      "code": "char a [ 10 ] = \" 6789TJQKA \" ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read user input to s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read variables s1 and s2 from the input",
      "code": "cin >> s1 >> s2 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if s1 [ 1 ] = s [ 0 ]",
      "code": "if ( s1 [ 1 ] == s [ 0 ] )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s2 [ 1 ] ! = s [ 0 ]",
      "code": "if ( s2 [ 1 ] != s [ 0 ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "for i = 0 to 9 exclusive",
      "code": "for ( i = 0 ; i < 9 ; i ++ )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if s1 [ 0 ] = a [ i ] , change pos1 to i",
      "code": "if ( s1 [ 0 ] == a [ i ] ) pos1 = i ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "if s2 [ 0 ] is equal to a [ i ] , change the valuf of pos2 to i",
      "code": "if ( s2 [ 0 ] == a [ i ] ) pos2 = i ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "if pos1 < = pos2",
      "code": "if ( pos1 <= pos2 )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "print \" NO \" to the standard output",
      "code": "cout << \" NO \" << endl ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 17,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if s1 [ 1 ] = s2 [ 1 ]",
      "code": "if ( s1 [ 1 ] == s2 [ 1 ] )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "in a for loop , change i from 0 to 9 exclusive incrementing i",
      "code": "for ( i = 0 ; i < 9 ; i ++ )",
      "indent": 3
    },
    {
      "line": 22,
      "text": "if s1 [ 0 ] is equal to a [ i ] , set pos1 to i",
      "code": "if ( s1 [ 0 ] == a [ i ] ) pos1 = i ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "if s2 [ 0 ] is equal to a [ i ] , change the value of pos2 to i",
      "code": "if ( s2 [ 0 ] == a [ i ] ) pos2 = i ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 25,
      "text": "if pos1 < = pos2",
      "code": "if ( pos1 <= pos2 )",
      "indent": 3
    },
    {
      "line": 26,
      "text": "print \" NO \" to the standard output",
      "code": "cout << \" NO \" << endl ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 28,
      "text": "print \" YES \" to the standard output",
      "code": "cout << \" YES \" << endl ;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 30,
      "text": "print \" NO \" to the standard output",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s1 , s2 , n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( s2 [ 1 ] ] != s [ 0 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "cout << \" YES \""
      ],
      "err_line": 29,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "if ( s2 [ 1 ] ] != s [ 0 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        3,
        7,
        4
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "if ( s2 [ 1 ] ] != s [ 0 ] )",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        4,
        1
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "if ( s2 [ 1 ] ] != s [ 0 ] )",
        "cin >> n ;",
        "string s1 , s2 , n ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        4,
        6
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "if ( s2 [ 1 ] ] != s [ 0 ] )",
        "cin >> n ;",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        1
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "if ( s2 [ 1 ] ] != s [ 0 ] )",
        "string s1 , s2 , n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        1,
        6
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "if ( s2 [ 1 ] ] != s [ 0 ] )",
        "string s1 , s2 , n ;",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        6
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "if ( s2 [ 1 ] ] != s [ 0 ] )",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        1
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "cin >> n ;",
        "string s1 , s2 , n ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        1,
        6
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "cin >> n ;",
        "string s1 , s2 , n ;",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "cin >> n ;",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "string s1 , s2 , n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        6
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "string s1 , s2 , n ;",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "char a [ 10 ] ;",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "char a [ 10 ] = { } ;",
        "if ( s2 [ 1 ] ] != s [ 0 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        3,
        7,
        4
      ],
      "mod_code": [
        "char a [ 10 ] = { } ;",
        "if ( s2 [ 1 ] ] != s [ 0 ] )",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        4,
        1
      ],
      "mod_code": [
        "char a [ 10 ] = { } ;",
        "if ( s2 [ 1 ] ] != s [ 0 ] )",
        "cin >> n ;",
        "string s1 , s2 , n ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        4,
        6
      ],
      "mod_code": [
        "char a [ 10 ] = { } ;",
        "if ( s2 [ 1 ] ] != s [ 0 ] )",
        "cin >> n ;",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        1
      ],
      "mod_code": [
        "char a [ 10 ] = { } ;",
        "if ( s2 [ 1 ] ] != s [ 0 ] )",
        "string s1 , s2 , n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        1,
        6
      ],
      "mod_code": [
        "char a [ 10 ] = { } ;",
        "if ( s2 [ 1 ] ] != s [ 0 ] )",
        "string s1 , s2 , n ;",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        6
      ],
      "mod_code": [
        "char a [ 10 ] = { } ;",
        "if ( s2 [ 1 ] ] != s [ 0 ] )",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "char a [ 10 ] = { } ;",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        1
      ],
      "mod_code": [
        "char a [ 10 ] = { } ;",
        "cin >> n ;",
        "string s1 , s2 , n ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        1,
        6
      ],
      "mod_code": [
        "char a [ 10 ] = { } ;",
        "cin >> n ;",
        "string s1 , s2 , n ;",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "char a [ 10 ] = { } ;",
        "cin >> n ;",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "char a [ 10 ] = { } ;",
        "string s1 , s2 , n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        6
      ],
      "mod_code": [
        "char a [ 10 ] = { } ;",
        "string s1 , s2 , n ;",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "char a [ 10 ] = { } ;",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "if ( s2 [ 1 ] ] != s [ 0 ] )",
        "cin >> n ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4,
        1
      ],
      "mod_code": [
        "if ( s2 [ 1 ] ] != s [ 0 ] )",
        "cin >> n ;",
        "string s1 , s2 , n ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4,
        1,
        6
      ],
      "mod_code": [
        "if ( s2 [ 1 ] ] != s [ 0 ] )",
        "cin >> n ;",
        "string s1 , s2 , n ;",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4,
        6
      ],
      "mod_code": [
        "if ( s2 [ 1 ] ] != s [ 0 ] )",
        "cin >> n ;",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "if ( s2 [ 1 ] ] != s [ 0 ] )",
        "string s1 , s2 , n ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        6
      ],
      "mod_code": [
        "if ( s2 [ 1 ] ] != s [ 0 ] )",
        "string s1 , s2 , n ;",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "if ( s2 [ 1 ] ] != s [ 0 ] )",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "cin >> n ;",
        "string s1 , s2 , n ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1,
        6
      ],
      "mod_code": [
        "cin >> n ;",
        "string s1 , s2 , n ;",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "cin >> n ;",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "string s1 , s2 , n ;",
        "if ( s1 [ 1 ] == s [ ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    }
  ]
}