{
  "meta": {
    "index": 32,
    "hitid": "30Y6N4AHYPQNAJK7XTMMQV88OI4RD3",
    "workerid": "A59A6LMCQRBL3",
    "probid": "271A",
    "subid": "48685921"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "year = int",
      "code": "int year ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read year",
      "code": "cin >> year ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while true",
      "code": "while ( 1 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "add one to year",
      "code": "year ++ ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "i , j , k l = int",
      "code": "int i , j , k , l ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "let i = year / 1000",
      "code": "i = year / 1000 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "let j = year / 100 % 10",
      "code": "j = year / 100 % 10 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "let k = year / 10 % 10",
      "code": "k = year / 10 % 10 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "let l = year % 10",
      "code": "l = year % 10 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if i ! = j & & i ! = k & & i ! = l & & j ! = k & & j ! = l & & k ! = l , exit while loop",
      "code": "if ( i != j && i != k && i != l && j != k && j != l && k != l ) { break ; }",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print year",
      "code": "cout << year << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int i , j , l ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "if ( i != j && i != k && i != k && j != k && j != l ) break ;",
        "int i , j , l ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        6
      ],
      "mod_code": [
        "if ( i != j && i != k && i != k && j != k && j != l ) break ;",
        "int i , j , l ;",
        "i /= 1000 ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        6,
        9
      ],
      "mod_code": [
        "if ( i != j && i != k && i != k && j != k && j != l ) break ;",
        "int i , j , l ;",
        "i /= 1000 ;",
        "l *= 10 ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        6,
        1
      ],
      "mod_code": [
        "if ( i != j && i != k && i != k && j != k && j != l ) break ;",
        "int i , j , l ;",
        "i /= 1000 ;",
        "char year ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        9
      ],
      "mod_code": [
        "if ( i != j && i != k && i != k && j != k && j != l ) break ;",
        "int i , j , l ;",
        "l *= 10 ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        9,
        1
      ],
      "mod_code": [
        "if ( i != j && i != k && i != k && j != k && j != l ) break ;",
        "int i , j , l ;",
        "l *= 10 ;",
        "char year ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        1
      ],
      "mod_code": [
        "if ( i != j && i != k && i != k && j != k && j != l ) break ;",
        "int i , j , l ;",
        "char year ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "int i , j , l ;",
        "if ( i != j && i != k && j != k && j != k && j != l ) break ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        6
      ],
      "mod_code": [
        "int i , j , l ;",
        "if ( i != j && i != k && j != k && j != k && j != l ) break ;",
        "i /= 1000 ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        6,
        9
      ],
      "mod_code": [
        "int i , j , l ;",
        "if ( i != j && i != k && j != k && j != k && j != l ) break ;",
        "i /= 1000 ;",
        "l *= 10 ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        6,
        1
      ],
      "mod_code": [
        "int i , j , l ;",
        "if ( i != j && i != k && j != k && j != k && j != l ) break ;",
        "i /= 1000 ;",
        "char year ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        9
      ],
      "mod_code": [
        "int i , j , l ;",
        "if ( i != j && i != k && j != k && j != k && j != l ) break ;",
        "l *= 10 ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        9,
        1
      ],
      "mod_code": [
        "int i , j , l ;",
        "if ( i != j && i != k && j != k && j != k && j != l ) break ;",
        "l *= 10 ;",
        "char year ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        1
      ],
      "mod_code": [
        "int i , j , l ;",
        "if ( i != j && i != k && j != k && j != k && j != l ) break ;",
        "char year ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "int i , j , l ;",
        "i /= 1000 ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "int i , j , l ;",
        "i /= 1000 ;",
        "l *= 10 ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        1
      ],
      "mod_code": [
        "int i , j , l ;",
        "i /= 1000 ;",
        "l *= 10 ;",
        "char year ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        1
      ],
      "mod_code": [
        "int i , j , l ;",
        "i /= 1000 ;",
        "char year ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "int i , j , l ;",
        "l *= 10 ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        1
      ],
      "mod_code": [
        "int i , j , l ;",
        "l *= 10 ;",
        "char year ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "int i , j , l ;",
        "char year ;"
      ],
      "err_line": 8,
      "err_msg": "‘k’ was not declared in this scope"
    }
  ]
}