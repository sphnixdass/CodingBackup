{
  "meta": {
    "index": 1071,
    "hitid": "359AP8GAGGE3N8UEOJT518ZQ14HC73",
    "workerid": "AIWEXPJAU66D9",
    "probid": "23A",
    "subid": "48403716"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "loop l from length of s , decrementing by 1",
      "code": "for ( int l = s . size ( ) ; l ; l -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to i + l < length of s",
      "code": "for ( int i = 0 ; i + l <= s . size ( ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "create string p = substring of s from i to l",
      "code": "string p = s . substr ( i , l ) ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "create integer occ with value 0",
      "code": "int occ = 0 ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "for integer k = 0 to k + l < = length of s",
      "code": "for ( int k = 0 ; k + l <= s . size ( ) ; k ++ )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if substring of s from k to l is equal to p , increment occ",
      "code": "if ( s . substr ( k , l ) == p ) occ ++ ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "if occ > = 2",
      "code": "if ( occ >= 2 )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "print l and a new line",
      "code": "cout << l << endl ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print 0 and a new line",
      "code": "cout << 0 << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( int l = s . length ( ) ; l -- )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( l = s . length ( ) ; l -- )"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘substring’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "for ( int l = s . length ( ) ; l -- )",
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        4,
        9
      ],
      "mod_code": [
        "for ( int l = s . length ( ) ; l -- )",
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )",
        "if ( occ >= 2 ) break ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        2
      ],
      "mod_code": [
        "for ( int l = s . length ( ) ; l -- )",
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )",
        "if ( occ >= 2 ) break ;",
        "cout << s << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        5
      ],
      "mod_code": [
        "for ( int l = s . length ( ) ; l -- )",
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )",
        "if ( occ >= 2 ) break ;",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "for ( int l = s . length ( ) ; l -- )",
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )",
        "cout << s << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        4,
        2,
        5
      ],
      "mod_code": [
        "for ( int l = s . length ( ) ; l -- )",
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )",
        "cout << s << endl ;",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "for ( int l = s . length ( ) ; l -- )",
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "for ( int l = s . length ( ) ; l -- )",
        "if ( occ >= 2 ) break ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        9,
        2
      ],
      "mod_code": [
        "for ( int l = s . length ( ) ; l -- )",
        "if ( occ >= 2 ) break ;",
        "cout << s << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        9,
        2,
        5
      ],
      "mod_code": [
        "for ( int l = s . length ( ) ; l -- )",
        "if ( occ >= 2 ) break ;",
        "cout << s << endl ;",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        9,
        5
      ],
      "mod_code": [
        "for ( int l = s . length ( ) ; l -- )",
        "if ( occ >= 2 ) break ;",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "for ( int l = s . length ( ) ; l -- )",
        "cout << s << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        2,
        5
      ],
      "mod_code": [
        "for ( int l = s . length ( ) ; l -- )",
        "cout << s << endl ;",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "for ( int l = s . length ( ) ; l -- )",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "for ( l = s . length ( ) ; l -- )",
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        9
      ],
      "mod_code": [
        "for ( l = s . length ( ) ; l -- )",
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )",
        "if ( occ >= 2 ) break ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        2
      ],
      "mod_code": [
        "for ( l = s . length ( ) ; l -- )",
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )",
        "if ( occ >= 2 ) break ;",
        "cout << s << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        5
      ],
      "mod_code": [
        "for ( l = s . length ( ) ; l -- )",
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )",
        "if ( occ >= 2 ) break ;",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "for ( l = s . length ( ) ; l -- )",
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )",
        "cout << s << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        2,
        5
      ],
      "mod_code": [
        "for ( l = s . length ( ) ; l -- )",
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )",
        "cout << s << endl ;",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "for ( l = s . length ( ) ; l -- )",
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "for ( l = s . length ( ) ; l -- )",
        "if ( occ >= 2 ) break ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        2
      ],
      "mod_code": [
        "for ( l = s . length ( ) ; l -- )",
        "if ( occ >= 2 ) break ;",
        "cout << s << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        2,
        5
      ],
      "mod_code": [
        "for ( l = s . length ( ) ; l -- )",
        "if ( occ >= 2 ) break ;",
        "cout << s << endl ;",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        5
      ],
      "mod_code": [
        "for ( l = s . length ( ) ; l -- )",
        "if ( occ >= 2 ) break ;",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "for ( l = s . length ( ) ; l -- )",
        "cout << s << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        5
      ],
      "mod_code": [
        "for ( l = s . length ( ) ; l -- )",
        "cout << s << endl ;",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "for ( l = s . length ( ) ; l -- )",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )",
        "if ( occ >= 2 ) break ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )",
        "if ( occ >= 2 ) break ;",
        "cout << s << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        2,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )",
        "if ( occ >= 2 ) break ;",
        "cout << s << endl ;",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )",
        "if ( occ >= 2 ) break ;",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )",
        "cout << s << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )",
        "cout << s << endl ;",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i + l < s . length ( ) ; i ++ )",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        5
      ],
      "mod_code": [
        "if ( occ >= 2 ) break ;",
        "cout << s << endl ;",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘substring’"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "if ( occ >= 2 ) break ;",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘substring’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "cout << s << endl ;",
        "string p = s . substring ( i , l ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘substring’"
    }
  ]
}