{
  "meta": {
    "index": 1415,
    "hitid": "3KG2UQJ0MJIWKUWK98BPHAAX602NQE",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "259A",
    "subid": "48993166"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long long int n , k , h , m , i , sum , j , c",
      "code": "long long int n , k , h , m , i , sum , j , c ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while read s",
      "code": "while ( cin >> s )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "c = 1",
      "code": "c = 1 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if s different from WBWBWBWB and s different from BWBWBWBW",
      "code": "if ( s != \" WBWBWBWB \" && s != \" BWBWBWBW \" ) { c = 0 ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 1 to 8 exclusive",
      "code": "for ( i = 1 ; i < 8 ; i ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if s different from WBWBWBWB and s different from BWBWBWBW",
      "code": "if ( s != \" WBWBWBWB \" && s != \" BWBWBWBW \" ) { c = 0 ; }",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if c different from c",
      "code": "if ( c )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print YES and a newline",
      "code": "cout << \" YES\\n \" ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print NO and a newline",
      "code": "cout << \" NO\\n \" ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )"
      ],
      "err_line": 5,
      "err_msg": "‘WBWBWBWB’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )"
      ],
      "err_line": 8,
      "err_msg": "‘WBWBWBWB’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long int n , k , h , m , i , j , j , c ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int j’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( s >> s )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( s != ' WBWBWBWB ' && s != BWBWBWBW )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( s != ' WBWBWBWB ' && s != BWBWBWBW )"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( s != WBWBWBWB && s != BWBWBWBW )"
      ],
      "err_line": 5,
      "err_msg": "‘WBWBWBWB’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        10
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( c != c )"
      ],
      "err_line": 5,
      "err_msg": "‘WBWBWBWB’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        3
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( c != c )",
        "while ( s >> s )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        2
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( c != c )",
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        5,
        8,
        3
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "while ( s >> s )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        8,
        3,
        2
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "while ( s >> s )",
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        5,
        8,
        2
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( c != c )"
      ],
      "err_line": 5,
      "err_msg": "‘WBWBWBWB’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        3
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( c != c )",
        "while ( s >> s )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        10,
        3,
        2
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( c != c )",
        "while ( s >> s )",
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        5,
        10,
        3,
        8
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( c != c )",
        "while ( s >> s )",
        "if ( s != ' WBWBWBWB ' && s != BWBWBWBW )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        10,
        2
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( c != c )",
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        5,
        10,
        2,
        8
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( c != c )",
        "string n ;",
        "if ( s != ' WBWBWBWB ' && s != BWBWBWBW )"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        5,
        10,
        8
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( c != c )",
        "if ( s != ' WBWBWBWB ' && s != BWBWBWBW )"
      ],
      "err_line": 5,
      "err_msg": "‘WBWBWBWB’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "while ( s >> s )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        3,
        2
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "while ( s >> s )",
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        5,
        3,
        2,
        8
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "while ( s >> s )",
        "string n ;",
        "if ( s != ' WBWBWBWB ' && s != BWBWBWBW )"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        5,
        3,
        8
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "while ( s >> s )",
        "if ( s != ' WBWBWBWB ' && s != BWBWBWBW )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        5,
        2,
        8
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "string n ;",
        "if ( s != ' WBWBWBWB ' && s != BWBWBWBW )"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( s != ' WBWBWBWB ' && s != BWBWBWBW )"
      ],
      "err_line": 5,
      "err_msg": "‘WBWBWBWB’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( c != c )"
      ],
      "err_line": 8,
      "err_msg": "‘WBWBWBWB’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        3
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( c != c )",
        "while ( s >> s )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        10,
        3,
        2
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( c != c )",
        "while ( s >> s )",
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        8,
        10,
        2
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "if ( c != c )",
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "while ( s >> s )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        3,
        2
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "while ( s >> s )",
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "if ( s != WBWBWBWB && s != BWBWBWBW )",
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "if ( c != c )",
        "while ( s >> s )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        3,
        2
      ],
      "mod_code": [
        "if ( c != c )",
        "while ( s >> s )",
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        10,
        3,
        2,
        8
      ],
      "mod_code": [
        "if ( c != c )",
        "while ( s >> s )",
        "string n ;",
        "if ( s != ' WBWBWBWB ' && s != BWBWBWBW )"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        10,
        3,
        8
      ],
      "mod_code": [
        "if ( c != c )",
        "while ( s >> s )",
        "if ( s != ' WBWBWBWB ' && s != BWBWBWBW )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "if ( c != c )",
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        10,
        2,
        8
      ],
      "mod_code": [
        "if ( c != c )",
        "string n ;",
        "if ( s != ' WBWBWBWB ' && s != BWBWBWBW )"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "if ( c != c )",
        "if ( s != ' WBWBWBWB ' && s != BWBWBWBW )"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "while ( s >> s )",
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        3,
        2,
        8
      ],
      "mod_code": [
        "while ( s >> s )",
        "string n ;",
        "if ( s != ' WBWBWBWB ' && s != BWBWBWBW )"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "while ( s >> s )",
        "if ( s != ' WBWBWBWB ' && s != BWBWBWBW )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "string n ;",
        "if ( s != ' WBWBWBWB ' && s != BWBWBWBW )"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    }
  ]
}