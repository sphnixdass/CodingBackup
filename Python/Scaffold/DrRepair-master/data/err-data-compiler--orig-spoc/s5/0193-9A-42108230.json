{
  "meta": {
    "index": 193,
    "hitid": "3R6RZGK0XF6I11WF29EA4D7CQA5VYL",
    "workerid": "AIWEXPJAU66D9",
    "probid": "9A",
    "subid": "42108230"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers a and b",
      "code": "int a , b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read a and b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer c with value max of a and b",
      "code": "int c = max ( a , b ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if c is equal to 1 print \" 1 / 1 \" and a new line",
      "code": "if ( c == 1 ) cout << \" 1/1 \" << endl ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if c is equal to 2 print \" 5 / 6 \" and a new line",
      "code": "if ( c == 2 ) cout << \" 5/6 \" << endl ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if c is equal to 3 print \" 2 / 3 \" and a new line",
      "code": "if ( c == 3 ) cout << \" 2/3 \" << endl ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if c is equal to 4 print \" 1 / 2 \" and a new line",
      "code": "if ( c == 4 ) cout << \" 1/2 \" << endl ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if c is equal to 5 print \" 1 / 3 \" and a new line",
      "code": "if ( c == 5 ) cout << \" 1/3 \" << endl ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if c is equal to 6 print \" 1 / 6 \" and a new line",
      "code": "if ( c == 6 ) cout << \" 1/6 \" << endl ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( c == 4 ) { cout << \" 1 / 2 << endl ; }"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> a >> b )"
      ],
      "err_line": 4,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int c = max ( a create b ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘create’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( c == 1 ) { cout << \" 1 / 1 << endl ; }"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( c == 4 ) cout << \" 1 / 2 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        7
      ],
      "mod_code": [
        "if ( c == 1 ) { cout << \" 1 1 \" << endl ; }",
        "if ( c == 2 ) { cout << \" 5 / \" << endl ; }",
        "if ( c == 3 ) cout << \" 2 / \" << endl ;",
        "if ( c == 4 ) { cout << \" 1 / 2 << endl ; }"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        7
      ],
      "mod_code": [
        "if ( c == 1 ) { cout << \" 1 1 \" << endl ; }",
        "if ( c == 2 ) { cout << \" 5 / \" << endl ; }",
        "if ( c == 4 ) { cout << \" 1 / 2 << endl ; }"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        6
      ],
      "mod_code": [
        "if ( c == 1 ) { cout << \" 1 1 \" << endl ; }",
        "if ( c == 2 ) { cout << \" 5 / \" << endl ; }",
        "if ( c == 4 ) { cout << \" 1 / 2 << endl ; }",
        "if ( c == 3 ) { cout << \" 2 / \" << endl ; }"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        7
      ],
      "mod_code": [
        "if ( c == 1 ) { cout << \" 1 1 \" << endl ; }",
        "if ( c == 3 ) cout << \" 2 / \" << endl ;",
        "if ( c == 4 ) { cout << \" 1 / 2 << endl ; }"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        5
      ],
      "mod_code": [
        "if ( c == 1 ) { cout << \" 1 1 \" << endl ; }",
        "if ( c == 3 ) cout << \" 2 / \" << endl ;",
        "if ( c == 4 ) { cout << \" 1 / 2 << endl ; }",
        "if ( c == 2 ) cout << \" 5 / \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "if ( c == 1 ) { cout << \" 1 1 \" << endl ; }",
        "if ( c == 4 ) { cout << \" 1 / 2 << endl ; }"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        7,
        6
      ],
      "mod_code": [
        "if ( c == 1 ) { cout << \" 1 1 \" << endl ; }",
        "if ( c == 4 ) { cout << \" 1 / 2 << endl ; }",
        "if ( c == 3 ) { cout << \" 2 / \" << endl ; }"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        7,
        6,
        5
      ],
      "mod_code": [
        "if ( c == 1 ) { cout << \" 1 1 \" << endl ; }",
        "if ( c == 4 ) { cout << \" 1 / 2 << endl ; }",
        "if ( c == 3 ) { cout << \" 2 / \" << endl ; }",
        "if ( c == 2 ) cout << \" 5 / \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        7,
        5
      ],
      "mod_code": [
        "if ( c == 1 ) { cout << \" 1 1 \" << endl ; }",
        "if ( c == 4 ) { cout << \" 1 / 2 << endl ; }",
        "if ( c == 2 ) cout << \" 5 / \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        6,
        7
      ],
      "mod_code": [
        "if ( c == 2 ) { cout << \" 5 / \" << endl ; }",
        "if ( c == 3 ) cout << \" 2 / \" << endl ;",
        "if ( c == 4 ) { cout << \" 1 / 2 << endl ; }"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "if ( c == 2 ) { cout << \" 5 / \" << endl ; }",
        "if ( c == 4 ) { cout << \" 1 / 2 << endl ; }"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        7,
        6
      ],
      "mod_code": [
        "if ( c == 2 ) { cout << \" 5 / \" << endl ; }",
        "if ( c == 4 ) { cout << \" 1 / 2 << endl ; }",
        "if ( c == 3 ) { cout << \" 2 / \" << endl ; }"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "if ( c == 3 ) cout << \" 2 / \" << endl ;",
        "if ( c == 4 ) { cout << \" 1 / 2 << endl ; }"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        6,
        7,
        5
      ],
      "mod_code": [
        "if ( c == 3 ) cout << \" 2 / \" << endl ;",
        "if ( c == 4 ) { cout << \" 1 / 2 << endl ; }",
        "if ( c == 2 ) cout << \" 5 / \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "if ( c == 4 ) { cout << \" 1 / 2 << endl ; }",
        "if ( c == 3 ) { cout << \" 2 / \" << endl ; }"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        6,
        5
      ],
      "mod_code": [
        "if ( c == 4 ) { cout << \" 1 / 2 << endl ; }",
        "if ( c == 3 ) { cout << \" 2 / \" << endl ; }",
        "if ( c == 2 ) cout << \" 5 / \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "if ( c == 4 ) { cout << \" 1 / 2 << endl ; }",
        "if ( c == 2 ) cout << \" 5 / \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "missing terminating \" character"
    }
  ]
}