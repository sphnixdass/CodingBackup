{
  "meta": {
    "index": 116,
    "hitid": "3BO3NEOQM0BCJDECNW1BM2ZBGJHAI9",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "354A",
    "subid": "30320735"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer array cost of size 100005",
      "code": "int cost [ 100005 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let int array lef of size 100005",
      "code": "int lef [ 100005 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let integer righ of size 10005",
      "code": "int righ [ 100005 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare min taking in long long ints a and b and returning long long",
      "code": "long long min ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 4,
      "text": "if a is greater than or equal to b , return b",
      "code": "if ( a >= b ) return b ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "return a",
      "code": "return a ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "let ints n , l , r , ql , and qr",
      "code": "int n , l , r , ql , qr ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read n , l , r , ql , and qr",
      "code": "cin >> n >> l >> r >> ql >> qr ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to n exclusive , read cost [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> cost [ i ] ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set lef [ 0 ] to 0",
      "code": "lef [ 0 ] = 0 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 1 to n , set lef [ i ] to lef [ i - 1 ] + cost [ i - 1 ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) lef [ i ] = lef [ i - 1 ] + cost [ i - 1 ] ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "set righ [ n + 1 ] to 0",
      "code": "righ [ n + 1 ] = 0 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = n to 1 , set righ [ i ] to righ [ i + 1 ] + cost [ i - 1 ]",
      "code": "for ( int i = n ; i >= 1 ; i -- ) righ [ i ] = righ [ i + 1 ] + cost [ i - 1 ] ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "create long long int ans = 10000000000000",
      "code": "long long ans = 10000000000000 ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "create int ind = - 1",
      "code": "int ind = - 1 ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "let long long int curr = lef [ i ] * l + righ [ i + 1 ] * r",
      "code": "long long curr = lef [ i ] * l + righ [ i + 1 ] * r ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if i is less than n - i",
      "code": "if ( i < n - i )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "set curr to curr + ( n - 2 * i - 1 ) * qr",
      "code": "curr += ( n - 2 * i - 1 ) * qr ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else if n - i is less than i",
      "code": "else if ( n - i < i )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "set curr to curr + ( 2 * i - n - 1 ) * ql",
      "code": "curr += ( 2 * i - n - 1 ) * ql ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "if ans is greater than curr",
      "code": "if ( ans > curr )",
      "indent": 2
    },
    {
      "line": 25,
      "text": "set ans to curr",
      "code": "ans = curr ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "set ind to i",
      "code": "ind = i ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "set ans to the min of ans and curr",
      "code": "ans = min ( ans , curr ) ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ 100005 ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘cost’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "righ [ i + 1 ] = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( i = n ; i >= 1 ; i -- ) { righ [ i ] = righ [ i + 1 ] + cost [ i - 1 ] ; }"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        11,
        9,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "lef [ 0 ] = ' 0 ' ;",
        "cin >> n >> l >> r >> ql >> ql ;",
        "righ [ i + 1 ] = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        11,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "lef [ 0 ] = ' 0 ' ;",
        "righ [ i + 1 ] = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        11,
        13,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "lef [ 0 ] = ' 0 ' ;",
        "righ [ i + 1 ] = 0 ;",
        "char lef [ 100005 ] ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        9,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cin >> n >> l >> r >> ql >> ql ;",
        "righ [ i + 1 ] = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        9,
        13,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cin >> n >> l >> r >> ql >> ql ;",
        "righ [ i + 1 ] = 0 ;",
        "char lef [ 100005 ] ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "righ [ i + 1 ] = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        13,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "righ [ i + 1 ] = 0 ;",
        "char lef [ 100005 ] ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        9,
        13
      ],
      "mod_code": [
        "lef [ 0 ] = ' 0 ' ;",
        "cin >> n >> l >> r >> ql >> ql ;",
        "righ [ i + 1 ] = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        9,
        13,
        17
      ],
      "mod_code": [
        "lef [ 0 ] = ' 0 ' ;",
        "cin >> n >> l >> r >> ql >> ql ;",
        "righ [ i + 1 ] = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        9,
        13,
        1
      ],
      "mod_code": [
        "lef [ 0 ] = ' 0 ' ;",
        "cin >> n >> l >> r >> ql >> ql ;",
        "righ [ i + 1 ] = 0 ;",
        "char lef [ 100005 ] ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        9,
        17
      ],
      "mod_code": [
        "lef [ 0 ] = ' 0 ' ;",
        "cin >> n >> l >> r >> ql >> ql ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        9,
        17,
        1
      ],
      "mod_code": [
        "lef [ 0 ] = ' 0 ' ;",
        "cin >> n >> l >> r >> ql >> ql ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char lef [ 100005 ] ;"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "lef [ 0 ] = ' 0 ' ;",
        "righ [ i + 1 ] = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        13,
        17
      ],
      "mod_code": [
        "lef [ 0 ] = ' 0 ' ;",
        "righ [ i + 1 ] = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        1
      ],
      "mod_code": [
        "lef [ 0 ] = ' 0 ' ;",
        "righ [ i + 1 ] = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char lef [ 100005 ] ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        13,
        1
      ],
      "mod_code": [
        "lef [ 0 ] = ' 0 ' ;",
        "righ [ i + 1 ] = 0 ;",
        "char lef [ 100005 ] ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "lef [ 0 ] = ' 0 ' ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        17,
        1
      ],
      "mod_code": [
        "lef [ 0 ] = ' 0 ' ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char lef [ 100005 ] ;"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "cin >> n >> l >> r >> ql >> ql ;",
        "righ [ i + 1 ] = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        13,
        17
      ],
      "mod_code": [
        "cin >> n >> l >> r >> ql >> ql ;",
        "righ [ i + 1 ] = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        13,
        17,
        1
      ],
      "mod_code": [
        "cin >> n >> l >> r >> ql >> ql ;",
        "righ [ i + 1 ] = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char lef [ 100005 ] ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        13,
        1
      ],
      "mod_code": [
        "cin >> n >> l >> r >> ql >> ql ;",
        "righ [ i + 1 ] = 0 ;",
        "char lef [ 100005 ] ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "cin >> n >> l >> r >> ql >> ql ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        17,
        1
      ],
      "mod_code": [
        "cin >> n >> l >> r >> ql >> ql ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char lef [ 100005 ] ;"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "righ [ i + 1 ] = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17,
        1
      ],
      "mod_code": [
        "righ [ i + 1 ] = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char lef [ 100005 ] ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "righ [ i + 1 ] = 0 ;",
        "char lef [ 100005 ] ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "char lef [ 100005 ] ;"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}