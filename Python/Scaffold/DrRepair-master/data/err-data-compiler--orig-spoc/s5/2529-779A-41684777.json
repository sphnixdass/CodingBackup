{
  "meta": {
    "index": 2529,
    "hitid": "31D0ZWOD0AT1CIXWJ6C5GYZFUP80AC",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "779A",
    "subid": "41684777"
  },
  "lines": [
    {
      "line": 0,
      "text": "a and b = array of 10 int , n , x1 , x2 , sum = int",
      "code": "int a [ 10 ] , b [ 10 ] , n , x1 , x2 , sum ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read x1",
      "code": "cin >> x1 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "increment a [ x1 ]",
      "code": "a [ x1 ] ++ ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read x2",
      "code": "cin >> x2 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment b [ x2 ]",
      "code": "b [ x2 ] ++ ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 1 to 5 inclusive",
      "code": "for ( int i = 1 ; i <= 5 ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if a [ i ] + b [ i ] is odd",
      "code": "if ( ( a [ i ] + b [ i ] ) % 2 == 1 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print - 1",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if a [ i ] < b [ i ] swap a [ i ] and b [ i ]",
      "code": "if ( a [ i ] < b [ i ] ) swap ( a [ i ] , b [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "add a [ i ] - ( a [ i ] + b [ i ] ) / 2 to sum",
      "code": "sum += a [ i ] - ( a [ i ] + b [ i ] ) / 2 ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print sum / 2",
      "code": "cout << sum / 2 << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x1 , x2 , sum ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x1’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "if ( a [ i ] + b [ i ] % 2 != 0 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0,
        12,
        4
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "if ( a [ i ] + b [ i ] % 2 != 0 )",
        "while ( cin >> x1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0,
        12,
        4,
        7
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "if ( a [ i ] + b [ i ] % 2 != 0 )",
        "while ( cin >> x1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0,
        12,
        4,
        2
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "if ( a [ i ] + b [ i ] % 2 != 0 )",
        "while ( cin >> x1 )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0,
        12,
        7
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "if ( a [ i ] + b [ i ] % 2 != 0 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0,
        12,
        7,
        2
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "if ( a [ i ] + b [ i ] % 2 != 0 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0,
        12,
        2
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "if ( a [ i ] + b [ i ] % 2 != 0 )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "while ( cin >> x1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0,
        4,
        7
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "while ( cin >> x1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0,
        4,
        7,
        12
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "while ( cin >> x1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( ( a [ i ] + b [ i ] % b [ i ] ) != 0 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0,
        4,
        7,
        2
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "while ( cin >> x1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0,
        4,
        12
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "while ( cin >> x1 )",
        "if ( ( a [ i ] + b [ i ] % b [ i ] ) != 0 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0,
        4,
        12,
        2
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "while ( cin >> x1 )",
        "if ( ( a [ i ] + b [ i ] % b [ i ] ) != 0 )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0,
        4,
        2
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "while ( cin >> x1 )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0,
        7,
        12
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( ( a [ i ] + b [ i ] % b [ i ] ) != 0 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0,
        7,
        12,
        2
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( ( a [ i ] + b [ i ] % b [ i ] ) != 0 )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0,
        7,
        2
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "if ( ( a [ i ] + b [ i ] % b [ i ] ) != 0 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0,
        12,
        2
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "if ( ( a [ i ] + b [ i ] % b [ i ] ) != 0 )",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "int a [ 10 ] , n , x1 , x2 , x2 , sum ;",
        "while ( cin >> n )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x2’"
    },
    {
      "mod_line": [
        12,
        4,
        7
      ],
      "mod_code": [
        "if ( a [ i ] + b [ i ] % 2 != 0 )",
        "while ( cin >> x1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        4,
        7,
        2
      ],
      "mod_code": [
        "if ( a [ i ] + b [ i ] % 2 != 0 )",
        "while ( cin >> x1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "if ( a [ i ] + b [ i ] % 2 != 0 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        7,
        2
      ],
      "mod_code": [
        "if ( a [ i ] + b [ i ] % 2 != 0 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "while ( cin >> x1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        12
      ],
      "mod_code": [
        "while ( cin >> x1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( ( a [ i ] + b [ i ] % b [ i ] ) != 0 )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        2
      ],
      "mod_code": [
        "while ( cin >> x1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( ( a [ i ] + b [ i ] % b [ i ] ) != 0 )",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        2
      ],
      "mod_code": [
        "while ( cin >> x1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( ( a [ i ] + b [ i ] % b [ i ] ) != 0 )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        12,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( ( a [ i ] + b [ i ] % b [ i ] ) != 0 )",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}