{
  "meta": {
    "index": 97,
    "hitid": "3NRZ1LDP7W05179OCJ7UCSRWAVPPZW",
    "workerid": "AIWEXPJAU66D9",
    "probid": "748A",
    "subid": "48988320"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant long long N = 1e6 + 7",
      "code": "const long long N = 1e6 + 7 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long longs n , m , k and rad",
      "code": "long long n , m , k , rad ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare long long variables p and parta",
      "code": "long long p , parta ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare character mesto",
      "code": "char mesto ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "read n , m and k",
      "code": "cin >> n >> m >> k ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set p to k - 1",
      "code": "p = k - 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "divide p by 2",
      "code": "p /= 2 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "rad = ( p / m )",
      "code": "rad = ( p / m ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "increase rad by one",
      "code": "rad ++ ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "parta = p modulo m + 1",
      "code": "parta = p % m + 1 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if k is even",
      "code": "if ( k % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "mesto = ' R '",
      "code": "mesto = ' R ' ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "mesto = ' L '",
      "code": "mesto = ' L ' ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print rad , ' ' , parta , ' ' , mesto and \" \\ n \"",
      "code": "cout << rad << ' ' << parta << ' ' << mesto << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long n , m , k , stdin ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘long long int stdin’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char mesto [ 8 ] ;"
      ],
      "err_line": 12,
      "err_msg": "incompatible types in assignment of ‘char’ to ‘char [8]’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cin = ( p / m ) ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "cin = ( p / m ) ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        16,
        8,
        10
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "cin = ( p / m ) ;",
        "parta %= m + 1 ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        16,
        8,
        10,
        12
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "cin = ( p / m ) ;",
        "parta %= m + 1 ;",
        "char mesto = ' R ' ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        16,
        8,
        10,
        14
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "cin = ( p / m ) ;",
        "parta %= m + 1 ;",
        "char mesto = ' L ' ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        16,
        8,
        10,
        5
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "cin = ( p / m ) ;",
        "parta %= m + 1 ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        16,
        8,
        12
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "cin = ( p / m ) ;",
        "char mesto = ' R ' ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        16,
        8,
        12,
        14
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "cin = ( p / m ) ;",
        "char mesto = ' R ' ;",
        "char mesto = ' L ' ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        16,
        8,
        12,
        5
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "cin = ( p / m ) ;",
        "char mesto = ' R ' ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        16,
        8,
        14
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "cin = ( p / m ) ;",
        "char mesto = ' L ' ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        16,
        8,
        14,
        5
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "cin = ( p / m ) ;",
        "char mesto = ' L ' ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        16,
        8,
        5
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "cin = ( p / m ) ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        16,
        10
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "parta %= m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        16,
        10,
        12
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "parta %= m + 1 ;",
        "char mesto = ' R ' ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        16,
        10,
        12,
        14
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "parta %= m + 1 ;",
        "char mesto = ' R ' ;",
        "char mesto = ' L ' ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        16,
        10,
        12,
        5
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "parta %= m + 1 ;",
        "char mesto = ' R ' ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        16,
        10,
        14
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "parta %= m + 1 ;",
        "char mesto = ' L ' ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        16,
        10,
        14,
        5
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "parta %= m + 1 ;",
        "char mesto = ' L ' ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        16,
        10,
        5
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "parta %= m + 1 ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        16,
        12
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "char mesto = ' R ' ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        16,
        12,
        14
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "char mesto = ' R ' ;",
        "char mesto = ' L ' ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        16,
        12,
        14,
        5
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "char mesto = ' R ' ;",
        "char mesto = ' L ' ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        16,
        12,
        5
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "char mesto = ' R ' ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        16,
        14
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "char mesto = ' L ' ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        16,
        14,
        5
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "char mesto = ' L ' ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        16,
        5
      ],
      "mod_code": [
        "cout << rad << ' ' << parta , ' ' << mesto << \" \\n \" ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 16,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "cin = ( p / m ) ;",
        "parta %= m + 1 ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        8,
        10,
        12
      ],
      "mod_code": [
        "cin = ( p / m ) ;",
        "parta %= m + 1 ;",
        "char mesto = ' R ' ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        14
      ],
      "mod_code": [
        "cin = ( p / m ) ;",
        "parta %= m + 1 ;",
        "char mesto = ' R ' ;",
        "char mesto = ' L ' ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        5
      ],
      "mod_code": [
        "cin = ( p / m ) ;",
        "parta %= m + 1 ;",
        "char mesto = ' R ' ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        8,
        10,
        14
      ],
      "mod_code": [
        "cin = ( p / m ) ;",
        "parta %= m + 1 ;",
        "char mesto = ' L ' ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        8,
        10,
        14,
        5
      ],
      "mod_code": [
        "cin = ( p / m ) ;",
        "parta %= m + 1 ;",
        "char mesto = ' L ' ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        8,
        10,
        5
      ],
      "mod_code": [
        "cin = ( p / m ) ;",
        "parta %= m + 1 ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "cin = ( p / m ) ;",
        "char mesto = ' R ' ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        8,
        12,
        14
      ],
      "mod_code": [
        "cin = ( p / m ) ;",
        "char mesto = ' R ' ;",
        "char mesto = ' L ' ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        5
      ],
      "mod_code": [
        "cin = ( p / m ) ;",
        "char mesto = ' R ' ;",
        "char mesto = ' L ' ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        8,
        12,
        5
      ],
      "mod_code": [
        "cin = ( p / m ) ;",
        "char mesto = ' R ' ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "cin = ( p / m ) ;",
        "char mesto = ' L ' ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        8,
        14,
        5
      ],
      "mod_code": [
        "cin = ( p / m ) ;",
        "char mesto = ' L ' ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "cin = ( p / m ) ;",
        "cin >> n >> m >> n ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long long int’)"
    }
  ]
}