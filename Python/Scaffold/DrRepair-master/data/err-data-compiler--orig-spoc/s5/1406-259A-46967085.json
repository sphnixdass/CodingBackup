{
  "meta": {
    "index": 1406,
    "hitid": "39O6Z4JLX2RT1W65XDS8LZ03P6RXV2",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "259A",
    "subid": "46967085"
  },
  "lines": [
    {
      "line": 0,
      "text": "str = string array of size 9",
      "code": "string str [ 9 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in function with argument integer k that returns boolean",
      "code": "bool ok ( int k )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "ret = integer = 1",
      "code": "int ret = 1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to 8 exclusive",
      "code": "for ( int i = 1 ; i < 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if str [ k ] [ i ] is str [ k ] [ i - 2 ] , then ret = 0",
      "code": "if ( str [ k ] [ i ] == str [ k ] [ i - 1 ] ) ret = 0 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if str [ k ] [ 1 ] is str [ k ] [ 8 ] , then ret = 0",
      "code": "if ( str [ k ] [ 1 ] == str [ k ] [ 8 ] ) ret = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "return ret",
      "code": "return ret ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 10,
      "text": "for i = 1 to 8 inclusive , then read str [ i ]",
      "code": "for ( int i = 1 ; i <= 8 ; i ++ ) { cin >> str [ i ] ; }",
      "indent": 1
    },
    {
      "line": 11,
      "text": "f = integer = 1",
      "code": "int f = 1 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 1 to 8 inclusive",
      "code": "for ( int i = 1 ; i <= 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if calling ok with argument i retruns false , then f = 0",
      "code": "if ( ! ok ( i ) ) { f = 0 ; }",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if f is nonzero",
      "code": "if ( f )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool k ( int k )"
      ],
      "err_line": 13,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char str [ 9 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool in ( int k )"
      ],
      "err_line": 13,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "while ( ret )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 8 ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "bool k ( int k )",
        "if ( str [ k ] [ i ] == str [ k ] [ i - 2 ] ) { ret = 0 ; }"
      ],
      "err_line": 13,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4,
        15
      ],
      "mod_code": [
        "bool k ( int k )",
        "if ( str [ k ] [ i ] == str [ k ] [ i - 2 ] ) { ret = 0 ; }",
        "if ( ! f )"
      ],
      "err_line": 13,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4,
        15,
        0
      ],
      "mod_code": [
        "bool k ( int k )",
        "if ( str [ k ] [ i ] == str [ k ] [ i - 2 ] ) { ret = 0 ; }",
        "if ( ! f )",
        "char str [ 9 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        4,
        0
      ],
      "mod_code": [
        "bool k ( int k )",
        "if ( str [ k ] [ i ] == str [ k ] [ i - 2 ] ) { ret = 0 ; }",
        "char str [ 9 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "bool k ( int k )",
        "if ( ! f )"
      ],
      "err_line": 13,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15,
        0
      ],
      "mod_code": [
        "bool k ( int k )",
        "if ( ! f )",
        "char str [ 9 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        15,
        0,
        4
      ],
      "mod_code": [
        "bool k ( int k )",
        "if ( ! f )",
        "char str [ 9 ] ;",
        "if ( str [ k ] [ i ] == str [ k ] [ i - 2 ] ) ret = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        15,
        4
      ],
      "mod_code": [
        "bool k ( int k )",
        "if ( ! f )",
        "if ( str [ k ] [ i ] == str [ k ] [ i - 2 ] ) ret = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "bool k ( int k )",
        "char str [ 9 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        0,
        4
      ],
      "mod_code": [
        "bool k ( int k )",
        "char str [ 9 ] ;",
        "if ( str [ k ] [ i ] == str [ k ] [ i - 2 ] ) ret = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "bool k ( int k )",
        "if ( str [ k ] [ i ] == str [ k ] [ i - 2 ] ) ret = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        15,
        1
      ],
      "mod_code": [
        "if ( str [ k ] [ i ] == str [ k ] [ i - 2 ] ) { ret = 0 ; }",
        "if ( ! f )",
        "bool in ( int k )"
      ],
      "err_line": 13,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        15,
        1,
        0
      ],
      "mod_code": [
        "if ( str [ k ] [ i ] == str [ k ] [ i - 2 ] ) { ret = 0 ; }",
        "if ( ! f )",
        "bool in ( int k )",
        "char str [ 9 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        15,
        0
      ],
      "mod_code": [
        "if ( str [ k ] [ i ] == str [ k ] [ i - 2 ] ) { ret = 0 ; }",
        "if ( ! f )",
        "char str [ 9 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "if ( str [ k ] [ i ] == str [ k ] [ i - 2 ] ) { ret = 0 ; }",
        "bool in ( int k )"
      ],
      "err_line": 13,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1,
        0
      ],
      "mod_code": [
        "if ( str [ k ] [ i ] == str [ k ] [ i - 2 ] ) { ret = 0 ; }",
        "bool in ( int k )",
        "char str [ 9 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "if ( str [ k ] [ i ] == str [ k ] [ i - 2 ] ) { ret = 0 ; }",
        "char str [ 9 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        1
      ],
      "mod_code": [
        "if ( ! f )",
        "bool in ( int k )"
      ],
      "err_line": 13,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        1,
        0
      ],
      "mod_code": [
        "if ( ! f )",
        "bool in ( int k )",
        "char str [ 9 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        1,
        0,
        4
      ],
      "mod_code": [
        "if ( ! f )",
        "bool in ( int k )",
        "char str [ 9 ] ;",
        "if ( str [ k ] [ i ] == str [ k ] [ i - 2 ] ) ret = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        1,
        4
      ],
      "mod_code": [
        "if ( ! f )",
        "bool in ( int k )",
        "if ( str [ k ] [ i ] == str [ k ] [ i - 2 ] ) ret = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        0
      ],
      "mod_code": [
        "if ( ! f )",
        "char str [ 9 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        0,
        4
      ],
      "mod_code": [
        "if ( ! f )",
        "char str [ 9 ] ;",
        "if ( str [ k ] [ i ] == str [ k ] [ i - 2 ] ) ret = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "bool in ( int k )",
        "char str [ 9 ] ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        0,
        4
      ],
      "mod_code": [
        "bool in ( int k )",
        "char str [ 9 ] ;",
        "if ( str [ k ] [ i ] == str [ k ] [ i - 2 ] ) ret = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "bool in ( int k )",
        "if ( str [ k ] [ i ] == str [ k ] [ i - 2 ] ) ret = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "char str [ 9 ] ;",
        "if ( str [ k ] [ i ] == str [ k ] [ i - 2 ] ) ret = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    }
  ]
}