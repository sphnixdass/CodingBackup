{
  "meta": {
    "index": 566,
    "hitid": "30EV7DWJTVPXMBHE1162SLRDAJP6YL",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "999A",
    "subid": "42021044"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , k = integers",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "a = array of 1000 integers",
      "code": "int a [ 1000 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while reading n and k",
      "code": "while ( cin >> n >> k )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "Read n values into array a",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "ans = integer with 0",
      "code": "int ans = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if a [ i ] is less than or equal to k",
      "code": "if ( a [ i ] <= k )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "else do the following",
      "code": "else",
      "indent": 3
    },
    {
      "line": 10,
      "text": "Terminate the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "for i = n - 1 to 0 exclusive",
      "code": "for ( int i = n - 1 ; i >= 0 ; i -- )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if a [ i ] is less than or equal to k",
      "code": "if ( a [ i ] <= k )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "else do the following",
      "code": "else",
      "indent": 3
    },
    {
      "line": 16,
      "text": "Terminate the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "set ans to minimum value of ans and n",
      "code": "cout << min ( ans , n ) << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long n , k ;"
      ],
      "err_line": 18,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ("
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "long long ans = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "no matching function for call to ‘min(long long int&, int&)’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "Terminate ;"
      ],
      "err_line": 10,
      "err_msg": "‘Terminate’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "Terminate ;"
      ],
      "err_line": 16,
      "err_msg": "‘Terminate’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int ans = min ( ans , n ) ;"
      ],
      "err_line": 18,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        4,
        18,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
        "ans = min ( ans , n ) ;",
        "while ("
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        18,
        3,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
        "ans = min ( ans , n ) ;",
        "while (",
        "while ( 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        18,
        3,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
        "ans = min ( ans , n ) ;",
        "while (",
        "if ( a [ i ] >= k )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        18,
        3,
        15
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
        "ans = min ( ans , n ) ;",
        "while (",
        "while ( 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
        "while ("
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
        "while (",
        "while ( 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3,
        9,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
        "while (",
        "while ( 1 )",
        "if ( a [ i ] >= k )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3,
        9,
        15
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
        "while (",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
        "while (",
        "if ( a [ i ] >= k )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3,
        7,
        15
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
        "while (",
        "if ( a [ i ] >= k )",
        "while ( 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3,
        15
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
        "while (",
        "while ( 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        3
      ],
      "mod_code": [
        "ans = min ( ans , n ) ;",
        "while ("
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        3,
        9
      ],
      "mod_code": [
        "ans = min ( ans , n ) ;",
        "while (",
        "while ( 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        3,
        9,
        7
      ],
      "mod_code": [
        "ans = min ( ans , n ) ;",
        "while (",
        "while ( 1 )",
        "if ( a [ i ] >= k )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        3,
        9,
        15
      ],
      "mod_code": [
        "ans = min ( ans , n ) ;",
        "while (",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        3,
        7
      ],
      "mod_code": [
        "ans = min ( ans , n ) ;",
        "while (",
        "if ( a [ i ] >= k )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        3,
        7,
        15
      ],
      "mod_code": [
        "ans = min ( ans , n ) ;",
        "while (",
        "if ( a [ i ] >= k )",
        "while ( 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        3,
        15
      ],
      "mod_code": [
        "ans = min ( ans , n ) ;",
        "while (",
        "while ( 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while (",
        "while ( 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        9,
        7
      ],
      "mod_code": [
        "while (",
        "while ( 1 )",
        "if ( a [ i ] >= k )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        9,
        7,
        15
      ],
      "mod_code": [
        "while (",
        "while ( 1 )",
        "if ( a [ i ] >= k )",
        "while ( 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        9,
        15
      ],
      "mod_code": [
        "while (",
        "while ( 1 )",
        "while ( 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "while (",
        "if ( a [ i ] >= k )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        15
      ],
      "mod_code": [
        "while (",
        "if ( a [ i ] >= k )",
        "while ( 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "while (",
        "while ( 1 )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    }
  ]
}