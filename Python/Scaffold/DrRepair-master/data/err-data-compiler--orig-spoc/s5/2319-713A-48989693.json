{
  "meta": {
    "index": 2319,
    "hitid": "3VGET1QSZ0TC160J5AT6D26TUMD7WQ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "713A",
    "subid": "48989693"
  },
  "lines": [
    {
      "line": 0,
      "text": "function IntToPattern with long long argument i that returns string",
      "code": "string IntToPattern ( long long i )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string variable patt = \" \"",
      "code": "string patt = \" \" ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while i ! = 0",
      "code": "while ( i != 0 )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "new long long t with value i modulo 10",
      "code": "long long t = i % 10 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "if t is even",
      "code": "if ( t % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "prepend ' 0 ' to patt",
      "code": "patt = ' 0 ' + patt ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 7,
      "text": "prepend ' 1 ' to patt",
      "code": "patt = ' 1 ' + patt ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set i to i / 10",
      "code": "i = i / 10 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "declare integer nl with value = 18 - length of patt",
      "code": "int nl = ( 18 - patt . length ( ) ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for j = 0 to nl exclusive , add ' 0 ' at the beginning of patt",
      "code": "for ( int j = 0 ; j < nl ; j ++ ) { patt = ' 0 ' + patt ; }",
      "indent": 1
    },
    {
      "line": 13,
      "text": "return patt",
      "code": "return patt ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 16,
      "text": "declare integer variable with name n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "read n from the input",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "second is a set of unique strings",
      "code": "set < string > second ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "create a map from strings to integers with name p",
      "code": "map < string , int > p ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "while n ! = 0 , decrement it and continue the loop",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "c is a new character variable",
      "code": "char c ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "read c",
      "code": "cin >> c ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "if c is equal to ' + '",
      "code": "if ( c == ' + ' )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "declare long long variable el",
      "code": "long long el ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "read variable el from the input",
      "code": "cin >> el ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "create new string called t",
      "code": "string t ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "set t to the result of IntToPattern ( el )",
      "code": "t = IntToPattern ( el ) ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "if t is in second",
      "code": "if ( second . count ( t ) )",
      "indent": 3
    },
    {
      "line": 29,
      "text": "increment p [ t ] by one",
      "code": "p [ t ] ++ ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 31,
      "text": "insert t into second",
      "code": "second . insert ( t ) ;",
      "indent": 4
    },
    {
      "line": 32,
      "text": "increment p [ t ] by one",
      "code": "p [ t ] ++ ;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 34,
      "text": "else if c = ' - '",
      "code": "else if ( c == ' - ' )",
      "indent": 2
    },
    {
      "line": 35,
      "text": "create new long long el",
      "code": "long long el ;",
      "indent": 3
    },
    {
      "line": 36,
      "text": "read from the input to el",
      "code": "cin >> el ;",
      "indent": 3
    },
    {
      "line": 37,
      "text": "t is a new string variable",
      "code": "string t ;",
      "indent": 3
    },
    {
      "line": 38,
      "text": "assign the result of IntToPattern ( el ) to t",
      "code": "t = IntToPattern ( el ) ;",
      "indent": 3
    },
    {
      "line": 39,
      "text": "if p [ t ] is greater than 1",
      "code": "if ( p [ t ] > 1 )",
      "indent": 3
    },
    {
      "line": 40,
      "text": "decrement p [ t ] by one",
      "code": "p [ t ] -- ;",
      "indent": 4
    },
    {
      "line": 41,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 42,
      "text": "decrement p [ t ]",
      "code": "p [ t ] -- ;",
      "indent": 4
    },
    {
      "line": 43,
      "text": "remove t from second",
      "code": "second . erase ( t ) ;",
      "indent": 4
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 45,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 46,
      "text": "create string sl",
      "code": "string sl ;",
      "indent": 3
    },
    {
      "line": 47,
      "text": "read standard input to sl",
      "code": "cin >> sl ;",
      "indent": 3
    },
    {
      "line": 48,
      "text": "declare new string called temp = \" \"",
      "code": "string temp = \" \" ;",
      "indent": 3
    },
    {
      "line": 49,
      "text": "new integer nl = 18 - length of sl",
      "code": "int nl = 18 - sl . length ( ) ;",
      "indent": 3
    },
    {
      "line": 50,
      "text": "append nl characters ' 0 ' to the end of temp",
      "code": "for ( int i = 0 ; i < nl ; i ++ ) { temp = temp + ' 0 ' ; }",
      "indent": 3
    },
    {
      "line": 51,
      "text": "set temp to temp + sl",
      "code": "temp = temp + sl ;",
      "indent": 3
    },
    {
      "line": 52,
      "text": "print p [ temp ]",
      "code": "cout << p [ temp ] << endl ;",
      "indent": 3
    },
    {
      "line": 53,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 54,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 55,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 56,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "if ( t != second )"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "t . erase ( t ) ;"
      ],
      "err_line": 43,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string IntToPattern ( long long i ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string flag = \" \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘patt’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 28,
      "err_msg": "‘second’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "set < unique < string > second ;"
      ],
      "err_line": 18,
      "err_msg": "‘unique<std::__cxx11::string>’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "map < strings , int > p ;"
      ],
      "err_line": 19,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "if ( c == ' + ' ) break ;"
      ],
      "err_line": 34,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "{ cin >> el ;"
      ],
      "err_line": 34,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 27,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "int t = IntToPattern ( el ) ;"
      ],
      "err_line": 27,
      "err_msg": "conflicting declaration ‘int t’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "if ( t )"
      ],
      "err_line": 28,
      "err_msg": "could not convert ‘t’ from ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘bool’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "p [ t ] += one ;"
      ],
      "err_line": 29,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "second insert . insert ( t ) ;"
      ],
      "err_line": 31,
      "err_msg": "expected ‘;’ before ‘insert’"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "p [ t ] += one ;"
      ],
      "err_line": 32,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "int t ;"
      ],
      "err_line": 38,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in assignment"
    },
    {
      "mod_line": [
        38
      ],
      "mod_code": [
        "t = IntToPattern ( ) ;"
      ],
      "err_line": 38,
      "err_msg": "too few arguments to function ‘std::__cxx11::string IntToPattern(long long int)’"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "if ( p [ t ] > l )"
      ],
      "err_line": 39,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "p [ t ] -= one ;"
      ],
      "err_line": 40,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "t . pop ( ) ;"
      ],
      "err_line": 43,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘pop’"
    },
    {
      "mod_line": [
        46
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 47,
      "err_msg": "‘sl’ was not declared in this scope"
    },
    {
      "mod_line": [
        47
      ],
      "mod_code": [
        "cin . get ( sl ) ;"
      ],
      "err_line": 47,
      "err_msg": "no matching function for call to ‘std::basic_istream<char>::get(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        48
      ],
      "mod_code": [
        "string == temp = \" \" ;"
      ],
      "err_line": 48,
      "err_msg": "expected unqualified-id before ‘==’ token"
    },
    {
      "mod_line": [
        1,
        12,
        28
      ],
      "mod_code": [
        "string patt = \" \" ;",
        "for ( int j = 0 ; j < nl ; j ++ ) { patt . push_back ( ' 0 ' ) ; }",
        "if ( t != second )"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        1,
        12,
        28,
        43
      ],
      "mod_code": [
        "string patt = \" \" ;",
        "for ( int j = 0 ; j < nl ; j ++ ) { patt . push_back ( ' 0 ' ) ; }",
        "if ( t != second )",
        "t . erase ( t ) ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        1,
        12,
        28,
        48
      ],
      "mod_code": [
        "string patt = \" \" ;",
        "for ( int j = 0 ; j < nl ; j ++ ) { patt . push_back ( ' 0 ' ) ; }",
        "if ( t != second )",
        "string temp = \" \" ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        1,
        12,
        28,
        50
      ],
      "mod_code": [
        "string patt = \" \" ;",
        "for ( int j = 0 ; j < nl ; j ++ ) { patt . push_back ( ' 0 ' ) ; }",
        "if ( t != second )",
        "temp . push_back ( ' 0 ' ) ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        1,
        12,
        43
      ],
      "mod_code": [
        "string patt = \" \" ;",
        "for ( int j = 0 ; j < nl ; j ++ ) { patt . push_back ( ' 0 ' ) ; }",
        "t . erase ( t ) ;"
      ],
      "err_line": 43,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        12,
        43,
        48
      ],
      "mod_code": [
        "string patt = \" \" ;",
        "for ( int j = 0 ; j < nl ; j ++ ) { patt . push_back ( ' 0 ' ) ; }",
        "t . erase ( t ) ;",
        "string temp = \" \" ;"
      ],
      "err_line": 43,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        12,
        43,
        50
      ],
      "mod_code": [
        "string patt = \" \" ;",
        "for ( int j = 0 ; j < nl ; j ++ ) { patt . push_back ( ' 0 ' ) ; }",
        "t . erase ( t ) ;",
        "temp . push_back ( ' 0 ' ) ;"
      ],
      "err_line": 43,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        28
      ],
      "mod_code": [
        "string patt = \" \" ;",
        "if ( t != second )"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        1,
        28,
        43
      ],
      "mod_code": [
        "string patt = \" \" ;",
        "if ( t != second )",
        "t . erase ( t ) ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        1,
        28,
        43,
        48
      ],
      "mod_code": [
        "string patt = \" \" ;",
        "if ( t != second )",
        "t . erase ( t ) ;",
        "string temp = \" \" ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        1,
        28,
        43,
        50
      ],
      "mod_code": [
        "string patt = \" \" ;",
        "if ( t != second )",
        "t . erase ( t ) ;",
        "temp . push_back ( ' 0 ' ) ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        1,
        28,
        48
      ],
      "mod_code": [
        "string patt = \" \" ;",
        "if ( t != second )",
        "string temp = \" \" ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        1,
        28,
        48,
        50
      ],
      "mod_code": [
        "string patt = \" \" ;",
        "if ( t != second )",
        "string temp = \" \" ;",
        "temp . push_back ( ' 0 ' ) ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        1,
        28,
        50
      ],
      "mod_code": [
        "string patt = \" \" ;",
        "if ( t != second )",
        "temp . push_back ( ' 0 ' ) ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        1,
        43
      ],
      "mod_code": [
        "string patt = \" \" ;",
        "t . erase ( t ) ;"
      ],
      "err_line": 43,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        43,
        48
      ],
      "mod_code": [
        "string patt = \" \" ;",
        "t . erase ( t ) ;",
        "string temp = \" \" ;"
      ],
      "err_line": 43,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        43,
        48,
        50
      ],
      "mod_code": [
        "string patt = \" \" ;",
        "t . erase ( t ) ;",
        "string temp = \" \" ;",
        "temp . push_back ( ' 0 ' ) ;"
      ],
      "err_line": 43,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        43,
        50
      ],
      "mod_code": [
        "string patt = \" \" ;",
        "t . erase ( t ) ;",
        "temp . push_back ( ' 0 ' ) ;"
      ],
      "err_line": 43,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        12,
        28
      ],
      "mod_code": [
        "for ( int j = 0 ; j < nl ; j ++ ) { patt . push_back ( ' 0 ' ) ; }",
        "if ( t != second )"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        12,
        28,
        43
      ],
      "mod_code": [
        "for ( int j = 0 ; j < nl ; j ++ ) { patt . push_back ( ' 0 ' ) ; }",
        "if ( t != second )",
        "t . erase ( t ) ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        12,
        28,
        43,
        48
      ],
      "mod_code": [
        "for ( int j = 0 ; j < nl ; j ++ ) { patt . push_back ( ' 0 ' ) ; }",
        "if ( t != second )",
        "t . erase ( t ) ;",
        "string temp = \" \" ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        12,
        28,
        43,
        50
      ],
      "mod_code": [
        "for ( int j = 0 ; j < nl ; j ++ ) { patt . push_back ( ' 0 ' ) ; }",
        "if ( t != second )",
        "t . erase ( t ) ;",
        "temp . push_back ( ' 0 ' ) ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        12,
        28,
        48
      ],
      "mod_code": [
        "for ( int j = 0 ; j < nl ; j ++ ) { patt . push_back ( ' 0 ' ) ; }",
        "if ( t != second )",
        "string temp = \" \" ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        12,
        28,
        48,
        50
      ],
      "mod_code": [
        "for ( int j = 0 ; j < nl ; j ++ ) { patt . push_back ( ' 0 ' ) ; }",
        "if ( t != second )",
        "string temp = \" \" ;",
        "temp . push_back ( ' 0 ' ) ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        12,
        28,
        50
      ],
      "mod_code": [
        "for ( int j = 0 ; j < nl ; j ++ ) { patt . push_back ( ' 0 ' ) ; }",
        "if ( t != second )",
        "temp . push_back ( ' 0 ' ) ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        12,
        43
      ],
      "mod_code": [
        "for ( int j = 0 ; j < nl ; j ++ ) { patt . push_back ( ' 0 ' ) ; }",
        "t . erase ( t ) ;"
      ],
      "err_line": 43,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        12,
        43,
        48
      ],
      "mod_code": [
        "for ( int j = 0 ; j < nl ; j ++ ) { patt . push_back ( ' 0 ' ) ; }",
        "t . erase ( t ) ;",
        "string temp = \" \" ;"
      ],
      "err_line": 43,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        12,
        43,
        48,
        50
      ],
      "mod_code": [
        "for ( int j = 0 ; j < nl ; j ++ ) { patt . push_back ( ' 0 ' ) ; }",
        "t . erase ( t ) ;",
        "string temp = \" \" ;",
        "temp . push_back ( ' 0 ' ) ;"
      ],
      "err_line": 43,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        12,
        43,
        50
      ],
      "mod_code": [
        "for ( int j = 0 ; j < nl ; j ++ ) { patt . push_back ( ' 0 ' ) ; }",
        "t . erase ( t ) ;",
        "temp . push_back ( ' 0 ' ) ;"
      ],
      "err_line": 43,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        28,
        43
      ],
      "mod_code": [
        "if ( t != second )",
        "t . erase ( t ) ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        28,
        43,
        48
      ],
      "mod_code": [
        "if ( t != second )",
        "t . erase ( t ) ;",
        "string temp = \" \" ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        28,
        43,
        48,
        50
      ],
      "mod_code": [
        "if ( t != second )",
        "t . erase ( t ) ;",
        "string temp = \" \" ;",
        "temp . push_back ( ' 0 ' ) ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        28,
        43,
        50
      ],
      "mod_code": [
        "if ( t != second )",
        "t . erase ( t ) ;",
        "temp . push_back ( ' 0 ' ) ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        28,
        48
      ],
      "mod_code": [
        "if ( t != second )",
        "string temp = \" \" ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        28,
        48,
        50
      ],
      "mod_code": [
        "if ( t != second )",
        "string temp = \" \" ;",
        "temp . push_back ( ' 0 ' ) ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        28,
        50
      ],
      "mod_code": [
        "if ( t != second )",
        "temp . push_back ( ' 0 ' ) ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator!=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::set<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        43,
        48
      ],
      "mod_code": [
        "t . erase ( t ) ;",
        "string temp = \" \" ;"
      ],
      "err_line": 43,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        43,
        48,
        50
      ],
      "mod_code": [
        "t . erase ( t ) ;",
        "string temp = \" \" ;",
        "temp . push_back ( ' 0 ' ) ;"
      ],
      "err_line": 43,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        43,
        50
      ],
      "mod_code": [
        "t . erase ( t ) ;",
        "temp . push_back ( ' 0 ' ) ;"
      ],
      "err_line": 43,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(std::__cxx11::string&)’"
    }
  ]
}