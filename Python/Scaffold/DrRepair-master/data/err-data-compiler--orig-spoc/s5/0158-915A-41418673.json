{
  "meta": {
    "index": 158,
    "hitid": "3M0556243SEZT56BVS0V5B6JZYTFNC",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "915A",
    "subid": "41418673"
  },
  "lines": [
    {
      "line": 0,
      "text": "function cmp ( get int a and b , return bool )",
      "code": "bool cmp ( int a , int b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return a > b",
      "code": "return a > b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "n , k = int",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n , k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "a = array of n + 1 int , i = int",
      "code": "int a [ n + 1 ] , i ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to n inclusive read a [ i ]",
      "code": "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "sort a from index 1 to n + 1 using function cmp",
      "code": "sort ( a + 1 , a + n + 1 , cmp ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 1 to n inclusive",
      "code": "for ( i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if k modulo a [ i ] is 0",
      "code": "if ( k % a [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print k / a [ i ]",
      "code": "cout << k / a [ i ] << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int n , k , k ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int a [ n + 1 ] , i , i ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        8,
        5,
        6
      ],
      "mod_code": [
        "sort ( a , a + n + 1 , cmp ) ;",
        "cin >> n >> n ;",
        "int a [ n + 1 ] , i , i ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        8,
        5,
        6,
        4
      ],
      "mod_code": [
        "sort ( a , a + n + 1 , cmp ) ;",
        "cin >> n >> n ;",
        "int a [ n + 1 ] , i , i ;",
        "int n , k , k ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        8,
        5,
        6,
        11
      ],
      "mod_code": [
        "sort ( a , a + n + 1 , cmp ) ;",
        "cin >> n >> n ;",
        "int a [ n + 1 ] , i , i ;",
        "cout << k / a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        8,
        5,
        4
      ],
      "mod_code": [
        "sort ( a , a + n + 1 , cmp ) ;",
        "cin >> n >> n ;",
        "int n , k , k ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        8,
        5,
        4,
        11
      ],
      "mod_code": [
        "sort ( a , a + n + 1 , cmp ) ;",
        "cin >> n >> n ;",
        "int n , k , k ;",
        "cout << k / a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "sort ( a , a + n + 1 , cmp ) ;",
        "int a [ n + 1 ] , i , i ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        8,
        6,
        4
      ],
      "mod_code": [
        "sort ( a , a + n + 1 , cmp ) ;",
        "int a [ n + 1 ] , i , i ;",
        "int n , k , k ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        8,
        6,
        4,
        11
      ],
      "mod_code": [
        "sort ( a , a + n + 1 , cmp ) ;",
        "int a [ n + 1 ] , i , i ;",
        "int n , k , k ;",
        "cout << k / a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        8,
        6,
        11
      ],
      "mod_code": [
        "sort ( a , a + n + 1 , cmp ) ;",
        "int a [ n + 1 ] , i , i ;",
        "cout << k / a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "sort ( a , a + n + 1 , cmp ) ;",
        "int n , k , k ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        8,
        4,
        11
      ],
      "mod_code": [
        "sort ( a , a + n + 1 , cmp ) ;",
        "int n , k , k ;",
        "cout << k / a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int a [ n + 1 ] , i , i ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        5,
        6,
        4
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int a [ n + 1 ] , i , i ;",
        "int n , k , k ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        6,
        4,
        8
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int a [ n + 1 ] , i , i ;",
        "int n , k , k ;",
        "sort ( a + 1 , a + n + 1 ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        6,
        4,
        11
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int a [ n + 1 ] , i , i ;",
        "int n , k , k ;",
        "cout << k / a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        6,
        8
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int a [ n + 1 ] , i , i ;",
        "sort ( a + 1 , a + n + 1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        11
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int a [ n + 1 ] , i , i ;",
        "sort ( a + 1 , a + n + 1 ) ;",
        "cout << k / a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        5,
        6,
        11
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int a [ n + 1 ] , i , i ;",
        "cout << k / a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int n , k , k ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        4,
        8
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int n , k , k ;",
        "sort ( a + 1 , a + n + 1 ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        4,
        8,
        11
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int n , k , k ;",
        "sort ( a + 1 , a + n + 1 ) ;",
        "cout << k / a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        4,
        11
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int n , k , k ;",
        "cout << k / a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "int a [ n + 1 ] , i , i ;",
        "int n , k , k ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        6,
        4,
        8
      ],
      "mod_code": [
        "int a [ n + 1 ] , i , i ;",
        "int n , k , k ;",
        "sort ( a + 1 , a + n + 1 ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        6,
        4,
        8,
        11
      ],
      "mod_code": [
        "int a [ n + 1 ] , i , i ;",
        "int n , k , k ;",
        "sort ( a + 1 , a + n + 1 ) ;",
        "cout << k / a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        6,
        4,
        11
      ],
      "mod_code": [
        "int a [ n + 1 ] , i , i ;",
        "int n , k , k ;",
        "cout << k / a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "int a [ n + 1 ] , i , i ;",
        "sort ( a + 1 , a + n + 1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        6,
        8,
        11
      ],
      "mod_code": [
        "int a [ n + 1 ] , i , i ;",
        "sort ( a + 1 , a + n + 1 ) ;",
        "cout << k / a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "int a [ n + 1 ] , i , i ;",
        "cout << k / a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "int n , k , k ;",
        "sort ( a + 1 , a + n + 1 ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        4,
        8,
        11
      ],
      "mod_code": [
        "int n , k , k ;",
        "sort ( a + 1 , a + n + 1 ) ;",
        "cout << k / a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "int n , k , k ;",
        "cout << k / a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k’"
    }
  ]
}