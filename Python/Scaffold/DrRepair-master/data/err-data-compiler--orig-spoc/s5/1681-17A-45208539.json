{
  "meta": {
    "index": 1681,
    "hitid": "3OJX0UFJ0Z13NLZ7P7CP9AC24WNU9N",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "17A",
    "subid": "45208539"
  },
  "lines": [
    {
      "line": 0,
      "text": "in the function CalculatePrimes that takes vector of int reference = primes , integer = limit",
      "code": "void CalculatePrimes ( vector < int > & primes , int limit )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "append 2 in primes",
      "code": "primes . push_back ( 2 ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "for i = 3 to limit , with i = i + 2",
      "code": "for ( int i = 3 ; i <= limit ; i += 2 )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "test = bool with test = true",
      "code": "bool test = true ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "j = 0 to primes . size ( ) / 2 exclusive",
      "code": "for ( size_t j = 0 ; j < primes . size ( ) / 2 ; ++ j )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if i modulo primes [ j ] is 0",
      "code": "if ( i % primes [ j ] == 0 )",
      "indent": 3
    },
    {
      "line": 6,
      "text": "test = false",
      "code": "test = false ;",
      "indent": 4
    },
    {
      "line": 7,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if test , append i in primes",
      "code": "if ( test ) primes . push_back ( i ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 14,
      "text": "limit , count = integers",
      "code": "int limit , count ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "read limit , count",
      "code": "cin >> limit >> count ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "primes = vector of integer",
      "code": "vector < int > primes ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "call CalculatePrimes on primes and limit",
      "code": "CalculatePrimes ( primes , limit ) ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "sums = vector of int",
      "code": "vector < int > sums ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for i = 0 to primes . size ( ) exclusive",
      "code": "for ( size_t i = 0 ; i < primes . size ( ) ; ++ i )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if i + 1 < primes . size ( ) , sums . push_back ( primes [ i ] + primes [ i + 1 ] + 1 )",
      "code": "if ( i + 1 < primes . size ( ) ) { sums . push_back ( primes [ i ] + primes [ i + 1 ] + 1 ) ; }",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "cnt = integer with cnt = 0",
      "code": "int cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for i = 0 to sums . size ( ) exclusive",
      "code": "for ( size_t i = 0 ; i < sums . size ( ) ; ++ i )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "if find ( primes . begin ( ) , primes . end ( ) , sums [ i ] ) is not primes . end ( ) , increment cnt",
      "code": "if ( find ( primes . begin ( ) , primes . end ( ) , sums [ i ] ) != primes . end ( ) ) { cnt ++ ; }",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "if cnt > = count , print YES , else NO",
      "code": "cout << ( cnt >= count ? \" YES \" : \" NO \" ) << endl ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "for ( i = 3 ; i <= limit ; i += 2 )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;"
      ],
      "err_line": 24,
      "err_msg": "no matching function for call to ‘find(std::vector<int>::iterator, std::vector<int>::iterator)’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > primes , vector < int > primes )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "primes . append ( 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘class std::vector<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < primes . size ( ) / 2 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "while ( cin >> limit >> count )"
      ],
      "err_line": 17,
      "err_msg": "‘primes’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "vector < long int > primes ;"
      ],
      "err_line": 17,
      "err_msg": "invalid initialization of reference of type ‘std::vector<int>&’ from expression of type ‘std::vector<long int>’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "CalculatePrimes ( primes and limit ) ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator&&’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "vector < int > :: sums ;"
      ],
      "err_line": 18,
      "err_msg": "‘sums’ is not a member of ‘std::vector<int>’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "for ( i = 0 ; i < sums . size ( ) ; i ++ )"
      ],
      "err_line": 23,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) { cnt ++ ; }"
      ],
      "err_line": 24,
      "err_msg": "no matching function for call to ‘find(std::vector<int>::iterator, std::vector<int>::iterator)’"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "for ( i = 3 ; i <= limit ; i += 2 )"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        2,
        24
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        2,
        24,
        26
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        2,
        24,
        6
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "bool test = false ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        2,
        24,
        19
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        2,
        26
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        2,
        26,
        6
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;",
        "bool test = false ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        2,
        26,
        19
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        2,
        6
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "bool test = false ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        2,
        6,
        19
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "bool test = false ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        2,
        19
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        24
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        24,
        26
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        24,
        26,
        6
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;",
        "bool test = false ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        24,
        26,
        19
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        24,
        6
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "bool test = false ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        24,
        6,
        19
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "bool test = false ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        24,
        19
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        26
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        26,
        6
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;",
        "bool test = false ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        26,
        6,
        19
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;",
        "bool test = false ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        26,
        19
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "bool test = false ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        6,
        19
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "bool test = false ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        0,
        19
      ],
      "mod_code": [
        "void CalculatePrimes ( vector < int > & primes , vector < int > primes )",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘std::vector<int> primes’"
    },
    {
      "mod_line": [
        2,
        24
      ],
      "mod_code": [
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        24,
        26
      ],
      "mod_code": [
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        6
      ],
      "mod_code": [
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;",
        "bool test = false ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        19
      ],
      "mod_code": [
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        24,
        6
      ],
      "mod_code": [
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "bool test = false ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        24,
        6,
        19
      ],
      "mod_code": [
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "bool test = false ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        24,
        19
      ],
      "mod_code": [
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        26
      ],
      "mod_code": [
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        26,
        6
      ],
      "mod_code": [
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;",
        "bool test = false ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        26,
        6,
        19
      ],
      "mod_code": [
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;",
        "bool test = false ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        26,
        19
      ],
      "mod_code": [
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "bool test = false ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        19
      ],
      "mod_code": [
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "bool test = false ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        19
      ],
      "mod_code": [
        "for ( i = 3 ; i <= limit ; i += 2 )",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26
      ],
      "mod_code": [
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 24,
      "err_msg": "no matching function for call to ‘find(std::vector<int>::iterator, std::vector<int>::iterator)’"
    },
    {
      "mod_line": [
        24,
        26,
        6
      ],
      "mod_code": [
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;",
        "bool test = false ;"
      ],
      "err_line": 24,
      "err_msg": "no matching function for call to ‘find(std::vector<int>::iterator, std::vector<int>::iterator)’"
    },
    {
      "mod_line": [
        24,
        26,
        6,
        19
      ],
      "mod_code": [
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;",
        "bool test = false ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        19
      ],
      "mod_code": [
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        6
      ],
      "mod_code": [
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "bool test = false ;"
      ],
      "err_line": 24,
      "err_msg": "no matching function for call to ‘find(std::vector<int>::iterator, std::vector<int>::iterator)’"
    },
    {
      "mod_line": [
        24,
        6,
        19
      ],
      "mod_code": [
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "bool test = false ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        19
      ],
      "mod_code": [
        "if ( find ( primes . begin ( ) , primes . end ( ) ) != primes . end ( ) ) cnt ++ ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        6,
        19
      ],
      "mod_code": [
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;",
        "bool test = false ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        19
      ],
      "mod_code": [
        "cout << ( cnt >= count ? \" YES \" : \" YES \" ) << endl ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        19
      ],
      "mod_code": [
        "bool test = false ;",
        "for ( i = 0 ; i < primes . size ( ) ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}