{
  "meta": {
    "index": 775,
    "hitid": "3T6EIBTM9LIXDVVEB89Y54BS3BDAA6",
    "workerid": "AIWEXPJAU66D9",
    "probid": "451A",
    "subid": "41639768"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "loop , reading n and m from the input",
      "code": "while ( cin >> n >> m )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create int l = 0",
      "code": "int l = 0 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "while n * m is not 0",
      "code": "while ( n * m != 0 )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "assign m - 1 to m",
      "code": "m = m - 1 ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "assign n - 1 to n",
      "code": "n = n - 1 ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "increment l",
      "code": "l ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if l is odd",
      "code": "if ( l % 2 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print \" Akshat \"",
      "code": "cout << \" Akshat \" << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print \" Malvika \"",
      "code": "cout << \" Malvika \" << endl ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        10,
        3,
        2
      ],
      "mod_code": [
        "int n = n - 1 ;",
        "cout << \" Akshat \" ;",
        "int l = 1 ;",
        "while ( cin >> n >> m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        10,
        12,
        2
      ],
      "mod_code": [
        "int n = n - 1 ;",
        "cout << \" Akshat \" ;",
        "cout << \" Malvika \" ;",
        "while ( cin >> n >> m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        10,
        2
      ],
      "mod_code": [
        "int n = n - 1 ;",
        "cout << \" Akshat \" ;",
        "while ( cin >> n >> m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        3,
        12,
        2
      ],
      "mod_code": [
        "int n = n - 1 ;",
        "int l = 1 ;",
        "cout << \" Malvika \" ;",
        "while ( cin >> n >> m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        3,
        2
      ],
      "mod_code": [
        "int n = n - 1 ;",
        "int l = 1 ;",
        "while ( cin >> n >> m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        12,
        2
      ],
      "mod_code": [
        "int n = n - 1 ;",
        "cout << \" Malvika \" ;",
        "while ( cin >> n >> m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "int n = n - 1 ;",
        "while ( cin >> n >> m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        3,
        12,
        2
      ],
      "mod_code": [
        "cout << \" Akshat \" ;",
        "int l = 1 ;",
        "cout << \" Malvika \" ;",
        "while ( cin >> n >> m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        3,
        2
      ],
      "mod_code": [
        "cout << \" Akshat \" ;",
        "int l = 1 ;",
        "while ( cin >> n >> m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        12,
        2
      ],
      "mod_code": [
        "cout << \" Akshat \" ;",
        "cout << \" Malvika \" ;",
        "while ( cin >> n >> m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "cout << \" Akshat \" ;",
        "while ( cin >> n >> m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        3,
        12,
        2
      ],
      "mod_code": [
        "int l = 1 ;",
        "cout << \" Malvika \" ;",
        "while ( cin >> n >> m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "int l = 1 ;",
        "while ( cin >> n >> m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "cout << \" Malvika \" ;",
        "while ( cin >> n >> m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘;’ token"
    }
  ]
}