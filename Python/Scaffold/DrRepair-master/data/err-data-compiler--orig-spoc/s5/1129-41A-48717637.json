{
  "meta": {
    "index": 1129,
    "hitid": "3OPLMF3EU5HLTXG7H33T0OB3VS0LN3",
    "workerid": "A1APYLD4DUK33J",
    "probid": "41A",
    "subid": "48717637"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer i , len",
      "code": "int i , len ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create character arrays str , arr with str size 105 , arr size 105",
      "code": "char str [ 105 ] , arr [ 105 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read string into str",
      "code": "gets ( str ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read string into arr",
      "code": "gets ( arr ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set len to string length of str",
      "code": "len = strlen ( str ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to len / 2 exclusive",
      "code": "for ( i = 0 ; i < len / 2 ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create character t with t = str [ i ]",
      "code": "char t = str [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set str [ i ] to str [ len - 1 - i ]",
      "code": "str [ i ] = str [ len - 1 - i ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set str [ len - 1 - i ] to t",
      "code": "str [ len - 1 - i ] = t ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if string comparison between str and arr is 0",
      "code": "if ( strcmp ( str , arr ) == 0 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" YES \"",
      "code": "puts ( \" YES \" ) ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print \" NO \"",
      "code": "puts ( \" NO \" ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char arr [ 105 ] , arr [ 105 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "char t [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "char t [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        7,
        2
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "char t [ i ] ;",
        "char arr [ 105 ] , arr [ 105 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        11,
        7,
        2,
        3
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "char t [ i ] ;",
        "char arr [ 105 ] , arr [ 105 ] ;",
        "getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        11,
        7,
        2,
        4
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "char t [ i ] ;",
        "char arr [ 105 ] , arr [ 105 ] ;",
        "getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        11,
        7,
        2,
        5
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "char t [ i ] ;",
        "char arr [ 105 ] , arr [ 105 ] ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        11,
        7,
        3
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "char t [ i ] ;",
        "getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        7,
        3,
        4
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "char t [ i ] ;",
        "getchar ( ) ;",
        "getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        7,
        3,
        5
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "char t [ i ] ;",
        "getchar ( ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        11,
        7,
        4
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "char t [ i ] ;",
        "getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        7,
        4,
        5
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "char t [ i ] ;",
        "getchar ( ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        11,
        7,
        5
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "char t [ i ] ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "char arr [ 105 ] , arr [ 105 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        11,
        2,
        3
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "char arr [ 105 ] , arr [ 105 ] ;",
        "getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        11,
        2,
        3,
        4
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "char arr [ 105 ] , arr [ 105 ] ;",
        "getchar ( ) ;",
        "getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        11,
        2,
        3,
        5
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "char arr [ 105 ] , arr [ 105 ] ;",
        "getchar ( ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        11,
        2,
        4
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "char arr [ 105 ] , arr [ 105 ] ;",
        "getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        11,
        2,
        4,
        5
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "char arr [ 105 ] , arr [ 105 ] ;",
        "getchar ( ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        11,
        2,
        5
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "char arr [ 105 ] , arr [ 105 ] ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        11,
        3,
        4,
        5
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "getchar ( ) ;",
        "getchar ( ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        11,
        3,
        5
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "getchar ( ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        11,
        4,
        5
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "getchar ( ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "if ( strcmp ( str , arr ) )",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "char t [ i ] ;",
        "char arr [ 105 ] , arr [ 105 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        7,
        2,
        3
      ],
      "mod_code": [
        "char t [ i ] ;",
        "char arr [ 105 ] , arr [ 105 ] ;",
        "getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        7,
        2,
        3,
        4
      ],
      "mod_code": [
        "char t [ i ] ;",
        "char arr [ 105 ] , arr [ 105 ] ;",
        "getchar ( ) ;",
        "getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        7,
        2,
        3,
        5
      ],
      "mod_code": [
        "char t [ i ] ;",
        "char arr [ 105 ] , arr [ 105 ] ;",
        "getchar ( ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        7,
        2,
        4
      ],
      "mod_code": [
        "char t [ i ] ;",
        "char arr [ 105 ] , arr [ 105 ] ;",
        "getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        7,
        2,
        4,
        5
      ],
      "mod_code": [
        "char t [ i ] ;",
        "char arr [ 105 ] , arr [ 105 ] ;",
        "getchar ( ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        7,
        2,
        5
      ],
      "mod_code": [
        "char t [ i ] ;",
        "char arr [ 105 ] , arr [ 105 ] ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "char t [ i ] ;",
        "getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        3,
        4
      ],
      "mod_code": [
        "char t [ i ] ;",
        "getchar ( ) ;",
        "getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        3,
        4,
        5
      ],
      "mod_code": [
        "char t [ i ] ;",
        "getchar ( ) ;",
        "getchar ( ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        7,
        3,
        5
      ],
      "mod_code": [
        "char t [ i ] ;",
        "getchar ( ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "char t [ i ] ;",
        "getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        4,
        5
      ],
      "mod_code": [
        "char t [ i ] ;",
        "getchar ( ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "char t [ i ] ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "char arr [ 105 ] , arr [ 105 ] ;",
        "getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        2,
        3,
        4
      ],
      "mod_code": [
        "char arr [ 105 ] , arr [ 105 ] ;",
        "getchar ( ) ;",
        "getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        5
      ],
      "mod_code": [
        "char arr [ 105 ] , arr [ 105 ] ;",
        "getchar ( ) ;",
        "getchar ( ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        2,
        3,
        5
      ],
      "mod_code": [
        "char arr [ 105 ] , arr [ 105 ] ;",
        "getchar ( ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "char arr [ 105 ] , arr [ 105 ] ;",
        "getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        2,
        4,
        5
      ],
      "mod_code": [
        "char arr [ 105 ] , arr [ 105 ] ;",
        "getchar ( ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "char arr [ 105 ] , arr [ 105 ] ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char arr [105]’"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "getchar ( ) ;",
        "getchar ( ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "getchar ( ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "getchar ( ) ;",
        "len = str . size ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘str’, which is of non-class type ‘char [105]’"
    }
  ]
}