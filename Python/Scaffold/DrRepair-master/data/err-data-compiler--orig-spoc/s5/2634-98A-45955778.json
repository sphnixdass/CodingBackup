{
  "meta": {
    "index": 2634,
    "hitid": "3LG268AV380S2PY7TOX6WDQTOU6REX",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "98A",
    "subid": "45955778"
  },
  "lines": [
    {
      "line": 0,
      "text": "prime = long long vector of size 10000005 with all values set to 0",
      "code": "vector < long long > prime ( 10000005 , 0 ) ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in function mM taking long long a , long long b , long long mod and returning long long",
      "code": "long long mM ( long long a , long long b , long long mod )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "res = long long with res = 0",
      "code": "long long res = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set a to a modulo mod",
      "code": "a %= mod ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "loop while b",
      "code": "while ( b )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if b bitwise - and 1 set res to ( res + a ) modulo mo",
      "code": "if ( b & 1 ) res = ( res + a ) % mod ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set a to ( 2 * a ) modulo mod",
      "code": "a = ( 2 * a ) % mod ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set b to b bitshift right by 1",
      "code": "b >>= 1 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "return res",
      "code": "return res ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 11,
      "text": "in function fpwo taking long long first , long long second , long long p and returning long long",
      "code": "long long fpow ( long long first , long long second , long long p )",
      "indent": 0
    },
    {
      "line": 12,
      "text": "set first to first mod p",
      "code": "first = first % p ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "res = long long with res = 1",
      "code": "long long res = 1 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "loop while second",
      "code": "while ( second )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if second bitwise - and 1 set res to ( res * first ) mod p",
      "code": "if ( second & 1 ) res = ( res * first ) % p ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "set res to res mod p",
      "code": "res %= p ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if res < 0 set res to ( res + p ) mod p",
      "code": "if ( res < 0 ) res = ( res + p ) % p ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "set second to second bitshift right by 1",
      "code": "second = second >> 1 ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "set first to ( first * first ) mod p",
      "code": "first = ( first * first ) % p ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if first < 0 set first to ( first + p ) mod p",
      "code": "if ( first < 0 ) first = ( first + p ) % p ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "set first to first mod p",
      "code": "first %= p ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "return res",
      "code": "return res ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 25,
      "text": "in function inv taking long long n and returning long long",
      "code": "long long inv ( long long n )",
      "indent": 0
    },
    {
      "line": 26,
      "text": "return fpow of n , 1000000007 - 2 , 1000000007",
      "code": "return fpow ( n , 1000000007 - 2 , 1000000007 ) ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 28,
      "text": "in function modmul taking long long first , long long second and returning long long",
      "code": "long long modmul ( long long first , long long second )",
      "indent": 0
    },
    {
      "line": 29,
      "text": "return ( ( first mod 1000000007 ) * ( second mod 1000000007 ) ) mod 1000000007",
      "code": "return ( ( first % 1000000007 ) * ( second % 1000000007 ) ) % 1000000007 ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 31,
      "text": "in function modadd taking long long first , long long second and returning long long",
      "code": "long long modadd ( long long first , long long second )",
      "indent": 0
    },
    {
      "line": 32,
      "text": "temp = long long with temp = first mod 1000000007 + second mod 1000000007",
      "code": "long long temp = first % 1000000007 + second % 1000000007 ;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "set temp to temp mod 1000000007",
      "code": "temp %= 1000000007 ;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "if temp < 0 set temp to ( temp + 1000000007 ) mod 1000000007",
      "code": "if ( temp < 0 ) temp = ( temp + 1000000007 ) % 1000000007 ;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "return temp",
      "code": "return temp ;",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 37,
      "text": "in function sieve",
      "code": "void sieve ( )",
      "indent": 0
    },
    {
      "line": 38,
      "text": "set prime [ 1 ] to 1",
      "code": "prime [ 1 ] = 1 ;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "for i = 2 to 10000005",
      "code": "for ( long long i = 2 ; i < 10000005 ; i ++ )",
      "indent": 1
    },
    {
      "line": 40,
      "text": "if not prime [ i ]",
      "code": "if ( ! prime [ i ] )",
      "indent": 2
    },
    {
      "line": 41,
      "text": "for j = i to 10000005 incrementing j by i",
      "code": "for ( long long j = i ; j < 10000005 ; j += i )",
      "indent": 3
    },
    {
      "line": 42,
      "text": "if not prime [ j ] set prime [ j ] to i",
      "code": "if ( ! prime [ j ] ) prime [ j ] = i ;",
      "indent": 4
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 44,
      "text": "in function rot taking string s and returning string",
      "code": "string rot ( string s )",
      "indent": 0
    },
    {
      "line": 45,
      "text": "mn = string with mn = s",
      "code": "string mn = s ;",
      "indent": 1
    },
    {
      "line": 46,
      "text": "for i = 0 to 4",
      "code": "for ( int i = 0 ; i < 4 ; i ++ )",
      "indent": 1
    },
    {
      "line": 47,
      "text": "for j = 0 to 4",
      "code": "for ( int j = 0 ; j < 4 ; j ++ )",
      "indent": 2
    },
    {
      "line": 48,
      "text": "call swap of s [ 1 ] , s [ 2 ]",
      "code": "swap ( s [ 1 ] , s [ 2 ] ) ;",
      "indent": 3
    },
    {
      "line": 49,
      "text": "call swap of s [ 2 ] , s [ 3 ]",
      "code": "swap ( s [ 2 ] , s [ 3 ] ) ;",
      "indent": 3
    },
    {
      "line": 50,
      "text": "call swap of s [ 3 ] , s [ 4 ]",
      "code": "swap ( s [ 3 ] , s [ 4 ] ) ;",
      "indent": 3
    },
    {
      "line": 51,
      "text": "set mn to min of mn , s",
      "code": "mn = min ( mn , s ) ;",
      "indent": 3
    },
    {
      "line": 52,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 53,
      "text": "call swap of s [ 0 ] , s [ 1 ]",
      "code": "swap ( s [ 0 ] , s [ 1 ] ) ;",
      "indent": 2
    },
    {
      "line": 54,
      "text": "call swap of s [ 1 ] , s [ 5 ]",
      "code": "swap ( s [ 1 ] , s [ 5 ] ) ;",
      "indent": 2
    },
    {
      "line": 55,
      "text": "call swap of s [ 5 ] , s [ 3 ]",
      "code": "swap ( s [ 5 ] , s [ 3 ] ) ;",
      "indent": 2
    },
    {
      "line": 56,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 57,
      "text": "for i = 0 to 4",
      "code": "for ( int i = 0 ; i < 4 ; i ++ )",
      "indent": 1
    },
    {
      "line": 58,
      "text": "for j = 0 to 4",
      "code": "for ( int j = 0 ; j < 4 ; j ++ )",
      "indent": 2
    },
    {
      "line": 59,
      "text": "call swap of s [ 1 ] , s [ 2 ]",
      "code": "swap ( s [ 1 ] , s [ 2 ] ) ;",
      "indent": 3
    },
    {
      "line": 60,
      "text": "call swap of s [ 2 ] , s [ 3 ]",
      "code": "swap ( s [ 2 ] , s [ 3 ] ) ;",
      "indent": 3
    },
    {
      "line": 61,
      "text": "call swap of s [ 3 ] , s [ 4 ]",
      "code": "swap ( s [ 3 ] , s [ 4 ] ) ;",
      "indent": 3
    },
    {
      "line": 62,
      "text": "set mn to min of mn , s",
      "code": "mn = min ( mn , s ) ;",
      "indent": 3
    },
    {
      "line": 63,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 64,
      "text": "call swap of s [ 0 ] , s [ 4 ]",
      "code": "swap ( s [ 0 ] , s [ 4 ] ) ;",
      "indent": 2
    },
    {
      "line": 65,
      "text": "call swap of s [ 4 ] , s [ 2 ]",
      "code": "swap ( s [ 4 ] , s [ 2 ] ) ;",
      "indent": 2
    },
    {
      "line": 66,
      "text": "call swap of s [ 4 ] , s [ 5 ]",
      "code": "swap ( s [ 4 ] , s [ 5 ] ) ;",
      "indent": 2
    },
    {
      "line": 67,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 68,
      "text": "return mn",
      "code": "return mn ;",
      "indent": 1
    },
    {
      "line": 69,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 70,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 71,
      "text": "t = long long",
      "code": "long long t ;",
      "indent": 1
    },
    {
      "line": 72,
      "text": "set t to 1",
      "code": "t = 1 ;",
      "indent": 1
    },
    {
      "line": 73,
      "text": "loop t times",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 74,
      "text": "s = string",
      "code": "string s ;",
      "indent": 2
    },
    {
      "line": 75,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 76,
      "text": "sort s",
      "code": "sort ( s . begin ( ) , s . end ( ) ) ;",
      "indent": 2
    },
    {
      "line": 77,
      "text": "st = string set",
      "code": "set < string > st ;",
      "indent": 2
    },
    {
      "line": 78,
      "text": "do insert rot of s into st while next_permutation of begin of s , end of s",
      "code": "do { st . insert ( rot ( s ) ) ; } while ( next_permutation ( s . begin ( ) , s . end ( ) ) ) ;",
      "indent": 2
    },
    {
      "line": 79,
      "text": "print size of st",
      "code": "cout << st . size ( ) << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 80,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 81,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( b & 1 ) res = ( res + a ) % mo ;"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "long long fpwo ( long long first , long long p , long long p )"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int p’"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "for ( j = i ; j < 10000005 ; j += i )"
      ],
      "err_line": 41,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( b & 1 ) { res = ( res + a ) % mo ; }"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "long long fpwo ( long long first , long long second , long long p )"
      ],
      "err_line": 26,
      "err_msg": "‘fpow’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int first = first % p ;"
      ],
      "err_line": 12,
      "err_msg": "declaration of ‘int first’ shadows a parameter"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "long long inv ( long long n ) ;"
      ],
      "err_line": 26,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "return fpow ( n - 1000000007 - 2 , 1000000007 ) ;"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘long long int fpow(long long int, long long int, long long int)’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "long long modmul ( long long first , long long second ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "long long modadd ( long long first , long long second ) ;"
      ],
      "err_line": 32,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "void sieve ( ) ;"
      ],
      "err_line": 38,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        38
      ],
      "mod_code": [
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 38,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "for ( i = 2 ; i <= 10000005 ; i ++ )"
      ],
      "err_line": 39,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        44
      ],
      "mod_code": [
        "string rot ( string s ) ;"
      ],
      "err_line": 45,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        45
      ],
      "mod_code": [
        "string mn = 1 ;"
      ],
      "err_line": 45,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        48
      ],
      "mod_code": [
        "swap ( s [ 1 ] , ! s [ 2 ] ) ;"
      ],
      "err_line": 48,
      "err_msg": "no matching function for call to ‘swap(char&, bool)’"
    },
    {
      "mod_line": [
        49
      ],
      "mod_code": [
        "swap ( s [ 2 ] , ! s [ 3 ] ) ;"
      ],
      "err_line": 49,
      "err_msg": "no matching function for call to ‘swap(char&, bool)’"
    },
    {
      "mod_line": [
        50
      ],
      "mod_code": [
        "swap ( s [ 3 ] , s ) , s [ 4 ] ;"
      ],
      "err_line": 50,
      "err_msg": "no matching function for call to ‘swap(char&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        51
      ],
      "mod_code": [
        "int mn = min ( mn , s ) ;"
      ],
      "err_line": 51,
      "err_msg": "no matching function for call to ‘min(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        54
      ],
      "mod_code": [
        "swap ( s [ 1 ] , s [ 5 ] , s [ 5 ] ) ;"
      ],
      "err_line": 54,
      "err_msg": "no matching function for call to ‘swap(char&, char&, char&)’"
    },
    {
      "mod_line": [
        55
      ],
      "mod_code": [
        "swap ( s [ 5 ] , ! s [ 3 ] ) ;"
      ],
      "err_line": 55,
      "err_msg": "no matching function for call to ‘swap(char&, bool)’"
    },
    {
      "mod_line": [
        59
      ],
      "mod_code": [
        "swap ( s [ 1 ] , ! s [ 2 ] ) ;"
      ],
      "err_line": 59,
      "err_msg": "no matching function for call to ‘swap(char&, bool)’"
    },
    {
      "mod_line": [
        60
      ],
      "mod_code": [
        "swap ( s [ 2 ] , ! s [ 3 ] ) ;"
      ],
      "err_line": 60,
      "err_msg": "no matching function for call to ‘swap(char&, bool)’"
    },
    {
      "mod_line": [
        61
      ],
      "mod_code": [
        "swap ( s [ 3 ] , s ) , s [ 4 ] ;"
      ],
      "err_line": 61,
      "err_msg": "no matching function for call to ‘swap(char&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        62
      ],
      "mod_code": [
        "int mn = min ( mn , s ) ;"
      ],
      "err_line": 62,
      "err_msg": "no matching function for call to ‘min(int&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        64
      ],
      "mod_code": [
        "swap ( s [ 0 ] , \" s \" ) ;"
      ],
      "err_line": 64,
      "err_msg": "no matching function for call to ‘swap(char&, const char [2])’"
    },
    {
      "mod_line": [
        66
      ],
      "mod_code": [
        "swap ( s [ 4 ] , ! s [ 5 ] ) ;"
      ],
      "err_line": 66,
      "err_msg": "no matching function for call to ‘swap(char&, bool)’"
    },
    {
      "mod_line": [
        72
      ],
      "mod_code": [
        "int t = 1 ;"
      ],
      "err_line": 72,
      "err_msg": "conflicting declaration ‘int t’"
    },
    {
      "mod_line": [
        74
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 76,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        78
      ],
      "mod_code": [
        "st . insert ( rot . begin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 78,
      "err_msg": "request for member ‘begin’ in ‘rot’, which is of non-class type ‘std::__cxx11::string(std::__cxx11::string) {aka std::__cxx11::basic_string<char>(std::__cxx11::basic_string<char>)}’"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "if ( b & 1 ) res = ( res + a ) % mo ;",
        "long long fpwo ( long long first , long long p , long long p )"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        41
      ],
      "mod_code": [
        "if ( b & 1 ) res = ( res + a ) % mo ;",
        "long long fpwo ( long long first , long long p , long long p )",
        "for ( j = i ; j < 10000005 ; j += i )"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        41,
        78
      ],
      "mod_code": [
        "if ( b & 1 ) res = ( res + a ) % mo ;",
        "long long fpwo ( long long first , long long p , long long p )",
        "for ( j = i ; j < 10000005 ; j += i )",
        "st . insert ( s . begin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        41,
        38
      ],
      "mod_code": [
        "if ( b & 1 ) res = ( res + a ) % mo ;",
        "long long fpwo ( long long first , long long p , long long p )",
        "for ( j = i ; j < 10000005 ; j += i )",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        78
      ],
      "mod_code": [
        "if ( b & 1 ) res = ( res + a ) % mo ;",
        "long long fpwo ( long long first , long long p , long long p )",
        "st . insert ( s . begin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        78,
        38
      ],
      "mod_code": [
        "if ( b & 1 ) res = ( res + a ) % mo ;",
        "long long fpwo ( long long first , long long p , long long p )",
        "st . insert ( s . begin ( ) , s . end ( ) ) ;",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        38
      ],
      "mod_code": [
        "if ( b & 1 ) res = ( res + a ) % mo ;",
        "long long fpwo ( long long first , long long p , long long p )",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        41
      ],
      "mod_code": [
        "if ( b & 1 ) res = ( res + a ) % mo ;",
        "for ( j = i ; j < 10000005 ; j += i )"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        41,
        78
      ],
      "mod_code": [
        "if ( b & 1 ) res = ( res + a ) % mo ;",
        "for ( j = i ; j < 10000005 ; j += i )",
        "st . insert ( s . begin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        41,
        78,
        38
      ],
      "mod_code": [
        "if ( b & 1 ) res = ( res + a ) % mo ;",
        "for ( j = i ; j < 10000005 ; j += i )",
        "st . insert ( s . begin ( ) , s . end ( ) ) ;",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        41,
        38
      ],
      "mod_code": [
        "if ( b & 1 ) res = ( res + a ) % mo ;",
        "for ( j = i ; j < 10000005 ; j += i )",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        78
      ],
      "mod_code": [
        "if ( b & 1 ) res = ( res + a ) % mo ;",
        "st . insert ( s . begin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        78,
        38
      ],
      "mod_code": [
        "if ( b & 1 ) res = ( res + a ) % mo ;",
        "st . insert ( s . begin ( ) , s . end ( ) ) ;",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        38
      ],
      "mod_code": [
        "if ( b & 1 ) res = ( res + a ) % mo ;",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        41
      ],
      "mod_code": [
        "long long fpwo ( long long first , long long p , long long p )",
        "for ( j = i ; j < 10000005 ; j += i )"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int p’"
    },
    {
      "mod_line": [
        11,
        41,
        78
      ],
      "mod_code": [
        "long long fpwo ( long long first , long long p , long long p )",
        "for ( j = i ; j < 10000005 ; j += i )",
        "st . insert ( s . begin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int p’"
    },
    {
      "mod_line": [
        11,
        41,
        78,
        5
      ],
      "mod_code": [
        "long long fpwo ( long long first , long long p , long long p )",
        "for ( j = i ; j < 10000005 ; j += i )",
        "st . insert ( s . begin ( ) , s . end ( ) ) ;",
        "if ( b & 1 ) { res = ( res + a ) % mo ; }"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        41,
        78,
        38
      ],
      "mod_code": [
        "long long fpwo ( long long first , long long p , long long p )",
        "for ( j = i ; j < 10000005 ; j += i )",
        "st . insert ( s . begin ( ) , s . end ( ) ) ;",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int p’"
    },
    {
      "mod_line": [
        11,
        41,
        5
      ],
      "mod_code": [
        "long long fpwo ( long long first , long long p , long long p )",
        "for ( j = i ; j < 10000005 ; j += i )",
        "if ( b & 1 ) { res = ( res + a ) % mo ; }"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        41,
        5,
        38
      ],
      "mod_code": [
        "long long fpwo ( long long first , long long p , long long p )",
        "for ( j = i ; j < 10000005 ; j += i )",
        "if ( b & 1 ) { res = ( res + a ) % mo ; }",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        41,
        38
      ],
      "mod_code": [
        "long long fpwo ( long long first , long long p , long long p )",
        "for ( j = i ; j < 10000005 ; j += i )",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int p’"
    },
    {
      "mod_line": [
        11,
        78
      ],
      "mod_code": [
        "long long fpwo ( long long first , long long p , long long p )",
        "st . insert ( s . begin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int p’"
    },
    {
      "mod_line": [
        11,
        78,
        5
      ],
      "mod_code": [
        "long long fpwo ( long long first , long long p , long long p )",
        "st . insert ( s . begin ( ) , s . end ( ) ) ;",
        "if ( b & 1 ) { res = ( res + a ) % mo ; }"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        78,
        5,
        38
      ],
      "mod_code": [
        "long long fpwo ( long long first , long long p , long long p )",
        "st . insert ( s . begin ( ) , s . end ( ) ) ;",
        "if ( b & 1 ) { res = ( res + a ) % mo ; }",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        78,
        38
      ],
      "mod_code": [
        "long long fpwo ( long long first , long long p , long long p )",
        "st . insert ( s . begin ( ) , s . end ( ) ) ;",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int p’"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "long long fpwo ( long long first , long long p , long long p )",
        "if ( b & 1 ) { res = ( res + a ) % mo ; }"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5,
        38
      ],
      "mod_code": [
        "long long fpwo ( long long first , long long p , long long p )",
        "if ( b & 1 ) { res = ( res + a ) % mo ; }",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        38
      ],
      "mod_code": [
        "long long fpwo ( long long first , long long p , long long p )",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "redefinition of ‘long long int p’"
    },
    {
      "mod_line": [
        41,
        78
      ],
      "mod_code": [
        "for ( j = i ; j < 10000005 ; j += i )",
        "st . insert ( s . begin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 41,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        41,
        78,
        5
      ],
      "mod_code": [
        "for ( j = i ; j < 10000005 ; j += i )",
        "st . insert ( s . begin ( ) , s . end ( ) ) ;",
        "if ( b & 1 ) { res = ( res + a ) % mo ; }"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        41,
        78,
        5,
        38
      ],
      "mod_code": [
        "for ( j = i ; j < 10000005 ; j += i )",
        "st . insert ( s . begin ( ) , s . end ( ) ) ;",
        "if ( b & 1 ) { res = ( res + a ) % mo ; }",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        41,
        78,
        38
      ],
      "mod_code": [
        "for ( j = i ; j < 10000005 ; j += i )",
        "st . insert ( s . begin ( ) , s . end ( ) ) ;",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 38,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        41,
        5
      ],
      "mod_code": [
        "for ( j = i ; j < 10000005 ; j += i )",
        "if ( b & 1 ) { res = ( res + a ) % mo ; }"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        41,
        5,
        38
      ],
      "mod_code": [
        "for ( j = i ; j < 10000005 ; j += i )",
        "if ( b & 1 ) { res = ( res + a ) % mo ; }",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        41,
        38
      ],
      "mod_code": [
        "for ( j = i ; j < 10000005 ; j += i )",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 38,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        78,
        5
      ],
      "mod_code": [
        "st . insert ( s . begin ( ) , s . end ( ) ) ;",
        "if ( b & 1 ) { res = ( res + a ) % mo ; }"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        78,
        5,
        38
      ],
      "mod_code": [
        "st . insert ( s . begin ( ) , s . end ( ) ) ;",
        "if ( b & 1 ) { res = ( res + a ) % mo ; }",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    },
    {
      "mod_line": [
        78,
        38
      ],
      "mod_code": [
        "st . insert ( s . begin ( ) , s . end ( ) ) ;",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 38,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        5,
        38
      ],
      "mod_code": [
        "if ( b & 1 ) { res = ( res + a ) % mo ; }",
        "int prime [ 1 ] = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "‘mo’ was not declared in this scope"
    }
  ]
}