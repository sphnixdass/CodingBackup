{
  "meta": {
    "index": 871,
    "hitid": "3XAOZ9UYRZLT6NPV4LDRK3XU2CXQ1Y",
    "workerid": "A1APYLD4DUK33J",
    "probid": "322A",
    "subid": "42426092"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer s with s = m + ( n - 1 )",
      "code": "int s = m + ( n - 1 ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print s print \" \\ n \"",
      "code": "cout << s << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer i with i = 1",
      "code": "int i = 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while i is less than or equal to m",
      "code": "while ( i <= m )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print \" 1 \"",
      "code": "cout << \" 1 \"",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print \" \" print i print \" \\ n \"",
      "code": "<< \" \" << i << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set i to 2",
      "code": "i = 2 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "while i is less than or equal to n",
      "code": "while ( i <= n )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print i print \" \"",
      "code": "cout << i << \" \"",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print \" 1 \"",
      "code": "<< \" 1 \"",
      "indent": 3
    },
    {
      "line": 15,
      "text": "print \" \\ n \"",
      "code": "<< \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cout << \" \" << i << \" \\n \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cout << i << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n read m ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout << \" 1 \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "bool i = 2 ;"
      ],
      "err_line": 11,
      "err_msg": "conflicting declaration ‘bool i’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cout << i << \" \" << i << endl ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << \" 1 \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cout << \" \\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        8,
        13
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << \" \\n \" ;",
        "cout << i << \" \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        13,
        14
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << \" \\n \" ;",
        "cout << i << \" \" ;",
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        13,
        3
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << \" \\n \" ;",
        "cout << i << \" \" ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        7,
        8,
        14
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << \" \\n \" ;",
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        8,
        14,
        13
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << \" \\n \" ;",
        "cout << \" 1 \" << endl ;",
        "cout << i << \" \" << i << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        14,
        3
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << \" \\n \" ;",
        "cout << \" 1 \" << endl ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        7,
        8,
        13
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << \" \\n \" ;",
        "cout << i << \" \" << i << endl ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        13,
        3
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << \" \\n \" ;",
        "cout << i << \" \" << i << endl ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        7,
        8,
        3
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << \" \\n \" ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << i << \" \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        13,
        14
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << i << \" \" ;",
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        13,
        14,
        3
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << i << \" \" ;",
        "cout << \" 1 \" << endl ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        7,
        13,
        3
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << i << \" \" ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        13
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 1 \" << endl ;",
        "cout << i << \" \" << i << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        14,
        13,
        3
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 1 \" << endl ;",
        "cout << i << \" \" << i << endl ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        7,
        14,
        3
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 1 \" << endl ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << i << \" \" << i << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        13,
        3
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << i << \" \" << i << endl ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "cout << \" \" << i << \" \\n \" ;",
        "cout << i << \" \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8,
        13,
        14
      ],
      "mod_code": [
        "cout << \" \" << i << \" \\n \" ;",
        "cout << i << \" \" ;",
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        3
      ],
      "mod_code": [
        "cout << \" \" << i << \" \\n \" ;",
        "cout << i << \" \" ;",
        "cout << \" 1 \" << endl ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        13,
        3
      ],
      "mod_code": [
        "cout << \" \" << i << \" \\n \" ;",
        "cout << i << \" \" ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "cout << \" \" << i << \" \\n \" ;",
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8,
        14,
        13
      ],
      "mod_code": [
        "cout << \" \" << i << \" \\n \" ;",
        "cout << \" 1 \" << endl ;",
        "cout << i << \" \" << i << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8,
        14,
        13,
        3
      ],
      "mod_code": [
        "cout << \" \" << i << \" \\n \" ;",
        "cout << \" 1 \" << endl ;",
        "cout << i << \" \" << i << endl ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        14,
        3
      ],
      "mod_code": [
        "cout << \" \" << i << \" \\n \" ;",
        "cout << \" 1 \" << endl ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "cout << \" \" << i << \" \\n \" ;",
        "cout << i << \" \" << i << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8,
        13,
        3
      ],
      "mod_code": [
        "cout << \" \" << i << \" \\n \" ;",
        "cout << i << \" \" << i << endl ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "cout << \" \" << i << \" \\n \" ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "cout << i << \" \" ;",
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        3
      ],
      "mod_code": [
        "cout << i << \" \" ;",
        "cout << \" 1 \" << endl ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "cout << i << \" \" ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        14,
        13
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << i << \" \" << i << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        13,
        3
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << i << \" \" << i << endl ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "cout << i << \" \" << i << endl ;",
        "int s += ( n - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+=’ token"
    }
  ]
}