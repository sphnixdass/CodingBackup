{
  "meta": {
    "index": 322,
    "hitid": "3XEDXEGFX3I7OV6IVXPUAC2BZ1UK03",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "61A",
    "subid": "49039340"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "s2 = string",
      "code": "string s2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s2",
      "code": "cin >> s2 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "sL = integer = length of s",
      "code": "int sL = s . length ( ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "s2L = integer = length of s2",
      "code": "int s2L = s2 . length ( ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "sL is not s2L",
      "code": "if ( sL != s2L )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if sL > s2L",
      "code": "if ( sL > s2L )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "tmp = integer = sL - s2L",
      "code": "int tmp = sL - s2L ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "while looping decrease tmp by 1 , then s2 = 0 + s2",
      "code": "while ( tmp -- ) { s2 = \" 0 \" + s2 ; }",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "tmp = integer = s2L - sL",
      "code": "int tmp = s2L - sL ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "while looping decrease tmp by 1 , then s2 = 0 + s",
      "code": "while ( tmp -- ) { s = \" 0 \" + s ; }",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i = 0 to length of s exclusive",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "x = integer = ( s [ i ] - ' 0 ' ) ^ ( s2 [ i ] - ' 0 ' )",
      "code": "int x = ( s [ i ] - ' 0 ' ) ^ ( s2 [ i ] - ' 0 ' ) ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print x",
      "code": "cout << x ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s ; }"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char s2 ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘length’ in ‘s2’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "while ( tmp -- ) s2 = 0 + s2 ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "while ( tmp -- ) s2 = 0 + s ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . length ( ) ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "while ( tmp -- ) { s2 = 0 + s ; }"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        13,
        17
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "while ( tmp -- ) { s2 = 0 + s ; }",
        "int x = ( s2 [ i ] - ' 0 ' ) ^ ( s2 [ i ] - ' 0 ' ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        18
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "while ( tmp -- ) { s2 = 0 + s ; }",
        "int x = ( s2 [ i ] - ' 0 ' ) ^ ( s2 [ i ] - ' 0 ' ) ;",
        "cout << x << endl ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        3
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "while ( tmp -- ) { s2 = 0 + s ; }",
        "int x = ( s2 [ i ] - ' 0 ' ) ^ ( s2 [ i ] - ' 0 ' ) ;",
        "cout << s << endl ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        18
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "while ( tmp -- ) { s2 = 0 + s ; }",
        "int x = ( s2 [ i ] - ' 0 ' ) ^ ( s2 [ i ] - ' 0 ' ) ;",
        "cout << x << ' \\n ' ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        13,
        18
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "while ( tmp -- ) { s2 = 0 + s ; }",
        "cout << x << endl ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        13,
        18,
        3
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "while ( tmp -- ) { s2 = 0 + s ; }",
        "cout << x << endl ;",
        "cout << s << endl ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        13,
        3
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "while ( tmp -- ) { s2 = 0 + s ; }",
        "cout << s << endl ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        13,
        3,
        18
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "while ( tmp -- ) { s2 = 0 + s ; }",
        "cout << s << endl ;",
        "cout << x << ' \\n ' ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        13,
        18
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "while ( tmp -- ) { s2 = 0 + s ; }",
        "cout << x << ' \\n ' ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        17
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "int x = ( s2 [ i ] - ' 0 ' ) ^ ( s2 [ i ] - ' 0 ' ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        17,
        18
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "int x = ( s2 [ i ] - ' 0 ' ) ^ ( s2 [ i ] - ' 0 ' ) ;",
        "cout << x << endl ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        17,
        18,
        3
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "int x = ( s2 [ i ] - ' 0 ' ) ^ ( s2 [ i ] - ' 0 ' ) ;",
        "cout << x << endl ;",
        "cout << s << endl ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        17,
        3
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "int x = ( s2 [ i ] - ' 0 ' ) ^ ( s2 [ i ] - ' 0 ' ) ;",
        "cout << s << endl ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        17,
        3,
        18
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "int x = ( s2 [ i ] - ' 0 ' ) ^ ( s2 [ i ] - ' 0 ' ) ;",
        "cout << s << endl ;",
        "cout << x << ' \\n ' ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        17,
        18
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "int x = ( s2 [ i ] - ' 0 ' ) ^ ( s2 [ i ] - ' 0 ' ) ;",
        "cout << x << ' \\n ' ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        18
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "cout << x << endl ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        18,
        3
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "cout << x << endl ;",
        "cout << s << endl ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "cout << s << endl ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        3,
        18
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "cout << s << endl ;",
        "cout << x << ' \\n ' ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        18
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s2 ; }",
        "cout << x << ' \\n ' ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s ; }",
        "int x = ( s2 [ i ] - ' 0 ' ) ^ ( s2 [ i ] - ' 0 ' ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        17,
        18
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s ; }",
        "int x = ( s2 [ i ] - ' 0 ' ) ^ ( s2 [ i ] - ' 0 ' ) ;",
        "cout << x << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        17,
        18,
        3
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s ; }",
        "int x = ( s2 [ i ] - ' 0 ' ) ^ ( s2 [ i ] - ' 0 ' ) ;",
        "cout << x << endl ;",
        "cout << s << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        17,
        3
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s ; }",
        "int x = ( s2 [ i ] - ' 0 ' ) ^ ( s2 [ i ] - ' 0 ' ) ;",
        "cout << s << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        17,
        3,
        18
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s ; }",
        "int x = ( s2 [ i ] - ' 0 ' ) ^ ( s2 [ i ] - ' 0 ' ) ;",
        "cout << s << endl ;",
        "cout << x << ' \\n ' ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        17,
        18
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s ; }",
        "int x = ( s2 [ i ] - ' 0 ' ) ^ ( s2 [ i ] - ' 0 ' ) ;",
        "cout << x << ' \\n ' ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        18
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s ; }",
        "cout << x << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        18,
        3
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s ; }",
        "cout << x << endl ;",
        "cout << s << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s ; }",
        "cout << s << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        3,
        18
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s ; }",
        "cout << s << endl ;",
        "cout << x << ' \\n ' ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        18
      ],
      "mod_code": [
        "while ( tmp -- ) { s2 = 0 + s ; }",
        "cout << x << ' \\n ' ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}