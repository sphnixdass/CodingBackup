{
  "meta": {
    "index": 1940,
    "hitid": "3NBFJK3IOHCNPQ2I7R6Q2L60QNSGOL",
    "workerid": "A1APYLD4DUK33J",
    "probid": "688A",
    "subid": "48412586"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare isAbsent with string absent as argument , returning boolean",
      "code": "bool isAbsent ( string absent )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "for i = 0 to length of absent exclusive",
      "code": "for ( int i = 0 ; i < absent . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "if absent [ i ] is 0 , return true from function",
      "code": "if ( absent [ i ] == ' 0 ' ) return true ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return false from function",
      "code": "return false ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 7,
      "text": "create integers n , d",
      "code": "int n , d ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read n read d",
      "code": "cin >> n >> d ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create string absent",
      "code": "string absent ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "create integers consecutive , tmp with consecutive = 0 , tmp = 0",
      "code": "int consecutive = 0 , tmp = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "while read absent is true",
      "code": "while ( cin >> absent )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if result of run isAbsent with absent as argument is true",
      "code": "if ( isAbsent ( absent ) )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increment tmp",
      "code": "tmp ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 15,
      "text": "set tmp to 0",
      "code": "tmp = 0 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if consecutive is less than tmp , set consecutive to tmp",
      "code": "if ( consecutive < tmp ) consecutive = tmp ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print consecutive print newline",
      "code": "cout << consecutive << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int tmp = 0 , tmp = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool isAbsent ( string absent ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < absent . length ( ) ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "return ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "while ( cin >> n >> d )"
      ],
      "err_line": 11,
      "err_msg": "‘absent’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 9,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int tmp , tmp = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "while ( absent >> absent )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "if ( absent [ i ] == 0 ) return true ;",
        "int tmp = 0 , tmp = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        2,
        10,
        19
      ],
      "mod_code": [
        "if ( absent [ i ] == 0 ) return true ;",
        "int tmp = 0 , tmp = 0 ;",
        "cout << endl ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        2,
        10,
        19,
        0
      ],
      "mod_code": [
        "if ( absent [ i ] == 0 ) return true ;",
        "int tmp = 0 , tmp = 0 ;",
        "cout << endl ;",
        "bool isAbsent ( string absent ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10,
        19,
        4
      ],
      "mod_code": [
        "if ( absent [ i ] == 0 ) return true ;",
        "int tmp = 0 , tmp = 0 ;",
        "cout << endl ;",
        "return ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10,
        0
      ],
      "mod_code": [
        "if ( absent [ i ] == 0 ) return true ;",
        "int tmp = 0 , tmp = 0 ;",
        "bool isAbsent ( string absent ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10,
        0,
        4
      ],
      "mod_code": [
        "if ( absent [ i ] == 0 ) return true ;",
        "int tmp = 0 , tmp = 0 ;",
        "bool isAbsent ( string absent ) ;",
        "return ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10,
        4
      ],
      "mod_code": [
        "if ( absent [ i ] == 0 ) return true ;",
        "int tmp = 0 , tmp = 0 ;",
        "return ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        10
      ],
      "mod_code": [
        "if ( absent [ i ] == 0 ) return true ;",
        "cout << endl ;",
        "int tmp , tmp = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        2,
        19,
        10,
        0
      ],
      "mod_code": [
        "if ( absent [ i ] == 0 ) return true ;",
        "cout << endl ;",
        "int tmp , tmp = 0 ;",
        "bool isAbsent ( string absent ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        19,
        10,
        4
      ],
      "mod_code": [
        "if ( absent [ i ] == 0 ) return true ;",
        "cout << endl ;",
        "int tmp , tmp = 0 ;",
        "return ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        0
      ],
      "mod_code": [
        "if ( absent [ i ] == 0 ) return true ;",
        "cout << endl ;",
        "bool isAbsent ( string absent ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        19,
        0,
        4
      ],
      "mod_code": [
        "if ( absent [ i ] == 0 ) return true ;",
        "cout << endl ;",
        "bool isAbsent ( string absent ) ;",
        "return ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        19,
        4
      ],
      "mod_code": [
        "if ( absent [ i ] == 0 ) return true ;",
        "cout << endl ;",
        "return ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "if ( absent [ i ] == 0 ) return true ;",
        "int tmp , tmp = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        2,
        10,
        0
      ],
      "mod_code": [
        "if ( absent [ i ] == 0 ) return true ;",
        "int tmp , tmp = 0 ;",
        "bool isAbsent ( string absent ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10,
        0,
        4
      ],
      "mod_code": [
        "if ( absent [ i ] == 0 ) return true ;",
        "int tmp , tmp = 0 ;",
        "bool isAbsent ( string absent ) ;",
        "return ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10,
        4
      ],
      "mod_code": [
        "if ( absent [ i ] == 0 ) return true ;",
        "int tmp , tmp = 0 ;",
        "return ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        0
      ],
      "mod_code": [
        "if ( absent [ i ] == 0 ) return true ;",
        "bool isAbsent ( string absent ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        0,
        4
      ],
      "mod_code": [
        "if ( absent [ i ] == 0 ) return true ;",
        "bool isAbsent ( string absent ) ;",
        "return ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "if ( absent [ i ] == 0 ) return true ;",
        "return ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "int tmp = 0 , tmp = 0 ;",
        "cout << endl ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        10,
        19,
        0
      ],
      "mod_code": [
        "int tmp = 0 , tmp = 0 ;",
        "cout << endl ;",
        "bool isAbsent ( string absent ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        19,
        0,
        4
      ],
      "mod_code": [
        "int tmp = 0 , tmp = 0 ;",
        "cout << endl ;",
        "bool isAbsent ( string absent ) ;",
        "return ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        19,
        4
      ],
      "mod_code": [
        "int tmp = 0 , tmp = 0 ;",
        "cout << endl ;",
        "return ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "int tmp = 0 , tmp = 0 ;",
        "bool isAbsent ( string absent ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        0,
        4
      ],
      "mod_code": [
        "int tmp = 0 , tmp = 0 ;",
        "bool isAbsent ( string absent ) ;",
        "return ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "int tmp = 0 , tmp = 0 ;",
        "return ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        10
      ],
      "mod_code": [
        "cout << endl ;",
        "int tmp , tmp = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        19,
        10,
        0
      ],
      "mod_code": [
        "cout << endl ;",
        "int tmp , tmp = 0 ;",
        "bool isAbsent ( string absent ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        10,
        0,
        4
      ],
      "mod_code": [
        "cout << endl ;",
        "int tmp , tmp = 0 ;",
        "bool isAbsent ( string absent ) ;",
        "return ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        10,
        4
      ],
      "mod_code": [
        "cout << endl ;",
        "int tmp , tmp = 0 ;",
        "return ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        0
      ],
      "mod_code": [
        "cout << endl ;",
        "bool isAbsent ( string absent ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        0,
        4
      ],
      "mod_code": [
        "cout << endl ;",
        "bool isAbsent ( string absent ) ;",
        "return ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        4
      ],
      "mod_code": [
        "cout << endl ;",
        "return ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "int tmp , tmp = 0 ;",
        "bool isAbsent ( string absent ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        0,
        4
      ],
      "mod_code": [
        "int tmp , tmp = 0 ;",
        "bool isAbsent ( string absent ) ;",
        "return ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "int tmp , tmp = 0 ;",
        "return ;"
      ],
      "err_line": 4,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "bool isAbsent ( string absent ) ;",
        "return ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}