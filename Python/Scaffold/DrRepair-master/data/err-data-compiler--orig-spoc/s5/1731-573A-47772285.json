{
  "meta": {
    "index": 1731,
    "hitid": "3SD15I2WD2OW68KQCGDC2RV01IX36F",
    "workerid": "ACI8PUCF5OPDC",
    "probid": "573A",
    "subid": "47772285"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer array a with dimension n + 1",
      "code": "int a [ n + 1 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "while a [ i ] mod 2 is equal to 0 do divide a [ i ] by 2 and set it to a [ i ]",
      "code": "while ( a [ i ] % 2 == 0 ) a [ i ] /= 2 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "while a [ i ] mod 3 is equal to 0 do divide a [ i ] by 3 and set it to a [ i ]",
      "code": "while ( a [ i ] % 3 == 0 ) a [ i ] /= 3 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for integer i = 0 to n - 1 exclusive",
      "code": "for ( int i = 0 ; i < n - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if a [ i ] not equal to a [ i + 1 ]",
      "code": "if ( a [ i ] != a [ i + 1 ] )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print \" No \"",
      "code": "cout << \" No \" << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print \" Yes \"",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "while ( a [ i ] % 2 == 0 ) { do do do"
      ],
      "err_line": 8,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "while ( a [ i ] % 3 == 0 ) { do do do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int * a [ n + 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "while ( a [ i ] % 2 == 0 ) { do do"
      ],
      "err_line": 8,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "while ( a [ i ] % 3 == 0 ) { do do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;"
      ],
      "err_line": 10,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "while ( a [ i ] % 2 == 0 ) { do do do",
        "while ( a [ i ] % 3 == 0 ) { do do do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        7,
        2
      ],
      "mod_code": [
        "while ( a [ i ] % 2 == 0 ) { do do do",
        "while ( a [ i ] % 3 == 0 ) { do do do",
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        2,
        10
      ],
      "mod_code": [
        "while ( a [ i ] % 2 == 0 ) { do do do",
        "while ( a [ i ] % 3 == 0 ) { do do do",
        "while ( cin >> n )",
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        2,
        5
      ],
      "mod_code": [
        "while ( a [ i ] % 2 == 0 ) { do do do",
        "while ( a [ i ] % 3 == 0 ) { do do do",
        "while ( cin >> n )",
        "cout << a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        10
      ],
      "mod_code": [
        "while ( a [ i ] % 2 == 0 ) { do do do",
        "while ( a [ i ] % 3 == 0 ) { do do do",
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        5
      ],
      "mod_code": [
        "while ( a [ i ] % 2 == 0 ) { do do do",
        "while ( a [ i ] % 3 == 0 ) { do do do",
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        7,
        5
      ],
      "mod_code": [
        "while ( a [ i ] % 2 == 0 ) { do do do",
        "while ( a [ i ] % 3 == 0 ) { do do do",
        "cout << a [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "while ( a [ i ] % 2 == 0 ) { do do do",
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        10
      ],
      "mod_code": [
        "while ( a [ i ] % 2 == 0 ) { do do do",
        "while ( cin >> n )",
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        10,
        5
      ],
      "mod_code": [
        "while ( a [ i ] % 2 == 0 ) { do do do",
        "while ( cin >> n )",
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        5
      ],
      "mod_code": [
        "while ( a [ i ] % 2 == 0 ) { do do do",
        "while ( cin >> n )",
        "cout << a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "while ( a [ i ] % 2 == 0 ) { do do do",
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        10,
        5
      ],
      "mod_code": [
        "while ( a [ i ] % 2 == 0 ) { do do do",
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "while ( a [ i ] % 2 == 0 ) { do do do",
        "cout << a [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "while ( a [ i ] % 3 == 0 ) { do do do",
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        6
      ],
      "mod_code": [
        "while ( a [ i ] % 3 == 0 ) { do do do",
        "while ( cin >> n )",
        "while ( a [ i ] % 2 == 0 ) { do do"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        6,
        10
      ],
      "mod_code": [
        "while ( a [ i ] % 3 == 0 ) { do do do",
        "while ( cin >> n )",
        "while ( a [ i ] % 2 == 0 ) { do do",
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        6,
        5
      ],
      "mod_code": [
        "while ( a [ i ] % 3 == 0 ) { do do do",
        "while ( cin >> n )",
        "while ( a [ i ] % 2 == 0 ) { do do",
        "cout << a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        10
      ],
      "mod_code": [
        "while ( a [ i ] % 3 == 0 ) { do do do",
        "while ( cin >> n )",
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        10,
        5
      ],
      "mod_code": [
        "while ( a [ i ] % 3 == 0 ) { do do do",
        "while ( cin >> n )",
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        5
      ],
      "mod_code": [
        "while ( a [ i ] % 3 == 0 ) { do do do",
        "while ( cin >> n )",
        "cout << a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "while ( a [ i ] % 3 == 0 ) { do do do",
        "while ( a [ i ] % 2 == 0 ) { do do"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        6,
        10
      ],
      "mod_code": [
        "while ( a [ i ] % 3 == 0 ) { do do do",
        "while ( a [ i ] % 2 == 0 ) { do do",
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        6,
        10,
        5
      ],
      "mod_code": [
        "while ( a [ i ] % 3 == 0 ) { do do do",
        "while ( a [ i ] % 2 == 0 ) { do do",
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        6,
        5
      ],
      "mod_code": [
        "while ( a [ i ] % 3 == 0 ) { do do do",
        "while ( a [ i ] % 2 == 0 ) { do do",
        "cout << a [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "while ( a [ i ] % 3 == 0 ) { do do do",
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        10,
        5
      ],
      "mod_code": [
        "while ( a [ i ] % 3 == 0 ) { do do do",
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "while ( a [ i ] % 3 == 0 ) { do do do",
        "cout << a [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "while ( cin >> n )",
        "while ( a [ i ] % 2 == 0 ) { do do"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        10
      ],
      "mod_code": [
        "while ( cin >> n )",
        "while ( a [ i ] % 2 == 0 ) { do do",
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        10,
        5
      ],
      "mod_code": [
        "while ( cin >> n )",
        "while ( a [ i ] % 2 == 0 ) { do do",
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        5
      ],
      "mod_code": [
        "while ( cin >> n )",
        "while ( a [ i ] % 2 == 0 ) { do do",
        "cout << a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "while ( cin >> n )",
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10,
        5
      ],
      "mod_code": [
        "while ( cin >> n )",
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cout << a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "while ( a [ i ] % 2 == 0 ) { do do",
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        10,
        5
      ],
      "mod_code": [
        "while ( a [ i ] % 2 == 0 ) { do do",
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "while ( a [ i ] % 2 == 0 ) { do do",
        "cout << a [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "if ( a [ i ] != a [ i + 1 ] ) a ++ ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "lvalue required as increment operand"
    }
  ]
}