{
  "meta": {
    "index": 612,
    "hitid": "3S8A4GJRD3XGIHM9WQJILMNJS2N6VC",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "999A",
    "subid": "48641196"
  },
  "lines": [
    {
      "line": 0,
      "text": "seen = array of 101 int",
      "code": "int seen [ 101 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "N , K = int , answer = 0",
      "code": "int N , K , answer = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "A = array of 101 int",
      "code": "int A [ 101 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read N , K",
      "code": "cin >> N >> K ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to N exclusive read A [ i ]",
      "code": "for ( int i = 0 ; i < N ; i ++ ) cin >> A [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if N is 1",
      "code": "if ( N == 1 )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if A [ 0 ] < = K",
      "code": "if ( A [ 0 ] <= K )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print 1",
      "code": "cout << 1 << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print 0",
      "code": "cout << 0 << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to N exclusive",
      "code": "for ( int i = 0 ; i < N ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if A [ i ] < = K and seen [ i ] is 0",
      "code": "if ( A [ i ] <= K && seen [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increment answer",
      "code": "answer ++ ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "seen [ i ] = 1",
      "code": "seen [ i ] = 1 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 18,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for i = N - 1 down to 0 inclusive",
      "code": "for ( int i = N - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if A [ i ] < = K and seen [ i ] is 0",
      "code": "if ( A [ i ] <= K && seen [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "increment answer",
      "code": "answer ++ ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "seen [ i ] = 1",
      "code": "seen [ i ] = 1 ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 25,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print answer",
      "code": "cout << answer << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( i = N - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 25,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14,
        21,
        25
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;"
      ],
      "err_line": 25,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14,
        21,
        25,
        27
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;",
        "cout << answer ;"
      ],
      "err_line": 25,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14,
        21,
        25,
        20
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;",
        "for ( i = N - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        21,
        25,
        18
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14,
        21,
        27,
        20
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "cout << answer ;",
        "for ( i = N - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        21,
        27,
        18
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "cout << answer ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14,
        21,
        20
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "for ( i = N - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        21,
        20,
        18
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "for ( i = N - 1 ; i >= 0 ; i -- )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14,
        21,
        18
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14,
        25
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;"
      ],
      "err_line": 25,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14,
        25,
        27
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;",
        "cout << answer ;"
      ],
      "err_line": 25,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14,
        25,
        27,
        20
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;",
        "cout << answer ;",
        "for ( i = N - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        25,
        27,
        18
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;",
        "cout << answer ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14,
        25,
        20
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;",
        "for ( i = N - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        25,
        20,
        18
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;",
        "for ( i = N - 1 ; i >= 0 ; i -- )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14,
        25,
        18
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14,
        27,
        20
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "cout << answer ;",
        "for ( i = N - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        27,
        20,
        18
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "cout << answer ;",
        "for ( i = N - 1 ; i >= 0 ; i -- )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14,
        27,
        18
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "cout << answer ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14,
        20
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "for ( i = N - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        20,
        18
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "for ( i = N - 1 ; i >= 0 ; i -- )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14,
        18
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        21,
        25
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;"
      ],
      "err_line": 25,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        21,
        25,
        27
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;",
        "cout << answer ;"
      ],
      "err_line": 25,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        21,
        25,
        27,
        20
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;",
        "cout << answer ;",
        "for ( i = N - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        25,
        27,
        18
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;",
        "cout << answer ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        21,
        25,
        20
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;",
        "for ( i = N - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        25,
        20,
        18
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;",
        "for ( i = N - 1 ; i >= 0 ; i -- )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        21,
        25,
        18
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        21,
        27,
        20
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "cout << answer ;",
        "for ( i = N - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        20,
        18
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "cout << answer ;",
        "for ( i = N - 1 ; i >= 0 ; i -- )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        21,
        27,
        18
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "cout << answer ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        21,
        20
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "for ( i = N - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        20,
        18
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "for ( i = N - 1 ; i >= 0 ; i -- )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        21,
        18
      ],
      "mod_code": [
        "if ( A [ i ] <= ' K ' && seen [ i ] == 0 )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        25,
        27
      ],
      "mod_code": [
        "break break ;",
        "cout << answer ;"
      ],
      "err_line": 25,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        25,
        27,
        20
      ],
      "mod_code": [
        "break break ;",
        "cout << answer ;",
        "for ( i = N - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        25,
        27,
        20,
        18
      ],
      "mod_code": [
        "break break ;",
        "cout << answer ;",
        "for ( i = N - 1 ; i >= 0 ; i -- )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        25,
        27,
        18
      ],
      "mod_code": [
        "break break ;",
        "cout << answer ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        25,
        20
      ],
      "mod_code": [
        "break break ;",
        "for ( i = N - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        25,
        20,
        18
      ],
      "mod_code": [
        "break break ;",
        "for ( i = N - 1 ; i >= 0 ; i -- )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        25,
        18
      ],
      "mod_code": [
        "break break ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        27,
        20
      ],
      "mod_code": [
        "cout << answer ;",
        "for ( i = N - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        27,
        20,
        18
      ],
      "mod_code": [
        "cout << answer ;",
        "for ( i = N - 1 ; i >= 0 ; i -- )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        27,
        18
      ],
      "mod_code": [
        "cout << answer ;",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        20,
        18
      ],
      "mod_code": [
        "for ( i = N - 1 ; i >= 0 ; i -- )",
        "break break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘break’"
    }
  ]
}