{
  "meta": {
    "index": 2105,
    "hitid": "3WGZLY9VCHGHSE5BYKGMZED3YQED8B",
    "workerid": "A1AYVATMT88U1W",
    "probid": "723A",
    "subid": "41671252"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let sum be a integer with sum = 0 , X = array of integers of length 4",
      "code": "int X [ 4 ] , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let max1 be a integer with max1 = - 10",
      "code": "int max1 = - 10 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let min1 be a integer with min1 = 10000",
      "code": "int min1 = 10000 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let mid be a integer",
      "code": "int mid ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read X [ i ]",
      "code": "cin >> X [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if X [ i ] is greater than max1 , max1 is equal to X [ i ]",
      "code": "if ( X [ i ] > max1 ) max1 = X [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if X [ i ] is less than min1 , min1 is equal to X [ i ]",
      "code": "if ( X [ i ] < min1 ) min1 = X [ i ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if min1 is less than X [ i ] is less than max1 , mid is equal to X [ i ]",
      "code": "if ( min1 < X [ i ] < max1 ) mid = X [ i ] ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "sum is equal to ( max1 - mid ) + ( mid - min1 )",
      "code": "sum = ( max1 - mid ) + ( mid - min1 ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print sum and newline",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int sum = 0 , X = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int sum [ 4 ] , sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int sum’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int sum = 0 , X = 0 ;",
        "cout << X [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        6,
        13
      ],
      "mod_code": [
        "int sum = 0 , X = 0 ;",
        "cout << X [ i ] ;",
        "sum *= mid + ( mid - min1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        6,
        13,
        5
      ],
      "mod_code": [
        "int sum = 0 , X = 0 ;",
        "cout << X [ i ] ;",
        "sum *= mid + ( mid - min1 ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        13,
        11
      ],
      "mod_code": [
        "int sum = 0 , X = 0 ;",
        "cout << X [ i ] ;",
        "sum *= mid + ( mid - min1 ) ;",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        6,
        5
      ],
      "mod_code": [
        "int sum = 0 , X = 0 ;",
        "cout << X [ i ] ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        5,
        11
      ],
      "mod_code": [
        "int sum = 0 , X = 0 ;",
        "cout << X [ i ] ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        11
      ],
      "mod_code": [
        "int sum = 0 , X = 0 ;",
        "cout << X [ i ] ;",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int sum = 0 , X = 0 ;",
        "sum *= mid + ( mid - min1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        13,
        5
      ],
      "mod_code": [
        "int sum = 0 , X = 0 ;",
        "sum *= mid + ( mid - min1 ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        5,
        11
      ],
      "mod_code": [
        "int sum = 0 , X = 0 ;",
        "sum *= mid + ( mid - min1 ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        11
      ],
      "mod_code": [
        "int sum = 0 , X = 0 ;",
        "sum *= mid + ( mid - min1 ) ;",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int sum = 0 , X = 0 ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        11
      ],
      "mod_code": [
        "int sum = 0 , X = 0 ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int sum = 0 , X = 0 ;",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int sum [ 4 ] , sum = 0 ;",
        "cout << X [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int sum’"
    },
    {
      "mod_line": [
        1,
        6,
        13
      ],
      "mod_code": [
        "int sum [ 4 ] , sum = 0 ;",
        "cout << X [ i ] ;",
        "sum *= mid + ( mid - min1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int sum’"
    },
    {
      "mod_line": [
        1,
        6,
        13,
        5
      ],
      "mod_code": [
        "int sum [ 4 ] , sum = 0 ;",
        "cout << X [ i ] ;",
        "sum *= mid + ( mid - min1 ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int sum’"
    },
    {
      "mod_line": [
        1,
        6,
        13,
        11
      ],
      "mod_code": [
        "int sum [ 4 ] , sum = 0 ;",
        "cout << X [ i ] ;",
        "sum *= mid + ( mid - min1 ) ;",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int sum’"
    },
    {
      "mod_line": [
        1,
        6,
        5
      ],
      "mod_code": [
        "int sum [ 4 ] , sum = 0 ;",
        "cout << X [ i ] ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int sum’"
    },
    {
      "mod_line": [
        1,
        6,
        5,
        11
      ],
      "mod_code": [
        "int sum [ 4 ] , sum = 0 ;",
        "cout << X [ i ] ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int sum’"
    },
    {
      "mod_line": [
        1,
        6,
        11
      ],
      "mod_code": [
        "int sum [ 4 ] , sum = 0 ;",
        "cout << X [ i ] ;",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int sum’"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int sum [ 4 ] , sum = 0 ;",
        "sum *= mid + ( mid - min1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int sum’"
    },
    {
      "mod_line": [
        1,
        13,
        5
      ],
      "mod_code": [
        "int sum [ 4 ] , sum = 0 ;",
        "sum *= mid + ( mid - min1 ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int sum’"
    },
    {
      "mod_line": [
        1,
        13,
        5,
        11
      ],
      "mod_code": [
        "int sum [ 4 ] , sum = 0 ;",
        "sum *= mid + ( mid - min1 ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int sum’"
    },
    {
      "mod_line": [
        1,
        13,
        11
      ],
      "mod_code": [
        "int sum [ 4 ] , sum = 0 ;",
        "sum *= mid + ( mid - min1 ) ;",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int sum’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int sum [ 4 ] , sum = 0 ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int sum’"
    },
    {
      "mod_line": [
        1,
        5,
        11
      ],
      "mod_code": [
        "int sum [ 4 ] , sum = 0 ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int sum’"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int sum [ 4 ] , sum = 0 ;",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int sum’"
    },
    {
      "mod_line": [
        6,
        13,
        5
      ],
      "mod_code": [
        "cout << X [ i ] ;",
        "sum *= mid + ( mid - min1 ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13,
        5,
        11
      ],
      "mod_code": [
        "cout << X [ i ] ;",
        "sum *= mid + ( mid - min1 ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13,
        11
      ],
      "mod_code": [
        "cout << X [ i ] ;",
        "sum *= mid + ( mid - min1 ) ;",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "cout << X [ i ] ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        11
      ],
      "mod_code": [
        "cout << X [ i ] ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "cout << X [ i ] ;",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "sum *= mid + ( mid - min1 ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        5,
        11
      ],
      "mod_code": [
        "sum *= mid + ( mid - min1 ) ;",
        "for ( i = 0 ; i < 3 ; i ++ )",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "sum *= mid + ( mid - min1 ) ;",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )",
        "if ( min1 < max1 [ i ] ) mid = X [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}