{
  "meta": {
    "index": 2393,
    "hitid": "3P4C70TRMRBFJ5ZLUZQYA426UGEGLQ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "13A",
    "subid": "46660956"
  },
  "lines": [
    {
      "line": 0,
      "text": "let eps be constant long double = 1e - 7",
      "code": "long double const EPS = 1e-7 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "constant long long INF = 200000000711",
      "code": "long long const INF = 2000000007ll ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "set constant long long N to 2005",
      "code": "const long long N = 2005 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "in the function sumit with long long arguments a and i that returns long long",
      "code": "long long sumit ( long long a , long long i )",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare long long called ret = 0",
      "code": "long long ret = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while a is greater than 0",
      "code": "while ( a > 0 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "increase ret by a % i",
      "code": "ret += a % i ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "divide a by i",
      "code": "a /= i ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "return ret",
      "code": "return ret ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 11,
      "text": "in the function gcd with long long arguments a and b that returns long long",
      "code": "long long gcd ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 12,
      "text": "return b if a = 0",
      "code": "if ( a == 0 ) return b ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "return a if b = 0",
      "code": "if ( b == 0 ) return a ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "return gcd ( b % a , a )",
      "code": "return gcd ( b % a , a ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 17,
      "text": "declare long long variable a",
      "code": "long long a ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "create long longs num and den",
      "code": "long long num , den ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "set num and den to 0",
      "code": "num = den = 0 ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for i = 2 to a exclusive",
      "code": "for ( long long i = 2 ; i < a ; i ++ )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "increase num by sumit of a and i",
      "code": "num += sumit ( a , i ) ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "increase den by one",
      "code": "den ++ ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "set long long g to gcd of num and den",
      "code": "long long g = gcd ( num , den ) ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "divide num by g",
      "code": "num /= g ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "divide den by g",
      "code": "den /= g ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "print num , ' / ' , den and ' \\ n '",
      "code": "cout << num << ' / ' << den << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;"
      ],
      "err_line": 20,
      "err_msg": "conflicting declaration ‘int num’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "long long sumit ( long long a , long long i ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "while ( ret )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "return gcd ( b % a , a ) ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 18,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "long long num = 0 , den = 0 ;"
      ],
      "err_line": 20,
      "err_msg": "redeclaration of ‘long long int num’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "for ( i = 2 ; i < a ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "num += sumit [ a ] ;"
      ],
      "err_line": 22,
      "err_msg": "invalid conversion from ‘long long int (*)(long long int, long long int)’ to ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "den den 1 ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘den’"
    },
    {
      "mod_line": [
        20,
        25
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "long long g = gcd ( den , den ) ;"
      ],
      "err_line": 20,
      "err_msg": "conflicting declaration ‘int num’"
    },
    {
      "mod_line": [
        20,
        25,
        27
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "long long g = gcd ( den , den ) ;",
        "den >>= g ;"
      ],
      "err_line": 20,
      "err_msg": "conflicting declaration ‘int num’"
    },
    {
      "mod_line": [
        20,
        25,
        27,
        3
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "long long g = gcd ( den , den ) ;",
        "den >>= g ;",
        "long long sumit ( long long a , long long i ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        25,
        27,
        23
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "long long g = gcd ( den , den ) ;",
        "den >>= g ;",
        "den den 1 ;"
      ],
      "err_line": 20,
      "err_msg": "conflicting declaration ‘int num’"
    },
    {
      "mod_line": [
        20,
        25,
        27,
        9
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "long long g = gcd ( den , den ) ;",
        "den >>= g ;",
        "while ( ret )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        25,
        3
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "long long g = gcd ( den , den ) ;",
        "long long sumit ( long long a , long long i ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        25,
        3,
        23
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "long long g = gcd ( den , den ) ;",
        "long long sumit ( long long a , long long i ) ;",
        "den den 1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        25,
        3,
        9
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "long long g = gcd ( den , den ) ;",
        "long long sumit ( long long a , long long i ) ;",
        "while ( ret )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        25,
        23
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "long long g = gcd ( den , den ) ;",
        "den den 1 ;"
      ],
      "err_line": 20,
      "err_msg": "conflicting declaration ‘int num’"
    },
    {
      "mod_line": [
        20,
        25,
        23,
        9
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "long long g = gcd ( den , den ) ;",
        "den den 1 ;",
        "while ( ret )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        25,
        9
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "long long g = gcd ( den , den ) ;",
        "while ( ret )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        27
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "den >>= g ;"
      ],
      "err_line": 20,
      "err_msg": "conflicting declaration ‘int num’"
    },
    {
      "mod_line": [
        20,
        27,
        3
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "den >>= g ;",
        "long long sumit ( long long a , long long i ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        27,
        3,
        23
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "den >>= g ;",
        "long long sumit ( long long a , long long i ) ;",
        "den den 1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        27,
        3,
        9
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "den >>= g ;",
        "long long sumit ( long long a , long long i ) ;",
        "while ( ret )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        27,
        23
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "den >>= g ;",
        "den den 1 ;"
      ],
      "err_line": 20,
      "err_msg": "conflicting declaration ‘int num’"
    },
    {
      "mod_line": [
        20,
        27,
        23,
        9
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "den >>= g ;",
        "den den 1 ;",
        "while ( ret )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        27,
        9
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "den >>= g ;",
        "while ( ret )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        3
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "long long sumit ( long long a , long long i ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        3,
        23
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "long long sumit ( long long a , long long i ) ;",
        "den den 1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        3,
        23,
        9
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "long long sumit ( long long a , long long i ) ;",
        "den den 1 ;",
        "while ( ret )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        3,
        9
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "long long sumit ( long long a , long long i ) ;",
        "while ( ret )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        23
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "den den 1 ;"
      ],
      "err_line": 20,
      "err_msg": "conflicting declaration ‘int num’"
    },
    {
      "mod_line": [
        20,
        23,
        9
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "den den 1 ;",
        "while ( ret )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        9
      ],
      "mod_code": [
        "int num = 0 , den = 0 ;",
        "while ( ret )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        27,
        3
      ],
      "mod_code": [
        "long long g = gcd ( den , den ) ;",
        "den >>= g ;",
        "long long sumit ( long long a , long long i ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        25,
        27,
        3,
        23
      ],
      "mod_code": [
        "long long g = gcd ( den , den ) ;",
        "den >>= g ;",
        "long long sumit ( long long a , long long i ) ;",
        "den den 1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        25,
        27,
        3,
        9
      ],
      "mod_code": [
        "long long g = gcd ( den , den ) ;",
        "den >>= g ;",
        "long long sumit ( long long a , long long i ) ;",
        "while ( ret )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        25,
        27,
        23
      ],
      "mod_code": [
        "long long g = gcd ( den , den ) ;",
        "den >>= g ;",
        "den den 1 ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘den’"
    },
    {
      "mod_line": [
        25,
        27,
        23,
        9
      ],
      "mod_code": [
        "long long g = gcd ( den , den ) ;",
        "den >>= g ;",
        "den den 1 ;",
        "while ( ret )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        27,
        9
      ],
      "mod_code": [
        "long long g = gcd ( den , den ) ;",
        "den >>= g ;",
        "while ( ret )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        3
      ],
      "mod_code": [
        "long long g = gcd ( den , den ) ;",
        "long long sumit ( long long a , long long i ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        25,
        3,
        23
      ],
      "mod_code": [
        "long long g = gcd ( den , den ) ;",
        "long long sumit ( long long a , long long i ) ;",
        "den den 1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        25,
        3,
        23,
        9
      ],
      "mod_code": [
        "long long g = gcd ( den , den ) ;",
        "long long sumit ( long long a , long long i ) ;",
        "den den 1 ;",
        "while ( ret )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        25,
        3,
        9
      ],
      "mod_code": [
        "long long g = gcd ( den , den ) ;",
        "long long sumit ( long long a , long long i ) ;",
        "while ( ret )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        25,
        23
      ],
      "mod_code": [
        "long long g = gcd ( den , den ) ;",
        "den den 1 ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘den’"
    },
    {
      "mod_line": [
        25,
        23,
        9
      ],
      "mod_code": [
        "long long g = gcd ( den , den ) ;",
        "den den 1 ;",
        "while ( ret )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        25,
        9
      ],
      "mod_code": [
        "long long g = gcd ( den , den ) ;",
        "while ( ret )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        27,
        3
      ],
      "mod_code": [
        "den >>= g ;",
        "long long sumit ( long long a , long long i ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        27,
        3,
        23
      ],
      "mod_code": [
        "den >>= g ;",
        "long long sumit ( long long a , long long i ) ;",
        "den den 1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        27,
        3,
        23,
        9
      ],
      "mod_code": [
        "den >>= g ;",
        "long long sumit ( long long a , long long i ) ;",
        "den den 1 ;",
        "while ( ret )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        27,
        3,
        9
      ],
      "mod_code": [
        "den >>= g ;",
        "long long sumit ( long long a , long long i ) ;",
        "while ( ret )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        27,
        23
      ],
      "mod_code": [
        "den >>= g ;",
        "den den 1 ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘den’"
    },
    {
      "mod_line": [
        27,
        23,
        9
      ],
      "mod_code": [
        "den >>= g ;",
        "den den 1 ;",
        "while ( ret )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        27,
        9
      ],
      "mod_code": [
        "den >>= g ;",
        "while ( ret )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        23
      ],
      "mod_code": [
        "long long sumit ( long long a , long long i ) ;",
        "den den 1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        23,
        9
      ],
      "mod_code": [
        "long long sumit ( long long a , long long i ) ;",
        "den den 1 ;",
        "while ( ret )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "long long sumit ( long long a , long long i ) ;",
        "while ( ret )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        23,
        9
      ],
      "mod_code": [
        "den den 1 ;",
        "while ( ret )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘}’ token"
    }
  ]
}