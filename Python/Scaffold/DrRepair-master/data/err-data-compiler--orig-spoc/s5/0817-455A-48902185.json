{
  "meta": {
    "index": 817,
    "hitid": "3L1EFR8WWTZE432HUIHQNABZTMD9FX",
    "workerid": "AIWEXPJAU66D9",
    "probid": "455A",
    "subid": "48902185"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long long n",
      "code": "long long n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create vector of long long a with n elements",
      "code": "vector < long long > a ( n ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create vector of long long c with 100001 element",
      "code": "vector < long long > c ( 100001 ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "assign value of 0 to c [ 0 ]",
      "code": "c [ 0 ] = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( long long i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "declare long long ar",
      "code": "long long ar ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read ar",
      "code": "cin >> ar ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set value of a [ i ] to ar",
      "code": "a [ i ] = ar ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment c [ ar ]",
      "code": "c [ ar ] ++ ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "create vector of long long dp with 100001 element",
      "code": "vector < long long > dp ( 100001 ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "assign value of 0 to dp [ 0 ]",
      "code": "dp [ 0 ] = 0 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "dp [ 1 ] = 1 * c [ 1 ]",
      "code": "dp [ 1 ] = 1 * c [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "dp [ 2 ] = 2 * c [ 2 ]",
      "code": "dp [ 2 ] = 2 * c [ 2 ] ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i = 3 to 100001 inclusive , dp [ i ] = i * c [ i ] + max ( dp [ i - 2 ] , dp [ i - 3 ] )",
      "code": "for ( long long i = 3 ; i <= 100001 ; i ++ ) { dp [ i ] = i * c [ i ] + max ( dp [ i - 2 ] , dp [ i - 3 ] ) ; }",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print max of dp [ 100001 ] and dp [ 100001 - 1 ]",
      "code": "cout << max ( dp [ 100001 ] , dp [ 100001 - 1 ] ) << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "vector < long long > c [ 100001 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<long long int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘assign’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "vector < long long > dp [ 100001 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<long long int>’ and ‘int’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "dp [ 0 ] assign 0 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘assign’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        8,
        13
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "cin >> n ;",
        "dp [ 0 ] assign 0 ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        8,
        13,
        2
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "cin >> n ;",
        "dp [ 0 ] assign 0 ;",
        "while ( cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        8,
        13,
        6
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "cin >> n ;",
        "dp [ 0 ] assign 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        8,
        13,
        5
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "cin >> n ;",
        "dp [ 0 ] assign 0 ;",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        8,
        2
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "cin >> n ;",
        "while ( cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        8,
        2,
        6
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "cin >> n ;",
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        8,
        2,
        5
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "cin >> n ;",
        "while ( cin >> n )",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        8,
        6
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        8,
        6,
        5
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        8,
        5
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "cin >> n ;",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "dp [ 0 ] assign 0 ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        13,
        2
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "dp [ 0 ] assign 0 ;",
        "while ( cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        13,
        2,
        6
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "dp [ 0 ] assign 0 ;",
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        13,
        2,
        5
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "dp [ 0 ] assign 0 ;",
        "while ( cin >> n )",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        13,
        6
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "dp [ 0 ] assign 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        13,
        6,
        5
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "dp [ 0 ] assign 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        13,
        5
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "dp [ 0 ] assign 0 ;",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "while ( cin >> n )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        2,
        6
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        2,
        6,
        5
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        2,
        5
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "while ( cin >> n )",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        6,
        5
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "vector < vector < long long > a ( n ) ;",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "cin >> n ;",
        "dp [ 0 ] assign 0 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘assign’"
    },
    {
      "mod_line": [
        8,
        13,
        2
      ],
      "mod_code": [
        "cin >> n ;",
        "dp [ 0 ] assign 0 ;",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        2,
        6
      ],
      "mod_code": [
        "cin >> n ;",
        "dp [ 0 ] assign 0 ;",
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        2,
        5
      ],
      "mod_code": [
        "cin >> n ;",
        "dp [ 0 ] assign 0 ;",
        "while ( cin >> n )",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘assign’"
    },
    {
      "mod_line": [
        8,
        13,
        6
      ],
      "mod_code": [
        "cin >> n ;",
        "dp [ 0 ] assign 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        6,
        5
      ],
      "mod_code": [
        "cin >> n ;",
        "dp [ 0 ] assign 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘assign’"
    },
    {
      "mod_line": [
        8,
        13,
        5
      ],
      "mod_code": [
        "cin >> n ;",
        "dp [ 0 ] assign 0 ;",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘assign’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "cin >> n ;",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        6
      ],
      "mod_code": [
        "cin >> n ;",
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        6,
        5
      ],
      "mod_code": [
        "cin >> n ;",
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘assign’"
    },
    {
      "mod_line": [
        8,
        2,
        5
      ],
      "mod_code": [
        "cin >> n ;",
        "while ( cin >> n )",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘assign’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        5
      ],
      "mod_code": [
        "cin >> n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘assign’"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "cin >> n ;",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘assign’"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "dp [ 0 ] assign 0 ;",
        "while ( cin >> n )"
      ],
      "err_line": 9,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2,
        6
      ],
      "mod_code": [
        "dp [ 0 ] assign 0 ;",
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2,
        6,
        5
      ],
      "mod_code": [
        "dp [ 0 ] assign 0 ;",
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘assign’"
    },
    {
      "mod_line": [
        13,
        2,
        5
      ],
      "mod_code": [
        "dp [ 0 ] assign 0 ;",
        "while ( cin >> n )",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘assign’"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "dp [ 0 ] assign 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6,
        5
      ],
      "mod_code": [
        "dp [ 0 ] assign 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘assign’"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "dp [ 0 ] assign 0 ;",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘assign’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        5
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( i = 0 ; i < n ; i ++ )",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘assign’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "while ( cin >> n )",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘assign’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "c [ 0 ] assign 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘assign’"
    }
  ]
}