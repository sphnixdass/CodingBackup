{
  "meta": {
    "index": 2272,
    "hitid": "3PCPFX4U40KKW2J3BKSC951O370QFP",
    "workerid": "AIWEXPJAU66D9",
    "probid": "6A",
    "subid": "48941739"
  },
  "lines": [
    {
      "line": 0,
      "text": "a = array of integers of length 5",
      "code": "int a [ 5 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "boolean function check with integer arguments x , y and z",
      "code": "bool check ( int x , int y , int z )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "if x + y < = z return false",
      "code": "if ( x + y <= z ) return false ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if y + z < = x return false",
      "code": "if ( y + z <= x ) return false ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if x + z < = y return false",
      "code": "if ( x + z <= y ) return false ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "return true",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "boolean function checkDegenerate with integer arguments x , y and z",
      "code": "bool checkDegenerate ( int x , int y , int z )",
      "indent": 0
    },
    {
      "line": 8,
      "text": "if x + y is equal to z return true",
      "code": "if ( x + y == z ) return true ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if x + z is equal to y return true",
      "code": "if ( x + z == y ) return true ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if y + z is equal to x return true",
      "code": "if ( y + z == x ) return true ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "return false",
      "code": "return false ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 14,
      "text": "for integer i = 1 to 4 inclusive read a [ i ]",
      "code": "for ( int i = 1 ; i <= 4 ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "sort a from 1 to 5 element",
      "code": "sort ( a + 1 , a + 5 ) ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if check ( a [ 1 ] , a [ 2 ] , a [ 3 ] ) is true or check ( a [ 2 ] , a [ 3 ] , a [ 4 ] ) is true",
      "code": "if ( check ( a [ 1 ] , a [ 2 ] , a [ 3 ] ) || check ( a [ 2 ] , a [ 3 ] , a [ 4 ] ) )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print \" TRIANGLE \" and a new line",
      "code": "cout << \" TRIANGLE \" << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if checkDegenerate ( a [ 1 ] , a [ 2 ] , a [ 3 ] ) is true or checkDegenerate ( a [ 2 ] , a [ 3 ] , a [ 4 ] ) is true",
      "code": "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] , a [ 3 ] ) || checkDegenerate ( a [ 2 ] , a [ 3 ] , a [ 4 ] ) )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print \" SEGMENT \" and a new line",
      "code": "cout << \" SEGMENT \" << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print \" IMPOSSIBLE \" and a new line",
      "code": "cout << \" IMPOSSIBLE \" << endl ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) <= true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘bool checkDegenerate(int, int, int)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool check ( int x , int y , int z ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "bool checkDegenerate ( int x , int y , int z ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "sort ( a , a + n ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) <= true || check ( a [ 2 ] , a [ 4 ] ) )"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) == true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘bool checkDegenerate(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        20
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) <= true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        20,
        24
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) <= true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        20,
        24,
        21
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) <= true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        20,
        24,
        11
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) <= true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;",
        "return 1 ;"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        20,
        21
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) <= true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        20,
        21,
        11
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) <= true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;",
        "return 1 ;"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        20,
        11
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) <= true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "return 1 ;"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        24
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        24,
        20
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;",
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) == true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        24,
        20,
        21
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;",
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) == true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        24,
        20,
        11
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;",
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) == true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "return 1 ;"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        24,
        21
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        24,
        21,
        11
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;",
        "cout << \" yes\\n \" << endl ;",
        "return 1 ;"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        24,
        11
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;",
        "return 1 ;"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        20
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) == true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        20,
        21
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) == true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        20,
        21,
        11
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) == true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;",
        "return 1 ;"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        20,
        11
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) == true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "return 1 ;"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        21
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        21,
        11
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;",
        "return 1 ;"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        16,
        11
      ],
      "mod_code": [
        "if ( check ( a [ 1 ] , a [ 2 ] ) && check ( a [ 2 ] ) == true || check ( a [ 2 ] , a [ 4 ] ) )",
        "return 1 ;"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘bool check(int, int, int)’"
    },
    {
      "mod_line": [
        20,
        24
      ],
      "mod_code": [
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) <= true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘bool checkDegenerate(int, int, int)’"
    },
    {
      "mod_line": [
        20,
        24,
        21
      ],
      "mod_code": [
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) <= true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘bool checkDegenerate(int, int, int)’"
    },
    {
      "mod_line": [
        20,
        24,
        21,
        11
      ],
      "mod_code": [
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) <= true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;",
        "cout << \" yes\\n \" << endl ;",
        "return 1 ;"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘bool checkDegenerate(int, int, int)’"
    },
    {
      "mod_line": [
        20,
        24,
        11
      ],
      "mod_code": [
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) <= true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;",
        "return 1 ;"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘bool checkDegenerate(int, int, int)’"
    },
    {
      "mod_line": [
        20,
        21
      ],
      "mod_code": [
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) <= true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘bool checkDegenerate(int, int, int)’"
    },
    {
      "mod_line": [
        20,
        21,
        11
      ],
      "mod_code": [
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) <= true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;",
        "return 1 ;"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘bool checkDegenerate(int, int, int)’"
    },
    {
      "mod_line": [
        20,
        11
      ],
      "mod_code": [
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) <= true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "return 1 ;"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘bool checkDegenerate(int, int, int)’"
    },
    {
      "mod_line": [
        24,
        20
      ],
      "mod_code": [
        "cout << \" yes\\n \" << endl ;",
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) == true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘bool checkDegenerate(int, int, int)’"
    },
    {
      "mod_line": [
        24,
        20,
        21
      ],
      "mod_code": [
        "cout << \" yes\\n \" << endl ;",
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) == true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘bool checkDegenerate(int, int, int)’"
    },
    {
      "mod_line": [
        24,
        20,
        21,
        11
      ],
      "mod_code": [
        "cout << \" yes\\n \" << endl ;",
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) == true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;",
        "return 1 ;"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘bool checkDegenerate(int, int, int)’"
    },
    {
      "mod_line": [
        24,
        20,
        11
      ],
      "mod_code": [
        "cout << \" yes\\n \" << endl ;",
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) == true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "return 1 ;"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘bool checkDegenerate(int, int, int)’"
    },
    {
      "mod_line": [
        20,
        21
      ],
      "mod_code": [
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) == true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘bool checkDegenerate(int, int, int)’"
    },
    {
      "mod_line": [
        20,
        21,
        11
      ],
      "mod_code": [
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) == true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "cout << \" yes\\n \" << endl ;",
        "return 1 ;"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘bool checkDegenerate(int, int, int)’"
    },
    {
      "mod_line": [
        20,
        11
      ],
      "mod_code": [
        "if ( checkDegenerate ( a [ 1 ] , a [ 2 ] ) && checkDegenerate ( a [ 2 ] ) == true || checkDegenerate ( a [ 2 ] , a [ 4 ] ) )",
        "return 1 ;"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘bool checkDegenerate(int, int, int)’"
    }
  ]
}