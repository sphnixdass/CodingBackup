{
  "meta": {
    "index": 1390,
    "hitid": "3HEADTGN2PM940KTOEMGWHEFOPZVRX",
    "workerid": "AIWEXPJAU66D9",
    "probid": "476A",
    "subid": "41884354"
  },
  "lines": [
    {
      "line": 0,
      "text": "inline integer function read",
      "code": "inline int read ( )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer variable x = 0",
      "code": "int x = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create new char c and read its value from the input",
      "code": "char c = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare bool flag = 0",
      "code": "bool flag = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while c < ' 0 ' | | c > ' 9 '",
      "code": "while ( c < ' 0 ' || c > ' 9 ' )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if c is ' - ' , change flag to 1",
      "code": "if ( c == ' - ' ) flag = 1 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read c from the input",
      "code": "c = getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while c > = ' 0 ' & & c < = ' 9 '",
      "code": "while ( c >= ' 0 ' && c <= ' 9 ' )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "assign ( x < < 3 ) + ( x < < 1 ) + c - ' 0 ' to x",
      "code": "x = ( x << 3 ) + ( x << 1 ) + c - ' 0 ' ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "read c from the input",
      "code": "c = getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "return - x is flag is true , else return x",
      "code": "return flag ? - x : x ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 15,
      "text": "create integers n and m = read ( )",
      "code": "int n = read ( ) , m = read ( ) ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "create integer ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if n % 2 is 0",
      "code": "if ( n % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "assign n / 2 to ans",
      "code": "ans = n / 2 ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 20,
      "text": "set ans to n / 2 + 1",
      "code": "ans = n / 2 + 1 ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if ans modulo m is equal to 0",
      "code": "if ( ans % m == 0 )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "while ans < n",
      "code": "while ( ans < n )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "if ans modulo m is equal to 0",
      "code": "if ( ans % m == 0 )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "if ans = n and ans modulo m is not 0",
      "code": "if ( ans == n && ans % m != 0 )",
      "indent": 1
    },
    {
      "line": 33,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "inline void read ( )"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "int n = read ( ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12,
        15,
        0
      ],
      "mod_code": [
        "cin >> c ;",
        "return x == true ? - x : x ;",
        "int n , m = read ( ) ;",
        "inline void read ( )"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        12,
        0
      ],
      "mod_code": [
        "cin >> c ;",
        "return x == true ? - x : x ;",
        "inline void read ( )"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        12,
        0,
        8
      ],
      "mod_code": [
        "cin >> c ;",
        "return x == true ? - x : x ;",
        "inline void read ( )",
        "while ( c >= ' 0 ' || c <= ' 9 ' )"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        12,
        0,
        15
      ],
      "mod_code": [
        "cin >> c ;",
        "return x == true ? - x : x ;",
        "inline void read ( )",
        "int n = read ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        12,
        8,
        15
      ],
      "mod_code": [
        "cin >> c ;",
        "return x == true ? - x : x ;",
        "while ( c >= ' 0 ' || c <= ' 9 ' )",
        "int n = read ( ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12,
        15
      ],
      "mod_code": [
        "cin >> c ;",
        "return x == true ? - x : x ;",
        "int n = read ( ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        15,
        0
      ],
      "mod_code": [
        "cin >> c ;",
        "int n , m = read ( ) ;",
        "inline void read ( )"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        15,
        0,
        8
      ],
      "mod_code": [
        "cin >> c ;",
        "int n , m = read ( ) ;",
        "inline void read ( )",
        "while ( c >= ' 0 ' || c <= ' 9 ' )"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "cin >> c ;",
        "inline void read ( )"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        0,
        8
      ],
      "mod_code": [
        "cin >> c ;",
        "inline void read ( )",
        "while ( c >= ' 0 ' || c <= ' 9 ' )"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        0,
        8,
        15
      ],
      "mod_code": [
        "cin >> c ;",
        "inline void read ( )",
        "while ( c >= ' 0 ' || c <= ' 9 ' )",
        "int n = read ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        0,
        15
      ],
      "mod_code": [
        "cin >> c ;",
        "inline void read ( )",
        "int n = read ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        8,
        15
      ],
      "mod_code": [
        "cin >> c ;",
        "while ( c >= ' 0 ' || c <= ' 9 ' )",
        "int n = read ( ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        15
      ],
      "mod_code": [
        "cin >> c ;",
        "int n = read ( ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        15,
        0
      ],
      "mod_code": [
        "return x == true ? - x : x ;",
        "int n , m = read ( ) ;",
        "inline void read ( )"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        15,
        0,
        8
      ],
      "mod_code": [
        "return x == true ? - x : x ;",
        "int n , m = read ( ) ;",
        "inline void read ( )",
        "while ( c >= ' 0 ' || c <= ' 9 ' )"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        0
      ],
      "mod_code": [
        "return x == true ? - x : x ;",
        "inline void read ( )"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        0,
        8
      ],
      "mod_code": [
        "return x == true ? - x : x ;",
        "inline void read ( )",
        "while ( c >= ' 0 ' || c <= ' 9 ' )"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        0,
        8,
        15
      ],
      "mod_code": [
        "return x == true ? - x : x ;",
        "inline void read ( )",
        "while ( c >= ' 0 ' || c <= ' 9 ' )",
        "int n = read ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        0,
        15
      ],
      "mod_code": [
        "return x == true ? - x : x ;",
        "inline void read ( )",
        "int n = read ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        8,
        15
      ],
      "mod_code": [
        "return x == true ? - x : x ;",
        "while ( c >= ' 0 ' || c <= ' 9 ' )",
        "int n = read ( ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "return x == true ? - x : x ;",
        "int n = read ( ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        0
      ],
      "mod_code": [
        "int n , m = read ( ) ;",
        "inline void read ( )"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        0,
        8
      ],
      "mod_code": [
        "int n , m = read ( ) ;",
        "inline void read ( )",
        "while ( c >= ' 0 ' || c <= ' 9 ' )"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "inline void read ( )",
        "while ( c >= ' 0 ' || c <= ' 9 ' )"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        15
      ],
      "mod_code": [
        "inline void read ( )",
        "while ( c >= ' 0 ' || c <= ' 9 ' )",
        "int n = read ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "inline void read ( )",
        "int n = read ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "while ( c >= ' 0 ' || c <= ' 9 ' )",
        "int n = read ( ) ;"
      ],
      "err_line": 21,
      "err_msg": "‘m’ was not declared in this scope"
    }
  ]
}