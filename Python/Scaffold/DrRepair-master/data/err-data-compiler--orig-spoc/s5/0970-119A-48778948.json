{
  "meta": {
    "index": 970,
    "hitid": "33KGGVH24UBDFKQ7QZ8JEBTN02E1XB",
    "workerid": "AIWEXPJAU66D9",
    "probid": "119A",
    "subid": "48778948"
  },
  "lines": [
    {
      "line": 0,
      "text": "gcd is a int function with int arguments a and b",
      "code": "int gcd ( int a , int b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return a if b = 0 , or gcd of b and a % b otherwise",
      "code": "return b == 0 ? a : gcd ( b , a % b ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare ints a , b , n , k and c with k = 0 and c = 2",
      "code": "int a , b , n , k = 0 , c = 2 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read a , b and n",
      "code": "cin >> a >> b >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while n > 0",
      "code": "while ( n > 0 )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if c is even",
      "code": "if ( c % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set n to n - gcd of a and n",
      "code": "n = n - gcd ( a , n ) ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "change k to 0",
      "code": "k = 0 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "assign 1 to c",
      "code": "c = 1 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "change n to n - gcd of b and n",
      "code": "n = n - gcd ( b , n ) ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "set k to 1",
      "code": "k = 1 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "change c to 2",
      "code": "c = 2 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print k",
      "code": "cout << k << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        10,
        13,
        0
      ],
      "mod_code": [
        "int c = 2 ;",
        "int c = 1 ;",
        "int k = 1 ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        10,
        6,
        0
      ],
      "mod_code": [
        "int c = 2 ;",
        "int c = 1 ;",
        "while ( n -- )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        10,
        5,
        0
      ],
      "mod_code": [
        "int c = 2 ;",
        "int c = 1 ;",
        "cin >> a >> b , n ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        10,
        0
      ],
      "mod_code": [
        "int c = 2 ;",
        "int c = 1 ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        13,
        6,
        0
      ],
      "mod_code": [
        "int c = 2 ;",
        "int k = 1 ;",
        "while ( n -- )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        13,
        5,
        0
      ],
      "mod_code": [
        "int c = 2 ;",
        "int k = 1 ;",
        "cin >> a >> b , n ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        13,
        0
      ],
      "mod_code": [
        "int c = 2 ;",
        "int k = 1 ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        6,
        5,
        0
      ],
      "mod_code": [
        "int c = 2 ;",
        "while ( n -- )",
        "cin >> a >> b , n ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        6,
        0
      ],
      "mod_code": [
        "int c = 2 ;",
        "while ( n -- )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        5,
        0
      ],
      "mod_code": [
        "int c = 2 ;",
        "cin >> a >> b , n ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        0
      ],
      "mod_code": [
        "int c = 2 ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        13,
        6,
        0
      ],
      "mod_code": [
        "int c = 1 ;",
        "int k = 1 ;",
        "while ( n -- )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        13,
        5,
        0
      ],
      "mod_code": [
        "int c = 1 ;",
        "int k = 1 ;",
        "cin >> a >> b , n ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        13,
        0
      ],
      "mod_code": [
        "int c = 1 ;",
        "int k = 1 ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        6,
        5,
        0
      ],
      "mod_code": [
        "int c = 1 ;",
        "while ( n -- )",
        "cin >> a >> b , n ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        6,
        0
      ],
      "mod_code": [
        "int c = 1 ;",
        "while ( n -- )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        5,
        0
      ],
      "mod_code": [
        "int c = 1 ;",
        "cin >> a >> b , n ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "int c = 1 ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        6,
        5,
        0
      ],
      "mod_code": [
        "int k = 1 ;",
        "while ( n -- )",
        "cin >> a >> b , n ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        6,
        0
      ],
      "mod_code": [
        "int k = 1 ;",
        "while ( n -- )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        5,
        0
      ],
      "mod_code": [
        "int k = 1 ;",
        "cin >> a >> b , n ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        0
      ],
      "mod_code": [
        "int k = 1 ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        5,
        0
      ],
      "mod_code": [
        "while ( n -- )",
        "cin >> a >> b , n ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "while ( n -- )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "cin >> a >> b , n ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}