{
  "meta": {
    "index": 1901,
    "hitid": "3MDWE879UHWORMQ1PGVU4KKEFBNB9U",
    "workerid": "AIWEXPJAU66D9",
    "probid": "104A",
    "subid": "47531556"
  },
  "lines": [
    {
      "line": 0,
      "text": "create new vector of long longs v",
      "code": "vector < long long > v ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "define new integer called n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read standard input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if n < = 10 or n > 21",
      "code": "if ( n <= 10 || n > 21 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print 0",
      "code": "cout << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "decrease n by 10",
      "code": "n -= 10 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if n = 10",
      "code": "if ( n == 10 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print 15 to the output",
      "code": "cout << 15 << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print 4",
      "code": "cout << 4 << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "vector < long long longs ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "{ cin >> n ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( n == 10 ) break ;"
      ],
      "err_line": 9,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "puts ( 15 ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "cout << 4 ;",
        "puts ( 15 ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        10,
        0
      ],
      "mod_code": [
        "cout << 4 ;",
        "puts ( 15 ) ;",
        "vector < long long longs ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        12,
        10,
        0,
        3
      ],
      "mod_code": [
        "cout << 4 ;",
        "puts ( 15 ) ;",
        "vector < long long longs ;",
        "{ cin >> n ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        12,
        10,
        0,
        9
      ],
      "mod_code": [
        "cout << 4 ;",
        "puts ( 15 ) ;",
        "vector < long long longs ;",
        "if ( n == 10 ) break ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        12,
        10,
        3
      ],
      "mod_code": [
        "cout << 4 ;",
        "puts ( 15 ) ;",
        "{ cin >> n ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        10,
        3,
        9
      ],
      "mod_code": [
        "cout << 4 ;",
        "puts ( 15 ) ;",
        "{ cin >> n ;",
        "if ( n == 10 ) break ;"
      ],
      "err_line": 9,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        12,
        10,
        9
      ],
      "mod_code": [
        "cout << 4 ;",
        "puts ( 15 ) ;",
        "if ( n == 10 ) break ;"
      ],
      "err_line": 9,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        12,
        0
      ],
      "mod_code": [
        "cout << 4 ;",
        "vector < long long longs ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        12,
        0,
        3
      ],
      "mod_code": [
        "cout << 4 ;",
        "vector < long long longs ;",
        "{ cin >> n ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        12,
        0,
        3,
        9
      ],
      "mod_code": [
        "cout << 4 ;",
        "vector < long long longs ;",
        "{ cin >> n ;",
        "if ( n == 10 ) break ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        12,
        0,
        9
      ],
      "mod_code": [
        "cout << 4 ;",
        "vector < long long longs ;",
        "if ( n == 10 ) break ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "cout << 4 ;",
        "{ cin >> n ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        12,
        3,
        9
      ],
      "mod_code": [
        "cout << 4 ;",
        "{ cin >> n ;",
        "if ( n == 10 ) break ;"
      ],
      "err_line": 9,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "cout << 4 ;",
        "if ( n == 10 ) break ;"
      ],
      "err_line": 9,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "puts ( 15 ) ;",
        "vector < long long longs ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        10,
        0,
        3
      ],
      "mod_code": [
        "puts ( 15 ) ;",
        "vector < long long longs ;",
        "{ cin >> n ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        10,
        0,
        3,
        9
      ],
      "mod_code": [
        "puts ( 15 ) ;",
        "vector < long long longs ;",
        "{ cin >> n ;",
        "if ( n == 10 ) break ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        10,
        0,
        9
      ],
      "mod_code": [
        "puts ( 15 ) ;",
        "vector < long long longs ;",
        "if ( n == 10 ) break ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "puts ( 15 ) ;",
        "{ cin >> n ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        3,
        9
      ],
      "mod_code": [
        "puts ( 15 ) ;",
        "{ cin >> n ;",
        "if ( n == 10 ) break ;"
      ],
      "err_line": 9,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "puts ( 15 ) ;",
        "if ( n == 10 ) break ;"
      ],
      "err_line": 9,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "vector < long long longs ;",
        "{ cin >> n ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        3,
        9
      ],
      "mod_code": [
        "vector < long long longs ;",
        "{ cin >> n ;",
        "if ( n == 10 ) break ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "vector < long long longs ;",
        "if ( n == 10 ) break ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "{ cin >> n ;",
        "if ( n == 10 ) break ;"
      ],
      "err_line": 9,
      "err_msg": "break statement not within loop or switch"
    }
  ]
}