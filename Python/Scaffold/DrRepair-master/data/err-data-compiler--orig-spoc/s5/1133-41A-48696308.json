{
  "meta": {
    "index": 1133,
    "hitid": "3ZQA3IO31BLQLBCFP8LNVY2UNW01OS",
    "workerid": "AIWEXPJAU66D9",
    "probid": "41A",
    "subid": "48696308"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "str1 and str2 are strings",
      "code": "string str1 , str2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read str1 and str2",
      "code": "cin >> str1 >> str2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let s1 = length of str1 and s2 = length of str2",
      "code": "int s1 = str1 . size ( ) , s2 = str2 . size ( ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "i , j and no are integers with i = 0 , j = s2 - 1 and no = 0",
      "code": "int i = 0 , j = s2 - 1 , no = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if s1 ! = s2",
      "code": "if ( s1 != s2 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while i is less than s1",
      "code": "while ( i < s1 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if str1 [ i ] ! = str2 [ j ]",
      "code": "if ( str1 [ i ] != str2 [ j ] )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "set no to 1",
      "code": "no = 1 ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "increase i by one",
      "code": "i ++ ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "decrease j",
      "code": "j -- ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if no = 0 , print \" YES \" and a new line",
      "code": "if ( no == 0 ) cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "s1 = str2 . length ( ) , s2 = str2 . length ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string str1 and str2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int str1 >> str2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "s1 = str1 . length ( ) , s2 = str2 . length ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int i = 0 , j = s2 - 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘no’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "while ( i < s1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( str1 [ i ] ] != str2 [ j ] )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 12,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "s1 = str2 . length ( ) , s2 = str2 . length ( ) ;",
        "bool no = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        2
      ],
      "mod_code": [
        "s1 = str2 . length ( ) , s2 = str2 . length ( ) ;",
        "bool no = 1 ;",
        "int str1 >> str2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        11,
        2,
        12
      ],
      "mod_code": [
        "s1 = str2 . length ( ) , s2 = str2 . length ( ) ;",
        "bool no = 1 ;",
        "int str1 >> str2 ;",
        "stop ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        11,
        2,
        1
      ],
      "mod_code": [
        "s1 = str2 . length ( ) , s2 = str2 . length ( ) ;",
        "bool no = 1 ;",
        "int str1 >> str2 ;",
        "string str1 and str2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        11,
        12
      ],
      "mod_code": [
        "s1 = str2 . length ( ) , s2 = str2 . length ( ) ;",
        "bool no = 1 ;",
        "stop ;"
      ],
      "err_line": 3,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        12,
        1
      ],
      "mod_code": [
        "s1 = str2 . length ( ) , s2 = str2 . length ( ) ;",
        "bool no = 1 ;",
        "stop ;",
        "string str1 and str2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        11,
        1
      ],
      "mod_code": [
        "s1 = str2 . length ( ) , s2 = str2 . length ( ) ;",
        "bool no = 1 ;",
        "string str1 and str2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "s1 = str2 . length ( ) , s2 = str2 . length ( ) ;",
        "int str1 >> str2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        2,
        12
      ],
      "mod_code": [
        "s1 = str2 . length ( ) , s2 = str2 . length ( ) ;",
        "int str1 >> str2 ;",
        "stop ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        2,
        12,
        1
      ],
      "mod_code": [
        "s1 = str2 . length ( ) , s2 = str2 . length ( ) ;",
        "int str1 >> str2 ;",
        "stop ;",
        "string str1 and str2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        2,
        1
      ],
      "mod_code": [
        "s1 = str2 . length ( ) , s2 = str2 . length ( ) ;",
        "int str1 >> str2 ;",
        "string str1 and str2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "s1 = str2 . length ( ) , s2 = str2 . length ( ) ;",
        "stop ;"
      ],
      "err_line": 3,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        1
      ],
      "mod_code": [
        "s1 = str2 . length ( ) , s2 = str2 . length ( ) ;",
        "stop ;",
        "string str1 and str2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "s1 = str2 . length ( ) , s2 = str2 . length ( ) ;",
        "string str1 and str2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "bool no = 1 ;",
        "int str1 >> str2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        11,
        2,
        12
      ],
      "mod_code": [
        "bool no = 1 ;",
        "int str1 >> str2 ;",
        "stop ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        11,
        2,
        12,
        1
      ],
      "mod_code": [
        "bool no = 1 ;",
        "int str1 >> str2 ;",
        "stop ;",
        "string str1 and str2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        11,
        2,
        12,
        3
      ],
      "mod_code": [
        "bool no = 1 ;",
        "int str1 >> str2 ;",
        "stop ;",
        "s1 = str1 . length ( ) , s2 = str2 . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        11,
        2,
        1
      ],
      "mod_code": [
        "bool no = 1 ;",
        "int str1 >> str2 ;",
        "string str1 and str2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        11,
        2,
        1,
        3
      ],
      "mod_code": [
        "bool no = 1 ;",
        "int str1 >> str2 ;",
        "string str1 and str2 ;",
        "s1 = str1 . length ( ) , s2 = str2 . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        11,
        2,
        3
      ],
      "mod_code": [
        "bool no = 1 ;",
        "int str1 >> str2 ;",
        "s1 = str1 . length ( ) , s2 = str2 . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "bool no = 1 ;",
        "stop ;"
      ],
      "err_line": 12,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        1
      ],
      "mod_code": [
        "bool no = 1 ;",
        "stop ;",
        "string str1 and str2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        11,
        12,
        1,
        3
      ],
      "mod_code": [
        "bool no = 1 ;",
        "stop ;",
        "string str1 and str2 ;",
        "s1 = str1 . length ( ) , s2 = str2 . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        11,
        12,
        3
      ],
      "mod_code": [
        "bool no = 1 ;",
        "stop ;",
        "s1 = str1 . length ( ) , s2 = str2 . length ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "bool no = 1 ;",
        "string str1 and str2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        11,
        1,
        3
      ],
      "mod_code": [
        "bool no = 1 ;",
        "string str1 and str2 ;",
        "s1 = str1 . length ( ) , s2 = str2 . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "bool no = 1 ;",
        "s1 = str1 . length ( ) , s2 = str2 . length ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "int str1 >> str2 ;",
        "stop ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2,
        12,
        1
      ],
      "mod_code": [
        "int str1 >> str2 ;",
        "stop ;",
        "string str1 and str2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        12,
        1,
        3
      ],
      "mod_code": [
        "int str1 >> str2 ;",
        "stop ;",
        "string str1 and str2 ;",
        "s1 = str1 . length ( ) , s2 = str2 . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        12,
        3
      ],
      "mod_code": [
        "int str1 >> str2 ;",
        "stop ;",
        "s1 = str1 . length ( ) , s2 = str2 . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "int str1 >> str2 ;",
        "string str1 and str2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        1,
        3
      ],
      "mod_code": [
        "int str1 >> str2 ;",
        "string str1 and str2 ;",
        "s1 = str1 . length ( ) , s2 = str2 . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "int str1 >> str2 ;",
        "s1 = str1 . length ( ) , s2 = str2 . length ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "stop ;",
        "string str1 and str2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        12,
        1,
        3
      ],
      "mod_code": [
        "stop ;",
        "string str1 and str2 ;",
        "s1 = str1 . length ( ) , s2 = str2 . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "stop ;",
        "s1 = str1 . length ( ) , s2 = str2 . length ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s1’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "string str1 and str2 ;",
        "s1 = str1 . length ( ) , s2 = str2 . length ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    }
  ]
}