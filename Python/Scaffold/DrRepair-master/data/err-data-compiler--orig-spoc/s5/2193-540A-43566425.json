{
  "meta": {
    "index": 2193,
    "hitid": "3D7VY91L65R3Y69VEPZZ96QYFARBMQ",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "540A",
    "subid": "43566425"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , i , sum = integers with sum = 0",
      "code": "int n , i , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "org , dst = character array of size 1001",
      "code": "char org [ 1001 ] , dst [ 1001 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read org",
      "code": "cin >> org ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read dst",
      "code": "cin >> dst ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive , sum = sum + min ( abs ( org [ i ] - dst [ i ] ) , 10 - abs ( org [ i ] - dst [ i ] ) )",
      "code": "for ( i = 0 ; i < n ; i ++ ) { sum += min ( abs ( org [ i ] - dst [ i ] ) , 10 - abs ( org [ i ] - dst [ i ] ) ) ; }",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char org [ 1001 ] [ 1001 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [1001][1001]’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin . get ( org ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin . get ( dst ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) sum += min ( org [ i ] - dst [ i ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "char org [ 1001 ] [ 1001 ] ;",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [1001][1001]’)"
    },
    {
      "mod_line": [
        2,
        3,
        6
      ],
      "mod_code": [
        "char org [ 1001 ] [ 1001 ] ;",
        "while ( cin >> n )",
        "for ( int i = 0 ; i < n ; i ++ ) sum += min ( org [ i ] - dst [ i ] ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [1001][1001]’)"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        4
      ],
      "mod_code": [
        "char org [ 1001 ] [ 1001 ] ;",
        "while ( cin >> n )",
        "for ( int i = 0 ; i < n ; i ++ ) sum += min ( org [ i ] - dst [ i ] ) ;",
        "cin . get ( org ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char (*)[1001]’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        5
      ],
      "mod_code": [
        "char org [ 1001 ] [ 1001 ] ;",
        "while ( cin >> n )",
        "for ( int i = 0 ; i < n ; i ++ ) sum += min ( org [ i ] - dst [ i ] ) ;",
        "cin . get ( dst ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [1001][1001]’)"
    },
    {
      "mod_line": [
        2,
        3,
        4
      ],
      "mod_code": [
        "char org [ 1001 ] [ 1001 ] ;",
        "while ( cin >> n )",
        "cin . get ( org ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char (*)[1001]’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        5
      ],
      "mod_code": [
        "char org [ 1001 ] [ 1001 ] ;",
        "while ( cin >> n )",
        "cin . get ( org ) ;",
        "cin . get ( dst ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char (*)[1001]’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3,
        5
      ],
      "mod_code": [
        "char org [ 1001 ] [ 1001 ] ;",
        "while ( cin >> n )",
        "cin . get ( dst ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [1001][1001]’)"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "char org [ 1001 ] [ 1001 ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) sum += min ( org [ i ] - dst [ i ] ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [1001][1001]’)"
    },
    {
      "mod_line": [
        2,
        6,
        4
      ],
      "mod_code": [
        "char org [ 1001 ] [ 1001 ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) sum += min ( org [ i ] - dst [ i ] ) ;",
        "cin . get ( org ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char (*)[1001]’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        4,
        5
      ],
      "mod_code": [
        "char org [ 1001 ] [ 1001 ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) sum += min ( org [ i ] - dst [ i ] ) ;",
        "cin . get ( org ) ;",
        "cin . get ( dst ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char (*)[1001]’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        5
      ],
      "mod_code": [
        "char org [ 1001 ] [ 1001 ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) sum += min ( org [ i ] - dst [ i ] ) ;",
        "cin . get ( dst ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [1001][1001]’)"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "char org [ 1001 ] [ 1001 ] ;",
        "cin . get ( org ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char (*)[1001]’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        5
      ],
      "mod_code": [
        "char org [ 1001 ] [ 1001 ] ;",
        "cin . get ( org ) ;",
        "cin . get ( dst ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char (*)[1001]’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "char org [ 1001 ] [ 1001 ] ;",
        "cin . get ( dst ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [1001][1001]’)"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( int i = 0 ; i < n ; i ++ ) sum += min ( org [ i ] - dst [ i ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        3,
        6,
        4
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( int i = 0 ; i < n ; i ++ ) sum += min ( org [ i ] - dst [ i ] ) ;",
        "cin . get ( org ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        6,
        4,
        5
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( int i = 0 ; i < n ; i ++ ) sum += min ( org [ i ] - dst [ i ] ) ;",
        "cin . get ( org ) ;",
        "cin . get ( dst ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        6,
        5
      ],
      "mod_code": [
        "while ( cin >> n )",
        "for ( int i = 0 ; i < n ; i ++ ) sum += min ( org [ i ] - dst [ i ] ) ;",
        "cin . get ( dst ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cin . get ( org ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cin . get ( org ) ;",
        "cin . get ( dst ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "while ( cin >> n )",
        "cin . get ( dst ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) sum += min ( org [ i ] - dst [ i ] ) ;",
        "cin . get ( org ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        4,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) sum += min ( org [ i ] - dst [ i ] ) ;",
        "cin . get ( org ) ;",
        "cin . get ( dst ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) sum += min ( org [ i ] - dst [ i ] ) ;",
        "cin . get ( dst ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "cin . get ( org ) ;",
        "cin . get ( dst ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    }
  ]
}