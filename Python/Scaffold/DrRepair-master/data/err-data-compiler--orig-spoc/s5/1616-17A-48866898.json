{
  "meta": {
    "index": 1616,
    "hitid": "3TKXBROM5T4NK6HGH2EOF12U540IJH",
    "workerid": "AIWEXPJAU66D9",
    "probid": "17A",
    "subid": "48866898"
  },
  "lines": [
    {
      "line": 0,
      "text": "method c with integer argument a",
      "code": "bool c ( int a )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if a is less than 2 return false",
      "code": "if ( a < 2 ) return false ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "for i = 2 to square root of a inclusive",
      "code": "for ( int i = 2 ; i <= sqrt ( a ) ; ++ i )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if a % i is equal to 0",
      "code": "if ( a % i == 0 ) return false ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "return true",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "g = array of integers of size 1000005",
      "code": "int g [ 1000005 ] ;",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "set integer l to 9",
      "code": "int l = 9 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to 1000 inclusive",
      "code": "for ( int i = 0 ; i <= 1000 ; ++ i )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if c ( i ) returns true",
      "code": "if ( c ( i ) )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if l is not equal to 9 set g [ l + 1 + i ] to true",
      "code": "if ( l != 9 ) g [ l + 1 + i ] = true ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "set l to i",
      "code": "l = i ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "for integer i = 0 to 1000 inclusive",
      "code": "for ( int i = 0 ; i <= 1000 ; ++ i )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if c ( i ) is false set g [ i ] to false",
      "code": "if ( ! c ( i ) ) g [ i ] = false ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "let n and k be integers",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "create integer kol with value 0",
      "code": "int kol = 0 ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for i = 2 to n inclusive",
      "code": "for ( int i = 2 ; i <= n ; ++ i )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if g [ i ] is true increment kol",
      "code": "if ( g [ i ] ) kol ++ ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if kol is greater or equal than k",
      "code": "if ( kol >= k )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print \" YES \\ n \"",
      "code": "cout << \" YES\\n \" ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "if ( a % i == 0 )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int c [ a ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "for ( i = 2 ; i <= sqrt ( a ) ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "if ( ( a % i ) == 0 )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int * kol = 0 ;"
      ],
      "err_line": 21,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "if ( a % i == 0 )",
        "int c [ a ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        21
      ],
      "mod_code": [
        "if ( a % i == 0 )",
        "int c [ a ] ;",
        "if ( kol <= k )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        21,
        9
      ],
      "mod_code": [
        "if ( a % i == 0 )",
        "int c [ a ] ;",
        "if ( kol <= k )",
        "for ( i = 0 ; i <= 1000 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        21,
        18
      ],
      "mod_code": [
        "if ( a % i == 0 )",
        "int c [ a ] ;",
        "if ( kol <= k )",
        "int * kol = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        9
      ],
      "mod_code": [
        "if ( a % i == 0 )",
        "int c [ a ] ;",
        "for ( i = 0 ; i <= 1000 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        9,
        18
      ],
      "mod_code": [
        "if ( a % i == 0 )",
        "int c [ a ] ;",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "int * kol = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        18
      ],
      "mod_code": [
        "if ( a % i == 0 )",
        "int c [ a ] ;",
        "int * kol = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        21
      ],
      "mod_code": [
        "if ( a % i == 0 )",
        "if ( kol <= k )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        21,
        9
      ],
      "mod_code": [
        "if ( a % i == 0 )",
        "if ( kol <= k )",
        "for ( i = 0 ; i <= 1000 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        21,
        9,
        18
      ],
      "mod_code": [
        "if ( a % i == 0 )",
        "if ( kol <= k )",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "int * kol = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        21,
        18
      ],
      "mod_code": [
        "if ( a % i == 0 )",
        "if ( kol <= k )",
        "int * kol = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "if ( a % i == 0 )",
        "for ( i = 0 ; i <= 1000 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        9,
        18
      ],
      "mod_code": [
        "if ( a % i == 0 )",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "int * kol = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        18
      ],
      "mod_code": [
        "if ( a % i == 0 )",
        "int * kol = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "if ( ( a % i ) == 0 )",
        "int c [ a ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        21
      ],
      "mod_code": [
        "if ( ( a % i ) == 0 )",
        "int c [ a ] ;",
        "if ( kol <= k )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        21,
        9
      ],
      "mod_code": [
        "if ( ( a % i ) == 0 )",
        "int c [ a ] ;",
        "if ( kol <= k )",
        "for ( i = 0 ; i <= 1000 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        21,
        18
      ],
      "mod_code": [
        "if ( ( a % i ) == 0 )",
        "int c [ a ] ;",
        "if ( kol <= k )",
        "int * kol = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        9
      ],
      "mod_code": [
        "if ( ( a % i ) == 0 )",
        "int c [ a ] ;",
        "for ( i = 0 ; i <= 1000 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        9,
        18
      ],
      "mod_code": [
        "if ( ( a % i ) == 0 )",
        "int c [ a ] ;",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "int * kol = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        18
      ],
      "mod_code": [
        "if ( ( a % i ) == 0 )",
        "int c [ a ] ;",
        "int * kol = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        21
      ],
      "mod_code": [
        "if ( ( a % i ) == 0 )",
        "if ( kol <= k )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        21,
        9
      ],
      "mod_code": [
        "if ( ( a % i ) == 0 )",
        "if ( kol <= k )",
        "for ( i = 0 ; i <= 1000 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        21,
        9,
        18
      ],
      "mod_code": [
        "if ( ( a % i ) == 0 )",
        "if ( kol <= k )",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "int * kol = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        21,
        18
      ],
      "mod_code": [
        "if ( ( a % i ) == 0 )",
        "if ( kol <= k )",
        "int * kol = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "if ( ( a % i ) == 0 )",
        "for ( i = 0 ; i <= 1000 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        9,
        18
      ],
      "mod_code": [
        "if ( ( a % i ) == 0 )",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "int * kol = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        18
      ],
      "mod_code": [
        "if ( ( a % i ) == 0 )",
        "int * kol = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        0,
        21
      ],
      "mod_code": [
        "int c [ a ] ;",
        "if ( kol <= k )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        21,
        9
      ],
      "mod_code": [
        "int c [ a ] ;",
        "if ( kol <= k )",
        "for ( i = 0 ; i <= 1000 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        21,
        9,
        18
      ],
      "mod_code": [
        "int c [ a ] ;",
        "if ( kol <= k )",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "int * kol = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        21,
        18
      ],
      "mod_code": [
        "int c [ a ] ;",
        "if ( kol <= k )",
        "int * kol = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int c [ a ] ;",
        "for ( i = 0 ; i <= 1000 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9,
        18
      ],
      "mod_code": [
        "int c [ a ] ;",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "int * kol = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        18
      ],
      "mod_code": [
        "int c [ a ] ;",
        "int * kol = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        9
      ],
      "mod_code": [
        "if ( kol <= k )",
        "for ( i = 0 ; i <= 1000 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        9,
        18
      ],
      "mod_code": [
        "if ( kol <= k )",
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "int * kol = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        18
      ],
      "mod_code": [
        "if ( kol <= k )",
        "int * kol = 0 ;"
      ],
      "err_line": 21,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i <= 1000 ; i ++ )",
        "int * kol = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}