{
  "meta": {
    "index": 2726,
    "hitid": "3HEM8MA6H96WNF8XPNOHLZFS5DNPQR",
    "workerid": "AIWEXPJAU66D9",
    "probid": "43A",
    "subid": "40535614"
  },
  "lines": [
    {
      "line": 0,
      "text": "s is an array of strings of length 110",
      "code": "string s [ 110 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create strings a and b",
      "code": "string a , b ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let n , score1 and score2 be integers",
      "code": "int n , score1 , score2 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 1 to n inclusive read s [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> s [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "a = s [ 1 ]",
      "code": "a = s [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for integer i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if s [ i ] is equal to a",
      "code": "if ( s [ i ] == a )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increase score1",
      "code": "score1 ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set b to s [ i ]",
      "code": "b = s [ i ] ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "increase score2",
      "code": "score2 ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if score1 is greater than score2",
      "code": "if ( score1 > score2 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print a and a new line",
      "code": "cout << a << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else if score2 is greater than score1",
      "code": "else if ( score2 > score1 )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print b and a new line",
      "code": "cout << b << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string * s [ 110 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string a create b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int a = s [ 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "char b = s [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char’ in initialization"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )",
        "char b = s [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        8,
        11,
        0
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )",
        "char b = s [ i ] ;",
        "string * s [ 110 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’)"
    },
    {
      "mod_line": [
        8,
        11,
        0,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )",
        "char b = s [ i ] ;",
        "string * s [ 110 ] ;",
        "int a = s [ 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’)"
    },
    {
      "mod_line": [
        8,
        11,
        0,
        1
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )",
        "char b = s [ i ] ;",
        "string * s [ 110 ] ;",
        "string a create b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        8,
        11,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )",
        "char b = s [ i ] ;",
        "int a = s [ 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        8,
        11,
        6,
        1
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )",
        "char b = s [ i ] ;",
        "int a = s [ 1 ] ;",
        "string a create b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        8,
        11,
        1
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )",
        "char b = s [ i ] ;",
        "string a create b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )",
        "string * s [ 110 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’)"
    },
    {
      "mod_line": [
        8,
        0,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )",
        "string * s [ 110 ] ;",
        "int a = s [ 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’)"
    },
    {
      "mod_line": [
        8,
        0,
        6,
        1
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )",
        "string * s [ 110 ] ;",
        "int a = s [ 1 ] ;",
        "string a create b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        8,
        0,
        1
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )",
        "string * s [ 110 ] ;",
        "string a create b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )",
        "int a = s [ 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        8,
        6,
        1
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )",
        "int a = s [ 1 ] ;",
        "string a create b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' )",
        "string a create b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        11,
        0
      ],
      "mod_code": [
        "char b = s [ i ] ;",
        "string * s [ 110 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’)"
    },
    {
      "mod_line": [
        11,
        0,
        6
      ],
      "mod_code": [
        "char b = s [ i ] ;",
        "string * s [ 110 ] ;",
        "int a = s [ 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’)"
    },
    {
      "mod_line": [
        11,
        0,
        6,
        1
      ],
      "mod_code": [
        "char b = s [ i ] ;",
        "string * s [ 110 ] ;",
        "int a = s [ 1 ] ;",
        "string a create b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        11,
        0,
        1
      ],
      "mod_code": [
        "char b = s [ i ] ;",
        "string * s [ 110 ] ;",
        "string a create b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "char b = s [ i ] ;",
        "int a = s [ 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        11,
        6,
        1
      ],
      "mod_code": [
        "char b = s [ i ] ;",
        "int a = s [ 1 ] ;",
        "string a create b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "char b = s [ i ] ;",
        "string a create b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "string * s [ 110 ] ;",
        "int a = s [ 1 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’)"
    },
    {
      "mod_line": [
        0,
        6,
        1
      ],
      "mod_code": [
        "string * s [ 110 ] ;",
        "int a = s [ 1 ] ;",
        "string a create b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "string * s [ 110 ] ;",
        "string a create b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "int a = s [ 1 ] ;",
        "string a create b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    }
  ]
}