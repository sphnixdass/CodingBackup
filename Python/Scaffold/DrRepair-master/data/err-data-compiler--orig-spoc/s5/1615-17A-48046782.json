{
  "meta": {
    "index": 1615,
    "hitid": "39KV3A5D181JUPJAL5J5GD38N72S7C",
    "workerid": "AIWEXPJAU66D9",
    "probid": "17A",
    "subid": "48046782"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integers n , k , t , i , j and array of integers p with size 1010",
      "code": "int n , k , t , p [ 1010 ] , i , j ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "visit = array of booleans of size 1010",
      "code": "bool visit [ 1010 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 2 to n inclusive",
      "code": "for ( i = 2 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if visit [ i ] is false , set p [ + + * p ] to i",
      "code": "if ( ! visit [ i ] ) p [ ++ * p ] = i ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for j = i * i to n inclusive , set visit [ j ] to 1",
      "code": "for ( j = i * i ; j <= n ; j += i ) visit [ j ] = 1 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 2 to * p inclusive",
      "code": "for ( i = 2 ; i <= * p ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if ( t = p [ i - 1 ] + p [ i ] + 1 ) < = n and visit [ t ] is false , decrement k",
      "code": "if ( ( t = p [ i - 1 ] + p [ i ] + 1 ) <= n && ! visit [ t ] ) k -- ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if k < = 0 , print \" YES \" , otherwise print \" NO \"",
      "code": "puts ( k <= 0 ? \" YES \" : \" NO \" ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , k , t , i , j , j , j ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , k , t , p , j , j , j ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( visit [ i ] == false ) { p [ ++ p ] = i ; }"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( t )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "int n , k , t , i , j , j , j ;",
        "if ( visit [ i ] == false ) p [ ++ i ] = i ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        5,
        6
      ],
      "mod_code": [
        "int n , k , t , i , j , j , j ;",
        "if ( visit [ i ] == false ) p [ ++ i ] = i ;",
        "for ( int j = i * i ; j <= n ; j ++ ) visit [ j ] = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        5,
        6,
        11
      ],
      "mod_code": [
        "int n , k , t , i , j , j , j ;",
        "if ( visit [ i ] == false ) p [ ++ i ] = i ;",
        "for ( int j = i * i ; j <= n ; j ++ ) visit [ j ] = 1 ;",
        "cout << ( k <= 0 ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        5,
        6,
        11
      ],
      "mod_code": [
        "int n , k , t , i , j , j , j ;",
        "if ( visit [ i ] == false ) p [ ++ i ] = i ;",
        "for ( int j = i * i ; j <= n ; j ++ ) visit [ j ] = 1 ;",
        "puts ( k <= 0 ? \" YES \" : \" YES \" ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        5,
        11
      ],
      "mod_code": [
        "int n , k , t , i , j , j , j ;",
        "if ( visit [ i ] == false ) p [ ++ i ] = i ;",
        "cout << ( k <= 0 ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        5,
        11,
        6
      ],
      "mod_code": [
        "int n , k , t , i , j , j , j ;",
        "if ( visit [ i ] == false ) p [ ++ i ] = i ;",
        "cout << ( k <= 0 ? \" YES \" : \" YES \" ) << endl ;",
        "for ( int j = i * i ; j <= n ; j ++ ) { visit [ j ] = 1 ; }"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        5,
        11
      ],
      "mod_code": [
        "int n , k , t , i , j , j , j ;",
        "if ( visit [ i ] == false ) p [ ++ i ] = i ;",
        "puts ( k <= 0 ? \" YES \" : \" YES \" ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        5,
        11,
        6
      ],
      "mod_code": [
        "int n , k , t , i , j , j , j ;",
        "if ( visit [ i ] == false ) p [ ++ i ] = i ;",
        "puts ( k <= 0 ? \" YES \" : \" YES \" ) ;",
        "for ( int j = i * i ; j <= n ; j ++ ) { visit [ j ] = 1 ; }"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        5,
        6
      ],
      "mod_code": [
        "int n , k , t , i , j , j , j ;",
        "if ( visit [ i ] == false ) p [ ++ i ] = i ;",
        "for ( int j = i * i ; j <= n ; j ++ ) { visit [ j ] = 1 ; }"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "int n , k , t , i , j , j , j ;",
        "for ( int j = i * i ; j <= n ; j ++ ) visit [ j ] = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        6,
        11
      ],
      "mod_code": [
        "int n , k , t , i , j , j , j ;",
        "for ( int j = i * i ; j <= n ; j ++ ) visit [ j ] = 1 ;",
        "cout << ( k <= 0 ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        6,
        11
      ],
      "mod_code": [
        "int n , k , t , i , j , j , j ;",
        "for ( int j = i * i ; j <= n ; j ++ ) visit [ j ] = 1 ;",
        "puts ( k <= 0 ? \" YES \" : \" YES \" ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "int n , k , t , i , j , j , j ;",
        "cout << ( k <= 0 ? \" YES \" : \" YES \" ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        11,
        6
      ],
      "mod_code": [
        "int n , k , t , i , j , j , j ;",
        "cout << ( k <= 0 ? \" YES \" : \" YES \" ) << endl ;",
        "for ( int j = i * i ; j <= n ; j ++ ) { visit [ j ] = 1 ; }"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "int n , k , t , i , j , j , j ;",
        "puts ( k <= 0 ? \" YES \" : \" YES \" ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        11,
        6
      ],
      "mod_code": [
        "int n , k , t , i , j , j , j ;",
        "puts ( k <= 0 ? \" YES \" : \" YES \" ) ;",
        "for ( int j = i * i ; j <= n ; j ++ ) { visit [ j ] = 1 ; }"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "int n , k , t , i , j , j , j ;",
        "for ( int j = i * i ; j <= n ; j ++ ) { visit [ j ] = 1 ; }"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int j’"
    }
  ]
}