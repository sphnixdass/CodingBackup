{
  "meta": {
    "index": 635,
    "hitid": "382GHPVPHSLIRLGCTSKX5TBM4PE43D",
    "workerid": "AIWEXPJAU66D9",
    "probid": "25A",
    "subid": "48944219"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n , a , cOdd , cEven , lOdd and lEven , where cOdd and cEven = 0",
      "code": "int n , a , cOdd = 0 , cEven = 0 , lOdd , lEven ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if a is even",
      "code": "if ( a % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment cEven",
      "code": "cEven ++ ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "set lEven to i",
      "code": "lEven = i ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increase cOdd by one",
      "code": "cOdd ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set value of lOdd to i",
      "code": "lOdd = i ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if cOdd = 1",
      "code": "if ( cOdd == 1 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print lOdd + 1 and a new line",
      "code": "cout << lOdd + 1 << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print lEven + 1 and a new line",
      "code": "cout << lEven + 1 << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "* lOdd = i ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( cOdd == 1 ) break ;"
      ],
      "err_line": 13,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "* lOdd = i ;",
        "bool lEven = i ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        7,
        3
      ],
      "mod_code": [
        "* lOdd = i ;",
        "bool lEven = i ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7,
        3,
        4
      ],
      "mod_code": [
        "* lOdd = i ;",
        "bool lEven = i ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7,
        3,
        13
      ],
      "mod_code": [
        "* lOdd = i ;",
        "bool lEven = i ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( cOdd == 1 ) break ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7,
        4
      ],
      "mod_code": [
        "* lOdd = i ;",
        "bool lEven = i ;",
        "cin >> n ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        7,
        4,
        13
      ],
      "mod_code": [
        "* lOdd = i ;",
        "bool lEven = i ;",
        "cin >> n ;",
        "if ( cOdd == 1 ) break ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        7,
        13
      ],
      "mod_code": [
        "* lOdd = i ;",
        "bool lEven = i ;",
        "if ( cOdd == 1 ) break ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "* lOdd = i ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        4
      ],
      "mod_code": [
        "* lOdd = i ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        4,
        13
      ],
      "mod_code": [
        "* lOdd = i ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n ;",
        "if ( cOdd == 1 ) break ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        13
      ],
      "mod_code": [
        "* lOdd = i ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( cOdd == 1 ) break ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "* lOdd = i ;",
        "cin >> n ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        4,
        13
      ],
      "mod_code": [
        "* lOdd = i ;",
        "cin >> n ;",
        "if ( cOdd == 1 ) break ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "* lOdd = i ;",
        "if ( cOdd == 1 ) break ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "bool lEven = i ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        4
      ],
      "mod_code": [
        "bool lEven = i ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        4,
        13
      ],
      "mod_code": [
        "bool lEven = i ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n ;",
        "if ( cOdd == 1 ) break ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        13
      ],
      "mod_code": [
        "bool lEven = i ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( cOdd == 1 ) break ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4,
        13
      ],
      "mod_code": [
        "bool lEven = i ;",
        "cin >> n ;",
        "if ( cOdd == 1 ) break ;"
      ],
      "err_line": 13,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "bool lEven = i ;",
        "if ( cOdd == 1 ) break ;"
      ],
      "err_line": 13,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n ;",
        "if ( cOdd == 1 ) break ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( cOdd == 1 ) break ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "cin >> n ;",
        "if ( cOdd == 1 ) break ;"
      ],
      "err_line": 13,
      "err_msg": "break statement not within loop or switch"
    }
  ]
}