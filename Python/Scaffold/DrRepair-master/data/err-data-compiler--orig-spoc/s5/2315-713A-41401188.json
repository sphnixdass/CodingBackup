{
  "meta": {
    "index": 2315,
    "hitid": "3S1L4CQSFXZS9MCMMOVQJ5MJ0RTAFM",
    "workerid": "A1AYVATMT88U1W",
    "probid": "713A",
    "subid": "41401188"
  },
  "lines": [
    {
      "line": 0,
      "text": "mp = map from long long to long long",
      "code": "map < long long , long long > mp ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "mymap = map from string to long long",
      "code": "map < string , long long > mymap ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let i , j , k , l , m , n , o , p , t , z , d be long integers with z = 0",
      "code": "long long i , j , k , l , m , n , o , p , t , z = 0 , d ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let s be a string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "getchar is a function that reads a single character and returns it",
      "code": "getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while t is decremented by 1",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read s , d",
      "code": "cin >> s >> d ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if s is equal to +",
      "code": "if ( s == \" + \" )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment mp [ d ] by 1",
      "code": "mp [ d ] ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "delete the elements from string s",
      "code": "s . clear ( ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "while d is greater than 0",
      "code": "while ( d > 0 )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "push_back the value of ( ( d modulo 10 ) modulo 2 + 48 ) into s",
      "code": "s . push_back ( ( d % 10 ) % 2 + 48 ) ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "d is equal to d / 10",
      "code": "d /= 10 ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "while length of s is less than 18 , push_back 0 in string s",
      "code": "while ( s . size ( ) < 18 ) s . push_back ( ' 0 ' ) ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "increment mymap [ s ] by 1",
      "code": "mymap [ s ] ++ ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else if s is equal to -",
      "code": "else if ( s == \" - \" )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "decrement mp [ d ] by 1",
      "code": "mp [ d ] -- ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "delete elements from string s",
      "code": "s . clear ( ) ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "while d is greater than 0",
      "code": "while ( d > 0 )",
      "indent": 3
    },
    {
      "line": 22,
      "text": "push_back the value of ( ( d modulo 10 ) modulo 2 + 48 ) into s",
      "code": "s . push_back ( ( d % 10 ) % 2 + 48 ) ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "d is equal to d / 10",
      "code": "d /= 10 ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 25,
      "text": "while length of s is less than 18 , push_back 0 in string s",
      "code": "while ( s . size ( ) < 18 ) s . push_back ( ' 0 ' ) ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "decrement mymap [ s ] by 1",
      "code": "mymap [ s ] -- ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 28,
      "text": "delete elements from string s",
      "code": "s . clear ( ) ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "while d is greater than 0",
      "code": "while ( d > 0 )",
      "indent": 3
    },
    {
      "line": 30,
      "text": "push_back the value of ( d modulo 10 + 48 ) into s",
      "code": "s . push_back ( d % 10 + 48 ) ;",
      "indent": 4
    },
    {
      "line": 31,
      "text": "d is equal to d / 10",
      "code": "d /= 10 ;",
      "indent": 4
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 33,
      "text": "while length of s is less than 18 , push_back 0 in string s",
      "code": "while ( s . size ( ) < 18 ) s . push_back ( ' 0 ' ) ;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "print mymap [ s ] and newline",
      "code": "cout << mymap [ s ] << endl ;",
      "indent": 3
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( s == ' + ' )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else if ( s == ' - ' )"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "map < long long = , long long > mp ;"
      ],
      "err_line": 0,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "map < string , long string > mymap ;"
      ],
      "err_line": 1,
      "err_msg": "‘long’ or ‘short’ invalid for ‘type name’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin . get ( t ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid initialization of non-const reference of type ‘std::basic_istream<char>::char_type& {aka char&}’ from an rvalue of type ‘std::basic_istream<char>::char_type {aka char}’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 9,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "continue ;"
      ],
      "err_line": 6,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "if ( s == ' + ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        9,
        11
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "if ( s == ' + ' )",
        "s . begin ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        9,
        11,
        16
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "if ( s == ' + ' )",
        "s . begin ( ) ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        9,
        11,
        18
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "if ( s == ' + ' )",
        "s . begin ( ) ;",
        "else if ( s == ' - ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        9,
        11,
        25
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "if ( s == ' + ' )",
        "s . begin ( ) ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        9,
        11,
        33
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "if ( s == ' + ' )",
        "s . begin ( ) ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        9,
        16
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "if ( s == ' + ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        9,
        16,
        18
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "if ( s == ' + ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "else if ( s == ' - ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        9,
        16,
        25
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "if ( s == ' + ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        9,
        16,
        33
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "if ( s == ' + ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        9,
        18
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "if ( s == ' + ' )",
        "else if ( s == ' - ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        9,
        18,
        25
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "if ( s == ' + ' )",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        9,
        18,
        33
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "if ( s == ' + ' )",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        9,
        25
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "if ( s == ' + ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        9,
        25,
        33
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "if ( s == ' + ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        9,
        33
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "if ( s == ' + ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "s . begin ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        11,
        16
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "s . begin ( ) ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        11,
        16,
        18
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "s . begin ( ) ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "else if ( s == ' - ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        11,
        16,
        25
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "s . begin ( ) ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        11,
        16,
        33
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "s . begin ( ) ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        11,
        18
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "s . begin ( ) ;",
        "else if ( s == ' - ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        11,
        18,
        25
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "s . begin ( ) ;",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        11,
        18,
        33
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "s . begin ( ) ;",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        11,
        25
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "s . begin ( ) ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        11,
        25,
        33
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "s . begin ( ) ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        11,
        33
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "s . begin ( ) ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        16,
        18
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "else if ( s == ' - ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        16,
        18,
        25
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        16,
        18,
        33
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        16,
        25
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        16,
        25,
        33
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        16,
        33
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        18
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "else if ( s == ' - ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        18,
        25
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        18,
        25,
        33
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        18,
        33
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        25
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        25,
        33
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        3,
        33
      ],
      "mod_code": [
        "long long i , j , k , l , m , n , o , p , t , z , d , d ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘long long int d’"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "s . begin ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        11,
        16
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "s . begin ( ) ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        18
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "s . begin ( ) ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "else if ( s == ' - ' )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        25
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "s . begin ( ) ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        33
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "s . begin ( ) ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        11,
        18
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "s . begin ( ) ;",
        "else if ( s == ' - ' )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        11,
        18,
        25
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "s . begin ( ) ;",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        11,
        18,
        33
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "s . begin ( ) ;",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        11,
        25
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "s . begin ( ) ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        11,
        25,
        33
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "s . begin ( ) ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        11,
        33
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "s . begin ( ) ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        16,
        18
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "else if ( s == ' - ' )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        16,
        18,
        25
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        16,
        18,
        33
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        16,
        25
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        16,
        25,
        33
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        16,
        33
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        18
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "else if ( s == ' - ' )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        18,
        25
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        18,
        25,
        33
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        18,
        33
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        25
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        25,
        33
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9,
        33
      ],
      "mod_code": [
        "if ( s == ' + ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        11,
        16,
        18
      ],
      "mod_code": [
        "s . begin ( ) ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "else if ( s == ' - ' )"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        11,
        16,
        18,
        25
      ],
      "mod_code": [
        "s . begin ( ) ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        11,
        16,
        18,
        33
      ],
      "mod_code": [
        "s . begin ( ) ;",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        11,
        18
      ],
      "mod_code": [
        "s . begin ( ) ;",
        "else if ( s == ' - ' )"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        11,
        18,
        25
      ],
      "mod_code": [
        "s . begin ( ) ;",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        11,
        18,
        25,
        33
      ],
      "mod_code": [
        "s . begin ( ) ;",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        11,
        18,
        33
      ],
      "mod_code": [
        "s . begin ( ) ;",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "else if ( s == ' - ' )"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        16,
        18,
        25
      ],
      "mod_code": [
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        16,
        18,
        25,
        33
      ],
      "mod_code": [
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        16,
        18,
        33
      ],
      "mod_code": [
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        18,
        25
      ],
      "mod_code": [
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        18,
        25,
        33
      ],
      "mod_code": [
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        18,
        33
      ],
      "mod_code": [
        "else if ( s == ' - ' )",
        "while ( s . length ( ) < 18 ) { s . push_back ( 0 ) ; }"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    }
  ]
}