{
  "meta": {
    "index": 944,
    "hitid": "32K26U12DNIF3Q1O6DRWRSXB81HVDP",
    "workerid": "AIWEXPJAU66D9",
    "probid": "119A",
    "subid": "41884999"
  },
  "lines": [
    {
      "line": 0,
      "text": "integer function gcd with integer arguments a and b",
      "code": "int gcd ( int a , int b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return b = 0 ? a : gcd ( b , a % b )",
      "code": "return b == 0 ? a : gcd ( b , a % b ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare integer variables a , b and n",
      "code": "int a , b , n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read a , b and n and loop further",
      "code": "while ( cin >> a >> b >> n )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create new integers x = gcd ( a , n ) , y = gcd ( b , n ) and z = x",
      "code": "int x = gcd ( a , n ) , y = gcd ( b , n ) , z = x ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "declare integer variable ans = 0",
      "code": "int ans = 0 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "while z < = n",
      "code": "while ( z <= n )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "decrease n by z",
      "code": "n -= z ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set value of z to gcd ( b , n )",
      "code": "z = gcd ( b , n ) ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if z is greater than n",
      "code": "if ( z > n )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "assign value of 0 to ans",
      "code": "ans = 0 ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "decrease n by z",
      "code": "n -= z ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "z = gcd ( a , n )",
      "code": "z = gcd ( a , n ) ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "if z is greater than n",
      "code": "if ( z > n )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "set ans to 1",
      "code": "ans = 1 ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "* z = gcd ( b , n ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 13,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 19,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "* z = gcd ( b , n ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        1
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "* z = gcd ( b , n ) ;",
        "return b = 0 ? a : gcd ( b , a % b ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        1,
        17
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "* z = gcd ( b , n ) ;",
        "return b = 0 ? a : gcd ( b , a % b ) ;",
        "if ( z >= n )"
      ],
      "err_line": 8,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        1,
        8
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "* z = gcd ( b , n ) ;",
        "return b = 0 ? a : gcd ( b , a % b ) ;",
        "while ( z <= n ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        1,
        5
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "* z = gcd ( b , n ) ;",
        "return b = 0 ? a : gcd ( b , a % b ) ;",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        10,
        17
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "* z = gcd ( b , n ) ;",
        "if ( z >= n )"
      ],
      "err_line": 8,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        17,
        8
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "* z = gcd ( b , n ) ;",
        "if ( z >= n )",
        "while ( z <= n ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        17,
        5
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "* z = gcd ( b , n ) ;",
        "if ( z >= n )",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        10,
        8
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "* z = gcd ( b , n ) ;",
        "while ( z <= n ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        8,
        5
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "* z = gcd ( b , n ) ;",
        "while ( z <= n ) ;",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        10,
        5
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "* z = gcd ( b , n ) ;",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "return b = 0 ? a : gcd ( b , a % b ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        17
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "return b = 0 ? a : gcd ( b , a % b ) ;",
        "if ( z >= n )"
      ],
      "err_line": 8,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        17,
        8
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "return b = 0 ? a : gcd ( b , a % b ) ;",
        "if ( z >= n )",
        "while ( z <= n ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        17,
        5
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "return b = 0 ? a : gcd ( b , a % b ) ;",
        "if ( z >= n )",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        1,
        8
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "return b = 0 ? a : gcd ( b , a % b ) ;",
        "while ( z <= n ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        8,
        5
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "return b = 0 ? a : gcd ( b , a % b ) ;",
        "while ( z <= n ) ;",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        1,
        5
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "return b = 0 ? a : gcd ( b , a % b ) ;",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "if ( z >= n )"
      ],
      "err_line": 8,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17,
        8
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "if ( z >= n )",
        "while ( z <= n ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17,
        8,
        5
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "if ( z >= n )",
        "while ( z <= n ) ;",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        17,
        5
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "if ( z >= n )",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "while ( z <= n ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        5
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "while ( z <= n ) ;",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "int x = gcd ( a , n ) , y = gcd ( b , n ) ;",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "* z = gcd ( b , n ) ;",
        "return b = 0 ? a : gcd ( b , a % b ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        1,
        17
      ],
      "mod_code": [
        "* z = gcd ( b , n ) ;",
        "return b = 0 ? a : gcd ( b , a % b ) ;",
        "if ( z >= n )"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        1,
        17,
        8
      ],
      "mod_code": [
        "* z = gcd ( b , n ) ;",
        "return b = 0 ? a : gcd ( b , a % b ) ;",
        "if ( z >= n )",
        "while ( z <= n ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        1,
        17,
        5
      ],
      "mod_code": [
        "* z = gcd ( b , n ) ;",
        "return b = 0 ? a : gcd ( b , a % b ) ;",
        "if ( z >= n )",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        1,
        8
      ],
      "mod_code": [
        "* z = gcd ( b , n ) ;",
        "return b = 0 ? a : gcd ( b , a % b ) ;",
        "while ( z <= n ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        1,
        8,
        5
      ],
      "mod_code": [
        "* z = gcd ( b , n ) ;",
        "return b = 0 ? a : gcd ( b , a % b ) ;",
        "while ( z <= n ) ;",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        1,
        5
      ],
      "mod_code": [
        "* z = gcd ( b , n ) ;",
        "return b = 0 ? a : gcd ( b , a % b ) ;",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        17
      ],
      "mod_code": [
        "* z = gcd ( b , n ) ;",
        "if ( z >= n )"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        17,
        8
      ],
      "mod_code": [
        "* z = gcd ( b , n ) ;",
        "if ( z >= n )",
        "while ( z <= n ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        17,
        8,
        5
      ],
      "mod_code": [
        "* z = gcd ( b , n ) ;",
        "if ( z >= n )",
        "while ( z <= n ) ;",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        17,
        5
      ],
      "mod_code": [
        "* z = gcd ( b , n ) ;",
        "if ( z >= n )",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "* z = gcd ( b , n ) ;",
        "while ( z <= n ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10,
        8,
        5
      ],
      "mod_code": [
        "* z = gcd ( b , n ) ;",
        "while ( z <= n ) ;",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "* z = gcd ( b , n ) ;",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        17,
        8,
        5
      ],
      "mod_code": [
        "return b = 0 ? a : gcd ( b , a % b ) ;",
        "if ( z >= n )",
        "while ( z <= n ) ;",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        17,
        5
      ],
      "mod_code": [
        "return b = 0 ? a : gcd ( b , a % b ) ;",
        "if ( z >= n )",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        8,
        5
      ],
      "mod_code": [
        "return b = 0 ? a : gcd ( b , a % b ) ;",
        "while ( z <= n ) ;",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "return b = 0 ? a : gcd ( b , a % b ) ;",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        17,
        8,
        5
      ],
      "mod_code": [
        "if ( z >= n )",
        "while ( z <= n ) ;",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        17,
        5
      ],
      "mod_code": [
        "if ( z >= n )",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "while ( z <= n ) ;",
        "while ( cin >> a >> b >> n ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘;’ token"
    }
  ]
}