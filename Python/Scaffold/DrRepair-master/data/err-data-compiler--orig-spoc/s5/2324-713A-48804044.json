{
  "meta": {
    "index": 2324,
    "hitid": "3XDJY5RK5SF2QFTV8CGYS21MI4C4U4",
    "workerid": "A1APYLD4DUK33J",
    "probid": "713A",
    "subid": "48804044"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare map from string to integer map1",
      "code": "map < string , int > map1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for k = 0 to n exclusive",
      "code": "for ( int k = 0 ; k < n ; k ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare character array tmp1 size 2",
      "code": "char tmp1 [ 2 ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read tmp1",
      "code": "cin >> tmp1 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if tmp1 [ 0 ] is ' + '",
      "code": "if ( tmp1 [ 0 ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "declare long long tmp",
      "code": "long long tmp ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "read tmp",
      "code": "cin >> tmp ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "declare character array t size 20",
      "code": "char t [ 20 ] ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "for i = 0 to 20 exclusive",
      "code": "for ( int i = 0 ; i < 20 ; i ++ )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "let t [ i ] be tmp % 2 + 1",
      "code": "t [ i ] = tmp % 2 + 1 ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "let tmp be tmp / 10",
      "code": "tmp /= 10 ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "let t [ 19 ] be 0",
      "code": "t [ 19 ] = 0 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "increment map1 [ t ]",
      "code": "map1 [ t ] ++ ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if tmp1 [ 0 ] is ' - '",
      "code": "if ( tmp1 [ 0 ] == ' - ' )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "declare long long tmp",
      "code": "long long tmp ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "read tmp",
      "code": "cin >> tmp ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "declare character array t size 20",
      "code": "char t [ 20 ] ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "for i = 0 to 20 exclusive",
      "code": "for ( int i = 0 ; i < 20 ; i ++ )",
      "indent": 3
    },
    {
      "line": 23,
      "text": "let t [ i ] be tmp % 2 + 1",
      "code": "t [ i ] = tmp % 2 + 1 ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "let tmp be tmp / 10",
      "code": "tmp /= 10 ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 26,
      "text": "let t [ 19 ] be 0",
      "code": "t [ 19 ] = 0 ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "decrement map1 [ t ]",
      "code": "map1 [ t ] -- ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 29,
      "text": "if tmp [ 0 ] is ' ? '",
      "code": "if ( tmp1 [ 0 ] == ' ? ' )",
      "indent": 2
    },
    {
      "line": 30,
      "text": "declare character array tmp size 20 = { }",
      "code": "char tmp [ 20 ] = { } ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "read tmp",
      "code": "cin >> tmp ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "declare integer lens = string length of tmp",
      "code": "int lens = strlen ( tmp ) ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "decrement lens",
      "code": "lens -- ;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "declare character array t size 20 = { }",
      "code": "char t [ 20 ] = { } ;",
      "indent": 3
    },
    {
      "line": 35,
      "text": "for i = 0 to lens inclusive , let t [ i ] be tmp [ lens - i ] - ' 0 '",
      "code": "for ( int i = 0 ; i <= lens ; i ++ ) { t [ i ] = tmp [ lens - i ] - ' 0 ' ; }",
      "indent": 3
    },
    {
      "line": 36,
      "text": "for i = 0 to 20 exclusive , increment t [ i ]",
      "code": "for ( int i = 0 ; i < 20 ; i ++ ) { t [ i ] ++ ; }",
      "indent": 3
    },
    {
      "line": 37,
      "text": "let t [ 19 ] be 0",
      "code": "t [ 19 ] = 0 ;",
      "indent": 3
    },
    {
      "line": 38,
      "text": "print map1 [ t ] , newlien",
      "code": "cout << map1 [ t ] << endl ;",
      "indent": 3
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )"
      ],
      "err_line": 29,
      "err_msg": "‘tmp’ was not declared in this scope"
    },
    {
      "mod_line": [
        38
      ],
      "mod_code": [
        "cout << map1 [ t ] << newlien << endl ;"
      ],
      "err_line": 38,
      "err_msg": "‘newlien’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 16,
      "err_msg": "‘map1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char a [ 2 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘tmp1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cin . get ( tmp1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "gets ( tmp ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "char a [ 20 ] ;"
      ],
      "err_line": 12,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 20 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "gets ( tmp ) ;"
      ],
      "err_line": 20,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "char a [ 20 ] ;"
      ],
      "err_line": 23,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "for ( i = 0 ; i < 20 ; i ++ )"
      ],
      "err_line": 22,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "if ( ( tmp [ 0 ] == ' ? ' ) )"
      ],
      "err_line": 29,
      "err_msg": "‘tmp’ was not declared in this scope"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "int lens = tmp . size ( ) ;"
      ],
      "err_line": 32,
      "err_msg": "request for member ‘size’ in ‘tmp’, which is of non-class type ‘char [20]’"
    },
    {
      "mod_line": [
        29,
        38
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "cout << map1 [ t ] << newlien << endl ;"
      ],
      "err_line": 29,
      "err_msg": "‘tmp’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        38,
        31
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "cout << map1 [ t ] << newlien << endl ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 29,
      "err_msg": "‘tmp’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        38,
        31,
        27
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "cout << map1 [ t ] << newlien << endl ;",
        "gets ( tmp ) ;",
        "map1 [ t ] [ t ] -- ;"
      ],
      "err_line": 29,
      "err_msg": "‘tmp’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        38,
        31,
        6
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "cout << map1 [ t ] << newlien << endl ;",
        "gets ( tmp ) ;",
        "cin . get ( tmp1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        38,
        31,
        9
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "cout << map1 [ t ] << newlien << endl ;",
        "gets ( tmp ) ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        38,
        27
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "cout << map1 [ t ] << newlien << endl ;",
        "map1 [ t ] [ t ] -- ;"
      ],
      "err_line": 29,
      "err_msg": "‘tmp’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        38,
        27,
        6
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "cout << map1 [ t ] << newlien << endl ;",
        "map1 [ t ] [ t ] -- ;",
        "cin . get ( tmp1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        38,
        27,
        9
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "cout << map1 [ t ] << newlien << endl ;",
        "map1 [ t ] [ t ] -- ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        38,
        6
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "cout << map1 [ t ] << newlien << endl ;",
        "cin . get ( tmp1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        38,
        6,
        9
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "cout << map1 [ t ] << newlien << endl ;",
        "cin . get ( tmp1 ) ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        38,
        9
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "cout << map1 [ t ] << newlien << endl ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        31
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "gets ( tmp ) ;"
      ],
      "err_line": 29,
      "err_msg": "‘tmp’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        31,
        27
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "gets ( tmp ) ;",
        "map1 [ t ] [ t ] -- ;"
      ],
      "err_line": 29,
      "err_msg": "‘tmp’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        31,
        27,
        6
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "gets ( tmp ) ;",
        "map1 [ t ] [ t ] -- ;",
        "cin . get ( tmp1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        31,
        27,
        9
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "gets ( tmp ) ;",
        "map1 [ t ] [ t ] -- ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        31,
        6
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "gets ( tmp ) ;",
        "cin . get ( tmp1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        31,
        6,
        9
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "gets ( tmp ) ;",
        "cin . get ( tmp1 ) ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        31,
        9
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "gets ( tmp ) ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        27
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "map1 [ t ] [ t ] -- ;"
      ],
      "err_line": 29,
      "err_msg": "‘tmp’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        27,
        6
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "map1 [ t ] [ t ] -- ;",
        "cin . get ( tmp1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        27,
        6,
        9
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "map1 [ t ] [ t ] -- ;",
        "cin . get ( tmp1 ) ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        27,
        9
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "map1 [ t ] [ t ] -- ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        6
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "cin . get ( tmp1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        6,
        9
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "cin . get ( tmp1 ) ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        9
      ],
      "mod_code": [
        "if ( tmp [ 0 ] == ' ? ' )",
        "gets ( tmp ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        38,
        31
      ],
      "mod_code": [
        "cout << map1 [ t ] << newlien << endl ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 38,
      "err_msg": "‘newlien’ was not declared in this scope"
    },
    {
      "mod_line": [
        38,
        31,
        27
      ],
      "mod_code": [
        "cout << map1 [ t ] << newlien << endl ;",
        "gets ( tmp ) ;",
        "map1 [ t ] [ t ] -- ;"
      ],
      "err_line": 38,
      "err_msg": "‘newlien’ was not declared in this scope"
    },
    {
      "mod_line": [
        38,
        31,
        27,
        6
      ],
      "mod_code": [
        "cout << map1 [ t ] << newlien << endl ;",
        "gets ( tmp ) ;",
        "map1 [ t ] [ t ] -- ;",
        "cin . get ( tmp1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        38,
        31,
        27,
        9
      ],
      "mod_code": [
        "cout << map1 [ t ] << newlien << endl ;",
        "gets ( tmp ) ;",
        "map1 [ t ] [ t ] -- ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        38,
        31,
        6
      ],
      "mod_code": [
        "cout << map1 [ t ] << newlien << endl ;",
        "gets ( tmp ) ;",
        "cin . get ( tmp1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        38,
        31,
        6,
        9
      ],
      "mod_code": [
        "cout << map1 [ t ] << newlien << endl ;",
        "gets ( tmp ) ;",
        "cin . get ( tmp1 ) ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        38,
        31,
        9
      ],
      "mod_code": [
        "cout << map1 [ t ] << newlien << endl ;",
        "gets ( tmp ) ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        38,
        27
      ],
      "mod_code": [
        "cout << map1 [ t ] << newlien << endl ;",
        "map1 [ t ] [ t ] -- ;"
      ],
      "err_line": 38,
      "err_msg": "‘newlien’ was not declared in this scope"
    },
    {
      "mod_line": [
        38,
        27,
        6
      ],
      "mod_code": [
        "cout << map1 [ t ] << newlien << endl ;",
        "map1 [ t ] [ t ] -- ;",
        "cin . get ( tmp1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        38,
        27,
        6,
        9
      ],
      "mod_code": [
        "cout << map1 [ t ] << newlien << endl ;",
        "map1 [ t ] [ t ] -- ;",
        "cin . get ( tmp1 ) ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        38,
        27,
        9
      ],
      "mod_code": [
        "cout << map1 [ t ] << newlien << endl ;",
        "map1 [ t ] [ t ] -- ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        38,
        6
      ],
      "mod_code": [
        "cout << map1 [ t ] << newlien << endl ;",
        "cin . get ( tmp1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        38,
        6,
        9
      ],
      "mod_code": [
        "cout << map1 [ t ] << newlien << endl ;",
        "cin . get ( tmp1 ) ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        38,
        9
      ],
      "mod_code": [
        "cout << map1 [ t ] << newlien << endl ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        31,
        27,
        6
      ],
      "mod_code": [
        "gets ( tmp ) ;",
        "map1 [ t ] [ t ] -- ;",
        "cin . get ( tmp1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        31,
        27,
        6,
        9
      ],
      "mod_code": [
        "gets ( tmp ) ;",
        "map1 [ t ] [ t ] -- ;",
        "cin . get ( tmp1 ) ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        31,
        27,
        9
      ],
      "mod_code": [
        "gets ( tmp ) ;",
        "map1 [ t ] [ t ] -- ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        31,
        6
      ],
      "mod_code": [
        "gets ( tmp ) ;",
        "cin . get ( tmp1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        31,
        6,
        9
      ],
      "mod_code": [
        "gets ( tmp ) ;",
        "cin . get ( tmp1 ) ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        31,
        9
      ],
      "mod_code": [
        "gets ( tmp ) ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        27,
        6
      ],
      "mod_code": [
        "map1 [ t ] [ t ] -- ;",
        "cin . get ( tmp1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        27,
        6,
        9
      ],
      "mod_code": [
        "map1 [ t ] [ t ] -- ;",
        "cin . get ( tmp1 ) ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    },
    {
      "mod_line": [
        27,
        9
      ],
      "mod_code": [
        "map1 [ t ] [ t ] -- ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘long long int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "cin . get ( tmp1 ) ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘char*’ to ‘std::basic_istream<char>::char_type {aka char}’ [-fpermissive]"
    }
  ]
}