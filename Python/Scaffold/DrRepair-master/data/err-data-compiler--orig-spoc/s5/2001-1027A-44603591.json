{
  "meta": {
    "index": 2001,
    "hitid": "3GMLHYZ0LERIOM7FXJ458R5TD5DYUL",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "1027A",
    "subid": "44603591"
  },
  "lines": [
    {
      "line": 0,
      "text": "in the function solve",
      "code": "void solve ( )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , s",
      "code": "cin >> n >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "s1 , s2 = strings",
      "code": "string s1 , s2 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n / 2 exclusive , append s [ i ] to s1",
      "code": "for ( int i = 0 ; i < n / 2 ; ++ i ) { s1 . push_back ( s [ i ] ) ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = n / 2 to n exclusive , append s [ i ] to s2",
      "code": "for ( int i = n / 2 ; i < n ; ++ i ) { s2 . push_back ( s [ i ] ) ; }",
      "indent": 1
    },
    {
      "line": 7,
      "text": "reverse s2 . begin ( ) and s2 . end ( )",
      "code": "reverse ( s2 . begin ( ) , s2 . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to s1 . size ( ) exclusive",
      "code": "for ( int i = 0 ; i < s1 . size ( ) ; ++ i )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if ( ( abs ( s1 [ i ] - s2 [ i ] ) is 2 ) or ( s1 [ i ] is s2 [ i ] ) )",
      "code": "if ( ( abs ( s1 [ i ] - s2 [ i ] ) == 2 ) || ( s1 [ i ] == s2 [ i ] ) )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "continue next iteration",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "return",
      "code": "return ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 19,
      "text": "setf on fixed",
      "code": "cout . setf ( ios :: fixed ) ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "set precision to 9",
      "code": "cout . precision ( 9 ) ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "while ( n ) , call solve",
      "code": "while ( n -- ) solve ( ) ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "solve ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected constructor, destructor, or type conversion before ‘;’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "strings , s2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < s1 . size ( ) ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( ( abs ( s1 [ i ] - s2 [ i ] ) == 2 ) || ( s1 [ i ] == s2 [ i ] ) ) )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else"
      ],
      "err_line": 10,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "return )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "puts ( 9 ) ;"
      ],
      "err_line": 20,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "while ( n ) solve ( n ) ;"
      ],
      "err_line": 23,
      "err_msg": "too many arguments to function ‘void solve()’"
    },
    {
      "mod_line": [
        23,
        7,
        10
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "else"
      ],
      "err_line": 10,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        23,
        7,
        10,
        13
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "else",
        "return )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        23,
        7,
        10,
        4
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "else",
        "strings , s2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        7,
        10,
        2
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "else",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        23,
        7,
        13
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "return )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        23,
        7,
        13,
        4
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "return )",
        "strings , s2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        7,
        13,
        2
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "return )",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        23,
        7,
        4
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "strings , s2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        7,
        4,
        2
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "strings , s2 ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        7,
        2
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        23,
        10
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "else"
      ],
      "err_line": 10,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        23,
        10,
        13
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "else",
        "return )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        23,
        10,
        13,
        4
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "else",
        "return )",
        "strings , s2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        10,
        13,
        2
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "else",
        "return )",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        23,
        10,
        4
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "else",
        "strings , s2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        10,
        4,
        2
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "else",
        "strings , s2 ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        10,
        2
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "else",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        23,
        13
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "return )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        23,
        13,
        4
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "return )",
        "strings , s2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        13,
        4,
        2
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "return )",
        "strings , s2 ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        13,
        2
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "return )",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        23,
        4
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "strings , s2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        4,
        2
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "strings , s2 ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        2
      ],
      "mod_code": [
        "while ( n ) solve ( ) ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "else"
      ],
      "err_line": 10,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        7,
        10,
        13
      ],
      "mod_code": [
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "else",
        "return )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        4
      ],
      "mod_code": [
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "else",
        "return )",
        "strings , s2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        2
      ],
      "mod_code": [
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "else",
        "return )",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        10,
        4
      ],
      "mod_code": [
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "else",
        "strings , s2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        4,
        2
      ],
      "mod_code": [
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "else",
        "strings , s2 ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        2
      ],
      "mod_code": [
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "else",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "return )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        13,
        4
      ],
      "mod_code": [
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "return )",
        "strings , s2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13,
        4,
        2
      ],
      "mod_code": [
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "return )",
        "strings , s2 ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13,
        2
      ],
      "mod_code": [
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "return )",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "strings , s2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4,
        2
      ],
      "mod_code": [
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "strings , s2 ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "reverse ( s2 . end ( ) , s2 . end ( ) ) ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "else",
        "return )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        10,
        13,
        4
      ],
      "mod_code": [
        "else",
        "return )",
        "strings , s2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        4,
        2
      ],
      "mod_code": [
        "else",
        "return )",
        "strings , s2 ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        2
      ],
      "mod_code": [
        "else",
        "return )",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "else",
        "strings , s2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        2
      ],
      "mod_code": [
        "else",
        "strings , s2 ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "else",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "return )",
        "strings , s2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4,
        2
      ],
      "mod_code": [
        "return )",
        "strings , s2 ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "return )",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "strings , s2 ;",
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "‘strings’ was not declared in this scope"
    }
  ]
}