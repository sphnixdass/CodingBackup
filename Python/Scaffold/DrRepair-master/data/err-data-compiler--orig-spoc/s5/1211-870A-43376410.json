{
  "meta": {
    "index": 1211,
    "hitid": "3TLFH2L6Y9IDNOZJ4T70URIMEPCT2Y",
    "workerid": "AIWEXPJAU66D9",
    "probid": "870A",
    "subid": "43376410"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers m , n and max with max = 100500",
      "code": "int m , n , max = 100500 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read m and n",
      "code": "cin >> m >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer vector a with m elements",
      "code": "vector < int > a ( m ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer vector b with n elements",
      "code": "vector < int > b ( n ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read m elements to a",
      "code": "for ( int i = 0 ; i < m ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n elements to b",
      "code": "for ( int j = 0 ; j < n ; j ++ ) cin >> b [ j ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; ++ i )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; ++ j )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if a [ i ] = b [ j ]",
      "code": "if ( a [ i ] == b [ j ] )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "assign value of min of max and a [ i ] to max",
      "code": "max = min ( max , a [ i ] ) ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 12,
      "text": "max = min of max and a [ i ] * 10 + b [ j ]",
      "code": "max = min ( max , a [ i ] * 10 + b [ j ] ) ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "max = min of max and b [ j ] * 10 + a [ i ]",
      "code": "max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print max and ' \\ n '",
      "code": "cout << max << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < int > a [ m ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "vector < int > b [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( a [ i ] ] == b [ j ] )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "max = min ( max ( max , a [ i ] ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘max’ cannot be used as a function"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "cout << max ( max << ' \\n ' ) ;"
      ],
      "err_line": 17,
      "err_msg": "‘max’ cannot be used as a function"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "cout << max ( max << ' \\n ' ) ;"
      ],
      "err_line": 17,
      "err_msg": "‘max’ cannot be used as a function"
    },
    {
      "mod_line": [
        13,
        17,
        10
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "cout << max ( max << ' \\n ' ) ;",
        "max = min ( max ( max , a [ i ] ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘max’ cannot be used as a function"
    },
    {
      "mod_line": [
        13,
        17,
        10,
        3
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "cout << max ( max << ' \\n ' ) ;",
        "max = min ( max ( max , a [ i ] ) ) ;",
        "vector < int > a [ m ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        10,
        9
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "cout << max ( max << ' \\n ' ) ;",
        "max = min ( max ( max , a [ i ] ) ) ;",
        "if ( a [ i ] ] == b [ j ] )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        13,
        17,
        10,
        4
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "cout << max ( max << ' \\n ' ) ;",
        "max = min ( max ( max , a [ i ] ) ) ;",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        3
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "cout << max ( max << ' \\n ' ) ;",
        "vector < int > a [ m ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        3,
        9
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "cout << max ( max << ' \\n ' ) ;",
        "vector < int > a [ m ] ;",
        "if ( a [ i ] ] == b [ j ] )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        3,
        4
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "cout << max ( max << ' \\n ' ) ;",
        "vector < int > a [ m ] ;",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        9
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "cout << max ( max << ' \\n ' ) ;",
        "if ( a [ i ] ] == b [ j ] )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        13,
        17,
        9,
        4
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "cout << max ( max << ' \\n ' ) ;",
        "if ( a [ i ] ] == b [ j ] )",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        4
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "cout << max ( max << ' \\n ' ) ;",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        13,
        10
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "max = min ( max ( max , a [ i ] ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘max’ cannot be used as a function"
    },
    {
      "mod_line": [
        13,
        10,
        3
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "max = min ( max ( max , a [ i ] ) ) ;",
        "vector < int > a [ m ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        13,
        10,
        3,
        9
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "max = min ( max ( max , a [ i ] ) ) ;",
        "vector < int > a [ m ] ;",
        "if ( a [ i ] ] == b [ j ] )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        13,
        10,
        3,
        4
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "max = min ( max ( max , a [ i ] ) ) ;",
        "vector < int > a [ m ] ;",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        13,
        10,
        9
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "max = min ( max ( max , a [ i ] ) ) ;",
        "if ( a [ i ] ] == b [ j ] )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        13,
        10,
        9,
        4
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "max = min ( max ( max , a [ i ] ) ) ;",
        "if ( a [ i ] ] == b [ j ] )",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        13,
        10,
        4
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "max = min ( max ( max , a [ i ] ) ) ;",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "vector < int > a [ m ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        13,
        3,
        9
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "vector < int > a [ m ] ;",
        "if ( a [ i ] ] == b [ j ] )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        13,
        3,
        9,
        4
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "vector < int > a [ m ] ;",
        "if ( a [ i ] ] == b [ j ] )",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        13,
        3,
        4
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "vector < int > a [ m ] ;",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        13,
        9
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "if ( a [ i ] ] == b [ j ] )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        13,
        9,
        4
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "if ( a [ i ] ] == b [ j ] )",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "int max = min ( max , b [ j ] * 10 + a [ i ] ) ;",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        17,
        10
      ],
      "mod_code": [
        "cout << max ( max << ' \\n ' ) ;",
        "max = min ( max ( max , a [ i ] ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘max’ cannot be used as a function"
    },
    {
      "mod_line": [
        17,
        10,
        3
      ],
      "mod_code": [
        "cout << max ( max << ' \\n ' ) ;",
        "max = min ( max ( max , a [ i ] ) ) ;",
        "vector < int > a [ m ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        17,
        10,
        3,
        9
      ],
      "mod_code": [
        "cout << max ( max << ' \\n ' ) ;",
        "max = min ( max ( max , a [ i ] ) ) ;",
        "vector < int > a [ m ] ;",
        "if ( a [ i ] ] == b [ j ] )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        17,
        10,
        3,
        4
      ],
      "mod_code": [
        "cout << max ( max << ' \\n ' ) ;",
        "max = min ( max ( max , a [ i ] ) ) ;",
        "vector < int > a [ m ] ;",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        17,
        10,
        9
      ],
      "mod_code": [
        "cout << max ( max << ' \\n ' ) ;",
        "max = min ( max ( max , a [ i ] ) ) ;",
        "if ( a [ i ] ] == b [ j ] )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        17,
        10,
        9,
        4
      ],
      "mod_code": [
        "cout << max ( max << ' \\n ' ) ;",
        "max = min ( max ( max , a [ i ] ) ) ;",
        "if ( a [ i ] ] == b [ j ] )",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        17,
        10,
        4
      ],
      "mod_code": [
        "cout << max ( max << ' \\n ' ) ;",
        "max = min ( max ( max , a [ i ] ) ) ;",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        17,
        3
      ],
      "mod_code": [
        "cout << max ( max << ' \\n ' ) ;",
        "vector < int > a [ m ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        17,
        3,
        9
      ],
      "mod_code": [
        "cout << max ( max << ' \\n ' ) ;",
        "vector < int > a [ m ] ;",
        "if ( a [ i ] ] == b [ j ] )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        17,
        3,
        9,
        4
      ],
      "mod_code": [
        "cout << max ( max << ' \\n ' ) ;",
        "vector < int > a [ m ] ;",
        "if ( a [ i ] ] == b [ j ] )",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        17,
        3,
        4
      ],
      "mod_code": [
        "cout << max ( max << ' \\n ' ) ;",
        "vector < int > a [ m ] ;",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        17,
        9
      ],
      "mod_code": [
        "cout << max ( max << ' \\n ' ) ;",
        "if ( a [ i ] ] == b [ j ] )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        17,
        9,
        4
      ],
      "mod_code": [
        "cout << max ( max << ' \\n ' ) ;",
        "if ( a [ i ] ] == b [ j ] )",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        17,
        4
      ],
      "mod_code": [
        "cout << max ( max << ' \\n ' ) ;",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "max = min ( max ( max , a [ i ] ) ) ;",
        "vector < int > a [ m ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        10,
        3,
        9
      ],
      "mod_code": [
        "max = min ( max ( max , a [ i ] ) ) ;",
        "vector < int > a [ m ] ;",
        "if ( a [ i ] ] == b [ j ] )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        10,
        3,
        9,
        4
      ],
      "mod_code": [
        "max = min ( max ( max , a [ i ] ) ) ;",
        "vector < int > a [ m ] ;",
        "if ( a [ i ] ] == b [ j ] )",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        10,
        3,
        4
      ],
      "mod_code": [
        "max = min ( max ( max , a [ i ] ) ) ;",
        "vector < int > a [ m ] ;",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "max = min ( max ( max , a [ i ] ) ) ;",
        "if ( a [ i ] ] == b [ j ] )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        10,
        9,
        4
      ],
      "mod_code": [
        "max = min ( max ( max , a [ i ] ) ) ;",
        "if ( a [ i ] ] == b [ j ] )",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "max = min ( max ( max , a [ i ] ) ) ;",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "vector < int > a [ m ] ;",
        "if ( a [ i ] ] == b [ j ] )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        9,
        4
      ],
      "mod_code": [
        "vector < int > a [ m ] ;",
        "if ( a [ i ] ] == b [ j ] )",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "vector < int > a [ m ] ;",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "if ( a [ i ] ] == b [ j ] )",
        "vector < int > b [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    }
  ]
}