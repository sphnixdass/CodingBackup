{
  "meta": {
    "index": 1974,
    "hitid": "3TL87MO8CMJ9553QJFKGSJ2UU3SFL9",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "765A",
    "subid": "45450053"
  },
  "lines": [
    {
      "line": 0,
      "text": "INF = const int with INF = 2e9 as int",
      "code": "const int INF = ( int ) 2e9 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "EPS = const double with EPS = 1e - 9 as double",
      "code": "const double EPS = ( double ) 1e-9 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "PI = const double with PI = acos of - 1 as double",
      "code": "const double PI = ( double ) acos ( - 1 ) ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "MOD = const long long with MOD = 1e9 as long long + 7",
      "code": "const long long MOD = ( long long ) 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "in function gcd taking int a , int b and returning int",
      "code": "int gcd ( int a , int b )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "if a < b then swap a and b",
      "code": "if ( a < b ) swap ( a , b ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if a is a multiple of b return b",
      "code": "if ( a % b == 0 ) return b ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "call gcd of a mod b , b",
      "code": "gcd ( a % b , b ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "in function palin taking string s and returning bool",
      "code": "bool palin ( string s )",
      "indent": 0
    },
    {
      "line": 10,
      "text": "len = int with len = length of s",
      "code": "int len = s . length ( ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to len / 2",
      "code": "for ( int i = 0 ; i < len / 2 ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if s [ i ] is not s [ len - 1 - i ] return false",
      "code": "if ( s [ i ] != s [ len - 1 - i ] ) { return false ; }",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "return true",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 16,
      "text": "define empty function fast_io",
      "code": "void fast_io ( ) { }",
      "indent": 0
    },
    {
      "line": 17,
      "text": "parent = int array of size 300",
      "code": "int parent [ 300 ] ;",
      "indent": 0
    },
    {
      "line": 18,
      "text": "in function root taking int x and returning int",
      "code": "int root ( int x )",
      "indent": 0
    },
    {
      "line": 19,
      "text": "loop while parent [ x ] is not x",
      "code": "while ( parent [ x ] != x )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "set parent [ x ] to parent [ parent [ x ] ]",
      "code": "parent [ x ] = parent [ parent [ x ] ] ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "set x to parent [ x ]",
      "code": "x = parent [ x ] ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "return x",
      "code": "return x ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 26,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "if n is uneven",
      "code": "if ( n % 2 )",
      "indent": 1
    },
    {
      "line": 29,
      "text": "print \" contest \"",
      "code": "cout << \" contest\\n \" ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print \" home \"",
      "code": "cout << \" home\\n \" ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 7,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "bool palin ( string s ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < len / 2 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int root ( int x ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31,
        9
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "bool palin ( string s ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31,
        9,
        11
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "bool palin ( string s ) ;",
        "for ( i = 0 ; i < len / 2 ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31,
        9,
        11,
        29
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "bool palin ( string s ) ;",
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "cout << \" contest \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31,
        9,
        11,
        4
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "bool palin ( string s ) ;",
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31,
        9,
        11,
        7
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "bool palin ( string s ) ;",
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 7,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        31,
        9,
        29
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "bool palin ( string s ) ;",
        "cout << \" contest \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31,
        9,
        29,
        4
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "bool palin ( string s ) ;",
        "cout << \" contest \" ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31,
        9,
        29,
        7
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "bool palin ( string s ) ;",
        "cout << \" contest \" ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 7,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        31,
        9,
        4
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "bool palin ( string s ) ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31,
        9,
        4,
        7
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "bool palin ( string s ) ;",
        "int gcd ( int a , int b ) ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31,
        9,
        7
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "bool palin ( string s ) ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 7,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        31,
        11
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "for ( i = 0 ; i < len / 2 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        11,
        29
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "cout << \" contest \" ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        11,
        29,
        4
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "cout << \" contest \" ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31,
        11,
        29,
        7
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "cout << \" contest \" ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 7,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        31,
        11,
        4
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31,
        11,
        4,
        7
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "int gcd ( int a , int b ) ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31,
        11,
        7
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 7,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        31,
        29,
        4
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "cout << \" contest \" ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31,
        29,
        4,
        7
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "cout << \" contest \" ;",
        "int gcd ( int a , int b ) ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31,
        29,
        7
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "cout << \" contest \" ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 7,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        31,
        4
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31,
        4,
        7
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "int gcd ( int a , int b ) ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        31,
        7
      ],
      "mod_code": [
        "cout << \" home \" ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 7,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "bool palin ( string s ) ;",
        "for ( i = 0 ; i < len / 2 ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        11,
        29
      ],
      "mod_code": [
        "bool palin ( string s ) ;",
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "cout << \" contest \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        11,
        29,
        4
      ],
      "mod_code": [
        "bool palin ( string s ) ;",
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "cout << \" contest \" ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        11,
        29,
        7
      ],
      "mod_code": [
        "bool palin ( string s ) ;",
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "cout << \" contest \" ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 7,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        9,
        11,
        4
      ],
      "mod_code": [
        "bool palin ( string s ) ;",
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        11,
        4,
        7
      ],
      "mod_code": [
        "bool palin ( string s ) ;",
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "int gcd ( int a , int b ) ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        11,
        7
      ],
      "mod_code": [
        "bool palin ( string s ) ;",
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 7,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        9,
        29
      ],
      "mod_code": [
        "bool palin ( string s ) ;",
        "cout << \" contest \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        29,
        4
      ],
      "mod_code": [
        "bool palin ( string s ) ;",
        "cout << \" contest \" ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        29,
        4,
        7
      ],
      "mod_code": [
        "bool palin ( string s ) ;",
        "cout << \" contest \" ;",
        "int gcd ( int a , int b ) ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        29,
        7
      ],
      "mod_code": [
        "bool palin ( string s ) ;",
        "cout << \" contest \" ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 7,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "bool palin ( string s ) ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        4,
        7
      ],
      "mod_code": [
        "bool palin ( string s ) ;",
        "int gcd ( int a , int b ) ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "bool palin ( string s ) ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 7,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        11,
        29
      ],
      "mod_code": [
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "cout << \" contest \" ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        29,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "cout << \" contest \" ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        29,
        4,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "cout << \" contest \" ;",
        "int gcd ( int a , int b ) ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        29,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "cout << \" contest \" ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 7,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        4,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "int gcd ( int a , int b ) ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < len / 2 ; i ++ )",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 7,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        29,
        4
      ],
      "mod_code": [
        "cout << \" contest \" ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        29,
        4,
        7
      ],
      "mod_code": [
        "cout << \" contest \" ;",
        "int gcd ( int a , int b ) ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        29,
        7
      ],
      "mod_code": [
        "cout << \" contest \" ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 7,
      "err_msg": "too few arguments to function ‘int gcd(int, int)’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;",
        "gcd ( a % b ) , b ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}