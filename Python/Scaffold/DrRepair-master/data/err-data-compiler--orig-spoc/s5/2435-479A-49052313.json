{
  "meta": {
    "index": 2435,
    "hitid": "32TMVRKDGNS4SIMI59FTWAJXLDF48J",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "479A",
    "subid": "49052313"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a , b , c = integers",
      "code": "int a , b , c ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "arr = array of 5 integers",
      "code": "int arr [ 5 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "Read a , b , c",
      "code": "cin >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set arr [ 0 ] to a + b * c",
      "code": "arr [ 0 ] = a + b * c ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set arr [ 1 ] to a * ( b + c )",
      "code": "arr [ 1 ] = a * ( b + c ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set arr [ 2 ] to a * b * c",
      "code": "arr [ 2 ] = a * b * c ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set arr [ 3 ] to ( a + b ) * c",
      "code": "arr [ 3 ] = ( a + b ) * c ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set arr [ 4 ] to a + b + c",
      "code": "arr [ 4 ] = a + b + c ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "maximum = integer , set to arr [ 0 ]",
      "code": "int maximum = arr [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 1 to 4 exclusive",
      "code": "for ( int i = 1 ; i <= 4 ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if arr [ i ] is greater than maximum , then set maximum to arr [ i ]",
      "code": "if ( arr [ i ] > maximum ) { maximum = arr [ i ] ; }",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print maximum and a new line",
      "code": "cout << maximum << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "maximum = arr [ 0 ] ;"
      ],
      "err_line": 9,
      "err_msg": "‘maximum’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 4 ; i ++ )",
        "maximum = arr [ 0 ] ;"
      ],
      "err_line": 9,
      "err_msg": "‘maximum’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 4 ; i ++ )",
        "maximum = arr [ 0 ] ;",
        "cin >> a >> b ;"
      ],
      "err_line": 9,
      "err_msg": "‘maximum’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 4 ; i ++ )",
        "maximum = arr [ 0 ] ;",
        "cin >> a >> b ;",
        "arr [ 2 ] *= c ;"
      ],
      "err_line": 9,
      "err_msg": "‘maximum’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        3,
        8
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 4 ; i ++ )",
        "maximum = arr [ 0 ] ;",
        "cin >> a >> b ;",
        "arr [ 4 ] += c + c ;"
      ],
      "err_line": 9,
      "err_msg": "‘maximum’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        3,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 4 ; i ++ )",
        "maximum = arr [ 0 ] ;",
        "cin >> a >> b ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        10,
        9,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 4 ; i ++ )",
        "maximum = arr [ 0 ] ;",
        "arr [ 2 ] *= c ;"
      ],
      "err_line": 9,
      "err_msg": "‘maximum’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        6,
        8
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 4 ; i ++ )",
        "maximum = arr [ 0 ] ;",
        "arr [ 2 ] *= c ;",
        "arr [ 4 ] += c + c ;"
      ],
      "err_line": 9,
      "err_msg": "‘maximum’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        6,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 4 ; i ++ )",
        "maximum = arr [ 0 ] ;",
        "arr [ 2 ] *= c ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        10,
        9,
        8
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 4 ; i ++ )",
        "maximum = arr [ 0 ] ;",
        "arr [ 4 ] += c + c ;"
      ],
      "err_line": 9,
      "err_msg": "‘maximum’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        8,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 4 ; i ++ )",
        "maximum = arr [ 0 ] ;",
        "arr [ 4 ] += c + c ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        10,
        9,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 4 ; i ++ )",
        "maximum = arr [ 0 ] ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        10,
        3,
        6,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 4 ; i ++ )",
        "cin >> a >> b ;",
        "arr [ 2 ] *= c ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        10,
        3,
        8,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 4 ; i ++ )",
        "cin >> a >> b ;",
        "arr [ 4 ] += c + c ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        10,
        3,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 4 ; i ++ )",
        "cin >> a >> b ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        10,
        6,
        8,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 4 ; i ++ )",
        "arr [ 2 ] *= c ;",
        "arr [ 4 ] += c + c ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        10,
        6,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 4 ; i ++ )",
        "arr [ 2 ] *= c ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        10,
        8,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 4 ; i ++ )",
        "arr [ 4 ] += c + c ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 4 ; i ++ )",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "maximum = arr [ 0 ] ;",
        "cin >> a >> b ;"
      ],
      "err_line": 9,
      "err_msg": "‘maximum’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        6
      ],
      "mod_code": [
        "maximum = arr [ 0 ] ;",
        "cin >> a >> b ;",
        "arr [ 2 ] *= c ;"
      ],
      "err_line": 9,
      "err_msg": "‘maximum’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        6,
        8
      ],
      "mod_code": [
        "maximum = arr [ 0 ] ;",
        "cin >> a >> b ;",
        "arr [ 2 ] *= c ;",
        "arr [ 4 ] += c + c ;"
      ],
      "err_line": 9,
      "err_msg": "‘maximum’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        6,
        7
      ],
      "mod_code": [
        "maximum = arr [ 0 ] ;",
        "cin >> a >> b ;",
        "arr [ 2 ] *= c ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        9,
        3,
        8
      ],
      "mod_code": [
        "maximum = arr [ 0 ] ;",
        "cin >> a >> b ;",
        "arr [ 4 ] += c + c ;"
      ],
      "err_line": 9,
      "err_msg": "‘maximum’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        8,
        7
      ],
      "mod_code": [
        "maximum = arr [ 0 ] ;",
        "cin >> a >> b ;",
        "arr [ 4 ] += c + c ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        9,
        3,
        7
      ],
      "mod_code": [
        "maximum = arr [ 0 ] ;",
        "cin >> a >> b ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "maximum = arr [ 0 ] ;",
        "arr [ 2 ] *= c ;"
      ],
      "err_line": 9,
      "err_msg": "‘maximum’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6,
        8
      ],
      "mod_code": [
        "maximum = arr [ 0 ] ;",
        "arr [ 2 ] *= c ;",
        "arr [ 4 ] += c + c ;"
      ],
      "err_line": 9,
      "err_msg": "‘maximum’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6,
        8,
        7
      ],
      "mod_code": [
        "maximum = arr [ 0 ] ;",
        "arr [ 2 ] *= c ;",
        "arr [ 4 ] += c + c ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        9,
        6,
        7
      ],
      "mod_code": [
        "maximum = arr [ 0 ] ;",
        "arr [ 2 ] *= c ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "maximum = arr [ 0 ] ;",
        "arr [ 4 ] += c + c ;"
      ],
      "err_line": 9,
      "err_msg": "‘maximum’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8,
        7
      ],
      "mod_code": [
        "maximum = arr [ 0 ] ;",
        "arr [ 4 ] += c + c ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "maximum = arr [ 0 ] ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        3,
        6,
        8,
        7
      ],
      "mod_code": [
        "cin >> a >> b ;",
        "arr [ 2 ] *= c ;",
        "arr [ 4 ] += c + c ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        3,
        6,
        7
      ],
      "mod_code": [
        "cin >> a >> b ;",
        "arr [ 2 ] *= c ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        3,
        8,
        7
      ],
      "mod_code": [
        "cin >> a >> b ;",
        "arr [ 4 ] += c + c ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "cin >> a >> b ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        6,
        8,
        7
      ],
      "mod_code": [
        "arr [ 2 ] *= c ;",
        "arr [ 4 ] += c + c ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "arr [ 2 ] *= c ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "arr [ 4 ] += c + c ;",
        "arr [ 3 ] = ( long a + b ) * c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘long’"
    }
  ]
}