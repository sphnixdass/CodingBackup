{
  "meta": {
    "index": 2059,
    "hitid": "3T5ZXGO9DEIQ1JA3CWMJCXH6GE4QZS",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "594A",
    "subid": "14549005"
  },
  "lines": [
    {
      "line": 0,
      "text": "set N to 222222",
      "code": "const int N = 222222 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int n , x [ N ] , res , c",
      "code": "int n , x [ N ] , res , c ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n inclusive , read x [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "sort elements between x + 1 and x + n + 1",
      "code": "sort ( x + 1 , x + n + 1 ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "c = ( ( n - 2 ) / 2 ) + 1",
      "code": "c = ( ( n - 2 ) / 2 ) + 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set res to x [ 1 + c ] - x [ 1 ]",
      "code": "res = x [ 1 + c ] - x [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 2 to n - c inclusive",
      "code": "for ( int i = 2 ; i <= n - c ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if x [ i + c ] - x [ i ] less than res , set res to x [ i + c ] - x [ i ]",
      "code": "if ( x [ i + c ] - x [ i ] < res ) res = x [ i + c ] - x [ i ] ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print res and a newline",
      "code": "cout << res << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "N = 222222 ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char N = 222222 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , x [ N ] , res ;"
      ],
      "err_line": 6,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "sort ( x + 1 , x + n + 1 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n - c ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "N = 222222 ;",
        "for ( i = 2 ; i <= n - c ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        5
      ],
      "mod_code": [
        "N = 222222 ;",
        "for ( i = 2 ; i <= n - c ; i ++ )",
        "sort ( x + 1 , x + n + 1 1 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        5,
        1
      ],
      "mod_code": [
        "N = 222222 ;",
        "for ( i = 2 ; i <= n - c ; i ++ )",
        "sort ( x + 1 , x + n + 1 1 ) ;",
        "int n , x [ N ] , res ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        1
      ],
      "mod_code": [
        "N = 222222 ;",
        "for ( i = 2 ; i <= n - c ; i ++ )",
        "int n , x [ N ] , res ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "N = 222222 ;",
        "sort ( x + 1 , x + n + 1 1 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        1
      ],
      "mod_code": [
        "N = 222222 ;",
        "sort ( x + 1 , x + n + 1 1 ) ;",
        "int n , x [ N ] , res ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "N = 222222 ;",
        "int n , x [ N ] , res ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n - c ; i ++ )",
        "sort ( x + 1 , x + n + 1 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        8,
        5,
        1
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n - c ; i ++ )",
        "sort ( x + 1 , x + n + 1 1 ) ;",
        "int n , x [ N ] , res ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        8,
        5,
        1,
        0
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n - c ; i ++ )",
        "sort ( x + 1 , x + n + 1 1 ) ;",
        "int n , x [ N ] , res ;",
        "char N = 222222 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        5,
        0
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n - c ; i ++ )",
        "sort ( x + 1 , x + n + 1 1 ) ;",
        "char N = 222222 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n - c ; i ++ )",
        "int n , x [ N ] , res ;"
      ],
      "err_line": 6,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        1,
        0
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n - c ; i ++ )",
        "int n , x [ N ] , res ;",
        "char N = 222222 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n - c ; i ++ )",
        "char N = 222222 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "sort ( x + 1 , x + n + 1 1 ) ;",
        "int n , x [ N ] , res ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        5,
        1,
        0
      ],
      "mod_code": [
        "sort ( x + 1 , x + n + 1 1 ) ;",
        "int n , x [ N ] , res ;",
        "char N = 222222 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "sort ( x + 1 , x + n + 1 1 ) ;",
        "char N = 222222 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "int n , x [ N ] , res ;",
        "char N = 222222 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    }
  ]
}