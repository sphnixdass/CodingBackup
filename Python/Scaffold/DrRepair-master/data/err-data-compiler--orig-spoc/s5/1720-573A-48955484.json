{
  "meta": {
    "index": 1720,
    "hitid": "371Q3BEXDH32EZPG40BO7XW7Y2SSZM",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "573A",
    "subid": "48955484"
  },
  "lines": [
    {
      "line": 0,
      "text": "create const int mx5 = 1e5 + 5",
      "code": "const int mx5 = 1e5 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int array ar of size mx5",
      "code": "int arr [ mx5 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n , read arr [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create integer gcd = 0",
      "code": "int gcd = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to n , set gcd to __gcd ( gcd , arr [ i ] )",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { gcd = __gcd ( gcd , arr [ i ] ) ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 1 to n",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "let int k = arr [ i ] / gcd",
      "code": "int k = arr [ i ] / gcd ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "while k modulo 2 is 0 , set k to k / 2",
      "code": "while ( k % 2 == 0 ) { k /= 2 ; }",
      "indent": 2
    },
    {
      "line": 11,
      "text": "while k % 3 is 0 , set k to k / 3",
      "code": "while ( k % 3 == 0 ) { k /= 3 ; }",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if k is not 1",
      "code": "if ( k != 1 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print \" No \"",
      "code": "cout << \" No \" << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print \" Yes \"",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int ar [ mx5 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "n = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const int MOD = 1e5 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char ar [ mx5 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "n ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "long long gcd = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘__gcd(long long int&, int&)’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "n = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "n = 1 ;",
        "cout << n << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        0
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "n = 1 ;",
        "cout << n << endl ;",
        "const int MOD = 1e5 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        12
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "n = 1 ;",
        "cout << n << endl ;",
        "if ( k )"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        9
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "n = 1 ;",
        "cout << n << endl ;",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        0
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "n = 1 ;",
        "const int MOD = 1e5 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        0,
        12
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "n = 1 ;",
        "const int MOD = 1e5 + 5 ;",
        "if ( k )"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        0,
        9
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "n = 1 ;",
        "const int MOD = 1e5 + 5 ;",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        12
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "n = 1 ;",
        "if ( k )"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        12,
        9
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "n = 1 ;",
        "if ( k )",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        9
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "n = 1 ;",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "cout << n << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4,
        0
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "cout << n << endl ;",
        "const int MOD = 1e5 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4,
        0,
        12
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "cout << n << endl ;",
        "const int MOD = 1e5 + 5 ;",
        "if ( k )"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4,
        0,
        9
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "cout << n << endl ;",
        "const int MOD = 1e5 + 5 ;",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4,
        12
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "cout << n << endl ;",
        "if ( k )"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4,
        12,
        9
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "cout << n << endl ;",
        "if ( k )",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4,
        9
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "cout << n << endl ;",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "const int MOD = 1e5 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        0,
        12
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "const int MOD = 1e5 + 5 ;",
        "if ( k )"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        0,
        12,
        9
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "const int MOD = 1e5 + 5 ;",
        "if ( k )",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        0,
        9
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "const int MOD = 1e5 + 5 ;",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "if ( k )"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        9
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "if ( k )",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int ar [ mx5 ] ;",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "n = 1 ;",
        "cout << n << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        0
      ],
      "mod_code": [
        "n = 1 ;",
        "cout << n << endl ;",
        "const int MOD = 1e5 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        0,
        12
      ],
      "mod_code": [
        "n = 1 ;",
        "cout << n << endl ;",
        "const int MOD = 1e5 + 5 ;",
        "if ( k )"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        0,
        9
      ],
      "mod_code": [
        "n = 1 ;",
        "cout << n << endl ;",
        "const int MOD = 1e5 + 5 ;",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        12
      ],
      "mod_code": [
        "n = 1 ;",
        "cout << n << endl ;",
        "if ( k )"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        12,
        9
      ],
      "mod_code": [
        "n = 1 ;",
        "cout << n << endl ;",
        "if ( k )",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        9
      ],
      "mod_code": [
        "n = 1 ;",
        "cout << n << endl ;",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "n = 1 ;",
        "const int MOD = 1e5 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        12
      ],
      "mod_code": [
        "n = 1 ;",
        "const int MOD = 1e5 + 5 ;",
        "if ( k )"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        12,
        9
      ],
      "mod_code": [
        "n = 1 ;",
        "const int MOD = 1e5 + 5 ;",
        "if ( k )",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        9
      ],
      "mod_code": [
        "n = 1 ;",
        "const int MOD = 1e5 + 5 ;",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "n = 1 ;",
        "if ( k )"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        9
      ],
      "mod_code": [
        "n = 1 ;",
        "if ( k )",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "n = 1 ;",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "cout << n << endl ;",
        "const int MOD = 1e5 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        0,
        12
      ],
      "mod_code": [
        "cout << n << endl ;",
        "const int MOD = 1e5 + 5 ;",
        "if ( k )"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        0,
        12,
        9
      ],
      "mod_code": [
        "cout << n << endl ;",
        "const int MOD = 1e5 + 5 ;",
        "if ( k )",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        0,
        9
      ],
      "mod_code": [
        "cout << n << endl ;",
        "const int MOD = 1e5 + 5 ;",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        12,
        9
      ],
      "mod_code": [
        "cout << n << endl ;",
        "if ( k )",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "cout << n << endl ;",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "const int MOD = 1e5 + 5 ;",
        "if ( k )"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        9
      ],
      "mod_code": [
        "const int MOD = 1e5 + 5 ;",
        "if ( k )",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "const int MOD = 1e5 + 5 ;",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 1,
      "err_msg": "‘mx5’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "if ( k )",
        "int * k = arr [ i ] / gcd ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    }
  ]
}