{
  "meta": {
    "index": 2030,
    "hitid": "3XBYQ44Z6PYZZ4XQIDW7IYYBJJ6TWQ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1027A",
    "subid": "48743578"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare new long longs n , m and ans ; declare long long array a with 1000 elements",
      "code": "long long n , m , ans , a [ 1000 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long longs sum and T",
      "code": "long long sum , T ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare new string variable s",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create new boolean result",
      "code": "bool result ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "integer function read",
      "code": "int read ( )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "declare int variables v = 0 and f = 1",
      "code": "int v = 0 , f = 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create new character c = character from the input",
      "code": "char c = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while c < 48 or 57 < c",
      "code": "while ( c < 48 || 57 < c )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if c is equal to ' - ' , assign - 1 to f",
      "code": "if ( c == ' - ' ) f = - 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "change the value of c to the character from the input",
      "code": "c = getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "while 48 < = c and c < = 57 , change the value of v to v < < 3 ) + v + v + c - 48 , and read the new value for c from the input",
      "code": "while ( 48 <= c && c <= 57 ) v = ( v << 3 ) + v + v + c - 48 , c = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "return v * f",
      "code": "return v * f ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 14,
      "text": "ac is a bool function with string argument s and int argument n",
      "code": "bool ac ( string s , int n )",
      "indent": 0
    },
    {
      "line": 15,
      "text": "char pointer * pre = & s [ 0 ]",
      "code": "char * pre = & s [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "char pointer * end = & s [ n - 1 ]",
      "code": "char * end = & s [ n - 1 ] ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "while pre < end",
      "code": "while ( pre < end )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if abs ( ( * pre ) - ( * end ) ) = = 0 | | abs ( ( * pre ) - ( * end ) ) = 2",
      "code": "if ( abs ( ( * pre ) - ( * end ) ) == 0 || abs ( ( * pre ) - ( * end ) ) == 2 )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "increment pre",
      "code": "pre ++ ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "decrement end by one",
      "code": "end -- ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 22,
      "text": "return false",
      "code": "return false ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "return true",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 28,
      "text": "read T and keep looping",
      "code": "while ( cin >> T )",
      "indent": 1
    },
    {
      "line": 29,
      "text": "decrement T and loop further , while T ! = 0",
      "code": "while ( T -- )",
      "indent": 2
    },
    {
      "line": 30,
      "text": "read n from the user input",
      "code": "cin >> n ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "read s from the input",
      "code": "cin >> s ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "assign the result of ac ( s , n ) to result",
      "code": "result = ac ( s , n ) ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "if result is true",
      "code": "if ( result )",
      "indent": 3
    },
    {
      "line": 34,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 4
    },
    {
      "line": 35,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 36,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 4
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long n , a [ 1000 ] , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long sum = T ;"
      ],
      "err_line": 1,
      "err_msg": "‘T’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int read ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "c = input ;"
      ],
      "err_line": 9,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "bool ac ( int s , int n )"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "char pre = & s [ 0 ] ;"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "char * end = s [ n - 1 ] ;"
      ],
      "err_line": 16,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "s . get ( ) ;"
      ],
      "err_line": 31,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘get’"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "result = ac ( n , n ) ;"
      ],
      "err_line": 32,
      "err_msg": "could not convert ‘n’ from ‘long long int’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "if ( result ) result ++ ;"
      ],
      "err_line": 35,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        18,
        29,
        14
      ],
      "mod_code": [
        "if ( abs ( ( * pre ) - ( * end ) ) == 0 || abs ( ( * pre ) - ( * end ) ) )",
        "while ( T = 0 )",
        "bool ac ( int s , int n )"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        29,
        14,
        0
      ],
      "mod_code": [
        "if ( abs ( ( * pre ) - ( * end ) ) == 0 || abs ( ( * pre ) - ( * end ) ) )",
        "while ( T = 0 )",
        "bool ac ( int s , int n )",
        "long long n , a [ 1000 ] , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        18,
        29,
        14,
        17
      ],
      "mod_code": [
        "if ( abs ( ( * pre ) - ( * end ) ) == 0 || abs ( ( * pre ) - ( * end ) ) )",
        "while ( T = 0 )",
        "bool ac ( int s , int n )",
        "while ( pre < 0 )"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        29,
        0
      ],
      "mod_code": [
        "if ( abs ( ( * pre ) - ( * end ) ) == 0 || abs ( ( * pre ) - ( * end ) ) )",
        "while ( T = 0 )",
        "long long n , a [ 1000 ] , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        18,
        29,
        0,
        17
      ],
      "mod_code": [
        "if ( abs ( ( * pre ) - ( * end ) ) == 0 || abs ( ( * pre ) - ( * end ) ) )",
        "while ( T = 0 )",
        "long long n , a [ 1000 ] , ans , ans ;",
        "while ( pre < 0 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        18,
        14
      ],
      "mod_code": [
        "if ( abs ( ( * pre ) - ( * end ) ) == 0 || abs ( ( * pre ) - ( * end ) ) )",
        "bool ac ( int s , int n )"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        14,
        0
      ],
      "mod_code": [
        "if ( abs ( ( * pre ) - ( * end ) ) == 0 || abs ( ( * pre ) - ( * end ) ) )",
        "bool ac ( int s , int n )",
        "long long n , a [ 1000 ] , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        18,
        14,
        0,
        17
      ],
      "mod_code": [
        "if ( abs ( ( * pre ) - ( * end ) ) == 0 || abs ( ( * pre ) - ( * end ) ) )",
        "bool ac ( int s , int n )",
        "long long n , a [ 1000 ] , ans , ans ;",
        "while ( pre < 0 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        18,
        14,
        17
      ],
      "mod_code": [
        "if ( abs ( ( * pre ) - ( * end ) ) == 0 || abs ( ( * pre ) - ( * end ) ) )",
        "bool ac ( int s , int n )",
        "while ( pre < 0 )"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        0
      ],
      "mod_code": [
        "if ( abs ( ( * pre ) - ( * end ) ) == 0 || abs ( ( * pre ) - ( * end ) ) )",
        "long long n , a [ 1000 ] , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        18,
        0,
        17
      ],
      "mod_code": [
        "if ( abs ( ( * pre ) - ( * end ) ) == 0 || abs ( ( * pre ) - ( * end ) ) )",
        "long long n , a [ 1000 ] , ans , ans ;",
        "while ( pre < 0 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        29,
        14
      ],
      "mod_code": [
        "while ( T = 0 )",
        "bool ac ( int s , int n )"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        29,
        14,
        18
      ],
      "mod_code": [
        "while ( T = 0 )",
        "bool ac ( int s , int n )",
        "if ( abs ( ( * pre ) - ( * end ) ) )"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        29,
        14,
        18,
        0
      ],
      "mod_code": [
        "while ( T = 0 )",
        "bool ac ( int s , int n )",
        "if ( abs ( ( * pre ) - ( * end ) ) )",
        "long long n , a [ 1000 ] , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        29,
        14,
        18,
        17
      ],
      "mod_code": [
        "while ( T = 0 )",
        "bool ac ( int s , int n )",
        "if ( abs ( ( * pre ) - ( * end ) ) )",
        "while ( pre < 0 )"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        29,
        14,
        0
      ],
      "mod_code": [
        "while ( T = 0 )",
        "bool ac ( int s , int n )",
        "long long n , a [ 1000 ] , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        29,
        14,
        0,
        17
      ],
      "mod_code": [
        "while ( T = 0 )",
        "bool ac ( int s , int n )",
        "long long n , a [ 1000 ] , ans , ans ;",
        "while ( pre < 0 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        29,
        14,
        17
      ],
      "mod_code": [
        "while ( T = 0 )",
        "bool ac ( int s , int n )",
        "while ( pre < 0 )"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        29,
        18,
        0
      ],
      "mod_code": [
        "while ( T = 0 )",
        "if ( abs ( ( * pre ) - ( * end ) ) )",
        "long long n , a [ 1000 ] , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        29,
        18,
        0,
        17
      ],
      "mod_code": [
        "while ( T = 0 )",
        "if ( abs ( ( * pre ) - ( * end ) ) )",
        "long long n , a [ 1000 ] , ans , ans ;",
        "while ( pre < 0 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        29,
        0
      ],
      "mod_code": [
        "while ( T = 0 )",
        "long long n , a [ 1000 ] , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        29,
        0,
        17
      ],
      "mod_code": [
        "while ( T = 0 )",
        "long long n , a [ 1000 ] , ans , ans ;",
        "while ( pre < 0 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        14,
        18
      ],
      "mod_code": [
        "bool ac ( int s , int n )",
        "if ( abs ( ( * pre ) - ( * end ) ) )"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        18,
        0
      ],
      "mod_code": [
        "bool ac ( int s , int n )",
        "if ( abs ( ( * pre ) - ( * end ) ) )",
        "long long n , a [ 1000 ] , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        14,
        18,
        0,
        17
      ],
      "mod_code": [
        "bool ac ( int s , int n )",
        "if ( abs ( ( * pre ) - ( * end ) ) )",
        "long long n , a [ 1000 ] , ans , ans ;",
        "while ( pre < 0 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        14,
        18,
        17
      ],
      "mod_code": [
        "bool ac ( int s , int n )",
        "if ( abs ( ( * pre ) - ( * end ) ) )",
        "while ( pre < 0 )"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        0
      ],
      "mod_code": [
        "bool ac ( int s , int n )",
        "long long n , a [ 1000 ] , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        14,
        0,
        17
      ],
      "mod_code": [
        "bool ac ( int s , int n )",
        "long long n , a [ 1000 ] , ans , ans ;",
        "while ( pre < 0 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        14,
        17
      ],
      "mod_code": [
        "bool ac ( int s , int n )",
        "while ( pre < 0 )"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18,
        0
      ],
      "mod_code": [
        "if ( abs ( ( * pre ) - ( * end ) ) )",
        "long long n , a [ 1000 ] , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        18,
        0,
        17
      ],
      "mod_code": [
        "if ( abs ( ( * pre ) - ( * end ) ) )",
        "long long n , a [ 1000 ] , ans , ans ;",
        "while ( pre < 0 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "long long n , a [ 1000 ] , ans , ans ;",
        "while ( pre < 0 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int ans’"
    }
  ]
}