{
  "meta": {
    "index": 536,
    "hitid": "3Z56AA6EK4UXSUS0IYIRYQ4619HM6H",
    "workerid": "AIWEXPJAU66D9",
    "probid": "821A",
    "subid": "47705331"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare new constant integer called MAX_N = 60",
      "code": "const int MAX_N = 60 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer n and 2d integer array grid MAX_N by MAX_N",
      "code": "int n , grid [ MAX_N ] [ MAX_N ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "boolean function check with int arguments x and y",
      "code": "bool check ( int x , int y )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "if grid [ x ] [ y ] is equal to 1 , return true",
      "code": "if ( grid [ x ] [ y ] == 1 ) return true ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "start for loop from s = 0 to n exclusive incrementing s",
      "code": "for ( int s = 0 ; s < n ; s ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for t from 0 to n exclusive",
      "code": "for ( int t = 0 ; t < n ; t ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "return true if grid [ x ] [ y ] = grid [ x ] [ s ] + grid [ t ] [ y ]",
      "code": "if ( grid [ x ] [ y ] == grid [ x ] [ s ] + grid [ t ] [ y ] ) return true ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "return false",
      "code": "return false ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 10,
      "text": "read variable n from the input",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "increment r in a for loop from 0 to n exclusive",
      "code": "for ( int r = 0 ; r < n ; r ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for c from 0 to n exclusive , read grid [ r ] [ c ]",
      "code": "for ( int c = 0 ; c < n ; c ++ ) cin >> grid [ r ] [ c ] ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "define new boolean ok = true",
      "code": "bool ok = true ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "start for loop from r = 0 to n exclusive incrementing r",
      "code": "for ( int r = 0 ; r < n ; r ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for c = 0 to n exclusive , change ok to ok & = check ( r , c )",
      "code": "for ( int c = 0 ; c < n ; c ++ ) ok &= check ( r , c ) ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print \" Yes \" if ok is true , or \" No \" otherwise",
      "code": "puts ( ok ? \" Yes \" : \" No \" ) ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "return ( 0 )",
      "code": "return ( 0 ) ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , grid [ MAX_N ] ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( s = 0 ; s < n ; s ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( t = 0 ; t < n ; t ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( c = 0 ; c < n ; c ++ ) { cin >> grid [ r ] [ c ] ; }"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( r = 0 ; r < n ; r ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘r’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "return ( 0 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15,
        5
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "for ( t = 0 ; t < n ; t ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15,
        5,
        16
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "for ( t = 0 ; t < n ; t ++ )",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15,
        5,
        17
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "for ( t = 0 ; t < n ; t ++ )",
        "return ( 0 ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15,
        5,
        2
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "for ( t = 0 ; t < n ; t ++ )",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        15,
        16
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15,
        16,
        17
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;",
        "return ( 0 ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15,
        16,
        2
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        15,
        17
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "return ( 0 ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15,
        17,
        2
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "return ( 0 ) ) ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        15,
        2
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "for ( t = 0 ; t < n ; t ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        16
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "for ( t = 0 ; t < n ; t ++ )",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        16,
        17
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "for ( t = 0 ; t < n ; t ++ )",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;",
        "return ( 0 ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        16,
        2
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "for ( t = 0 ; t < n ; t ++ )",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        17
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "for ( t = 0 ; t < n ; t ++ )",
        "return ( 0 ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        17,
        2
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "for ( t = 0 ; t < n ; t ++ )",
        "return ( 0 ) ) ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        5,
        2
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "for ( t = 0 ; t < n ; t ++ )",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16,
        17
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;",
        "return ( 0 ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        16,
        17,
        2
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;",
        "return ( 0 ) ) ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        2
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        17
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "return ( 0 ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        17,
        2
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "return ( 0 ) ) ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int grid [ MAX_N ] [ MAX_N ] ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        5
      ],
      "mod_code": [
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "for ( t = 0 ; t < n ; t ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        5,
        16
      ],
      "mod_code": [
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "for ( t = 0 ; t < n ; t ++ )",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        5,
        16,
        17
      ],
      "mod_code": [
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "for ( t = 0 ; t < n ; t ++ )",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;",
        "return ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        5,
        16,
        2
      ],
      "mod_code": [
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "for ( t = 0 ; t < n ; t ++ )",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        5,
        17
      ],
      "mod_code": [
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "for ( t = 0 ; t < n ; t ++ )",
        "return ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        5,
        17,
        2
      ],
      "mod_code": [
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "for ( t = 0 ; t < n ; t ++ )",
        "return ( 0 ) ) ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        5,
        2
      ],
      "mod_code": [
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "for ( t = 0 ; t < n ; t ++ )",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        16,
        17
      ],
      "mod_code": [
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;",
        "return ( 0 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        2
      ],
      "mod_code": [
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;",
        "return ( 0 ) ) ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        16,
        2
      ],
      "mod_code": [
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        17
      ],
      "mod_code": [
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "return ( 0 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        15,
        17,
        2
      ],
      "mod_code": [
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "return ( 0 ) ) ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        2
      ],
      "mod_code": [
        "for ( int c = 0 ; c < n ; c ++ ) ok |= check ( r , c ) ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "for ( t = 0 ; t < n ; t ++ )",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        16,
        17
      ],
      "mod_code": [
        "for ( t = 0 ; t < n ; t ++ )",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;",
        "return ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        16,
        17,
        2
      ],
      "mod_code": [
        "for ( t = 0 ; t < n ; t ++ )",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;",
        "return ( 0 ) ) ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        16,
        2
      ],
      "mod_code": [
        "for ( t = 0 ; t < n ; t ++ )",
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "for ( t = 0 ; t < n ; t ++ )",
        "return ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        2
      ],
      "mod_code": [
        "for ( t = 0 ; t < n ; t ++ )",
        "return ( 0 ) ) ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "for ( t = 0 ; t < n ; t ++ )",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        17
      ],
      "mod_code": [
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;",
        "return ( 0 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        17,
        2
      ],
      "mod_code": [
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;",
        "return ( 0 ) ) ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        2
      ],
      "mod_code": [
        "cout << ( ok ? \" Yes \" : \" Yes \" ) << endl ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        2
      ],
      "mod_code": [
        "return ( 0 ) ) ;",
        "bool check ( int x , int y ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}