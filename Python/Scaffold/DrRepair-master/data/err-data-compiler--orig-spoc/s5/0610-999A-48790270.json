{
  "meta": {
    "index": 610,
    "hitid": "3QI9WAYOGQ50QP552VEDAZ3CTYT6S7",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "999A",
    "subid": "48790270"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "m , n , a , p , cnt , k , i = int with p = 1 and cnt = 0 and k = 0",
      "code": "int m , n , a , p = 1 , cnt = 0 , k = 0 , i ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read m then n",
      "code": "cin >> m >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "arr = int array of size m + 1",
      "code": "int arr [ m + 1 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read m values into arr",
      "code": "for ( int x = 0 ; x < m ; x ++ ) cin >> arr [ x ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to m",
      "code": "for ( i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if arr [ i ] is less or equal to n",
      "code": "if ( arr [ i ] <= n )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "break the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for j = m - 1 to i decrementing j",
      "code": "for ( int j = m - 1 ; j > i ; j -- )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if arr [ j ] is less or equal to n",
      "code": "if ( arr [ j ] <= n )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 16,
      "text": "break the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print cnt",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int m , n , a , p = 0 , p = 0 , k = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( j = m - 1 ; j > i ; j -- )"
      ],
      "err_line": 12,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ )",
        "int m , n , a , p = 0 , p = 0 , k = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        1,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ )",
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "if ( arr [ j ] <= ' n ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        1,
        13,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ )",
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "if ( arr [ j ] <= ' n ' )",
        "if ( arr [ i ] <= ' n ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        1,
        13,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ )",
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "if ( arr [ j ] <= ' n ' )",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        1,
        13,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ )",
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "if ( arr [ j ] <= ' n ' )",
        "break the ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        1,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ )",
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "if ( arr [ i ] <= ' n ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        1,
        6,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ )",
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "if ( arr [ i ] <= ' n ' )",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        1,
        6,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ )",
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "if ( arr [ i ] <= ' n ' )",
        "break the ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        1,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ )",
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        1,
        2,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ )",
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "cin >> n >> n ;",
        "break the ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        1,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ )",
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "break the ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        13,
        6,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ )",
        "if ( arr [ j ] <= ' n ' )",
        "if ( arr [ i ] <= ' n ' )",
        "break the ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        5,
        13,
        2,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ )",
        "if ( arr [ j ] <= ' n ' )",
        "cin >> n >> n ;",
        "break the ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        5,
        13,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ )",
        "if ( arr [ j ] <= ' n ' )",
        "break the ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        5,
        6,
        2,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ )",
        "if ( arr [ i ] <= ' n ' )",
        "cin >> n >> n ;",
        "break the ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        5,
        6,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ )",
        "if ( arr [ i ] <= ' n ' )",
        "break the ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        5,
        2,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ )",
        "cin >> n >> n ;",
        "break the ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ )",
        "break the ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "if ( arr [ j ] <= ' n ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        13,
        6
      ],
      "mod_code": [
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "if ( arr [ j ] <= ' n ' )",
        "if ( arr [ i ] <= ' n ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        13,
        6,
        2
      ],
      "mod_code": [
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "if ( arr [ j ] <= ' n ' )",
        "if ( arr [ i ] <= ' n ' )",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        13,
        6,
        16
      ],
      "mod_code": [
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "if ( arr [ j ] <= ' n ' )",
        "if ( arr [ i ] <= ' n ' )",
        "break the ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        13,
        2
      ],
      "mod_code": [
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "if ( arr [ j ] <= ' n ' )",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        13,
        2,
        16
      ],
      "mod_code": [
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "if ( arr [ j ] <= ' n ' )",
        "cin >> n >> n ;",
        "break the ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        13,
        16
      ],
      "mod_code": [
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "if ( arr [ j ] <= ' n ' )",
        "break the ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "if ( arr [ i ] <= ' n ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        6,
        2
      ],
      "mod_code": [
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "if ( arr [ i ] <= ' n ' )",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        6,
        2,
        16
      ],
      "mod_code": [
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "if ( arr [ i ] <= ' n ' )",
        "cin >> n >> n ;",
        "break the ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        6,
        16
      ],
      "mod_code": [
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "if ( arr [ i ] <= ' n ' )",
        "break the ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        2,
        16
      ],
      "mod_code": [
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "cin >> n >> n ;",
        "break the ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "int m , n , a , p = 0 , p = 0 , k = 0 ;",
        "break the ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        13,
        6,
        2,
        16
      ],
      "mod_code": [
        "if ( arr [ j ] <= ' n ' )",
        "if ( arr [ i ] <= ' n ' )",
        "cin >> n >> n ;",
        "break the ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        13,
        6,
        16
      ],
      "mod_code": [
        "if ( arr [ j ] <= ' n ' )",
        "if ( arr [ i ] <= ' n ' )",
        "break the ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        13,
        2,
        16
      ],
      "mod_code": [
        "if ( arr [ j ] <= ' n ' )",
        "cin >> n >> n ;",
        "break the ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "if ( arr [ j ] <= ' n ' )",
        "break the ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        6,
        2,
        16
      ],
      "mod_code": [
        "if ( arr [ i ] <= ' n ' )",
        "cin >> n >> n ;",
        "break the ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "if ( arr [ i ] <= ' n ' )",
        "break the ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "break the ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘the’"
    }
  ]
}