{
  "meta": {
    "index": 2311,
    "hitid": "3JUDR1D0D6L0V87RNPD5PM7ZV5A2Q1",
    "workerid": "AIWEXPJAU66D9",
    "probid": "713A",
    "subid": "47488567"
  },
  "lines": [
    {
      "line": 0,
      "text": "create new constant integer maxn = 1e5 + 7",
      "code": "const int maxn = ( int ) 1e5 + 7 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new constant integer called INF with value 1e9 + 7",
      "code": "const int INF = ( int ) 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare constant double pi = acos of - 1",
      "code": "const double pi = acos ( - 1 ) ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "eps is a new double constance with value 1e - 9",
      "code": "const double eps = 1e-9 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare constant integer called base with value 1000 * 1000 * 1000",
      "code": "const int base = 1000 * 1000 * 1000 ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "create long longs n , m , pos and w",
      "code": "long long n , m , pos , w ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "mp = map from strings to integers",
      "code": "map < string , int > mp ;",
      "indent": 0
    },
    {
      "line": 7,
      "text": "ans is a new array of strings with size maxn",
      "code": "string ans [ maxn ] ;",
      "indent": 0
    },
    {
      "line": 8,
      "text": "string function lol with long long argument x",
      "code": "string lol ( long long x )",
      "indent": 0
    },
    {
      "line": 9,
      "text": "res is a new string variable = \" \"",
      "code": "string res = \" \" ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "while x > 0",
      "code": "while ( x > 0 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if x is even",
      "code": "if ( x % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "append ' 0 ' to res",
      "code": "res += ' 0 ' ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "append ' 1 ' to res",
      "code": "res += ' 1 ' ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "change the value of x to x divided by 10",
      "code": "x /= 10 ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "reverse res",
      "code": "reverse ( res . begin ( ) , res . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "return res",
      "code": "return res ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 22,
      "text": "create integer var called mx with value - INF",
      "code": "int mx = - INF ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "create new array of characters ch with maxn elements",
      "code": "char ch [ maxn ] ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "read variable n from the input",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "for i from 1 to n inclusive incrementing i",
      "code": "for ( int i = 1 ; i <= n ; ++ i )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "create new long long x",
      "code": "long long x ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "read user input to ch [ i ] and x",
      "code": "cin >> ch [ i ] >> x ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "change the value of ans [ i ] to lol ( x )",
      "code": "ans [ i ] = lol ( x ) ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "set max to max of mx and length of ans [ i ]",
      "code": "mx = max ( mx , ( int ) ans [ i ] . size ( ) ) ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "start for loop from i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; ++ i )",
      "indent": 1
    },
    {
      "line": 32,
      "text": "if length of ans [ i ] ! = mx",
      "code": "if ( ans [ i ] . size ( ) != mx )",
      "indent": 2
    },
    {
      "line": 33,
      "text": "while length of ans [ i ] < mx , prepend ' 0 ' to ans [ i ]",
      "code": "while ( ans [ i ] . size ( ) < mx ) { ans [ i ] = ' 0 ' + ans [ i ] ; }",
      "indent": 3
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 36,
      "text": "for i from 1 to n inclusive incrementing i",
      "code": "for ( int i = 1 ; i <= n ; ++ i )",
      "indent": 1
    },
    {
      "line": 37,
      "text": "if ch [ i ] is equal to ' + '",
      "code": "if ( ch [ i ] == ' + ' )",
      "indent": 2
    },
    {
      "line": 38,
      "text": "increase mp [ ans [ i ] ]",
      "code": "mp [ ans [ i ] ] ++ ;",
      "indent": 3
    },
    {
      "line": 39,
      "text": "else if ch [ i ] = ' - '",
      "code": "else if ( ch [ i ] == ' - ' )",
      "indent": 2
    },
    {
      "line": 40,
      "text": "decrement mp [ ans [ i ] ]",
      "code": "mp [ ans [ i ] ] -- ;",
      "indent": 3
    },
    {
      "line": 41,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 42,
      "text": "print mp [ ans [ i ] ]",
      "code": "cout << mp [ ans [ i ] ] << endl ;",
      "indent": 3
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "if ( ans . length ( ) != mx )"
      ],
      "err_line": 32,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "const int INF declare 1e9 + 7 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "const int base declare 1000 * 1000 * 1000 ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "map < strings , int > mp ;"
      ],
      "err_line": 6,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "string lol ( long long x ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int res = \" \" ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘const char*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "int var = - INF ;"
      ],
      "err_line": 29,
      "err_msg": "‘mx’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "char ch [ maxn maxn ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘]’ before ‘maxn’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 25,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "ans [ i ] = lol ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘std::__cxx11::string (*)(long long int) {aka std::__cxx11::basic_string<char> (*)(long long int)}’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "max = max ( mx , ans . size ( ) ) ;"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘size’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 31,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "if ( ans . length ( ) != mx ) != mx )"
      ],
      "err_line": 32,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 36,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "if ( ch [ i ] ] == ' + ' )"
      ],
      "err_line": 37,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        29,
        32
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "if ( ans . length ( ) != mx )"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        29,
        32,
        33
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "if ( ans . length ( ) != mx )",
        "while ( ans [ i ] . length ( ) < mx ) { ans [ i ] . length ( ) ; }"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        29,
        32,
        33,
        36
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "if ( ans . length ( ) != mx )",
        "while ( ans [ i ] . length ( ) < mx ) { ans [ i ] . length ( ) ; }",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        29,
        32,
        33,
        31
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "if ( ans . length ( ) != mx )",
        "while ( ans [ i ] . length ( ) < mx ) { ans [ i ] . length ( ) ; }",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        29,
        32,
        36
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "if ( ans . length ( ) != mx )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        29,
        32,
        36,
        31
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "if ( ans . length ( ) != mx )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        29,
        32,
        36,
        33
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "if ( ans . length ( ) != mx )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( ans [ i ] . length ( ) < mx ) ans [ i ] . size ( ) ;"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        29,
        32,
        31
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "if ( ans . length ( ) != mx )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        29,
        32,
        31,
        33
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "if ( ans . length ( ) != mx )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( ans [ i ] . length ( ) < mx ) ans [ i ] . size ( ) ;"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        29,
        32,
        33
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "if ( ans . length ( ) != mx )",
        "while ( ans [ i ] . length ( ) < mx ) ans [ i ] . size ( ) ;"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        29,
        33
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "while ( ans [ i ] . length ( ) < mx ) { ans [ i ] . length ( ) ; }"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        29,
        33,
        36
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "while ( ans [ i ] . length ( ) < mx ) { ans [ i ] . length ( ) ; }",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        29,
        33,
        36,
        31
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "while ( ans [ i ] . length ( ) < mx ) { ans [ i ] . length ( ) ; }",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        29,
        33,
        31
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "while ( ans [ i ] . length ( ) < mx ) { ans [ i ] . length ( ) ; }",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        29,
        36
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        29,
        36,
        31
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        29,
        36,
        31,
        33
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( ans [ i ] . length ( ) < mx ) ans [ i ] . size ( ) ;"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        29,
        36,
        33
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( ans [ i ] . length ( ) < mx ) ans [ i ] . size ( ) ;"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        29,
        31
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        29,
        31,
        33
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( ans [ i ] . length ( ) < mx ) ans [ i ] . size ( ) ;"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        29,
        33
      ],
      "mod_code": [
        "max = max ( mx , ans . length ( ) ) ;",
        "while ( ans [ i ] . length ( ) < mx ) ans [ i ] . size ( ) ;"
      ],
      "err_line": 29,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        32,
        33
      ],
      "mod_code": [
        "if ( ans . length ( ) != mx )",
        "while ( ans [ i ] . length ( ) < mx ) { ans [ i ] . length ( ) ; }"
      ],
      "err_line": 32,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        32,
        33,
        36
      ],
      "mod_code": [
        "if ( ans . length ( ) != mx )",
        "while ( ans [ i ] . length ( ) < mx ) { ans [ i ] . length ( ) ; }",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 32,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        32,
        33,
        36,
        31
      ],
      "mod_code": [
        "if ( ans . length ( ) != mx )",
        "while ( ans [ i ] . length ( ) < mx ) { ans [ i ] . length ( ) ; }",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 31,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        32,
        33,
        31
      ],
      "mod_code": [
        "if ( ans . length ( ) != mx )",
        "while ( ans [ i ] . length ( ) < mx ) { ans [ i ] . length ( ) ; }",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 31,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        32,
        36
      ],
      "mod_code": [
        "if ( ans . length ( ) != mx )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 32,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        32,
        36,
        31
      ],
      "mod_code": [
        "if ( ans . length ( ) != mx )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 31,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        32,
        36,
        31,
        33
      ],
      "mod_code": [
        "if ( ans . length ( ) != mx )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( ans [ i ] . length ( ) < mx ) ans [ i ] . size ( ) ;"
      ],
      "err_line": 31,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        32,
        36,
        33
      ],
      "mod_code": [
        "if ( ans . length ( ) != mx )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( ans [ i ] . length ( ) < mx ) ans [ i ] . size ( ) ;"
      ],
      "err_line": 32,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        32,
        31
      ],
      "mod_code": [
        "if ( ans . length ( ) != mx )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 31,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        32,
        31,
        33
      ],
      "mod_code": [
        "if ( ans . length ( ) != mx )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( ans [ i ] . length ( ) < mx ) ans [ i ] . size ( ) ;"
      ],
      "err_line": 31,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        32,
        33
      ],
      "mod_code": [
        "if ( ans . length ( ) != mx )",
        "while ( ans [ i ] . length ( ) < mx ) ans [ i ] . size ( ) ;"
      ],
      "err_line": 32,
      "err_msg": "request for member ‘length’ in ‘ans’, which is of non-class type ‘std::__cxx11::string [100007] {aka std::__cxx11::basic_string<char> [100007]}’"
    },
    {
      "mod_line": [
        33,
        36
      ],
      "mod_code": [
        "while ( ans [ i ] . length ( ) < mx ) { ans [ i ] . length ( ) ; }",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 36,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        33,
        36,
        31
      ],
      "mod_code": [
        "while ( ans [ i ] . length ( ) < mx ) { ans [ i ] . length ( ) ; }",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 31,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        33,
        31
      ],
      "mod_code": [
        "while ( ans [ i ] . length ( ) < mx ) { ans [ i ] . length ( ) ; }",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 31,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        36,
        31
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 31,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        36,
        31,
        33
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( ans [ i ] . length ( ) < mx ) ans [ i ] . size ( ) ;"
      ],
      "err_line": 31,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        36,
        33
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( ans [ i ] . length ( ) < mx ) ans [ i ] . size ( ) ;"
      ],
      "err_line": 36,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        31,
        33
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( ans [ i ] . length ( ) < mx ) ans [ i ] . size ( ) ;"
      ],
      "err_line": 31,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}