{
  "meta": {
    "index": 2183,
    "hitid": "367O8HRHKG2MB21RJ7LYD1JYX7S4SP",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "540A",
    "subid": "48320592"
  },
  "lines": [
    {
      "line": 0,
      "text": "simb = const char array with values ' 1 ' , ' 2 ' , ' 3 ' , ' 4 ' , ' 5 ' , ' 6 ' , ' 7 ' , ' 8 ' , ' 9 '",
      "code": "const char simb [ ] = { ' 1 ' , ' 2 ' , ' 3 ' , ' 4 ' , ' 5 ' , ' 6 ' , ' 7 ' , ' 8 ' , ' 9 ' } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "D = ifstream initialized with \" duom . txt \"",
      "code": "ifstream D ( \" duom.txt \" ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "R = ofstream initialized with \" rez . txt \"",
      "code": "ofstream R ( \" rez.txt \" ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "mas = int array of size 1000",
      "code": "int mas [ 1000 ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "mas2 = int array of size 1000",
      "code": "int mas2 [ 1000 ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "a = string",
      "code": "string a ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to n set mas [ i ] to a [ i ] - ' 0 '",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { mas [ i ] = a [ i ] - ' 0 ' ; }",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 0 to n set mas2 [ i ] to a [ i ] - ' 0 '",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { mas2 [ i ] = a [ i ] - ' 0 ' ; }",
      "indent": 1
    },
    {
      "line": 13,
      "text": "suma = int with suma = 0",
      "code": "int suma = 0 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "kiekis = int with kiekis = 0",
      "code": "int kiekis = 0 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "set suma to abs of mas [ i ] - mas2 [ i ]",
      "code": "suma = abs ( mas [ i ] - mas2 [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increment kiekis by ( 10 - suma ) if suma > 5 else suma",
      "code": "kiekis += suma > 5 ? ( 10 - suma ) : suma ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print kiekis",
      "code": "cout << kiekis << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "char a ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int * suma = 0 ;"
      ],
      "err_line": 16,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        7
      ],
      "mod_code": [
        "cout << kiekis ;",
        "char a ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        7,
        9
      ],
      "mod_code": [
        "cout << kiekis ;",
        "char a ;",
        "cin >> n ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        7,
        9,
        8
      ],
      "mod_code": [
        "cout << kiekis ;",
        "char a ;",
        "cin >> n ;",
        "while ( cin >> n )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        7,
        9,
        11
      ],
      "mod_code": [
        "cout << kiekis ;",
        "char a ;",
        "cin >> n ;",
        "cin >> n ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        7,
        9,
        17
      ],
      "mod_code": [
        "cout << kiekis ;",
        "char a ;",
        "cin >> n ;",
        "kiekis += ( suma > 5 ) ? ( suma - suma ) : suma ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        7,
        8
      ],
      "mod_code": [
        "cout << kiekis ;",
        "char a ;",
        "while ( cin >> n )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        7,
        8,
        11
      ],
      "mod_code": [
        "cout << kiekis ;",
        "char a ;",
        "while ( cin >> n )",
        "cin >> n ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        7,
        8,
        17
      ],
      "mod_code": [
        "cout << kiekis ;",
        "char a ;",
        "while ( cin >> n )",
        "kiekis += ( suma > 5 ) ? ( suma - suma ) : suma ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        7,
        11
      ],
      "mod_code": [
        "cout << kiekis ;",
        "char a ;",
        "cin >> n ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        7,
        11,
        17
      ],
      "mod_code": [
        "cout << kiekis ;",
        "char a ;",
        "cin >> n ;",
        "kiekis += ( suma > 5 ) ? ( suma - suma ) : suma ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        7,
        17
      ],
      "mod_code": [
        "cout << kiekis ;",
        "char a ;",
        "kiekis += ( suma > 5 ) ? ( suma - suma ) : suma ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "char a ;",
        "cin >> n ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        9,
        8
      ],
      "mod_code": [
        "char a ;",
        "cin >> n ;",
        "while ( cin >> n )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        9,
        8,
        11
      ],
      "mod_code": [
        "char a ;",
        "cin >> n ;",
        "while ( cin >> n )",
        "cin >> n ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        9,
        8,
        17
      ],
      "mod_code": [
        "char a ;",
        "cin >> n ;",
        "while ( cin >> n )",
        "kiekis += ( suma > 5 ) ? ( suma - suma ) : suma ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        9,
        11
      ],
      "mod_code": [
        "char a ;",
        "cin >> n ;",
        "cin >> n ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        17
      ],
      "mod_code": [
        "char a ;",
        "cin >> n ;",
        "cin >> n ;",
        "kiekis += ( suma > 5 ) ? ( suma - suma ) : suma ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        9,
        17
      ],
      "mod_code": [
        "char a ;",
        "cin >> n ;",
        "kiekis += ( suma > 5 ) ? ( suma - suma ) : suma ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "char a ;",
        "while ( cin >> n )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        11
      ],
      "mod_code": [
        "char a ;",
        "while ( cin >> n )",
        "cin >> n ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        11,
        17
      ],
      "mod_code": [
        "char a ;",
        "while ( cin >> n )",
        "cin >> n ;",
        "kiekis += ( suma > 5 ) ? ( suma - suma ) : suma ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        17
      ],
      "mod_code": [
        "char a ;",
        "while ( cin >> n )",
        "kiekis += ( suma > 5 ) ? ( suma - suma ) : suma ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "char a ;",
        "cin >> n ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        11,
        17
      ],
      "mod_code": [
        "char a ;",
        "cin >> n ;",
        "kiekis += ( suma > 5 ) ? ( suma - suma ) : suma ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        17
      ],
      "mod_code": [
        "char a ;",
        "kiekis += ( suma > 5 ) ? ( suma - suma ) : suma ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    }
  ]
}