{
  "meta": {
    "index": 2079,
    "hitid": "3E6L1VR4XWGRMK0JWBEE30KX484F62",
    "workerid": "AIWEXPJAU66D9",
    "probid": "723A",
    "subid": "41756377"
  },
  "lines": [
    {
      "line": 0,
      "text": "function maxima with int arguments x1 , x2 and x3 that returns int",
      "code": "int maxima ( int x1 , int x2 , int x3 )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if x1 > x2 and x1 > x3",
      "code": "if ( x1 > x2 && x1 > x3 )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return x1",
      "code": "return x1 ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "else if x2 > x1 and x2 > x3",
      "code": "else if ( x2 > x1 && x2 > x3 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return x2",
      "code": "return x2 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "return x3",
      "code": "return x3 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "int function minima with int arguments x1 , x2 and x3",
      "code": "int minima ( int x1 , int x2 , int x3 )",
      "indent": 0
    },
    {
      "line": 8,
      "text": "if x1 < x2 and x1 < x3",
      "code": "if ( x1 < x2 && x1 < x3 )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "return x1",
      "code": "return x1 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else if x2 < x1 and x2 < x3",
      "code": "else if ( x2 < x1 && x2 < x3 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "return x2",
      "code": "return x2 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "return x3",
      "code": "return x3 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 15,
      "text": "declare integer variables x1 , x2 and x3",
      "code": "int x1 , x2 , x3 ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "read x1 , x2 and x3 from the user input",
      "code": "cin >> x1 >> x2 >> x3 ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "create integer variable maximum with value = maxima ( x1 , x2 , x3 )",
      "code": "int maximum = maxima ( x1 , x2 , x3 ) ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "minimum is a new integer variable with value = minima of x1 , x2 and x3",
      "code": "int minimum = minima ( x1 , x2 , x3 ) ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "create new integer middlePoint = maximum - minimum",
      "code": "int middlePoint = maximum - minimum ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print middlePoint",
      "code": "cout << middlePoint << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int maxima ( int x1 , int x2 , int x3 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "int value = maxima ( x1 , x2 , x3 ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘maximum’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int minimum = minima ( x1 , x2 ) ;"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘int minima(int, int, int)’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "int middlePoint = maximum - min ;"
      ],
      "err_line": 19,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "x2 = x2 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        11,
        20
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "x2 = x2 ;",
        "cout << middlePoint ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        11,
        20,
        16
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "x2 = x2 ;",
        "cout << middlePoint ;",
        "cin >> x1 >> x1 >> x3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        11,
        20,
        12
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "x2 = x2 ;",
        "cout << middlePoint ;",
        "x3 = x3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        11,
        20,
        2
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "x2 = x2 ;",
        "cout << middlePoint ;",
        "x1 = x1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        11,
        16
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "x2 = x2 ;",
        "cin >> x1 >> x1 >> x3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        11,
        16,
        12
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "x2 = x2 ;",
        "cin >> x1 >> x1 >> x3 ;",
        "x3 = x3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        11,
        16,
        2
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "x2 = x2 ;",
        "cin >> x1 >> x1 >> x3 ;",
        "x1 = x1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        11,
        12
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "x2 = x2 ;",
        "x3 = x3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        11,
        12,
        2
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "x2 = x2 ;",
        "x3 = x3 ;",
        "x1 = x1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        11,
        2
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "x2 = x2 ;",
        "x1 = x1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        20
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "cout << middlePoint ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        20,
        16
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "cout << middlePoint ;",
        "cin >> x1 >> x1 >> x3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        20,
        16,
        12
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "cout << middlePoint ;",
        "cin >> x1 >> x1 >> x3 ;",
        "x3 = x3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        20,
        16,
        2
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "cout << middlePoint ;",
        "cin >> x1 >> x1 >> x3 ;",
        "x1 = x1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        20,
        12
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "cout << middlePoint ;",
        "x3 = x3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        20,
        12,
        2
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "cout << middlePoint ;",
        "x3 = x3 ;",
        "x1 = x1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        20,
        2
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "cout << middlePoint ;",
        "x1 = x1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "cin >> x1 >> x1 >> x3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        16,
        12
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "cin >> x1 >> x1 >> x3 ;",
        "x3 = x3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        16,
        12,
        2
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "cin >> x1 >> x1 >> x3 ;",
        "x3 = x3 ;",
        "x1 = x1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        16,
        2
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "cin >> x1 >> x1 >> x3 ;",
        "x1 = x1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "x3 = x3 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        12,
        2
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "x3 = x3 ;",
        "x1 = x1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "int minima ( int x1 , int x2 , int x3 ) ;",
        "x1 = x1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}