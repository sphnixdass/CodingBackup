{
  "meta": {
    "index": 1221,
    "hitid": "32ZCLEW0BZEF1S4KUX48OY36RXEPJD",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "621A",
    "subid": "41902785"
  },
  "lines": [
    {
      "line": 0,
      "text": "n = int , a = array of 100010 int",
      "code": "int n , a [ 100010 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "ans and cnt = long long",
      "code": "long long ans , cnt ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n inclusive read a [ i ] and increment cnt by a [ i ] modulo 2",
      "code": "for ( int i = 1 ; i <= n ; ++ i ) cin >> a [ i ] , cnt += a [ i ] % 2 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "sort a from index 1 to index 1 + n in ascending order",
      "code": "sort ( a + 1 , a + 1 + n , greater < int > ( ) ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; ++ i )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if a [ i ] is even",
      "code": "if ( a [ i ] % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment ans by a [ i ]",
      "code": "ans += a [ i ] ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if ans modulo 2 and cnt > = 1",
      "code": "if ( ans % 2 && cnt >= 1 )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increment ans by a [ i ] and decrement cnt",
      "code": "ans += a [ i ] , cnt -- ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "else if ans is even",
      "code": "else if ( ans % 2 == 0 )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if cnt > = 2 increment ans by a [ i ] and decrement cnt",
      "code": "if ( cnt >= 2 ) ans += a [ i ] , cnt -- ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] and cnt += a [ i ] % 2 ; }"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a , a [ 100010 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int a [100010]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] and cnt += a [ i ] % 2 ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "ans += a [ i ] ] ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] and cnt += a [ i ] % 2 ; }",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        6,
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] and cnt += a [ i ] % 2 ; }",
        "for ( i = 1 ; i <= n ; i ++ )",
        "ans += a [ i ] ] ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] and cnt += a [ i ] % 2 ; }",
        "for ( i = 1 ; i <= n ; i ++ )",
        "ans += a [ i ] ] ;",
        "sort ( a , a + 1 , a + 1 + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] and cnt += a [ i ] % 2 ; }",
        "for ( i = 1 ; i <= n ; i ++ )",
        "ans += a [ i ] ] ;",
        "else if ( ans % 2 != 0 )"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        6,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] and cnt += a [ i ] % 2 ; }",
        "for ( i = 1 ; i <= n ; i ++ )",
        "sort ( a , a + 1 , a + 1 + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        6,
        5,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] and cnt += a [ i ] % 2 ; }",
        "for ( i = 1 ; i <= n ; i ++ )",
        "sort ( a , a + 1 , a + 1 + n ) ;",
        "else if ( ans % 2 != 0 )"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        6,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] and cnt += a [ i ] % 2 ; }",
        "for ( i = 1 ; i <= n ; i ++ )",
        "else if ( ans % 2 != 0 )"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] and cnt += a [ i ] % 2 ; }",
        "ans += a [ i ] ] ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        11,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] and cnt += a [ i ] % 2 ; }",
        "ans += a [ i ] ] ;",
        "sort ( a , a + 1 , a + 1 + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        11,
        5,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] and cnt += a [ i ] % 2 ; }",
        "ans += a [ i ] ] ;",
        "sort ( a , a + 1 , a + 1 + n ) ;",
        "else if ( ans % 2 != 0 )"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        11,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] and cnt += a [ i ] % 2 ; }",
        "ans += a [ i ] ] ;",
        "else if ( ans % 2 != 0 )"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] and cnt += a [ i ] % 2 ; }",
        "sort ( a , a + 1 , a + 1 + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        5,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] and cnt += a [ i ] % 2 ; }",
        "sort ( a , a + 1 , a + 1 + n ) ;",
        "else if ( ans % 2 != 0 )"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] and cnt += a [ i ] % 2 ; }",
        "else if ( ans % 2 != 0 )"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] and cnt += a [ i ] % 2 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        6,
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] and cnt += a [ i ] % 2 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "ans += a [ i ] ] ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] and cnt += a [ i ] % 2 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "ans += a [ i ] ] ;",
        "sort ( a , a + 1 , a + 1 + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] and cnt += a [ i ] % 2 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "ans += a [ i ] ] ;",
        "else if ( ans % 2 != 0 )"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        6,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] and cnt += a [ i ] % 2 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "sort ( a , a + 1 , a + 1 + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        6,
        5,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] and cnt += a [ i ] % 2 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "sort ( a , a + 1 , a + 1 + n ) ;",
        "else if ( ans % 2 != 0 )"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        6,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] and cnt += a [ i ] % 2 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "else if ( ans % 2 != 0 )"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] and cnt += a [ i ] % 2 ;",
        "ans += a [ i ] ] ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        11,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] and cnt += a [ i ] % 2 ;",
        "ans += a [ i ] ] ;",
        "sort ( a , a + 1 , a + 1 + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        11,
        5,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] and cnt += a [ i ] % 2 ;",
        "ans += a [ i ] ] ;",
        "sort ( a , a + 1 , a + 1 + n ) ;",
        "else if ( ans % 2 != 0 )"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        11,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] and cnt += a [ i ] % 2 ;",
        "ans += a [ i ] ] ;",
        "else if ( ans % 2 != 0 )"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] and cnt += a [ i ] % 2 ;",
        "sort ( a , a + 1 , a + 1 + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        5,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] and cnt += a [ i ] % 2 ;",
        "sort ( a , a + 1 , a + 1 + n ) ;",
        "else if ( ans % 2 != 0 )"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] and cnt += a [ i ] % 2 ;",
        "else if ( ans % 2 != 0 )"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "ans += a [ i ] ] ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        11,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "ans += a [ i ] ] ;",
        "sort ( a , a + 1 , a + 1 + n ) ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        11,
        5,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "ans += a [ i ] ] ;",
        "sort ( a , a + 1 , a + 1 + n ) ;",
        "else if ( ans % 2 != 0 )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        11,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "ans += a [ i ] ] ;",
        "else if ( ans % 2 != 0 )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "sort ( a , a + 1 , a + 1 + n ) ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        5,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "sort ( a , a + 1 , a + 1 + n ) ;",
        "else if ( ans % 2 != 0 )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "else if ( ans % 2 != 0 )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "ans += a [ i ] ] ;",
        "sort ( a , a + 1 , a + 1 + n ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        11,
        5,
        12
      ],
      "mod_code": [
        "ans += a [ i ] ] ;",
        "sort ( a , a + 1 , a + 1 + n ) ;",
        "else if ( ans % 2 != 0 )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "ans += a [ i ] ] ;",
        "else if ( ans % 2 != 0 )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘]’ token"
    }
  ]
}