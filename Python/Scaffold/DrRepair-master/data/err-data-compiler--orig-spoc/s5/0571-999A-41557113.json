{
  "meta": {
    "index": 571,
    "hitid": "344M16OZKI97NR6F0HGPNTLJNX9ENO",
    "workerid": "A1APYLD4DUK33J",
    "probid": "999A",
    "subid": "41557113"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integers n , s , ans with ans = 0 , create integer array a with size 150",
      "code": "int n , s , a [ 150 ] , ans = 0 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n read s",
      "code": "cin >> n >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for j = n - 1 to 0 inclusive , decrementing j",
      "code": "for ( int j = n - 1 ; j >= 0 ; j -- )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if s is greater than or equal to a [ j ]",
      "code": "if ( s >= a [ j ] )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "set a [ j ] to 2147483647",
      "code": "a [ j ] = 2147483647 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "break loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "for u = 0 to n inclusive",
      "code": "for ( int u = 0 ; u <= n ; u ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if s is greater than or equal to a [ u ]",
      "code": "if ( s >= a [ u ] )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print ans print newline",
      "code": "cout << ans << endl ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print ans print newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , s [ 150 ] , ans = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [150]’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( j = n - 1 ; j >= 0 ; j -- )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘u’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "for ( j = n - 1 ; j >= 0 ; j -- )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        0
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "int n , s [ 150 ] , ans = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [150]’)"
    },
    {
      "mod_line": [
        10,
        4,
        0,
        9
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "int n , s [ 150 ] , ans = 0 ;",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [150]’)"
    },
    {
      "mod_line": [
        10,
        4,
        0,
        11
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "int n , s [ 150 ] , ans = 0 ;",
        "if ( s >= ' u ' )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [150]’)"
    },
    {
      "mod_line": [
        10,
        4,
        0,
        2
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "int n , s [ 150 ] , ans = 0 ;",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        10,
        4,
        9
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        9,
        11
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "break break ;",
        "if ( s >= ' u ' )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        9,
        2
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "break break ;",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        10,
        4,
        11
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "if ( s >= ' u ' )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4,
        11,
        2
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "if ( s >= ' u ' )",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        10,
        4,
        2
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "int n , s [ 150 ] , ans = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [150]’)"
    },
    {
      "mod_line": [
        10,
        0,
        9
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "int n , s [ 150 ] , ans = 0 ;",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [150]’)"
    },
    {
      "mod_line": [
        10,
        0,
        9,
        11
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "int n , s [ 150 ] , ans = 0 ;",
        "break break ;",
        "if ( s >= ' u ' )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [150]’)"
    },
    {
      "mod_line": [
        10,
        0,
        9,
        2
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "int n , s [ 150 ] , ans = 0 ;",
        "break break ;",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        10,
        0,
        11
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "int n , s [ 150 ] , ans = 0 ;",
        "if ( s >= ' u ' )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [150]’)"
    },
    {
      "mod_line": [
        10,
        0,
        11,
        2
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "int n , s [ 150 ] , ans = 0 ;",
        "if ( s >= ' u ' )",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        10,
        0,
        2
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "int n , s [ 150 ] , ans = 0 ;",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "break break ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        10,
        9,
        11
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "break break ;",
        "if ( s >= ' u ' )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        10,
        9,
        11,
        2
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "break break ;",
        "if ( s >= ' u ' )",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        10,
        9,
        2
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "break break ;",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "if ( s >= ' u ' )"
      ],
      "err_line": 10,
      "err_msg": "‘u’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        2
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "if ( s >= ' u ' )",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "for ( u = 0 ; u <= n ; u ++ )",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "int n , s [ 150 ] , ans = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [150]’)"
    },
    {
      "mod_line": [
        4,
        0,
        9
      ],
      "mod_code": [
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "int n , s [ 150 ] , ans = 0 ;",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [150]’)"
    },
    {
      "mod_line": [
        4,
        0,
        9,
        11
      ],
      "mod_code": [
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "int n , s [ 150 ] , ans = 0 ;",
        "break break ;",
        "if ( s >= ' u ' )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [150]’)"
    },
    {
      "mod_line": [
        4,
        0,
        9,
        2
      ],
      "mod_code": [
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "int n , s [ 150 ] , ans = 0 ;",
        "break break ;",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        4,
        0,
        11
      ],
      "mod_code": [
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "int n , s [ 150 ] , ans = 0 ;",
        "if ( s >= ' u ' )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [150]’)"
    },
    {
      "mod_line": [
        4,
        0,
        11,
        2
      ],
      "mod_code": [
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "int n , s [ 150 ] , ans = 0 ;",
        "if ( s >= ' u ' )",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        4,
        0,
        2
      ],
      "mod_code": [
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "int n , s [ 150 ] , ans = 0 ;",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        11
      ],
      "mod_code": [
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "break break ;",
        "if ( s >= ' u ' )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        2
      ],
      "mod_code": [
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "break break ;",
        "if ( s >= ' u ' )",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        4,
        9,
        2
      ],
      "mod_code": [
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "break break ;",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "if ( s >= ' u ' )"
      ],
      "err_line": 4,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        2
      ],
      "mod_code": [
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "if ( s >= ' u ' )",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "for ( j = n - 1 ; j >= 0 ; j -- )",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int n , s [ 150 ] , ans = 0 ;",
        "break break ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [150]’)"
    },
    {
      "mod_line": [
        0,
        9,
        11
      ],
      "mod_code": [
        "int n , s [ 150 ] , ans = 0 ;",
        "break break ;",
        "if ( s >= ' u ' )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [150]’)"
    },
    {
      "mod_line": [
        0,
        9,
        11,
        2
      ],
      "mod_code": [
        "int n , s [ 150 ] , ans = 0 ;",
        "break break ;",
        "if ( s >= ' u ' )",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        0,
        9,
        2
      ],
      "mod_code": [
        "int n , s [ 150 ] , ans = 0 ;",
        "break break ;",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "int n , s [ 150 ] , ans = 0 ;",
        "if ( s >= ' u ' )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [150]’)"
    },
    {
      "mod_line": [
        0,
        11,
        2
      ],
      "mod_code": [
        "int n , s [ 150 ] , ans = 0 ;",
        "if ( s >= ' u ' )",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "int n , s [ 150 ] , ans = 0 ;",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "break break ;",
        "if ( s >= ' u ' )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        9,
        11,
        2
      ],
      "mod_code": [
        "break break ;",
        "if ( s >= ' u ' )",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "break break ;",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "if ( s >= ' u ' )",
        "cin >> n read s ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘read’"
    }
  ]
}