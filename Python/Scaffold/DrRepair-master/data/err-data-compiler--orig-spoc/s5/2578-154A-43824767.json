{
  "meta": {
    "index": 2578,
    "hitid": "3Z56AA6EK4UXSUS0IYIRYQ460MHM66",
    "workerid": "A1APYLD4DUK33J",
    "probid": "154A",
    "subid": "43824767"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create character arrays str , tmp , with str size 100010 , tmp size 5",
      "code": "char str [ 100010 ] , tmp [ 5 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integers t , q , i , j , k , ans , t1 , t2 , with ans = 0",
      "code": "int t , q , i , j , k , ans = 0 , t1 , t2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read str read k",
      "code": "cin >> str >> k ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while decrement k is true",
      "code": "while ( k -- )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read tmp",
      "code": "cin >> tmp ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set t1 to t2 to 0",
      "code": "t1 = t2 = 0 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for i = 0 to str [ i ] , incrementing i",
      "code": "for ( i = 0 ; str [ i ] ; i ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if str [ i ] is tmp [ 0 ]",
      "code": "if ( str [ i ] == tmp [ 0 ] )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increment t1",
      "code": "t1 ++ ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "else if str [ i ] is tmp [ 1 ]",
      "code": "else if ( str [ i ] == tmp [ 1 ] )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "increment t2",
      "code": "t2 ++ ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 14,
      "text": "increment ans by minimum of t1 and t2",
      "code": "ans += min ( t1 , t2 ) ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "set t1 to t2 to 0",
      "code": "t1 = t2 = 0 ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "increment ans by minimum of t1 and t2",
      "code": "ans += min ( t1 , t2 ) ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print ans print newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "int t1 = t2 ;",
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        7,
        3,
        11
      ],
      "mod_code": [
        "int t1 = t2 ;",
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "else if ( str [ i ] == tmp [ ' 1 ' ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        7,
        3,
        11,
        15
      ],
      "mod_code": [
        "int t1 = t2 ;",
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "else if ( str [ i ] == tmp [ ' 1 ' ] )",
        "int t1 = t2 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        7,
        3,
        11,
        6
      ],
      "mod_code": [
        "int t1 = t2 ;",
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "else if ( str [ i ] == tmp [ ' 1 ' ] )",
        "gets ( tmp ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        7,
        3,
        11,
        9
      ],
      "mod_code": [
        "int t1 = t2 ;",
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "else if ( str [ i ] == tmp [ ' 1 ' ] )",
        "if ( str [ i ] == tmp [ ' 0 ' ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        7,
        3,
        15
      ],
      "mod_code": [
        "int t1 = t2 ;",
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "int t1 = t2 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        7,
        3,
        15,
        6
      ],
      "mod_code": [
        "int t1 = t2 ;",
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "int t1 = t2 ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        7,
        3,
        15,
        9
      ],
      "mod_code": [
        "int t1 = t2 ;",
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "int t1 = t2 ;",
        "if ( str [ i ] == tmp [ ' 0 ' ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        7,
        3,
        6
      ],
      "mod_code": [
        "int t1 = t2 ;",
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        7,
        3,
        6,
        9
      ],
      "mod_code": [
        "int t1 = t2 ;",
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "gets ( tmp ) ;",
        "if ( str [ i ] == tmp [ ' 0 ' ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        7,
        3,
        9
      ],
      "mod_code": [
        "int t1 = t2 ;",
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "if ( str [ i ] == tmp [ ' 0 ' ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "else if ( str [ i ] == tmp [ ' 1 ' ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        3,
        11,
        15
      ],
      "mod_code": [
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "else if ( str [ i ] == tmp [ ' 1 ' ] )",
        "int t1 = t2 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        3,
        11,
        15,
        6
      ],
      "mod_code": [
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "else if ( str [ i ] == tmp [ ' 1 ' ] )",
        "int t1 = t2 ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        3,
        11,
        15,
        9
      ],
      "mod_code": [
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "else if ( str [ i ] == tmp [ ' 1 ' ] )",
        "int t1 = t2 ;",
        "if ( str [ i ] == tmp [ ' 0 ' ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        3,
        11,
        6
      ],
      "mod_code": [
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "else if ( str [ i ] == tmp [ ' 1 ' ] )",
        "gets ( tmp ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        3,
        11,
        6,
        9
      ],
      "mod_code": [
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "else if ( str [ i ] == tmp [ ' 1 ' ] )",
        "gets ( tmp ) ;",
        "if ( str [ i ] == tmp [ ' 0 ' ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        3,
        11,
        9
      ],
      "mod_code": [
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "else if ( str [ i ] == tmp [ ' 1 ' ] )",
        "if ( str [ i ] == tmp [ ' 0 ' ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "int t1 = t2 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        3,
        15,
        6
      ],
      "mod_code": [
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "int t1 = t2 ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        3,
        15,
        6,
        9
      ],
      "mod_code": [
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "int t1 = t2 ;",
        "gets ( tmp ) ;",
        "if ( str [ i ] == tmp [ ' 0 ' ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        3,
        15,
        9
      ],
      "mod_code": [
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "int t1 = t2 ;",
        "if ( str [ i ] == tmp [ ' 0 ' ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "gets ( tmp ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        3,
        6,
        9
      ],
      "mod_code": [
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "gets ( tmp ) ;",
        "if ( str [ i ] == tmp [ ' 0 ' ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "int t , q , i , j , k , ans = 0 , t2 , t2 ;",
        "if ( str [ i ] == tmp [ ' 0 ' ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t2’"
    }
  ]
}