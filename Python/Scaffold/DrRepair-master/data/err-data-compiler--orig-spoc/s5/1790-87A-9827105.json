{
  "meta": {
    "index": 1790,
    "hitid": "3SD15I2WD2OW68KQCGDC2RV01IY63J",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "87A",
    "subid": "9827105"
  },
  "lines": [
    {
      "line": 0,
      "text": "M = const int with M = 1000000007",
      "code": "const int M = 1000000007 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in function gcd taking int a , int b and returning int",
      "code": "int gcd ( int a , int b )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "if not b return a",
      "code": "if ( ! b ) return a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "return gcd of b , a mod b",
      "code": "return gcd ( b , a % b ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "in function lcm taking long long a , long long b and returning long long",
      "code": "long long lcm ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 6,
      "text": "return a / gcd of ( a , b ) * b",
      "code": "return a / gcd ( a , b ) * b ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 9,
      "text": "a , b = int",
      "code": "int a , b ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read a then b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "l = long long with l = lcm of a , b",
      "code": "long long l = lcm ( a , b ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "A = long long with A = l / a",
      "code": "long long A = l / a ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "B = long long with B = l / b",
      "code": "long long B = l / b ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if a > b",
      "code": "if ( a > b )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "increment A",
      "code": "++ A ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 17,
      "text": "increment B",
      "code": "++ B ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if a is b",
      "code": "if ( A == B )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print \" Equal \"",
      "code": "puts ( \" Equal \" ) ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else if A < B",
      "code": "else if ( A < B )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print \" Masha \"",
      "code": "puts ( \" Masha \" ) ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print \" Dasha \"",
      "code": "puts ( \" Dasha \" ) ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "while ( cin >> a >> b )"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "long long l = lcm ( a ) ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘long long int lcm(long long int, long long int)’"
    },
    {
      "mod_line": [
        18,
        23,
        11
      ],
      "mod_code": [
        "if ( a == b )",
        "cout << \" Dasha \" ;",
        "long long l = lcm ( a ) ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘long long int lcm(long long int, long long int)’"
    },
    {
      "mod_line": [
        18,
        23,
        11,
        21
      ],
      "mod_code": [
        "if ( a == b )",
        "cout << \" Dasha \" ;",
        "long long l = lcm ( a ) ;",
        "cout << \" Masha \" ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘long long int lcm(long long int, long long int)’"
    },
    {
      "mod_line": [
        18,
        23,
        11,
        1
      ],
      "mod_code": [
        "if ( a == b )",
        "cout << \" Dasha \" ;",
        "long long l = lcm ( a ) ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        23,
        21,
        1
      ],
      "mod_code": [
        "if ( a == b )",
        "cout << \" Dasha \" ;",
        "cout << \" Masha \" ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        23,
        1
      ],
      "mod_code": [
        "if ( a == b )",
        "cout << \" Dasha \" ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        11
      ],
      "mod_code": [
        "if ( a == b )",
        "long long l = lcm ( a ) ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘long long int lcm(long long int, long long int)’"
    },
    {
      "mod_line": [
        18,
        11,
        21
      ],
      "mod_code": [
        "if ( a == b )",
        "long long l = lcm ( a ) ;",
        "cout << \" Masha \" ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘long long int lcm(long long int, long long int)’"
    },
    {
      "mod_line": [
        18,
        11,
        21,
        1
      ],
      "mod_code": [
        "if ( a == b )",
        "long long l = lcm ( a ) ;",
        "cout << \" Masha \" ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        11,
        1
      ],
      "mod_code": [
        "if ( a == b )",
        "long long l = lcm ( a ) ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        21,
        1
      ],
      "mod_code": [
        "if ( a == b )",
        "cout << \" Masha \" ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        1
      ],
      "mod_code": [
        "if ( a == b )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        23,
        11
      ],
      "mod_code": [
        "cout << \" Dasha \" ;",
        "long long l = lcm ( a ) ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘long long int lcm(long long int, long long int)’"
    },
    {
      "mod_line": [
        23,
        11,
        21
      ],
      "mod_code": [
        "cout << \" Dasha \" ;",
        "long long l = lcm ( a ) ;",
        "cout << \" Masha \" ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘long long int lcm(long long int, long long int)’"
    },
    {
      "mod_line": [
        23,
        11,
        21,
        1
      ],
      "mod_code": [
        "cout << \" Dasha \" ;",
        "long long l = lcm ( a ) ;",
        "cout << \" Masha \" ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        23,
        11,
        21,
        18
      ],
      "mod_code": [
        "cout << \" Dasha \" ;",
        "long long l = lcm ( a ) ;",
        "cout << \" Masha \" ;",
        "if ( a == ' b ' )"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘long long int lcm(long long int, long long int)’"
    },
    {
      "mod_line": [
        23,
        11,
        1
      ],
      "mod_code": [
        "cout << \" Dasha \" ;",
        "long long l = lcm ( a ) ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        23,
        11,
        1,
        18
      ],
      "mod_code": [
        "cout << \" Dasha \" ;",
        "long long l = lcm ( a ) ;",
        "int gcd ( int a , int b ) ;",
        "if ( a == ' b ' )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        23,
        11,
        18
      ],
      "mod_code": [
        "cout << \" Dasha \" ;",
        "long long l = lcm ( a ) ;",
        "if ( a == ' b ' )"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘long long int lcm(long long int, long long int)’"
    },
    {
      "mod_line": [
        23,
        21,
        1
      ],
      "mod_code": [
        "cout << \" Dasha \" ;",
        "cout << \" Masha \" ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        23,
        21,
        1,
        18
      ],
      "mod_code": [
        "cout << \" Dasha \" ;",
        "cout << \" Masha \" ;",
        "int gcd ( int a , int b ) ;",
        "if ( a == ' b ' )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        23,
        1
      ],
      "mod_code": [
        "cout << \" Dasha \" ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        23,
        1,
        18
      ],
      "mod_code": [
        "cout << \" Dasha \" ;",
        "int gcd ( int a , int b ) ;",
        "if ( a == ' b ' )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        21
      ],
      "mod_code": [
        "long long l = lcm ( a ) ;",
        "cout << \" Masha \" ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘long long int lcm(long long int, long long int)’"
    },
    {
      "mod_line": [
        11,
        21,
        1
      ],
      "mod_code": [
        "long long l = lcm ( a ) ;",
        "cout << \" Masha \" ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        21,
        1,
        18
      ],
      "mod_code": [
        "long long l = lcm ( a ) ;",
        "cout << \" Masha \" ;",
        "int gcd ( int a , int b ) ;",
        "if ( a == ' b ' )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        21,
        18
      ],
      "mod_code": [
        "long long l = lcm ( a ) ;",
        "cout << \" Masha \" ;",
        "if ( a == ' b ' )"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘long long int lcm(long long int, long long int)’"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "long long l = lcm ( a ) ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        1,
        18
      ],
      "mod_code": [
        "long long l = lcm ( a ) ;",
        "int gcd ( int a , int b ) ;",
        "if ( a == ' b ' )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        18
      ],
      "mod_code": [
        "long long l = lcm ( a ) ;",
        "if ( a == ' b ' )"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘long long int lcm(long long int, long long int)’"
    },
    {
      "mod_line": [
        21,
        1
      ],
      "mod_code": [
        "cout << \" Masha \" ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        1,
        18
      ],
      "mod_code": [
        "cout << \" Masha \" ;",
        "int gcd ( int a , int b ) ;",
        "if ( a == ' b ' )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;",
        "if ( a == ' b ' )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}