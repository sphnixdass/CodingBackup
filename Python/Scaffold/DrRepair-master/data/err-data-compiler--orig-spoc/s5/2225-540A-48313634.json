{
  "meta": {
    "index": 2225,
    "hitid": "3WUVMVA7OBXYE33MN0PXMX21CWNZAZ",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "540A",
    "subid": "48313634"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , i , t , j , sum , x = int",
      "code": "int n , i , t , j , sum , x ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "s1 , s2 = string",
      "code": "string s1 , s2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s1 , s2",
      "code": "cin >> s1 >> s2 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "sum = 0",
      "code": "sum = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "x = 10001",
      "code": "x = 10001 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) , x )",
      "code": "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) , x ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) , x )",
      "code": "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) , x ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x )",
      "code": "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "add x to sum",
      "code": "sum += x ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int sum = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , i , t , j , j , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string s1 , s2 , s2 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘std::__cxx11::string s2’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "long long sum = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘long long int sum’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "long long x = 10001 ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘min(int, long long int&)’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        10,
        8
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        10,
        8,
        9
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        10,
        8,
        7
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "long long x = 10001 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        10,
        8,
        4
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        10,
        9
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        10,
        9,
        7
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;",
        "long long x = 10001 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        10,
        9,
        4
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        10,
        7
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "long long x = 10001 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        10,
        7,
        4
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "long long x = 10001 ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        10,
        4
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        8,
        9
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        7
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;",
        "long long x = 10001 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        4
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        8,
        7
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "long long x = 10001 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        8,
        7,
        4
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "long long x = 10001 ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        8,
        4
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        9,
        7
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;",
        "long long x = 10001 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        9,
        7,
        4
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;",
        "long long x = 10001 ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        9,
        4
      ],
      "mod_code": [
        "int sum = 0 ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "int sum = 0 ;",
        "long long x = 10001 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        7,
        4
      ],
      "mod_code": [
        "int sum = 0 ;",
        "long long x = 10001 ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "int sum = 0 ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        8,
        9
      ],
      "mod_code": [
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        8,
        9,
        7
      ],
      "mod_code": [
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;",
        "long long x = 10001 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        8,
        9,
        4
      ],
      "mod_code": [
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        8,
        7
      ],
      "mod_code": [
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "long long x = 10001 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        8,
        7,
        4
      ],
      "mod_code": [
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "long long x = 10001 ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        8,
        4
      ],
      "mod_code": [
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        10,
        9,
        7
      ],
      "mod_code": [
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;",
        "long long x = 10001 ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘min(int, long long int&)’"
    },
    {
      "mod_line": [
        10,
        9,
        7,
        4
      ],
      "mod_code": [
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;",
        "long long x = 10001 ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘min(int, long long int&)’"
    },
    {
      "mod_line": [
        10,
        9,
        4
      ],
      "mod_code": [
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "long long x = 10001 ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘min(int, long long int&)’"
    },
    {
      "mod_line": [
        10,
        7,
        4
      ],
      "mod_code": [
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "long long x = 10001 ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘min(int, long long int&)’"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - ( s1 [ i ] - ' 0 ' ) ) , x ++ ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        9,
        7
      ],
      "mod_code": [
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;",
        "long long x = 10001 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        9,
        7,
        4
      ],
      "mod_code": [
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;",
        "long long x = 10001 ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        9,
        4
      ],
      "mod_code": [
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "long long x = 10001 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        7,
        4
      ],
      "mod_code": [
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "long long x = 10001 ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "x = min ( abs ( ( s1 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s2 [ i ] - ' 0 ' ) ) ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;",
        "long long x = 10001 ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘min(int, long long int&)’"
    },
    {
      "mod_line": [
        9,
        7,
        4
      ],
      "mod_code": [
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;",
        "long long x = 10001 ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘min(int, long long int&)’"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "x = min ( abs ( ( s2 [ i ] - ' 0 ' ) - 0 ) + abs ( 10 - ( s1 [ i ] - ' 0 ' ) ) ) ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "long long x = 10001 ;",
        "cin >> s1 >> s1 ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘min(int, long long int&)’"
    }
  ]
}