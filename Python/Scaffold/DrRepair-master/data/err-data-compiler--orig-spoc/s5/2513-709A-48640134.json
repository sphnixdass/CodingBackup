{
  "meta": {
    "index": 2513,
    "hitid": "34F34TZU7WTJ9L3ESZTWSLVDHAKJ2T",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "709A",
    "subid": "48640134"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , b , d , a , c , c2 = integers",
      "code": "int n { } , b { } , d { } , a { } , c { } , c2 { } ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , b , d",
      "code": "cin >> n >> b >> d ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while decrement n",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if ( a < = b ) , c = c + a",
      "code": "if ( a <= b ) { c += a ; } ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if ( c > d )",
      "code": "if ( c > d )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment c2",
      "code": "c2 ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "c = 0",
      "code": "c = 0 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print c2",
      "code": "cout << c2 << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( n -- decrement )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘decrement’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( c > d ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        8,
        4,
        6
      ],
      "mod_code": [
        "int n , b , d , a , c , c2 ;",
        "int c = 0 ;",
        "cin >> n ;",
        "if ( c > d ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        8,
        6
      ],
      "mod_code": [
        "int n , b , d , a , c , c2 ;",
        "int c = 0 ;",
        "if ( c > d ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        4,
        8,
        6
      ],
      "mod_code": [
        "int n , b , d , a , c , c2 ;",
        "cin >> n ;",
        "long long c = 0 ;",
        "if ( c > d ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        4,
        6
      ],
      "mod_code": [
        "int n , b , d , a , c , c2 ;",
        "cin >> n ;",
        "if ( c > d ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        8,
        6
      ],
      "mod_code": [
        "int n , b , d , a , c , c2 ;",
        "long long c = 0 ;",
        "if ( c > d ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , b , d , a , c , c2 ;",
        "if ( c > d ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        8,
        4,
        1,
        6
      ],
      "mod_code": [
        "int c = 0 ;",
        "cin >> n ;",
        "long long n , b , d , a , c , c2 ;",
        "if ( c > d ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        8,
        4,
        6
      ],
      "mod_code": [
        "int c = 0 ;",
        "cin >> n ;",
        "if ( c > d ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        8,
        1,
        6
      ],
      "mod_code": [
        "int c = 0 ;",
        "long long n , b , d , a , c , c2 ;",
        "if ( c > d ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "int c = 0 ;",
        "if ( c > d ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        1,
        8,
        6
      ],
      "mod_code": [
        "cin >> n ;",
        "long long n , b , d , a , c , c2 ;",
        "long long c = 0 ;",
        "if ( c > d ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        1,
        6
      ],
      "mod_code": [
        "cin >> n ;",
        "long long n , b , d , a , c , c2 ;",
        "if ( c > d ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        8,
        6
      ],
      "mod_code": [
        "cin >> n ;",
        "long long c = 0 ;",
        "if ( c > d ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "cin >> n ;",
        "if ( c > d ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        8,
        6
      ],
      "mod_code": [
        "long long n , b , d , a , c , c2 ;",
        "long long c = 0 ;",
        "if ( c > d ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "long long n , b , d , a , c , c2 ;",
        "if ( c > d ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "long long c = 0 ;",
        "if ( c > d ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    }
  ]
}