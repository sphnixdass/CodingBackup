{
  "meta": {
    "index": 2331,
    "hitid": "3AFT28WXLFW1LH8DXF6TNXJG50SOIT",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "834A",
    "subid": "34283495"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "firstLine = string",
      "code": "string firstLine ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read firstLine",
      "code": "getline ( cin , firstLine ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "start and end = first and third char of firstLine",
      "code": "char start = firstLine [ 0 ] , end = firstLine [ 2 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "sum = start + end",
      "code": "int sum = start + end ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if start is end or sum is 212 or sum is 122",
      "code": "if ( start == end || sum == 212 || sum == 122 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print \" undefined \"",
      "code": "cout << \" undefined \" << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "n = n modulo 4",
      "code": "n = n % 4 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "pos1 , pos2 = int",
      "code": "int pos1 , pos2 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if start is ' ^ '",
      "code": "if ( start == ' ^ ' )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "pos1 = 0",
      "code": "pos1 = 0 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else if start is ' > '",
      "code": "else if ( start == ' > ' )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "pos1 = 1",
      "code": "pos1 = 1 ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else if start is ' v '",
      "code": "else if ( start == ' v ' )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "pos1 = 2",
      "code": "pos1 = 2 ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "else if start is ' < '",
      "code": "else if ( start == ' < ' )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "pos1 = 3",
      "code": "pos1 = 3 ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if end is ' ^ '",
      "code": "if ( end == ' ^ ' )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "pos2 = 0",
      "code": "pos2 = 0 ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "else if end is ' > '",
      "code": "else if ( end == ' > ' )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "pos2 = 1",
      "code": "pos2 = 1 ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "else if end is ' v '",
      "code": "else if ( end == ' v ' )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "pos2 = 2",
      "code": "pos2 = 2 ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "else if end is ' < '",
      "code": "else if ( end == ' < ' )",
      "indent": 1
    },
    {
      "line": 28,
      "text": "pos2 = 3",
      "code": "pos2 = 3 ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "if ( pos1 + n ) modulo 4 is pos2",
      "code": "if ( ( pos1 + n ) % 4 == pos2 )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "print \" cw \"",
      "code": "cout << \" cw \" << endl ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 32,
      "text": "print \" ccw \"",
      "code": "cout << \" ccw \" << endl ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sum = start + end ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char firstLine ;"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin . get ( firstLine ) ;"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘std::basic_istream<char>::get(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char start = start , end = third ;"
      ],
      "err_line": 3,
      "err_msg": "‘third’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sum += end ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "puts ( \" ) ;"
      ],
      "err_line": 8,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "else if ( start == ' v ' ) ' ;"
      ],
      "err_line": 17,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "else if ( end == ' v ' ) end ++ ;"
      ],
      "err_line": 27,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "if ( ( pos1 + n ) modulo == pos2 )"
      ],
      "err_line": 29,
      "err_msg": "expected ‘)’ before ‘modulo’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        6
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        8
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;",
        "cout << \" no\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        14
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;",
        "int pos1 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        16
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;",
        "int pos1 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        24
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        30
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        8
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "cout << \" no\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        8,
        14
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "cout << \" no\\n \" ;",
        "int pos1 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        8,
        16
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "cout << \" no\\n \" ;",
        "int pos1 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        8,
        24
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "cout << \" no\\n \" ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        8,
        30
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "cout << \" no\\n \" ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        14
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "int pos1 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        14,
        16
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "int pos1 = 0 ;",
        "int pos1 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        14,
        24
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "int pos1 = 0 ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        14,
        30
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "int pos1 = 0 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        16
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "int pos1 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        16,
        24
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "int pos1 = 1 ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        16,
        30
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "int pos1 = 1 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        24
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        24,
        30
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "int pos2 = 1 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        3,
        30
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "char start [ firstLine ] , end = third ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "sum = start + end ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        8
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "sum = start + end ;",
        "cout << \" no\\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        8,
        14
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "sum = start + end ;",
        "cout << \" no\\n \" ;",
        "int pos1 = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        8,
        16
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "sum = start + end ;",
        "cout << \" no\\n \" ;",
        "int pos1 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        8,
        24
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "sum = start + end ;",
        "cout << \" no\\n \" ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        8,
        30
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "sum = start + end ;",
        "cout << \" no\\n \" ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        14
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "sum = start + end ;",
        "int pos1 = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        14,
        16
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "sum = start + end ;",
        "int pos1 = 0 ;",
        "int pos1 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        14,
        24
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "sum = start + end ;",
        "int pos1 = 0 ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        14,
        30
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "sum = start + end ;",
        "int pos1 = 0 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        16
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "sum = start + end ;",
        "int pos1 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        16,
        24
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "sum = start + end ;",
        "int pos1 = 1 ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        16,
        30
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "sum = start + end ;",
        "int pos1 = 1 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        24
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "sum = start + end ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        24,
        30
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "sum = start + end ;",
        "int pos2 = 1 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        30
      ],
      "mod_code": [
        "cin >> firstLine ;",
        "sum = start + end ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        6,
        8
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;",
        "cout << \" no\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        6,
        8,
        14
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;",
        "cout << \" no\\n \" ;",
        "int pos1 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        6,
        8,
        16
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;",
        "cout << \" no\\n \" ;",
        "int pos1 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        6,
        8,
        24
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;",
        "cout << \" no\\n \" ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        6,
        8,
        30
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;",
        "cout << \" no\\n \" ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        6,
        14
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;",
        "int pos1 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        6,
        14,
        16
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;",
        "int pos1 = 0 ;",
        "int pos1 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        6,
        14,
        24
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;",
        "int pos1 = 0 ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        6,
        14,
        30
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;",
        "int pos1 = 0 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        6,
        16
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;",
        "int pos1 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        6,
        16,
        24
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;",
        "int pos1 = 1 ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        6,
        16,
        30
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;",
        "int pos1 = 1 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        6,
        24
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        6,
        24,
        30
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;",
        "int pos2 = 1 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        6,
        30
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "sum = start + end ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "cout << \" no\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        8,
        14
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "cout << \" no\\n \" ;",
        "int pos1 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        8,
        14,
        16
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "cout << \" no\\n \" ;",
        "int pos1 = 0 ;",
        "int pos1 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        8,
        14,
        24
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "cout << \" no\\n \" ;",
        "int pos1 = 0 ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        8,
        14,
        30
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "cout << \" no\\n \" ;",
        "int pos1 = 0 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        8,
        16
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "cout << \" no\\n \" ;",
        "int pos1 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        8,
        16,
        24
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "cout << \" no\\n \" ;",
        "int pos1 = 1 ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        8,
        16,
        30
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "cout << \" no\\n \" ;",
        "int pos1 = 1 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        8,
        24
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "cout << \" no\\n \" ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        8,
        24,
        30
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "cout << \" no\\n \" ;",
        "int pos2 = 1 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        8,
        30
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "cout << \" no\\n \" ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "int pos1 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        14,
        16
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "int pos1 = 0 ;",
        "int pos1 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        14,
        16,
        24
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "int pos1 = 0 ;",
        "int pos1 = 1 ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        14,
        16,
        30
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "int pos1 = 0 ;",
        "int pos1 = 1 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        14,
        24
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "int pos1 = 0 ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        14,
        24,
        30
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "int pos1 = 0 ;",
        "int pos2 = 1 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        14,
        30
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "int pos1 = 0 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "int pos1 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        16,
        24
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "int pos1 = 1 ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        16,
        24,
        30
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "int pos1 = 1 ;",
        "int pos2 = 1 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        16,
        30
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "int pos1 = 1 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        24
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        24,
        30
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "int pos2 = 1 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        3,
        30
      ],
      "mod_code": [
        "char start [ firstLine ] , end = third ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 3,
      "err_msg": "size of array ‘start’ has non-integral type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "sum = start + end ;",
        "cout << \" no\\n \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        14
      ],
      "mod_code": [
        "sum = start + end ;",
        "cout << \" no\\n \" ;",
        "int pos1 = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        16
      ],
      "mod_code": [
        "sum = start + end ;",
        "cout << \" no\\n \" ;",
        "int pos1 = 0 ;",
        "int pos1 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        24
      ],
      "mod_code": [
        "sum = start + end ;",
        "cout << \" no\\n \" ;",
        "int pos1 = 0 ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        30
      ],
      "mod_code": [
        "sum = start + end ;",
        "cout << \" no\\n \" ;",
        "int pos1 = 0 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        16
      ],
      "mod_code": [
        "sum = start + end ;",
        "cout << \" no\\n \" ;",
        "int pos1 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        16,
        24
      ],
      "mod_code": [
        "sum = start + end ;",
        "cout << \" no\\n \" ;",
        "int pos1 = 1 ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        16,
        30
      ],
      "mod_code": [
        "sum = start + end ;",
        "cout << \" no\\n \" ;",
        "int pos1 = 1 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        24
      ],
      "mod_code": [
        "sum = start + end ;",
        "cout << \" no\\n \" ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        24,
        30
      ],
      "mod_code": [
        "sum = start + end ;",
        "cout << \" no\\n \" ;",
        "int pos2 = 1 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        30
      ],
      "mod_code": [
        "sum = start + end ;",
        "cout << \" no\\n \" ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "sum = start + end ;",
        "int pos1 = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        16
      ],
      "mod_code": [
        "sum = start + end ;",
        "int pos1 = 0 ;",
        "int pos1 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        16,
        24
      ],
      "mod_code": [
        "sum = start + end ;",
        "int pos1 = 0 ;",
        "int pos1 = 1 ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        16,
        30
      ],
      "mod_code": [
        "sum = start + end ;",
        "int pos1 = 0 ;",
        "int pos1 = 1 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        24
      ],
      "mod_code": [
        "sum = start + end ;",
        "int pos1 = 0 ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        24,
        30
      ],
      "mod_code": [
        "sum = start + end ;",
        "int pos1 = 0 ;",
        "int pos2 = 1 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        30
      ],
      "mod_code": [
        "sum = start + end ;",
        "int pos1 = 0 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "sum = start + end ;",
        "int pos1 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        16,
        24
      ],
      "mod_code": [
        "sum = start + end ;",
        "int pos1 = 1 ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        16,
        24,
        30
      ],
      "mod_code": [
        "sum = start + end ;",
        "int pos1 = 1 ;",
        "int pos2 = 1 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        16,
        30
      ],
      "mod_code": [
        "sum = start + end ;",
        "int pos1 = 1 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        24
      ],
      "mod_code": [
        "sum = start + end ;",
        "int pos2 = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        24,
        30
      ],
      "mod_code": [
        "sum = start + end ;",
        "int pos2 = 1 ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        30
      ],
      "mod_code": [
        "sum = start + end ;",
        "cout << \" cw \" ;"
      ],
      "err_line": 6,
      "err_msg": "‘sum’ was not declared in this scope"
    }
  ]
}