{
  "meta": {
    "index": 172,
    "hitid": "3THR0FZ95PN3BIGJII36FDB8M4KLO2",
    "workerid": "A1APYLD4DUK33J",
    "probid": "915A",
    "subid": "41740163"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare cmp with integers a , b as arguments , returning boolean",
      "code": "bool cmp ( int a , int b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return a is greater than b",
      "code": "return a > b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare integers n , k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare integer array a size n + 1 , integer i",
      "code": "int a [ n + 1 ] , i ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to n inclusive , read a [ i ]",
      "code": "for ( i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "sort from a + 1 to a + n + 1 using cmp to compare",
      "code": "sort ( a + 1 , a + n + 1 , cmp ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 1 to n inclusive",
      "code": "for ( i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if k % a [ i ] is 0",
      "code": "if ( k % a [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print k / a [ i ] and newline",
      "code": "cout << k / a [ i ] << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool cmp ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int a [ n + 1 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "sort ( a + 1 , a + n + 1 + cmp ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int*’ and ‘bool(int, int)’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "sort ( a + 1 , a + n + 1 + cmp ) ;",
        "int a [ n + 1 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        0
      ],
      "mod_code": [
        "sort ( a + 1 , a + n + 1 + cmp ) ;",
        "int a [ n + 1 ] ;",
        "bool cmp ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        6,
        0,
        5
      ],
      "mod_code": [
        "sort ( a + 1 , a + n + 1 + cmp ) ;",
        "int a [ n + 1 ] ;",
        "bool cmp ( int a , int b ) ;",
        "cin >> n and k ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        6,
        5
      ],
      "mod_code": [
        "sort ( a + 1 , a + n + 1 + cmp ) ;",
        "int a [ n + 1 ] ;",
        "cin >> n and k ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "sort ( a + 1 , a + n + 1 + cmp ) ;",
        "bool cmp ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        0,
        5
      ],
      "mod_code": [
        "sort ( a + 1 , a + n + 1 + cmp ) ;",
        "bool cmp ( int a , int b ) ;",
        "cin >> n and k ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "sort ( a + 1 , a + n + 1 + cmp ) ;",
        "cin >> n and k ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int*’ and ‘bool(int, int)’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "int a [ n + 1 ] ;",
        "bool cmp ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        0,
        5
      ],
      "mod_code": [
        "int a [ n + 1 ] ;",
        "bool cmp ( int a , int b ) ;",
        "cin >> n and k ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "int a [ n + 1 ] ;",
        "cin >> n and k ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "bool cmp ( int a , int b ) ;",
        "cin >> n and k ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}