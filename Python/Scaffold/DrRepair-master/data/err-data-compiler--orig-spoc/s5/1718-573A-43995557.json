{
  "meta": {
    "index": 1718,
    "hitid": "35ZRNT9RUISMVEQUCCZ6JRHRMIQO3O",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "573A",
    "subid": "43995557"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , ans , a = int",
      "code": "int n , ans , a ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "loop while a is a multiple of 3 set a to a / 3",
      "code": "while ( a % 3 == 0 ) a /= 3 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "loop while a is a multiple of 2 set a to a / 2",
      "code": "while ( a % 2 == 0 ) a /= 2 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if i is 0",
      "code": "if ( i == 0 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set ans to a",
      "code": "ans = a ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else if ans is not a",
      "code": "else if ( ans != a )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print \" No \"",
      "code": "puts ( \" No \" ) ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print \" Yes \"",
      "code": "puts ( \" Yes \" ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , ans , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        9,
        8,
        1
      ],
      "mod_code": [
        "for ( int i = n ; i <= n ; i ++ )",
        "else if ( ans != ' a ' )",
        "int ans = a ;",
        "int n , ans , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        9,
        1
      ],
      "mod_code": [
        "for ( int i = n ; i <= n ; i ++ )",
        "else if ( ans != ' a ' )",
        "int n , ans , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        9,
        1,
        4
      ],
      "mod_code": [
        "for ( int i = n ; i <= n ; i ++ )",
        "else if ( ans != ' a ' )",
        "int n , ans , n ;",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        8,
        1
      ],
      "mod_code": [
        "for ( int i = n ; i <= n ; i ++ )",
        "int ans = a ;",
        "int n , ans , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        8,
        1,
        4
      ],
      "mod_code": [
        "for ( int i = n ; i <= n ; i ++ )",
        "int ans = a ;",
        "int n , ans , n ;",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "for ( int i = n ; i <= n ; i ++ )",
        "int n , ans , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        1,
        4
      ],
      "mod_code": [
        "for ( int i = n ; i <= n ; i ++ )",
        "int n , ans , n ;",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        9,
        8,
        1
      ],
      "mod_code": [
        "else if ( ans != ' a ' )",
        "int ans = a ;",
        "int n , ans , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        9,
        8,
        1,
        4
      ],
      "mod_code": [
        "else if ( ans != ' a ' )",
        "int ans = a ;",
        "int n , ans , n ;",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        9,
        8,
        1,
        3
      ],
      "mod_code": [
        "else if ( ans != ' a ' )",
        "int ans = a ;",
        "int n , ans , n ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "else if ( ans != ' a ' )",
        "int n , ans , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        9,
        1,
        4
      ],
      "mod_code": [
        "else if ( ans != ' a ' )",
        "int n , ans , n ;",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        9,
        1,
        4,
        3
      ],
      "mod_code": [
        "else if ( ans != ' a ' )",
        "int n , ans , n ;",
        "cin >> n ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        9,
        1,
        3
      ],
      "mod_code": [
        "else if ( ans != ' a ' )",
        "int n , ans , n ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "int ans = a ;",
        "int n , ans , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        8,
        1,
        4
      ],
      "mod_code": [
        "int ans = a ;",
        "int n , ans , n ;",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        8,
        1,
        4,
        3
      ],
      "mod_code": [
        "int ans = a ;",
        "int n , ans , n ;",
        "cin >> n ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        8,
        1,
        3
      ],
      "mod_code": [
        "int ans = a ;",
        "int n , ans , n ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n , ans , n ;",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        1,
        4,
        3
      ],
      "mod_code": [
        "int n , ans , n ;",
        "cin >> n ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , ans , n ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    }
  ]
}