{
  "meta": {
    "index": 2112,
    "hitid": "3Z33IC0JC0G300O7UXMU5WELI30V9H",
    "workerid": "AUD1I8FZAO4VF",
    "probid": "723A",
    "subid": "48964162"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function cmp which takes long longs a and b and returns a bool",
      "code": "bool cmp ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return a < b",
      "code": "return a < b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "let a be an int array with size 5",
      "code": "int a [ 5 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to 3 read a [ i ]",
      "code": "for ( int i = 0 ; i < 3 ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "call sort on a and a + 3",
      "code": "sort ( a , a + 3 ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "let min be an int with value 99999",
      "code": "int min = 99999 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "let sum1 be an int with value ( a [ 1 ] - a [ 0 ] ) + ( a [ 2 ] - a [ 0 ] )",
      "code": "int sum1 = ( a [ 1 ] - a [ 0 ] ) + ( a [ 2 ] - a [ 0 ] ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "let sum2 be an int with value ( a [ 1 ] - a [ 0 ] ) + ( a [ 2 ] - a [ 1 ] )",
      "code": "int sum2 = ( a [ 1 ] - a [ 0 ] ) + ( a [ 2 ] ) - a [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "let sum3 be an int with value ( a [ 2 ] - a [ 0 ] ) + ( a [ 2 ] - a [ 1 ] )",
      "code": "int sum3 = ( a [ 2 ] - a [ 0 ] ) + ( a [ 2 ] - a [ 1 ] ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if sum1 is less than min then set min to sum1",
      "code": "if ( sum1 < min ) min = sum1 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if sum2 is less than min then set min to sum2",
      "code": "if ( sum2 < min ) min = sum2 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if sum3 is less than min then set min to sum3",
      "code": "if ( sum3 < min ) min = sum3 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print min",
      "code": "cout << min << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool cmp ( long long a returns , long long b )"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sort ( a and a + 3 ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘sort(bool)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int * min = 99999 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "bool cmp ( long long a returns , long long b )",
        "sort ( a and a + 3 ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        0,
        6,
        7
      ],
      "mod_code": [
        "bool cmp ( long long a returns , long long b )",
        "sort ( a and a + 3 ) ;",
        "int * min = 99999 ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        0,
        6,
        7,
        4
      ],
      "mod_code": [
        "bool cmp ( long long a returns , long long b )",
        "sort ( a and a + 3 ) ;",
        "int * min = 99999 ;",
        "char a [ 5 ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        0,
        6,
        4
      ],
      "mod_code": [
        "bool cmp ( long long a returns , long long b )",
        "sort ( a and a + 3 ) ;",
        "char a [ 5 ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "bool cmp ( long long a returns , long long b )",
        "int * min = 99999 ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        0,
        7,
        4
      ],
      "mod_code": [
        "bool cmp ( long long a returns , long long b )",
        "int * min = 99999 ;",
        "char a [ 5 ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "bool cmp ( long long a returns , long long b )",
        "char a [ 5 ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘,’ or ‘...’ before ‘returns’"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "sort ( a and a + 3 ) ;",
        "int * min = 99999 ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘sort(bool)’"
    },
    {
      "mod_line": [
        6,
        7,
        4
      ],
      "mod_code": [
        "sort ( a and a + 3 ) ;",
        "int * min = 99999 ;",
        "char a [ 5 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘sort(bool)’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "sort ( a and a + 3 ) ;",
        "char a [ 5 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘sort(bool)’"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "int * min = 99999 ;",
        "char a [ 5 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    }
  ]
}