{
  "meta": {
    "index": 2389,
    "hitid": "3SNR5F7R92NF9QVO313XILP20W4IEW",
    "workerid": "A1APYLD4DUK33J",
    "probid": "13A",
    "subid": "47330049"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare gcd with integers a , b as arguments , returning integer",
      "code": "int gcd ( int a , int b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return a if b is 0 , else return result of run gcd with b , a % b as arguments",
      "code": "return b == 0 ? a : gcd ( b , a % b ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "create integer A",
      "code": "int A ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read A",
      "code": "cin >> A ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create integer res with res = 0",
      "code": "int res = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for b = 2 to A exclusive",
      "code": "for ( int b = 2 ; b < A ; b ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create integer t with t = A",
      "code": "int t = A ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "while t is true",
      "code": "while ( t )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment res by t % b",
      "code": "res += t % b ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "set t to t / b",
      "code": "t /= b ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "create integer d with d = result of run gcd with res , A - 2 as arguments",
      "code": "int d = gcd ( res , A - 2 ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print res / d print \" / \" print ( A - 2 ) / d , print newline",
      "code": "cout << res / d << \" / \" << ( A - 2 ) / d << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 5,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        8,
        0
      ],
      "mod_code": [
        "return ( b == 0 ? a % b : b % b ) ;",
        "for ( int b = 2 ; b <= A ; b ++ )",
        "int t = ' A ' ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        7,
        9,
        0
      ],
      "mod_code": [
        "return ( b == 0 ? a % b : b % b ) ;",
        "for ( int b = 2 ; b <= A ; b ++ )",
        "while ( t != true )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        7,
        0
      ],
      "mod_code": [
        "return ( b == 0 ? a % b : b % b ) ;",
        "for ( int b = 2 ; b <= A ; b ++ )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        7,
        0,
        15
      ],
      "mod_code": [
        "return ( b == 0 ? a % b : b % b ) ;",
        "for ( int b = 2 ; b <= A ; b ++ )",
        "int gcd ( int a , int b ) ;",
        "cout << res / d << \" / \" << ( A - 2 ) / d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        0
      ],
      "mod_code": [
        "return ( b == 0 ? a % b : b % b ) ;",
        "int t = ' A ' ;",
        "while ( t != true )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        0
      ],
      "mod_code": [
        "return ( b == 0 ? a % b : b % b ) ;",
        "int t = ' A ' ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        0,
        15
      ],
      "mod_code": [
        "return ( b == 0 ? a % b : b % b ) ;",
        "int t = ' A ' ;",
        "int gcd ( int a , int b ) ;",
        "cout << res / d << \" / \" << ( A - 2 ) / d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        0
      ],
      "mod_code": [
        "return ( b == 0 ? a % b : b % b ) ;",
        "while ( t != true )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        9,
        0,
        15
      ],
      "mod_code": [
        "return ( b == 0 ? a % b : b % b ) ;",
        "while ( t != true )",
        "int gcd ( int a , int b ) ;",
        "cout << res / d << \" / \" << ( A - 2 ) / d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "return ( b == 0 ? a % b : b % b ) ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        0,
        15
      ],
      "mod_code": [
        "return ( b == 0 ? a % b : b % b ) ;",
        "int gcd ( int a , int b ) ;",
        "cout << res / d << \" / \" << ( A - 2 ) / d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        0
      ],
      "mod_code": [
        "for ( int b = 2 ; b <= A ; b ++ )",
        "int t = ' A ' ;",
        "while ( t != true )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        8,
        0
      ],
      "mod_code": [
        "for ( int b = 2 ; b <= A ; b ++ )",
        "int t = ' A ' ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        8,
        0,
        15
      ],
      "mod_code": [
        "for ( int b = 2 ; b <= A ; b ++ )",
        "int t = ' A ' ;",
        "int gcd ( int a , int b ) ;",
        "cout << res / d << \" / \" << ( A - 2 ) / d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        9,
        0
      ],
      "mod_code": [
        "for ( int b = 2 ; b <= A ; b ++ )",
        "while ( t != true )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        9,
        0,
        15
      ],
      "mod_code": [
        "for ( int b = 2 ; b <= A ; b ++ )",
        "while ( t != true )",
        "int gcd ( int a , int b ) ;",
        "cout << res / d << \" / \" << ( A - 2 ) / d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "for ( int b = 2 ; b <= A ; b ++ )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        0,
        15
      ],
      "mod_code": [
        "for ( int b = 2 ; b <= A ; b ++ )",
        "int gcd ( int a , int b ) ;",
        "cout << res / d << \" / \" << ( A - 2 ) / d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        9,
        0
      ],
      "mod_code": [
        "int t = ' A ' ;",
        "while ( t != true )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        9,
        0,
        15
      ],
      "mod_code": [
        "int t = ' A ' ;",
        "while ( t != true )",
        "int gcd ( int a , int b ) ;",
        "cout << res / d << \" / \" << ( A - 2 ) / d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "int t = ' A ' ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        0,
        15
      ],
      "mod_code": [
        "int t = ' A ' ;",
        "int gcd ( int a , int b ) ;",
        "cout << res / d << \" / \" << ( A - 2 ) / d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "while ( t != true )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        0,
        15
      ],
      "mod_code": [
        "while ( t != true )",
        "int gcd ( int a , int b ) ;",
        "cout << res / d << \" / \" << ( A - 2 ) / d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;",
        "cout << res / d << \" / \" << ( A - 2 ) / d ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}