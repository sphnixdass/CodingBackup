{
  "meta": {
    "index": 1659,
    "hitid": "3NOEP8XAU4WGWC99B1J9F7BL2GAXPW",
    "workerid": "AIWEXPJAU66D9",
    "probid": "17A",
    "subid": "47968118"
  },
  "lines": [
    {
      "line": 0,
      "text": "maxn = long long constant with value 1e5 + 5",
      "code": "const long long maxn = 1e5 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n and k = long long",
      "code": "long long n , k ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "pv = vector of long long",
      "code": "vector < long long > pv ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "function isprime with long long argument x",
      "code": "bool isprime ( long long x )",
      "indent": 0
    },
    {
      "line": 4,
      "text": "if x is equal 2 or 3 return true",
      "code": "if ( x == 2 || x == 3 ) return true ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 2 to i * i < = x",
      "code": "for ( long long i = 2 ; i * i <= x ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if x divides by i without remainder return false",
      "code": "if ( x % i == 0 ) return false ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return true",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "function ok with long long argument x",
      "code": "bool ok ( long long x )",
      "indent": 0
    },
    {
      "line": 11,
      "text": "for integer i = 0 to length of pv - 1 exclusive",
      "code": "for ( int i = 0 ; i < pv . size ( ) - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if x is equal to pv [ i ] + pv [ i + 1 ]",
      "code": "if ( x == pv [ i ] + pv [ i + 1 ] )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "return true",
      "code": "return true ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else if x is less than pv [ i ] + pv [ i + 1 ]",
      "code": "else if ( x < pv [ i ] + pv [ i + 1 ] )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "return false",
      "code": "return false ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "return false",
      "code": "return false ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 20,
      "text": "for integer i = 2 to 500 inclusive",
      "code": "for ( int i = 2 ; i <= 500 ; i ++ )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if isprime ( i ) push i into pv",
      "code": "if ( isprime ( i ) ) { pv . push_back ( i ) ; }",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "for integer i = 5 to n inclusive incrementing i by 2",
      "code": "for ( int i = 5 ; i <= n ; i += 2 )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "if isprime ( i ) and ok ( i - 1 ) decrement k",
      "code": "if ( isprime ( i ) && ok ( i - 1 ) ) { k -- ; }",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "if k is less or equal 0",
      "code": "if ( k <= 0 )",
      "indent": 1
    },
    {
      "line": 28,
      "text": "print \" YES \" and a new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 30,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "void isprime ( long long x ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "void ok ( long long x )"
      ],
      "err_line": 13,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘class std::vector<long long int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "if ( isprime ( i ) && ok ( i - 1 ) )"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "vector < long long = > pv ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "void isprime ( long long x )"
      ],
      "err_line": 4,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 2 ; i * i <= x ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "void ok ( long long x ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "if ( isprime ( i ) , ok ( i - 1 ) )"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "if ( ! x % i ) return false ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        10
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "if ( ! x % i ) return false ;",
        "void ok ( long long x )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        10,
        11
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "if ( ! x % i ) return false ;",
        "void ok ( long long x )",
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        10,
        25
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "if ( ! x % i ) return false ;",
        "void ok ( long long x )",
        "if ( isprime ( i ) && ok ( i - 1 ) )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        11
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "if ( ! x % i ) return false ;",
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        11,
        25
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "if ( ! x % i ) return false ;",
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )",
        "if ( isprime ( i ) && ok ( i - 1 ) )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        11,
        10
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "if ( ! x % i ) return false ;",
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )",
        "void ok ( long long x ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        25
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "if ( ! x % i ) return false ;",
        "if ( isprime ( i ) && ok ( i - 1 ) )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        25,
        10
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "if ( ! x % i ) return false ;",
        "if ( isprime ( i ) && ok ( i - 1 ) )",
        "void ok ( long long x ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        10
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "if ( ! x % i ) return false ;",
        "void ok ( long long x ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "void ok ( long long x )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        10,
        11
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "void ok ( long long x )",
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        10,
        11,
        25
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "void ok ( long long x )",
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )",
        "if ( isprime ( i ) && ok ( i - 1 ) )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        10,
        25
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "void ok ( long long x )",
        "if ( isprime ( i ) && ok ( i - 1 ) )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        11,
        25
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )",
        "if ( isprime ( i ) && ok ( i - 1 ) )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        11,
        25,
        10
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )",
        "if ( isprime ( i ) && ok ( i - 1 ) )",
        "void ok ( long long x ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        11,
        10
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )",
        "void ok ( long long x ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        25
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "if ( isprime ( i ) && ok ( i - 1 ) )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        25,
        10
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "if ( isprime ( i ) && ok ( i - 1 ) )",
        "void ok ( long long x ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "void isprime ( long long x ) ;",
        "void ok ( long long x ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "if ( ! x % i ) return false ;",
        "void ok ( long long x )"
      ],
      "err_line": 13,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        10,
        11
      ],
      "mod_code": [
        "if ( ! x % i ) return false ;",
        "void ok ( long long x )",
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘class std::vector<long long int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        25
      ],
      "mod_code": [
        "if ( ! x % i ) return false ;",
        "void ok ( long long x )",
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )",
        "if ( isprime ( i ) && ok ( i - 1 ) )"
      ],
      "err_line": 11,
      "err_msg": "‘class std::vector<long long int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        6,
        10,
        25
      ],
      "mod_code": [
        "if ( ! x % i ) return false ;",
        "void ok ( long long x )",
        "if ( isprime ( i ) && ok ( i - 1 ) )"
      ],
      "err_line": 13,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "if ( ! x % i ) return false ;",
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘class std::vector<long long int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        6,
        11,
        25
      ],
      "mod_code": [
        "if ( ! x % i ) return false ;",
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )",
        "if ( isprime ( i ) && ok ( i - 1 ) )"
      ],
      "err_line": 11,
      "err_msg": "‘class std::vector<long long int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        6,
        11,
        25,
        10
      ],
      "mod_code": [
        "if ( ! x % i ) return false ;",
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )",
        "if ( isprime ( i ) && ok ( i - 1 ) )",
        "void ok ( long long x ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        11,
        10
      ],
      "mod_code": [
        "if ( ! x % i ) return false ;",
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )",
        "void ok ( long long x ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        25
      ],
      "mod_code": [
        "if ( ! x % i ) return false ;",
        "if ( isprime ( i ) && ok ( i - 1 ) )"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        25,
        10
      ],
      "mod_code": [
        "if ( ! x % i ) return false ;",
        "if ( isprime ( i ) && ok ( i - 1 ) )",
        "void ok ( long long x ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "if ( ! x % i ) return false ;",
        "void ok ( long long x ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "void ok ( long long x )",
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘class std::vector<long long int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        10,
        11,
        25
      ],
      "mod_code": [
        "void ok ( long long x )",
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )",
        "if ( isprime ( i ) && ok ( i - 1 ) )"
      ],
      "err_line": 11,
      "err_msg": "‘class std::vector<long long int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        10,
        25
      ],
      "mod_code": [
        "void ok ( long long x )",
        "if ( isprime ( i ) && ok ( i - 1 ) )"
      ],
      "err_line": 13,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )",
        "if ( isprime ( i ) && ok ( i - 1 ) )"
      ],
      "err_line": 11,
      "err_msg": "‘class std::vector<long long int>’ has no member named ‘length’"
    },
    {
      "mod_line": [
        11,
        25,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )",
        "if ( isprime ( i ) && ok ( i - 1 ) )",
        "void ok ( long long x ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < pv . length ( ) - 1 ; i ++ )",
        "void ok ( long long x ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        25,
        10
      ],
      "mod_code": [
        "if ( isprime ( i ) && ok ( i - 1 ) )",
        "void ok ( long long x ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}