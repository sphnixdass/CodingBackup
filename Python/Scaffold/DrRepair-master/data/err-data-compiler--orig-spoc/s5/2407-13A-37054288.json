{
  "meta": {
    "index": 2407,
    "hitid": "3T8DUCXY0N0ON8KIP2MF4EQ0KG59TV",
    "workerid": "AIWEXPJAU66D9",
    "probid": "13A",
    "subid": "37054288"
  },
  "lines": [
    {
      "line": 0,
      "text": "function gcd with integer arguments a and b that returns integer",
      "code": "int gcd ( int a , int b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if a is less than b , swap a with b",
      "code": "if ( a < b ) swap ( a , b ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while a % b is 1",
      "code": "while ( a % b )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "integer t = a % b",
      "code": "int t = a % b ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "assign value of b to the a",
      "code": "a = b ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "set value of b to t",
      "code": "b = t ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "return b",
      "code": "return b ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 10,
      "text": "let n and sum be integers with sum = 0",
      "code": "int n , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 2 to n exclusive",
      "code": "for ( int i = 2 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "create integer t with value n",
      "code": "int t = n ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "while t",
      "code": "while ( t )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increase sum by t % i",
      "code": "sum += t % i ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "divide t by i",
      "code": "t /= i ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "set integer k to gcd ( sum , n - 2 )",
      "code": "int k = gcd ( sum , n - 2 ) ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print sum / k , \" / \" , ( n - 2 ) / k and a new line",
      "code": "cout << sum / k << \" / \" << ( n - 2 ) / k << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "if ( a < b ) swap ( b ) ;"
      ],
      "err_line": 1,
      "err_msg": "no matching function for call to ‘swap(int&)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "* b = t ;"
      ],
      "err_line": 5,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int n and sum = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 2 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "int k to gcd ( sum , n - 2 ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "for ( i = 2 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        5
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "for ( i = 2 ; i < n ; i ++ )",
        "* b = t ;"
      ],
      "err_line": 5,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        12,
        5,
        14
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "for ( i = 2 ; i < n ; i ++ )",
        "* b = t ;",
        "while ( t -- )"
      ],
      "err_line": 5,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        12,
        5,
        20
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "for ( i = 2 ; i < n ; i ++ )",
        "* b = t ;",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        12,
        5,
        0
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "for ( i = 2 ; i < n ; i ++ )",
        "* b = t ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        12,
        14
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "for ( i = 2 ; i < n ; i ++ )",
        "while ( t -- )"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        14,
        20
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "for ( i = 2 ; i < n ; i ++ )",
        "while ( t -- )",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        14,
        0
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "for ( i = 2 ; i < n ; i ++ )",
        "while ( t -- )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        12,
        20
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "for ( i = 2 ; i < n ; i ++ )",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        20,
        0
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "for ( i = 2 ; i < n ; i ++ )",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        12,
        0
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "for ( i = 2 ; i < n ; i ++ )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "* b = t ;"
      ],
      "err_line": 5,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        5,
        14
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "* b = t ;",
        "while ( t -- )"
      ],
      "err_line": 5,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        5,
        14,
        20
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "* b = t ;",
        "while ( t -- )",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        5,
        14,
        0
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "* b = t ;",
        "while ( t -- )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        5,
        20
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "* b = t ;",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        2,
        5,
        20,
        0
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "* b = t ;",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        5,
        0
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "* b = t ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        14,
        20
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "while ( t -- )",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        2,
        14,
        20,
        0
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "while ( t -- )",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        14,
        0
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "while ( t -- )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        20
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        2,
        20,
        0
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        0
      ],
      "mod_code": [
        "while ( a % b == 1 )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "for ( i = 2 ; i < n ; i ++ )",
        "* b = t ;"
      ],
      "err_line": 5,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        5,
        14
      ],
      "mod_code": [
        "for ( i = 2 ; i < n ; i ++ )",
        "* b = t ;",
        "while ( t -- )"
      ],
      "err_line": 5,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        5,
        14,
        20
      ],
      "mod_code": [
        "for ( i = 2 ; i < n ; i ++ )",
        "* b = t ;",
        "while ( t -- )",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        5,
        14,
        0
      ],
      "mod_code": [
        "for ( i = 2 ; i < n ; i ++ )",
        "* b = t ;",
        "while ( t -- )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        5,
        20
      ],
      "mod_code": [
        "for ( i = 2 ; i < n ; i ++ )",
        "* b = t ;",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        5,
        20,
        0
      ],
      "mod_code": [
        "for ( i = 2 ; i < n ; i ++ )",
        "* b = t ;",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        5,
        0
      ],
      "mod_code": [
        "for ( i = 2 ; i < n ; i ++ )",
        "* b = t ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "for ( i = 2 ; i < n ; i ++ )",
        "while ( t -- )"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        20
      ],
      "mod_code": [
        "for ( i = 2 ; i < n ; i ++ )",
        "while ( t -- )",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        20,
        0
      ],
      "mod_code": [
        "for ( i = 2 ; i < n ; i ++ )",
        "while ( t -- )",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        14,
        0
      ],
      "mod_code": [
        "for ( i = 2 ; i < n ; i ++ )",
        "while ( t -- )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        20
      ],
      "mod_code": [
        "for ( i = 2 ; i < n ; i ++ )",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        20,
        0
      ],
      "mod_code": [
        "for ( i = 2 ; i < n ; i ++ )",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        0
      ],
      "mod_code": [
        "for ( i = 2 ; i < n ; i ++ )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "* b = t ;",
        "while ( t -- )"
      ],
      "err_line": 5,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        5,
        14,
        20
      ],
      "mod_code": [
        "* b = t ;",
        "while ( t -- )",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        5,
        14,
        20,
        0
      ],
      "mod_code": [
        "* b = t ;",
        "while ( t -- )",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        14,
        0
      ],
      "mod_code": [
        "* b = t ;",
        "while ( t -- )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        20
      ],
      "mod_code": [
        "* b = t ;",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        5,
        20,
        0
      ],
      "mod_code": [
        "* b = t ;",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "* b = t ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        20
      ],
      "mod_code": [
        "while ( t -- )",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        14,
        20,
        0
      ],
      "mod_code": [
        "while ( t -- )",
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        0
      ],
      "mod_code": [
        "while ( t -- )",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        0
      ],
      "mod_code": [
        "cout << sum / k , \" / \" , ( n - 2 ) / k << endl ;",
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}