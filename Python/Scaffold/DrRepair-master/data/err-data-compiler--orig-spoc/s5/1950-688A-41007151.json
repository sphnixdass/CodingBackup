{
  "meta": {
    "index": 1950,
    "hitid": "3S1WOPCJFGNB41FULJOXUM42ED3JEO",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "688A",
    "subid": "41007151"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int n , c , m , ct , i , j , ck , set ct and m to 0",
      "code": "int n , c , m = 0 , ct = 0 , i , j , ck ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and c",
      "code": "cin >> n >> c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to c exclusive",
      "code": "for ( i = 0 ; i < c ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "ck = 0",
      "code": "ck = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for j = 0 to n exclusive",
      "code": "for ( j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if s [ j ] = 0",
      "code": "if ( s [ j ] == ' 0 ' )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "ck = 1",
      "code": "ck = 1 ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if ck equal to 1",
      "code": "if ( ck == 1 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increment ct",
      "code": "ct ++ ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 16,
      "text": "ct = 0",
      "code": "ct = 0 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "set m to max of m and ct",
      "code": "m = max ( m , ct ) ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print m",
      "code": "cout << m << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , ck , ck , ck ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> c )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "if ( s [ j ] == 0 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        8,
        16
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "if ( s [ j ] == 0 )",
        "int ct = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        8,
        16,
        3
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "if ( s [ j ] == 0 )",
        "int ct = 0 ;",
        "string n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        8,
        16,
        10
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "if ( s [ j ] == 0 )",
        "int ct = 0 ;",
        "break the ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        8,
        16,
        6
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "if ( s [ j ] == 0 )",
        "int ct = 0 ;",
        "cout << s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        8,
        3
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "if ( s [ j ] == 0 )",
        "string n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        8,
        3,
        10
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "if ( s [ j ] == 0 )",
        "string n ;",
        "break the ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        8,
        3,
        6
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "if ( s [ j ] == 0 )",
        "string n ;",
        "cout << s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        8,
        10
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "if ( s [ j ] == 0 )",
        "break the ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        8,
        10,
        6
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "if ( s [ j ] == 0 )",
        "break the ;",
        "cout << s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        8,
        6
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "if ( s [ j ] == 0 )",
        "cout << s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "int ct = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        16,
        3
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "int ct = 0 ;",
        "string n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        16,
        3,
        10
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "int ct = 0 ;",
        "string n ;",
        "break the ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        16,
        3,
        6
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "int ct = 0 ;",
        "string n ;",
        "cout << s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        16,
        10
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "int ct = 0 ;",
        "break the ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        16,
        10,
        6
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "int ct = 0 ;",
        "break the ;",
        "cout << s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        16,
        6
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "int ct = 0 ;",
        "cout << s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "string n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        3,
        10
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "string n ;",
        "break the ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        3,
        10,
        6
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "string n ;",
        "break the ;",
        "cout << s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        3,
        6
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "string n ;",
        "cout << s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "break the ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        10,
        6
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "break the ;",
        "cout << s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , c , m , ct = 0 , i , j , ck , ck ;",
        "cout << s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ck’"
    },
    {
      "mod_line": [
        8,
        16,
        3
      ],
      "mod_code": [
        "if ( s [ j ] == 0 )",
        "int ct = 0 ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        8,
        16,
        3,
        10
      ],
      "mod_code": [
        "if ( s [ j ] == 0 )",
        "int ct = 0 ;",
        "string n ;",
        "break the ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        8,
        16,
        3,
        6
      ],
      "mod_code": [
        "if ( s [ j ] == 0 )",
        "int ct = 0 ;",
        "string n ;",
        "cout << s << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        8,
        16,
        10
      ],
      "mod_code": [
        "if ( s [ j ] == 0 )",
        "int ct = 0 ;",
        "break the ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        8,
        16,
        10,
        6
      ],
      "mod_code": [
        "if ( s [ j ] == 0 )",
        "int ct = 0 ;",
        "break the ;",
        "cout << s << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "if ( s [ j ] == 0 )",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        8,
        3,
        10
      ],
      "mod_code": [
        "if ( s [ j ] == 0 )",
        "string n ;",
        "break the ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        8,
        3,
        10,
        6
      ],
      "mod_code": [
        "if ( s [ j ] == 0 )",
        "string n ;",
        "break the ;",
        "cout << s << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        8,
        3,
        6
      ],
      "mod_code": [
        "if ( s [ j ] == 0 )",
        "string n ;",
        "cout << s << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "if ( s [ j ] == 0 )",
        "break the ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        8,
        10,
        6
      ],
      "mod_code": [
        "if ( s [ j ] == 0 )",
        "break the ;",
        "cout << s << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        16,
        3
      ],
      "mod_code": [
        "int ct = 0 ;",
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        16,
        3,
        10
      ],
      "mod_code": [
        "int ct = 0 ;",
        "string n ;",
        "break the ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        16,
        3,
        10,
        6
      ],
      "mod_code": [
        "int ct = 0 ;",
        "string n ;",
        "break the ;",
        "cout << s << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        16,
        3,
        6
      ],
      "mod_code": [
        "int ct = 0 ;",
        "string n ;",
        "cout << s << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        16,
        10
      ],
      "mod_code": [
        "int ct = 0 ;",
        "break the ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        16,
        10,
        6
      ],
      "mod_code": [
        "int ct = 0 ;",
        "break the ;",
        "cout << s << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "string n ;",
        "break the ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        3,
        10,
        6
      ],
      "mod_code": [
        "string n ;",
        "break the ;",
        "cout << s << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "string n ;",
        "cout << s << endl ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "break the ;",
        "cout << s << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘the’"
    }
  ]
}