{
  "meta": {
    "index": 2291,
    "hitid": "30QQTY5GMKEZ92BEAAE5VELW9627UR",
    "workerid": "A1APYLD4DUK33J",
    "probid": "713A",
    "subid": "45260096"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare match with long long num as argument , returning long long",
      "code": "long long match ( long long num )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long long result = 0",
      "code": "long long result = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare long long base = 10",
      "code": "long long base = 10 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while 10 * base is less than or equal to num , let base be base * 10",
      "code": "while ( 10 * base <= num ) base *= 10 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while base is true",
      "code": "while ( base )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let result be result * 10",
      "code": "result *= 10 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment result by ( num / base ) % 2",
      "code": "result += ( num / base ) % 2 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "let base be base / 10",
      "code": "base /= 10 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "return result from function",
      "code": "return result ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 12,
      "text": "declare long long set arr",
      "code": "set < long long > arr ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "declare map from long long to long long arr2",
      "code": "map < long long , long long > arr2 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "declare map iterator from long long to long long it",
      "code": "map < long long , long long > :: iterator it ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "declare long long n",
      "code": "long long n ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "declare character c",
      "code": "char c ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "declare long long num",
      "code": "long long num ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "read c and num",
      "code": "cin >> c >> num ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if c is ' + '",
      "code": "if ( c == ' + ' )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "increment arr [ result of run match with num as argument ]",
      "code": "arr2 [ match ( num ) ] ++ ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "else if c is ' - '",
      "code": "else if ( c == ' - ' )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "increment arr2 [ result of run match ( num ) ]",
      "code": "arr2 [ match ( num ) ] -- ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 26,
      "text": "print arrr2 [ result of run match ( num ) ]",
      "code": "cout << arr2 [ match ( num ) ] << endl ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "arr [ match ( num ) ] ++ ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "arr2 [ match ++ ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "cout << arrr2 [ match . match ( num ) ] << endl ;"
      ],
      "err_line": 26,
      "err_msg": "‘arrr2’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long match ( long long num ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "return ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with no value, in function returning ‘long long int’ [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "map < long long , long long arr2 ;"
      ],
      "err_line": 13,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "char c [ 8 ] ;"
      ],
      "err_line": 21,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "if ( c == ' + ' ) c ++ ;"
      ],
      "err_line": 23,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "arr [ match ] ++ ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<long long int>’ and ‘long long int(long long int)’)"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "arr2 [ match ++ ( num ) ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "cout << arrr2 [ match ] . run ( ) << endl ;"
      ],
      "err_line": 26,
      "err_msg": "‘arrr2’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        22
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "arr [ match ( num ) ] ++ ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        22,
        24
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "arr [ match ( num ) ] ++ ;",
        "arr2 [ match ++ ] ++ ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        22,
        24,
        26
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "arr [ match ( num ) ] ++ ;",
        "arr2 [ match ++ ] ++ ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        22,
        24,
        0
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "arr [ match ( num ) ] ++ ;",
        "arr2 [ match ++ ] ++ ;",
        "long long match ( long long num ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        22,
        24,
        20
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "arr [ match ( num ) ] ++ ;",
        "arr2 [ match ++ ] ++ ;",
        "cin >> c >> c ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        22,
        26
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "arr [ match ( num ) ] ++ ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        22,
        26,
        0
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "arr [ match ( num ) ] ++ ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;",
        "long long match ( long long num ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        22,
        26,
        20
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "arr [ match ( num ) ] ++ ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;",
        "cin >> c >> c ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        22,
        0
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "arr [ match ( num ) ] ++ ;",
        "long long match ( long long num ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        22,
        0,
        20
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "arr [ match ( num ) ] ++ ;",
        "long long match ( long long num ) ;",
        "cin >> c >> c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        22,
        20
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "arr [ match ( num ) ] ++ ;",
        "cin >> c >> c ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        3,
        24
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "arr2 [ match ++ ] ++ ;"
      ],
      "err_line": 24,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        3,
        24,
        26
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "arr2 [ match ++ ] ++ ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;"
      ],
      "err_line": 24,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        3,
        24,
        26,
        0
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "arr2 [ match ++ ] ++ ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;",
        "long long match ( long long num ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        24,
        26,
        20
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "arr2 [ match ++ ] ++ ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;",
        "cin >> c >> c ;"
      ],
      "err_line": 24,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        3,
        24,
        0
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "arr2 [ match ++ ] ++ ;",
        "long long match ( long long num ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        24,
        0,
        20
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "arr2 [ match ++ ] ++ ;",
        "long long match ( long long num ) ;",
        "cin >> c >> c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        24,
        20
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "arr2 [ match ++ ] ++ ;",
        "cin >> c >> c ;"
      ],
      "err_line": 24,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        3,
        26
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;"
      ],
      "err_line": 26,
      "err_msg": "‘arrr2’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        26,
        0
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;",
        "long long match ( long long num ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        26,
        0,
        20
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;",
        "long long match ( long long num ) ;",
        "cin >> c >> c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        26,
        20
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;",
        "cin >> c >> c ;"
      ],
      "err_line": 26,
      "err_msg": "‘arrr2’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "long long match ( long long num ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        0,
        20
      ],
      "mod_code": [
        "while ( 10 * 10 <= num ) base = base * 10 ;",
        "long long match ( long long num ) ;",
        "cin >> c >> c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        24
      ],
      "mod_code": [
        "arr [ match ( num ) ] ++ ;",
        "arr2 [ match ++ ] ++ ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        22,
        24,
        26
      ],
      "mod_code": [
        "arr [ match ( num ) ] ++ ;",
        "arr2 [ match ++ ] ++ ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        22,
        24,
        26,
        0
      ],
      "mod_code": [
        "arr [ match ( num ) ] ++ ;",
        "arr2 [ match ++ ] ++ ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;",
        "long long match ( long long num ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        24,
        26,
        20
      ],
      "mod_code": [
        "arr [ match ( num ) ] ++ ;",
        "arr2 [ match ++ ] ++ ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;",
        "cin >> c >> c ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        22,
        24,
        0
      ],
      "mod_code": [
        "arr [ match ( num ) ] ++ ;",
        "arr2 [ match ++ ] ++ ;",
        "long long match ( long long num ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        24,
        0,
        20
      ],
      "mod_code": [
        "arr [ match ( num ) ] ++ ;",
        "arr2 [ match ++ ] ++ ;",
        "long long match ( long long num ) ;",
        "cin >> c >> c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        24,
        20
      ],
      "mod_code": [
        "arr [ match ( num ) ] ++ ;",
        "arr2 [ match ++ ] ++ ;",
        "cin >> c >> c ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        22,
        26
      ],
      "mod_code": [
        "arr [ match ( num ) ] ++ ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        22,
        26,
        0
      ],
      "mod_code": [
        "arr [ match ( num ) ] ++ ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;",
        "long long match ( long long num ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        26,
        0,
        20
      ],
      "mod_code": [
        "arr [ match ( num ) ] ++ ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;",
        "long long match ( long long num ) ;",
        "cin >> c >> c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        26,
        20
      ],
      "mod_code": [
        "arr [ match ( num ) ] ++ ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;",
        "cin >> c >> c ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        22,
        0
      ],
      "mod_code": [
        "arr [ match ( num ) ] ++ ;",
        "long long match ( long long num ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        0,
        20
      ],
      "mod_code": [
        "arr [ match ( num ) ] ++ ;",
        "long long match ( long long num ) ;",
        "cin >> c >> c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        20
      ],
      "mod_code": [
        "arr [ match ( num ) ] ++ ;",
        "cin >> c >> c ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::set<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        24,
        26
      ],
      "mod_code": [
        "arr2 [ match ++ ] ++ ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;"
      ],
      "err_line": 24,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        24,
        26,
        0
      ],
      "mod_code": [
        "arr2 [ match ++ ] ++ ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;",
        "long long match ( long long num ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        24,
        26,
        0,
        20
      ],
      "mod_code": [
        "arr2 [ match ++ ] ++ ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;",
        "long long match ( long long num ) ;",
        "cin >> c >> c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        24,
        26,
        20
      ],
      "mod_code": [
        "arr2 [ match ++ ] ++ ;",
        "cout << arrr2 [ match . match ( num ) ] << endl ;",
        "cin >> c >> c ;"
      ],
      "err_line": 24,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        24,
        0
      ],
      "mod_code": [
        "arr2 [ match ++ ] ++ ;",
        "long long match ( long long num ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        24,
        0,
        20
      ],
      "mod_code": [
        "arr2 [ match ++ ] ++ ;",
        "long long match ( long long num ) ;",
        "cin >> c >> c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        24,
        20
      ],
      "mod_code": [
        "arr2 [ match ++ ] ++ ;",
        "cin >> c >> c ;"
      ],
      "err_line": 24,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        26,
        0
      ],
      "mod_code": [
        "cout << arrr2 [ match . match ( num ) ] << endl ;",
        "long long match ( long long num ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        0,
        20
      ],
      "mod_code": [
        "cout << arrr2 [ match . match ( num ) ] << endl ;",
        "long long match ( long long num ) ;",
        "cin >> c >> c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        20
      ],
      "mod_code": [
        "cout << arrr2 [ match . match ( num ) ] << endl ;",
        "cin >> c >> c ;"
      ],
      "err_line": 26,
      "err_msg": "‘arrr2’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        20
      ],
      "mod_code": [
        "long long match ( long long num ) ;",
        "cin >> c >> c ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}