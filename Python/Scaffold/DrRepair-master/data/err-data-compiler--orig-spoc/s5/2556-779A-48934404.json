{
  "meta": {
    "index": 2556,
    "hitid": "3XQ4XW3OD96C8OM4FT2AKMM0DTZ2SU",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "779A",
    "subid": "48934404"
  },
  "lines": [
    {
      "line": 0,
      "text": "id = int , int map",
      "code": "map < int , int > id ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m , k , x , y , sum , cnt , ans = int and f , g = int array of size 10 each",
      "code": "int n , m , k , x , y , sum , cnt , ans , f [ 10 ] , g [ 10 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n inclusive read x then increment f [ x ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> x , f [ x ] ++ ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive read x then increment g [ x ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> x , g [ x ] ++ ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to 5 inclusive",
      "code": "for ( int i = 1 ; i <= 5 ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if f [ i ] + g [ i ] is uneven",
      "code": "if ( ( f [ i ] + g [ i ] ) % 2 == 1 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for i = 1 to 5 inclusive increment ans by absolute of ( f [ i ] - ( f [ i ] + g [ i ] ) / 2 )",
      "code": "for ( int i = 1 ; i <= 5 ; i ++ ) ans += abs ( f [ i ] - ( f [ i ] + g [ i ] ) / 2 ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print ans / 2",
      "code": "cout << ans / 2 << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , k , x , y , y , g , f [ 10 ] , g [ 10 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        4,
        5
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        7
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "if ( f [ i ] + g [ i ] % 2 != 0 )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        11
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "for ( int i = 1 ; i <= 5 ; i ++ ) { ans += abs ( f [ i ] - ( f [ i ] + g [ i ] ) ) ; }"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        4,
        7
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "if ( f [ i ] + g [ i ] % 2 != 0 )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        4,
        7,
        11
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "if ( f [ i ] + g [ i ] % 2 != 0 )",
        "for ( int i = 1 ; i <= 5 ; i ++ ) { ans += abs ( f [ i ] - ( f [ i ] + g [ i ] ) ) ; }"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        4,
        11
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "for ( int i = 1 ; i <= 5 ; i ++ ) { ans += abs ( f [ i ] - ( f [ i ] + g [ i ] ) ) ; }"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        5,
        7
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "if ( f [ i ] + g [ i ] % 2 != 0 )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        5,
        7,
        11
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "if ( f [ i ] + g [ i ] % 2 != 0 )",
        "for ( int i = 1 ; i <= 5 ; i ++ ) { ans += abs ( f [ i ] - ( f [ i ] + g [ i ] ) ) ; }"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        5,
        7,
        4
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "if ( f [ i ] + g [ i ] % 2 != 0 )",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x >> f [ x ] ; }"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        5,
        11
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "for ( int i = 1 ; i <= 5 ; i ++ ) { ans += abs ( f [ i ] - ( f [ i ] + g [ i ] ) ) ; }"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        5,
        11,
        4
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "for ( int i = 1 ; i <= 5 ; i ++ ) { ans += abs ( f [ i ] - ( f [ i ] + g [ i ] ) ) ; }",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x >> f [ x ] ; }"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        5,
        4
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x >> f [ x ] ; }"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "if ( f [ i ] + g [ i ] % 2 != 0 )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        7,
        11
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "if ( f [ i ] + g [ i ] % 2 != 0 )",
        "for ( int i = 1 ; i <= 5 ; i ++ ) { ans += abs ( f [ i ] - ( f [ i ] + g [ i ] ) ) ; }"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        7,
        11,
        4
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "if ( f [ i ] + g [ i ] % 2 != 0 )",
        "for ( int i = 1 ; i <= 5 ; i ++ ) { ans += abs ( f [ i ] - ( f [ i ] + g [ i ] ) ) ; }",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x >> f [ x ] ; }"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        7,
        4
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "if ( f [ i ] + g [ i ] % 2 != 0 )",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x >> f [ x ] ; }"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "for ( int i = 1 ; i <= 5 ; i ++ ) { ans += abs ( f [ i ] - ( f [ i ] + g [ i ] ) ) ; }"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        11,
        4
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "for ( int i = 1 ; i <= 5 ; i ++ ) { ans += abs ( f [ i ] - ( f [ i ] + g [ i ] ) ) ; }",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x >> f [ x ] ; }"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n , m , k , x , y , y , sum , f [ 10 ] , g [ 10 ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x >> f [ x ] ; }"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int y’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        5,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "if ( f [ i ] + g [ i ] % 2 != 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "if ( f [ i ] + g [ i ] % 2 != 0 )",
        "for ( int i = 1 ; i <= 5 ; i ++ ) { ans += abs ( f [ i ] - ( f [ i ] + g [ i ] ) ) ; }"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        5,
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "for ( int i = 1 ; i <= 5 ; i ++ ) { ans += abs ( f [ i ] - ( f [ i ] + g [ i ] ) ) ; }"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "if ( f [ i ] + g [ i ] % 2 != 0 )"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "if ( f [ i ] + g [ i ] % 2 != 0 )",
        "for ( int i = 1 ; i <= 5 ; i ++ ) { ans += abs ( f [ i ] - ( f [ i ] + g [ i ] ) ) ; }"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "for ( int i = 1 ; i <= 5 ; i ++ ) { ans += abs ( f [ i ] - ( f [ i ] + g [ i ] ) ) ; }"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "if ( f [ i ] + g [ i ] % 2 != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        7,
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "if ( f [ i ] + g [ i ] % 2 != 0 )",
        "for ( int i = 1 ; i <= 5 ; i ++ ) { ans += abs ( f [ i ] - ( f [ i ] + g [ i ] ) ) ; }"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        7,
        11,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "if ( f [ i ] + g [ i ] % 2 != 0 )",
        "for ( int i = 1 ; i <= 5 ; i ++ ) { ans += abs ( f [ i ] - ( f [ i ] + g [ i ] ) ) ; }",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x >> f [ x ] ; }"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        7,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "if ( f [ i ] + g [ i ] % 2 != 0 )",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x >> f [ x ] ; }"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "for ( int i = 1 ; i <= 5 ; i ++ ) { ans += abs ( f [ i ] - ( f [ i ] + g [ i ] ) ) ; }"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        11,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "for ( int i = 1 ; i <= 5 ; i ++ ) { ans += abs ( f [ i ] - ( f [ i ] + g [ i ] ) ) ; }",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x >> f [ x ] ; }"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x [ x ] ; }",
        "for ( int i = 1 ; i <= n ; i ++ ) { cin >> x >> f [ x ] ; }"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    }
  ]
}