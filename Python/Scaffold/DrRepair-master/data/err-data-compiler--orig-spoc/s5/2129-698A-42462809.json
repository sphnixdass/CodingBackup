{
  "meta": {
    "index": 2129,
    "hitid": "3UOMW19E6D0O04GV0QE83OLUB0YC55",
    "workerid": "A1APYLD4DUK33J",
    "probid": "698A",
    "subid": "42462809"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant integer maxn = 0x3f3f3f3f",
      "code": "const int maxn = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integer array day size n",
      "code": "int day [ n ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive , read day [ i ]",
      "code": "for ( int i = 0 ; i < n ; ++ i ) cin >> day [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare integer array dp size n by 3",
      "code": "int dp [ n ] [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "let dp [ i ] [ 0 ] be 1",
      "code": "dp [ i ] [ 0 ] = 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if day [ i ] is 0",
      "code": "if ( day [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "let dp [ i ] [ 1 ] be maxn",
      "code": "dp [ i ] [ 1 ] = maxn ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "let dp [ i ] [ 2 ] be maxn",
      "code": "dp [ i ] [ 2 ] = maxn ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else if day [ i ] is 1",
      "code": "else if ( day [ i ] == 1 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "let dp [ i ] [ 1 ] be 0",
      "code": "dp [ i ] [ 1 ] = 0 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "let dp [ i ] [ 2 ] be maxn",
      "code": "dp [ i ] [ 2 ] = maxn ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else if day [ i ] is 2",
      "code": "else if ( day [ i ] == 2 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "let dp [ i ] [ 1 ] be maxn",
      "code": "dp [ i ] [ 1 ] = maxn ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "let dp [ i ] [ 2 ] be 0",
      "code": "dp [ i ] [ 2 ] = 0 ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else if day [ i ] is 3",
      "code": "else if ( day [ i ] == 3 )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "let dp [ i ] [ 1 ] be 0",
      "code": "dp [ i ] [ 1 ] = 0 ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "let dp [ i ] [ 2 ] be 0",
      "code": "dp [ i ] [ 2 ] = 0 ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "let dp [ i ] [ 0 ] be minimum of ( dp [ i - 1 ] [ 0 ] and minimum of ( dp [ i - 1 ] [ 1 ] and dp [ i - 1 ] [ 2 ] ) ) + 1",
      "code": "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] , dp [ i - 1 ] [ 2 ] ) ) + 1 ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "if day [ i ] is 1",
      "code": "if ( day [ i ] == 1 )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "let dp [ i ] [ 1 ] be minimum of dp [ i - 1 ] [ 0 ] and dp [ i - 1 ] [ 2 ]",
      "code": "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] , dp [ i - 1 ] [ 2 ] ) ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "else if day [ i ] is 2",
      "code": "else if ( day [ i ] == 2 )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "let dp [ i ] [ 2 ] be minimum of dp [ i - 1 ] [ 0 ] , dp [ i - 1 ] [ 1 ]",
      "code": "dp [ i ] [ 2 ] = min ( dp [ i - 1 ] [ 0 ] , dp [ i - 1 ] [ 1 ] ) ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "else if day [ i ] is 3",
      "code": "else if ( day [ i ] == 3 )",
      "indent": 2
    },
    {
      "line": 30,
      "text": "let dp [ i ] [ 1 ] be minimum of ( dp [ i - 1 ] [ 0 ] , dp [ i - 1 ] [ 2 ] )",
      "code": "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] , dp [ i - 1 ] [ 2 ] ) ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "let dp [ i ] [ 2 ] be minimum of ( dp [ i - 1 ] [ 0 ] and dp [ i - 1 ] [ 1 ] )",
      "code": "dp [ i ] [ 2 ] = min ( dp [ i - 1 ] [ 0 ] , dp [ i - 1 ] [ 1 ] ) ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 34,
      "text": "let min be maxn",
      "code": "int min = maxn ;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; ++ i )",
      "indent": 1
    },
    {
      "line": 36,
      "text": "if min is greater than dp [ n - 1 ] [ i ] , let min be dp [ n - 1 ] [ i ]",
      "code": "if ( min > dp [ n - 1 ] [ i ] ) min = dp [ n - 1 ] [ i ] ;",
      "indent": 2
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 38,
      "text": "print min , newline",
      "code": "cout << min << endl ;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;"
      ],
      "err_line": 24,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "min = maxn ;"
      ],
      "err_line": 34,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 5,
      "err_msg": "‘day’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int dp [ n + 3 ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 26,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "dp [ i ] [ 2 ] = min ( dp [ i - 1 ] [ 0 ] , dp [ i - 1 ] [ 1 ] ;"
      ],
      "err_line": 28,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "dp [ i ] [ 2 ] = min ( dp [ i - 1 ] [ 0 ] [ 1 ] , dp [ i - 1 ] [ 1 ] ) ;"
      ],
      "err_line": 31,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "if ( min > dp [ n - 1 ] [ i ] [ i ] ) min = dp [ n - 1 ] [ i ] ;"
      ],
      "err_line": 36,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        34
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "min = maxn ;"
      ],
      "err_line": 24,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        24,
        34,
        8
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "min = maxn ;",
        "dp [ i ] [ 0 ] = ' 1 ' ;"
      ],
      "err_line": 24,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        24,
        34,
        8,
        26
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "min = maxn ;",
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        24,
        34,
        8,
        16
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "min = maxn ;",
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        34,
        8,
        14
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "min = maxn ;",
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        34,
        26
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "min = maxn ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        24,
        34,
        26,
        16
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "min = maxn ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        34,
        26,
        14
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "min = maxn ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        34,
        16
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "min = maxn ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        34,
        16,
        14
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "min = maxn ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        34,
        14
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "min = maxn ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        8
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "dp [ i ] [ 0 ] = ' 1 ' ;"
      ],
      "err_line": 24,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        24,
        8,
        26
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        24,
        8,
        26,
        16
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        8,
        26,
        14
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        8,
        16
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        8,
        16,
        14
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        8,
        14
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        26
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        24,
        26,
        16
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        26,
        16,
        14
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        26,
        14
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        16
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        16,
        14
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        14
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = min ( dp [ i - 1 ] [ 0 ] , min ( dp [ i - 1 ] [ 1 ] ) , dp [ i - 1 ] [ 2 ] ) + 1 ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        34,
        8
      ],
      "mod_code": [
        "min = maxn ;",
        "dp [ i ] [ 0 ] = ' 1 ' ;"
      ],
      "err_line": 34,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        34,
        8,
        26
      ],
      "mod_code": [
        "min = maxn ;",
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 26,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        34,
        8,
        26,
        16
      ],
      "mod_code": [
        "min = maxn ;",
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        34,
        8,
        26,
        14
      ],
      "mod_code": [
        "min = maxn ;",
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        34,
        8,
        16
      ],
      "mod_code": [
        "min = maxn ;",
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        34,
        8,
        16,
        14
      ],
      "mod_code": [
        "min = maxn ;",
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        34,
        8,
        14
      ],
      "mod_code": [
        "min = maxn ;",
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        34,
        26
      ],
      "mod_code": [
        "min = maxn ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 26,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        34,
        26,
        16
      ],
      "mod_code": [
        "min = maxn ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        34,
        26,
        16,
        14
      ],
      "mod_code": [
        "min = maxn ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        34,
        26,
        14
      ],
      "mod_code": [
        "min = maxn ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        34,
        16
      ],
      "mod_code": [
        "min = maxn ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        34,
        16,
        14
      ],
      "mod_code": [
        "min = maxn ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        34,
        14
      ],
      "mod_code": [
        "min = maxn ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        26
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;"
      ],
      "err_line": 26,
      "err_msg": "no matching function for call to ‘min(bool)’"
    },
    {
      "mod_line": [
        8,
        26,
        16
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        26,
        16,
        14
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        26,
        14
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        16,
        14
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "dp [ i ] [ 0 ] = ' 1 ' ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        26,
        16
      ],
      "mod_code": [
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        26,
        16,
        14
      ],
      "mod_code": [
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;",
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        26,
        14
      ],
      "mod_code": [
        "dp [ i ] [ 1 ] = min ( dp [ i - 1 ] [ 0 ] && dp [ i - 1 ] [ 2 ] ) ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        14
      ],
      "mod_code": [
        "dp [ i ] [ 1 ] [ 1 ] = maxn ;",
        "dp [ i ] [ 2 ] [ 2 ] = maxn ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    }
  ]
}