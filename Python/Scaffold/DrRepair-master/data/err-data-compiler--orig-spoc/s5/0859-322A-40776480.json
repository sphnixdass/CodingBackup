{
  "meta": {
    "index": 859,
    "hitid": "3NSCTNUR2ZH07PJXGCIHXTV6AAGA5T",
    "workerid": "A1APYLD4DUK33J",
    "probid": "322A",
    "subid": "40776480"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integers n , m",
      "code": "int n , m ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read m read n",
      "code": "cin >> m >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "print n + m - 1 print newline",
      "code": "cout << n + m - 1 << endl ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print \" 1 \"",
      "code": "cout << \" 1 \"",
      "indent": 2
    },
    {
      "line": 6,
      "text": "print \" \" print i print newline",
      "code": "<< \" \" << i << endl ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for j = 2 to m inclusive",
      "code": "for ( int j = 2 ; j <= m ; j ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print j print \" \"",
      "code": "cout << j << \" \"",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print \" 1 \" print newline",
      "code": "<< \" 1 \" << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout << j << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cout << \" 1 \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cout << \" \" \" << i << endl ;"
      ],
      "err_line": 6,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( j = 2 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout << j << \" \" << j << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "puts ( \" 1 \" ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘puts’"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << endl ;",
        "cout << j << \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        8
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << endl ;",
        "cout << j << \" \" ;",
        "for ( j = 2 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        10
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << endl ;",
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        8
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << endl ;",
        "cout << \" 1 \" << endl ;",
        "for ( j = 2 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        8
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << endl ;",
        "for ( j = 2 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        9
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << endl ;",
        "for ( j = 2 ; j <= m ; j ++ )",
        "cout << j << \" \" << j << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" \" << i << endl ;",
        "cout << j << \" \" << j << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << j << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        9,
        10
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << j << \" \" ;",
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        8
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << j << \" \" ;",
        "cout << \" 1 \" << endl ;",
        "for ( j = 2 ; j <= m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        9,
        8
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << j << \" \" ;",
        "for ( j = 2 ; j <= m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        10,
        8
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 1 \" << endl ;",
        "for ( j = 2 ; j <= m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        10,
        8,
        9
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 1 \" << endl ;",
        "for ( j = 2 ; j <= m ; j ++ )",
        "cout << j << \" \" << j << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        10,
        9
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << \" 1 \" << endl ;",
        "cout << j << \" \" << j << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "for ( j = 2 ; j <= m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8,
        9
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "for ( j = 2 ; j <= m ; j ++ )",
        "cout << j << \" \" << j << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "cout << j << \" \" << j << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "cout << j << \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        10
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "cout << j << \" \" ;",
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        8
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "cout << j << \" \" ;",
        "cout << \" 1 \" << endl ;",
        "for ( j = 2 ; j <= m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        8
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "cout << j << \" \" ;",
        "for ( j = 2 ; j <= m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        8
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "cout << \" 1 \" << endl ;",
        "for ( j = 2 ; j <= m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        8,
        9
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "cout << \" 1 \" << endl ;",
        "for ( j = 2 ; j <= m ; j ++ )",
        "cout << j << \" \" << j << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        10,
        9
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "cout << \" 1 \" << endl ;",
        "cout << j << \" \" << j << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "for ( j = 2 ; j <= m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        8,
        9
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "for ( j = 2 ; j <= m ; j ++ )",
        "cout << j << \" \" << j << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "cout << \" \" << i << endl ;",
        "cout << j << \" \" << j << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        10,
        8
      ],
      "mod_code": [
        "cout << j << \" \" ;",
        "cout << \" 1 \" << endl ;",
        "for ( j = 2 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "cout << j << \" \" ;",
        "for ( j = 2 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "for ( j = 2 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8,
        9
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;",
        "for ( j = 2 ; j <= m ; j ++ )",
        "cout << j << \" \" << j << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "for ( j = 2 ; j <= m ; j ++ )",
        "cout << j << \" \" << j << endl ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    }
  ]
}