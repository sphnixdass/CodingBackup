{
  "meta": {
    "index": 2638,
    "hitid": "3S37Y8CWI8UFIJI03CVZAQMJ3KRW4Z",
    "workerid": "A1AYVATMT88U1W",
    "probid": "98A",
    "subid": "40202106"
  },
  "lines": [
    {
      "line": 0,
      "text": "let n , m be integers",
      "code": "int n , m ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let k be a integer",
      "code": "int k ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "the boolean value of debug = false",
      "code": "bool debug = false ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create a set of strings by name ss",
      "code": "set < string > ss ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "let s be a string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "sort the values of s from beginning to end",
      "code": "sort ( s . begin ( ) , s . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "do",
      "code": "do",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create a vector of strings by name tmp",
      "code": "vector < string > tmp ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "for integer i = 0 , i is less than s , increment i by 2",
      "code": "for ( int i = 0 ; i < 6 ; i += 2 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "the string value of a = s . substr ( i , 2 )",
      "code": "string a = s . substr ( i , 2 ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "sort the values of a from beginning to end",
      "code": "sort ( a . begin ( ) , a . end ( ) ) ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "push_back a into tmp",
      "code": "tmp . push_back ( a ) ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "sort the values of tmp from beginning to end",
      "code": "sort ( tmp . begin ( ) , tmp . end ( ) ) ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "the string value of b = tmp [ 0 ] + tmp [ 1 ] + tmp [ 2 ]",
      "code": "string b = tmp [ 0 ] + tmp [ 1 ] + tmp [ 2 ] ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "insert b into ss",
      "code": "ss . insert ( b ) ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if tmp [ 0 ] is not equal to tmp [ 1 ] and tmp [ 1 ] is not equal to tmp [ 2 ] and tmp [ 2 ] is not equal to tmp [ 0 ]",
      "code": "if ( tmp [ 0 ] != tmp [ 1 ] && tmp [ 1 ] != tmp [ 2 ] && tmp [ 2 ] != tmp [ 0 ] )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if b [ 0 ] is not equal to b [ 1 ] and b [ 2 ] is not equal to b [ 3 ] , swap the values b [ 4 ] , b [ 5 ]",
      "code": "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 4 ] , b [ 5 ] ) ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "insert b into ss",
      "code": "ss . insert ( b ) ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "while next_permutation of s from beginning to end",
      "code": "while ( next_permutation ( s . begin ( ) , s . end ( ) ) ) ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print length of ss and newline",
      "code": "cout << ss . size ( ) << endl ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "while ( s . begin ( ) == s . end ( ) )"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "set < string > name ;"
      ],
      "err_line": 17,
      "err_msg": "‘ss’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘begin’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "vector < a > tmp ;"
      ],
      "err_line": 9,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i , i < s ; i += 2 )"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "string * a = s . substr ( i , 2 ) ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘std::__cxx11::basic_string<char>’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ in initialization"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "tmp . push_back ( 1 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(int)’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "string * b = tmp [ 0 ] + tmp [ 1 ] + tmp [ 2 ] ;"
      ],
      "err_line": 16,
      "err_msg": "cannot convert ‘std::__cxx11::basic_string<char>’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ in initialization"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "ss . push ( b ) ;"
      ],
      "err_line": 17,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘push’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "ss . push ( b ) ;"
      ],
      "err_line": 20,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘push’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "while ( s . next_permutation ( ) )"
      ],
      "err_line": 22,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘next_permutation’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "cout << ss . length ( ) << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘length’"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        19,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "while ( s . begin ( ) == s . end ( ) )"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        19,
        22,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "while ( s . begin ( ) == s . end ( ) )",
        "set < string > name ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        19,
        22,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "while ( s . begin ( ) == s . end ( ) )",
        "string * a = s . substr ( i , 2 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        19,
        22,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "while ( s . begin ( ) == s . end ( ) )",
        "ss . push ( b ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        19,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "set < string > name ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        19,
        3,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "set < string > name ;",
        "string * a = s . substr ( i , 2 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        19,
        3,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "set < string > name ;",
        "ss . push ( b ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        19,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "string * a = s . substr ( i , 2 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        19,
        11,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "string * a = s . substr ( i , 2 ) ;",
        "ss . push ( b ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        19,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "ss . push ( b ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "while ( s . begin ( ) == s . end ( ) )"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        22,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "while ( s . begin ( ) == s . end ( ) )",
        "set < string > name ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        22,
        3,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "while ( s . begin ( ) == s . end ( ) )",
        "set < string > name ;",
        "string * a = s . substr ( i , 2 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        22,
        3,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "while ( s . begin ( ) == s . end ( ) )",
        "set < string > name ;",
        "ss . push ( b ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        22,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "while ( s . begin ( ) == s . end ( ) )",
        "string * a = s . substr ( i , 2 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        22,
        11,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "while ( s . begin ( ) == s . end ( ) )",
        "string * a = s . substr ( i , 2 ) ;",
        "ss . push ( b ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        22,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "while ( s . begin ( ) == s . end ( ) )",
        "ss . push ( b ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "set < string > name ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        3,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "set < string > name ;",
        "string * a = s . substr ( i , 2 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        3,
        11,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "set < string > name ;",
        "string * a = s . substr ( i , 2 ) ;",
        "ss . push ( b ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        3,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "set < string > name ;",
        "ss . push ( b ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "string * a = s . substr ( i , 2 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        11,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "string * a = s . substr ( i , 2 ) ;",
        "ss . push ( b ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s ; i += 2 )",
        "ss . push ( b ) ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        19,
        22
      ],
      "mod_code": [
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "while ( s . begin ( ) == s . end ( ) )"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        19,
        22,
        3
      ],
      "mod_code": [
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "while ( s . begin ( ) == s . end ( ) )",
        "set < string > name ;"
      ],
      "err_line": 17,
      "err_msg": "‘ss’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        22,
        3,
        11
      ],
      "mod_code": [
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "while ( s . begin ( ) == s . end ( ) )",
        "set < string > name ;",
        "string * a = s . substr ( i , 2 ) ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘std::__cxx11::basic_string<char>’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ in initialization"
    },
    {
      "mod_line": [
        19,
        22,
        3,
        20
      ],
      "mod_code": [
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "while ( s . begin ( ) == s . end ( ) )",
        "set < string > name ;",
        "ss . push ( b ) ;"
      ],
      "err_line": 17,
      "err_msg": "‘ss’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        22,
        11
      ],
      "mod_code": [
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "while ( s . begin ( ) == s . end ( ) )",
        "string * a = s . substr ( i , 2 ) ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘std::__cxx11::basic_string<char>’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ in initialization"
    },
    {
      "mod_line": [
        19,
        22,
        11,
        20
      ],
      "mod_code": [
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "while ( s . begin ( ) == s . end ( ) )",
        "string * a = s . substr ( i , 2 ) ;",
        "ss . push ( b ) ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘std::__cxx11::basic_string<char>’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ in initialization"
    },
    {
      "mod_line": [
        19,
        22,
        20
      ],
      "mod_code": [
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "while ( s . begin ( ) == s . end ( ) )",
        "ss . push ( b ) ;"
      ],
      "err_line": 20,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘push’"
    },
    {
      "mod_line": [
        19,
        3
      ],
      "mod_code": [
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "set < string > name ;"
      ],
      "err_line": 17,
      "err_msg": "‘ss’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        3,
        11
      ],
      "mod_code": [
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "set < string > name ;",
        "string * a = s . substr ( i , 2 ) ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘std::__cxx11::basic_string<char>’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ in initialization"
    },
    {
      "mod_line": [
        19,
        3,
        11,
        20
      ],
      "mod_code": [
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "set < string > name ;",
        "string * a = s . substr ( i , 2 ) ;",
        "ss . push ( b ) ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘std::__cxx11::basic_string<char>’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ in initialization"
    },
    {
      "mod_line": [
        19,
        3,
        20
      ],
      "mod_code": [
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "set < string > name ;",
        "ss . push ( b ) ;"
      ],
      "err_line": 17,
      "err_msg": "‘ss’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        11
      ],
      "mod_code": [
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "string * a = s . substr ( i , 2 ) ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘std::__cxx11::basic_string<char>’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ in initialization"
    },
    {
      "mod_line": [
        19,
        11,
        20
      ],
      "mod_code": [
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "string * a = s . substr ( i , 2 ) ;",
        "ss . push ( b ) ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘std::__cxx11::basic_string<char>’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ in initialization"
    },
    {
      "mod_line": [
        19,
        20
      ],
      "mod_code": [
        "if ( b [ 0 ] != b [ 1 ] && b [ 2 ] != b [ 3 ] ) swap ( b [ 5 ] , b [ 5 ] ) ;",
        "ss . push ( b ) ;"
      ],
      "err_line": 20,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘push’"
    },
    {
      "mod_line": [
        22,
        3
      ],
      "mod_code": [
        "while ( s . begin ( ) == s . end ( ) )",
        "set < string > name ;"
      ],
      "err_line": 17,
      "err_msg": "‘ss’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        3,
        11
      ],
      "mod_code": [
        "while ( s . begin ( ) == s . end ( ) )",
        "set < string > name ;",
        "string * a = s . substr ( i , 2 ) ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘std::__cxx11::basic_string<char>’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ in initialization"
    },
    {
      "mod_line": [
        22,
        3,
        11,
        20
      ],
      "mod_code": [
        "while ( s . begin ( ) == s . end ( ) )",
        "set < string > name ;",
        "string * a = s . substr ( i , 2 ) ;",
        "ss . push ( b ) ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘std::__cxx11::basic_string<char>’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ in initialization"
    },
    {
      "mod_line": [
        22,
        3,
        20
      ],
      "mod_code": [
        "while ( s . begin ( ) == s . end ( ) )",
        "set < string > name ;",
        "ss . push ( b ) ;"
      ],
      "err_line": 17,
      "err_msg": "‘ss’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        11
      ],
      "mod_code": [
        "while ( s . begin ( ) == s . end ( ) )",
        "string * a = s . substr ( i , 2 ) ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘std::__cxx11::basic_string<char>’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ in initialization"
    },
    {
      "mod_line": [
        22,
        11,
        20
      ],
      "mod_code": [
        "while ( s . begin ( ) == s . end ( ) )",
        "string * a = s . substr ( i , 2 ) ;",
        "ss . push ( b ) ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘std::__cxx11::basic_string<char>’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ in initialization"
    },
    {
      "mod_line": [
        22,
        20
      ],
      "mod_code": [
        "while ( s . begin ( ) == s . end ( ) )",
        "ss . push ( b ) ;"
      ],
      "err_line": 20,
      "err_msg": "‘class std::set<std::__cxx11::basic_string<char> >’ has no member named ‘push’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "set < string > name ;",
        "string * a = s . substr ( i , 2 ) ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘std::__cxx11::basic_string<char>’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ in initialization"
    },
    {
      "mod_line": [
        3,
        11,
        20
      ],
      "mod_code": [
        "set < string > name ;",
        "string * a = s . substr ( i , 2 ) ;",
        "ss . push ( b ) ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘std::__cxx11::basic_string<char>’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ in initialization"
    },
    {
      "mod_line": [
        3,
        20
      ],
      "mod_code": [
        "set < string > name ;",
        "ss . push ( b ) ;"
      ],
      "err_line": 17,
      "err_msg": "‘ss’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        20
      ],
      "mod_code": [
        "string * a = s . substr ( i , 2 ) ;",
        "ss . push ( b ) ;"
      ],
      "err_line": 11,
      "err_msg": "cannot convert ‘std::__cxx11::basic_string<char>’ to ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ in initialization"
    }
  ]
}