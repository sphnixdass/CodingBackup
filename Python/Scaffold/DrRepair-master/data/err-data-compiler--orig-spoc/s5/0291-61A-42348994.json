{
  "meta": {
    "index": 291,
    "hitid": "360ZO6N6J1DKADUYG5L3I0V8RAJM9M",
    "workerid": "AIWEXPJAU66D9",
    "probid": "61A",
    "subid": "42348994"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create strings a and b",
      "code": "string a , b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read input to a and b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for size_t = 0 to length of a exclusive",
      "code": "for ( size_t i = 0 ; i < a . length ( ) ; ++ i )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if a [ i ] = b [ i ]",
      "code": "if ( a [ i ] == b [ i ] )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "change a [ i ] to ' 0 '",
      "code": "a [ i ] = ' 0 ' ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 7,
      "text": "change a [ i ] to ' 1 '",
      "code": "a [ i ] = ' 1 ' ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print a",
      "code": "cout << a << endl ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string a create b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( a [ i ] == b [ i ] ) i ++ ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "a [ i ] = \" 0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "char a [ i ] = ' 1 ' ;"
      ],
      "err_line": 7,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "if ( a [ i ] == b [ i ] ) i ++ ;",
        "string a create b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        4,
        1,
        5
      ],
      "mod_code": [
        "if ( a [ i ] == b [ i ] ) i ++ ;",
        "string a create b ;",
        "a [ i ] = \" 0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        1,
        5,
        7
      ],
      "mod_code": [
        "if ( a [ i ] == b [ i ] ) i ++ ;",
        "string a create b ;",
        "a [ i ] = \" 0 ' ;",
        "char a [ i ] = ' 1 ' ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        1,
        5,
        9
      ],
      "mod_code": [
        "if ( a [ i ] == b [ i ] ) i ++ ;",
        "string a create b ;",
        "a [ i ] = \" 0 ' ;",
        "cout << a ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        1,
        7
      ],
      "mod_code": [
        "if ( a [ i ] == b [ i ] ) i ++ ;",
        "string a create b ;",
        "char a [ i ] = ' 1 ' ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        4,
        1,
        7,
        9
      ],
      "mod_code": [
        "if ( a [ i ] == b [ i ] ) i ++ ;",
        "string a create b ;",
        "char a [ i ] = ' 1 ' ;",
        "cout << a ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        4,
        1,
        9
      ],
      "mod_code": [
        "if ( a [ i ] == b [ i ] ) i ++ ;",
        "string a create b ;",
        "cout << a ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "if ( a [ i ] == b [ i ] ) i ++ ;",
        "a [ i ] = \" 0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        7
      ],
      "mod_code": [
        "if ( a [ i ] == b [ i ] ) i ++ ;",
        "a [ i ] = \" 0 ' ;",
        "char a [ i ] = ' 1 ' ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        9
      ],
      "mod_code": [
        "if ( a [ i ] == b [ i ] ) i ++ ;",
        "a [ i ] = \" 0 ' ;",
        "char a [ i ] = ' 1 ' ;",
        "cout << a ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        5,
        9
      ],
      "mod_code": [
        "if ( a [ i ] == b [ i ] ) i ++ ;",
        "a [ i ] = \" 0 ' ;",
        "cout << a ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "if ( a [ i ] == b [ i ] ) i ++ ;",
        "char a [ i ] = ' 1 ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        7,
        9
      ],
      "mod_code": [
        "if ( a [ i ] == b [ i ] ) i ++ ;",
        "char a [ i ] = ' 1 ' ;",
        "cout << a ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "if ( a [ i ] == b [ i ] ) i ++ ;",
        "cout << a ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "string a create b ;",
        "a [ i ] = \" 0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        5,
        7
      ],
      "mod_code": [
        "string a create b ;",
        "a [ i ] = \" 0 ' ;",
        "char a [ i ] = ' 1 ' ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        5,
        7,
        9
      ],
      "mod_code": [
        "string a create b ;",
        "a [ i ] = \" 0 ' ;",
        "char a [ i ] = ' 1 ' ;",
        "cout << a ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        5,
        9
      ],
      "mod_code": [
        "string a create b ;",
        "a [ i ] = \" 0 ' ;",
        "cout << a ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "string a create b ;",
        "char a [ i ] = ' 1 ' ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        1,
        7,
        9
      ],
      "mod_code": [
        "string a create b ;",
        "char a [ i ] = ' 1 ' ;",
        "cout << a ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "string a create b ;",
        "cout << a ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "a [ i ] = \" 0 ' ;",
        "char a [ i ] = ' 1 ' ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "a [ i ] = \" 0 ' ;",
        "char a [ i ] = ' 1 ' ;",
        "cout << a ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "a [ i ] = \" 0 ' ;",
        "cout << a ;"
      ],
      "err_line": 5,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "char a [ i ] = ' 1 ' ;",
        "cout << a ;"
      ],
      "err_line": 7,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    }
  ]
}