{
  "meta": {
    "index": 852,
    "hitid": "3L1EFR8WWTZE432HUIHQNABZTMCF92",
    "workerid": "A1AYVATMT88U1W",
    "probid": "322A",
    "subid": "47300304"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n and m be integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let k be an integer with value m + n - 1",
      "code": "int k = m + n - 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print k and newline",
      "code": "cout << k << endl ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer r = 1 to m inclusive",
      "code": "for ( int r = 1 ; r <= m ; r ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print 1",
      "code": "cout << \" 1 \"",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print space and r and new line",
      "code": "<< \" \" << r << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for integer r = 2 to n inclusive",
      "code": "for ( int r = 2 ; r <= n ; r ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print r and space",
      "code": "cout << r << \" \"",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print 1 and newline",
      "code": "<< \" 1 \" << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cout << 1 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout << r << \" \" << r << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cout << r << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << 1 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout << \" \" << r << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << \" 1 \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        10
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cout << r << \" \" << r << endl ;",
        "cout << r << \" \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        2
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cout << r << \" \" << r << endl ;",
        "cout << r << \" \" ;",
        "cin >> m >> m ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        3
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cout << r << \" \" << r << endl ;",
        "cout << r << \" \" ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        6,
        7,
        11
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cout << r << \" \" << r << endl ;",
        "cout << 1 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        2
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cout << r << \" \" << r << endl ;",
        "cout << 1 << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        3
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cout << r << \" \" << r << endl ;",
        "cout << 1 << endl ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        6,
        7,
        2,
        3
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cout << r << \" \" << r << endl ;",
        "cin >> m >> m ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        6,
        7,
        3
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cout << r << \" \" << r << endl ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cout << r << \" \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        11
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cout << r << \" \" ;",
        "cout << 1 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        2
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cout << r << \" \" ;",
        "cout << 1 << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        3
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cout << r << \" \" ;",
        "cout << 1 << endl ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        6,
        10,
        2
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cout << r << \" \" ;",
        "cin >> m >> m ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10,
        2,
        3
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cout << r << \" \" ;",
        "cin >> m >> m ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        6,
        10,
        3
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cout << r << \" \" ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cout << 1 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        2
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cout << 1 << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        11,
        2,
        3
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cout << 1 << endl ;",
        "cin >> m >> m ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        6,
        11,
        3
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cout << 1 << endl ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        2,
        3
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cin >> m >> m ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "cout << r << \" \" << r << endl ;",
        "cout << r << \" \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11
      ],
      "mod_code": [
        "cout << r << \" \" << r << endl ;",
        "cout << r << \" \" ;",
        "cout << 1 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        2
      ],
      "mod_code": [
        "cout << r << \" \" << r << endl ;",
        "cout << r << \" \" ;",
        "cout << 1 << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        11,
        3
      ],
      "mod_code": [
        "cout << r << \" \" << r << endl ;",
        "cout << r << \" \" ;",
        "cout << 1 << endl ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        7,
        10,
        2
      ],
      "mod_code": [
        "cout << r << \" \" << r << endl ;",
        "cout << r << \" \" ;",
        "cin >> m >> m ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        10,
        2,
        3
      ],
      "mod_code": [
        "cout << r << \" \" << r << endl ;",
        "cout << r << \" \" ;",
        "cin >> m >> m ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        7,
        10,
        3
      ],
      "mod_code": [
        "cout << r << \" \" << r << endl ;",
        "cout << r << \" \" ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "cout << r << \" \" << r << endl ;",
        "cout << 1 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        2
      ],
      "mod_code": [
        "cout << r << \" \" << r << endl ;",
        "cout << 1 << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        11,
        2,
        3
      ],
      "mod_code": [
        "cout << r << \" \" << r << endl ;",
        "cout << 1 << endl ;",
        "cin >> m >> m ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        7,
        11,
        3
      ],
      "mod_code": [
        "cout << r << \" \" << r << endl ;",
        "cout << 1 << endl ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "cout << r << \" \" << r << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        2,
        3
      ],
      "mod_code": [
        "cout << r << \" \" << r << endl ;",
        "cin >> m >> m ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "cout << r << \" \" << r << endl ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        10,
        11,
        2,
        3
      ],
      "mod_code": [
        "cout << r << \" \" ;",
        "cout << 1 << endl ;",
        "cin >> m >> m ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        10,
        11,
        3
      ],
      "mod_code": [
        "cout << r << \" \" ;",
        "cout << 1 << endl ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "cout << r << \" \" ;",
        "cin >> m >> m ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        2,
        3
      ],
      "mod_code": [
        "cout << r << \" \" ;",
        "cin >> m >> m ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "cout << r << \" \" ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cin >> m >> m ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        2,
        3
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "cin >> m >> m ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "cout << 1 << endl ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "int k be m + n - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘be’"
    }
  ]
}