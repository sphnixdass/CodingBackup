{
  "meta": {
    "index": 1123,
    "hitid": "3UY4PIS8QRF83QC3OTLAG92PXMV1ND",
    "workerid": "AIWEXPJAU66D9",
    "probid": "41A",
    "subid": "48939034"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s and t are strings",
      "code": "string s , t ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "reverse s",
      "code": "reverse ( s . begin ( ) , s . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if t = s",
      "code": "if ( t == s )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print \" YES \" and a new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s and t ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin . get ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::basic_istream<char>::get(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( t == ' s ' )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        2,
        6,
        3
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << \" YES\\n \" << endl ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::basic_istream<char>::get(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        2,
        6,
        3,
        1
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << \" YES\\n \" << endl ;",
        "cin . get ( t ) ;",
        "string s and t ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        6,
        3,
        5
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << \" YES\\n \" << endl ;",
        "cin . get ( t ) ;",
        "if ( t == ' s ' )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::basic_istream<char>::get(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        2,
        6,
        1
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << \" YES\\n \" << endl ;",
        "string s and t ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        6,
        1,
        5
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << \" YES\\n \" << endl ;",
        "string s and t ;",
        "if ( t == ' s ' )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        6,
        5
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cout << \" YES\\n \" << endl ;",
        "if ( t == ' s ' )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::basic_istream<char>::get(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        2,
        3,
        1
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cin . get ( t ) ;",
        "string s and t ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        3,
        1,
        5
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cin . get ( t ) ;",
        "string s and t ;",
        "if ( t == ' s ' )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        3,
        5
      ],
      "mod_code": [
        "cout << s << endl ;",
        "cin . get ( t ) ;",
        "if ( t == ' s ' )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::basic_istream<char>::get(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "cout << s << endl ;",
        "string s and t ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        1,
        5
      ],
      "mod_code": [
        "cout << s << endl ;",
        "string s and t ;",
        "if ( t == ' s ' )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "cout << s << endl ;",
        "if ( t == ' s ' )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "cin . get ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::basic_istream<char>::get(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        3,
        1
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "cin . get ( t ) ;",
        "string s and t ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        3,
        1,
        5
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "cin . get ( t ) ;",
        "string s and t ;",
        "if ( t == ' s ' )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        3,
        5
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "cin . get ( t ) ;",
        "if ( t == ' s ' )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::basic_istream<char>::get(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "string s and t ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        1,
        5
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "string s and t ;",
        "if ( t == ' s ' )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "cout << \" YES\\n \" << endl ;",
        "if ( t == ' s ' )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "cin . get ( t ) ;",
        "string s and t ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        1,
        5
      ],
      "mod_code": [
        "cin . get ( t ) ;",
        "string s and t ;",
        "if ( t == ' s ' )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "cin . get ( t ) ;",
        "if ( t == ' s ' )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘std::basic_istream<char>::get(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "string s and t ;",
        "if ( t == ' s ' )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    }
  ]
}