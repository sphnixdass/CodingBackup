{
  "meta": {
    "index": 2534,
    "hitid": "37VE3DA4YUBH6S8KNSJMH1I2YOVHBQ",
    "workerid": "A1AYVATMT88U1W",
    "probid": "779A",
    "subid": "42012231"
  },
  "lines": [
    {
      "line": 0,
      "text": "the constant integer value of MX = 2e5 + 7",
      "code": "const int MX = 2e5 + 7 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "the constant integer value of inf = 0x3f3f3f3f",
      "code": "const int inf = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let n , k be integers",
      "code": "int n , k ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "a = array of integers of length 6 , b = array of integers of length 6",
      "code": "int a [ 6 ] , b [ 6 ] ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "let x be a integer",
      "code": "int x ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment a [ x ] by 1",
      "code": "a [ x ] ++ ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "let x be a integer",
      "code": "int x ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increment b [ x ] by 1",
      "code": "b [ x ] ++ ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "initialize boolean value flag to 1",
      "code": "bool flag = 1 ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i = 1 to 5 inclusive",
      "code": "for ( int i = 1 ; i <= 5 ; i ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "the integer value of m = a [ i ] + b [ i ]",
      "code": "int m = a [ i ] + b [ i ] ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if m modulo 2 is true",
      "code": "if ( m % 2 )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "flag is equal to 0",
      "code": "flag = 0 ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "stop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "if not flag",
      "code": "if ( ! flag )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print - 1 and newline",
      "code": "puts ( \" -1 \" ) ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 27,
      "text": "the integer value of ans = 0",
      "code": "int ans = 0 ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "for i = 1 to 5 inclusive",
      "code": "for ( int i = 1 ; i <= 5 ; i ++ )",
      "indent": 2
    },
    {
      "line": 29,
      "text": "the integer value of sum = ( a [ i ] + b [ i ] ) / 2",
      "code": "int sum = ( a [ i ] + b [ i ] ) / 2 ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "increment ans by abs ( sum - a [ i ] )",
      "code": "ans += abs ( sum - a [ i ] ) ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 32,
      "text": "print ans / 2 and newline",
      "code": "cout << ans / 2 << endl ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "flag = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 21,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )"
      ],
      "err_line": 28,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 1 ; i <= 5 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17,
        28
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 1 ; i <= 5 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17,
        28,
        11
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17,
        28,
        20
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "int flag = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17,
        28,
        3
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        13,
        17,
        11
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17,
        11,
        20
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17,
        11,
        3
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        13,
        17,
        20
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "int flag = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        17,
        20,
        3
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "int flag = 0 ;",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        13,
        17,
        3
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        13,
        28
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 1 ; i <= 5 ; i ++ )"
      ],
      "err_line": 28,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        28,
        11
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        28,
        11,
        20
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        28,
        11,
        3
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        13,
        28,
        20
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "int flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        28,
        20,
        3
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "int flag = 0 ;",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        13,
        28,
        3
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        11,
        20
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        11,
        20,
        3
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = 0 ;",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        13,
        11,
        3
      ],
      "mod_code": [
        "cout << x << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        13,
        20,
        3
      ],
      "mod_code": [
        "cout << x << endl ;",
        "int flag = 0 ;",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "cout << x << endl ;",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        17,
        28
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 1 ; i <= 5 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        28,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        28,
        11,
        20
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        28,
        11,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        17,
        28,
        20
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "int flag = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        28,
        20,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "int flag = 0 ;",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        17,
        28,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        17,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        11,
        20
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        11,
        20,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = 0 ;",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        17,
        11,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        17,
        20
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "int flag = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        20,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "int flag = 0 ;",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        17,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        28,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        11,
        20
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        11,
        20,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = 0 ;",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        28,
        11,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        28,
        20
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "int flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        20,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "int flag = 0 ;",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        28,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 5 ; i ++ )",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        20
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        20,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = 0 ;",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        20,
        3
      ],
      "mod_code": [
        "int flag = 0 ;",
        "int a [ 6 ] [ 6 ] ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    }
  ]
}