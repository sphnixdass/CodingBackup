{
  "meta": {
    "index": 915,
    "hitid": "3N2YPY1GI6SKVWFO282GXAFW90BVEM",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "213A",
    "subid": "45990246"
  },
  "lines": [
    {
      "line": 0,
      "text": "mod = 10 ^ 9 + 7",
      "code": "const int mod = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "function fast_pow ( get int a and b , return int )",
      "code": "int fast_pow ( int a , int b )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "res = a , ret = 1",
      "code": "int res = a , ret = 1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while b > 0",
      "code": "while ( b > 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if b modulo 2 ret = ( ret * res ) modulo mod",
      "code": "if ( b % 2 ) ret = ( ret * res ) % mod ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "res = ( res * res ) modulo mod",
      "code": "res = ( res * res ) % mod ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "divide b by 2",
      "code": "b /= 2 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return ret",
      "code": "return ret ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "n = int",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 11,
      "text": "m = int",
      "code": "int m ;",
      "indent": 0
    },
    {
      "line": 12,
      "text": "c = array of 200 int",
      "code": "int c [ 200 ] ;",
      "indent": 0
    },
    {
      "line": 13,
      "text": "g = array of 200 by 200 int",
      "code": "int g [ 200 ] [ 200 ] ;",
      "indent": 0
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 15,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "read c [ i ]",
      "code": "cin >> c [ i ] ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "decrement c [ i ]",
      "code": "c [ i ] -- ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "k = int",
      "code": "int k ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "read k",
      "code": "cin >> k ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "for j = 0 to k exclusive",
      "code": "for ( int j = 0 ; j < k ; ++ j )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "u = int",
      "code": "int u ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "read u",
      "code": "cin >> u ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "decrement u",
      "code": "u -- ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "g [ u ] [ i ] = 1",
      "code": "g [ u ] [ i ] = 1 ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "ans = 100 * n",
      "code": "int ans = 100 * n ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "for start = 0 to 3 exclusive",
      "code": "for ( int start = 0 ; start < 3 ; ++ start )",
      "indent": 1
    },
    {
      "line": 32,
      "text": "m = 0",
      "code": "m = 0 ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "ok = array of 200 bool",
      "code": "bool ok [ 200 ] ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "fill ok with 0",
      "code": "memset ( ok , 0 , sizeof ( ok ) ) ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "cur = start",
      "code": "int cur = start ;",
      "indent": 2
    },
    {
      "line": 36,
      "text": "res = n",
      "code": "int res = n ;",
      "indent": 2
    },
    {
      "line": 37,
      "text": "while m not equal n",
      "code": "while ( m != n )",
      "indent": 2
    },
    {
      "line": 38,
      "text": "while true",
      "code": "while ( 1 )",
      "indent": 3
    },
    {
      "line": 39,
      "text": "kpyto = false",
      "code": "bool kpyto = false ;",
      "indent": 4
    },
    {
      "line": 40,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 4
    },
    {
      "line": 41,
      "text": "if ok [ i ] or c [ i ] ! = cur continue",
      "code": "if ( ok [ i ] || c [ i ] != cur ) continue ;",
      "indent": 5
    },
    {
      "line": 42,
      "text": "win = true",
      "code": "bool win = true ;",
      "indent": 5
    },
    {
      "line": 43,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; ++ j )",
      "indent": 5
    },
    {
      "line": 44,
      "text": "if g [ j ] [ j ] and not ok [ j ]",
      "code": "if ( g [ j ] [ i ] && ( ! ok [ j ] ) )",
      "indent": 6
    },
    {
      "line": 45,
      "text": "win = false",
      "code": "win = false ;",
      "indent": 7
    },
    {
      "line": 46,
      "text": "break",
      "code": "break ;",
      "indent": 7
    },
    {
      "line": 47,
      "text": "DUMMY",
      "code": "}",
      "indent": 6
    },
    {
      "line": 48,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 49,
      "text": "if win",
      "code": "if ( win )",
      "indent": 5
    },
    {
      "line": 50,
      "text": "kpyto = true",
      "code": "kpyto = true ;",
      "indent": 6
    },
    {
      "line": 51,
      "text": "increment m",
      "code": "m ++ ;",
      "indent": 6
    },
    {
      "line": 52,
      "text": "ok [ i ] = true",
      "code": "ok [ i ] = true ;",
      "indent": 6
    },
    {
      "line": 53,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 54,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 55,
      "text": "if not kpyto break",
      "code": "if ( ! kpyto ) break ;",
      "indent": 4
    },
    {
      "line": 56,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 57,
      "text": "if m is n break",
      "code": "if ( m == n ) break ;",
      "indent": 3
    },
    {
      "line": 58,
      "text": "cur = ( cur + 1 ) modulo 3",
      "code": "cur = ( cur + 1 ) % 3 ;",
      "indent": 3
    },
    {
      "line": 59,
      "text": "increment res",
      "code": "res ++ ;",
      "indent": 3
    },
    {
      "line": 60,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 61,
      "text": "ans = min ( res , ans )",
      "code": "ans = min ( res , ans ) ;",
      "indent": 2
    },
    {
      "line": 62,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 63,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 64,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 65,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "cur = start ;"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "res = n ;"
      ],
      "err_line": 36,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void fast_pow ( int a , int b )"
      ],
      "err_line": 8,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "res = a , ret = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "while ( ret )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int g [ 200 ] ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 23,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "if ( g [ u ] [ i ] == 1 )"
      ],
      "err_line": 28,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "ans = 100 * n ;"
      ],
      "err_line": 30,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "for ( start = 0 ; start < 3 ; start ++ )"
      ],
      "err_line": 31,
      "err_msg": "‘start’ was not declared in this scope"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "kpyto = false ;"
      ],
      "err_line": 39,
      "err_msg": "‘kpyto’ was not declared in this scope"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 40,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "win = true ;"
      ],
      "err_line": 42,
      "err_msg": "‘win’ was not declared in this scope"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 43,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        46
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 46,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        35,
        36
      ],
      "mod_code": [
        "cur = start ;",
        "res = n ;"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        36,
        44
      ],
      "mod_code": [
        "cur = start ;",
        "res = n ;",
        "if ( g [ j ] [ j ] && ! ok [ j ] )"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        36,
        44,
        50
      ],
      "mod_code": [
        "cur = start ;",
        "res = n ;",
        "if ( g [ j ] [ j ] && ! ok [ j ] )",
        "bool kpyto = true ;"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        36,
        44,
        58
      ],
      "mod_code": [
        "cur = start ;",
        "res = n ;",
        "if ( g [ j ] [ j ] && ! ok [ j ] )",
        "int cur = ( cur + 1 ) % 3 ;"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        36,
        44,
        43
      ],
      "mod_code": [
        "cur = start ;",
        "res = n ;",
        "if ( g [ j ] [ j ] && ! ok [ j ] )",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        36,
        50
      ],
      "mod_code": [
        "cur = start ;",
        "res = n ;",
        "bool kpyto = true ;"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        36,
        50,
        58
      ],
      "mod_code": [
        "cur = start ;",
        "res = n ;",
        "bool kpyto = true ;",
        "int cur = ( cur + 1 ) % 3 ;"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        36,
        50,
        43
      ],
      "mod_code": [
        "cur = start ;",
        "res = n ;",
        "bool kpyto = true ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        36,
        58
      ],
      "mod_code": [
        "cur = start ;",
        "res = n ;",
        "int cur = ( cur + 1 ) % 3 ;"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        36,
        58,
        43
      ],
      "mod_code": [
        "cur = start ;",
        "res = n ;",
        "int cur = ( cur + 1 ) % 3 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        36,
        43
      ],
      "mod_code": [
        "cur = start ;",
        "res = n ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        44
      ],
      "mod_code": [
        "cur = start ;",
        "if ( g [ j ] [ j ] && ! ok [ j ] )"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        44,
        50
      ],
      "mod_code": [
        "cur = start ;",
        "if ( g [ j ] [ j ] && ! ok [ j ] )",
        "bool kpyto = true ;"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        44,
        50,
        58
      ],
      "mod_code": [
        "cur = start ;",
        "if ( g [ j ] [ j ] && ! ok [ j ] )",
        "bool kpyto = true ;",
        "int cur = ( cur + 1 ) % 3 ;"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        44,
        50,
        43
      ],
      "mod_code": [
        "cur = start ;",
        "if ( g [ j ] [ j ] && ! ok [ j ] )",
        "bool kpyto = true ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        44,
        58
      ],
      "mod_code": [
        "cur = start ;",
        "if ( g [ j ] [ j ] && ! ok [ j ] )",
        "int cur = ( cur + 1 ) % 3 ;"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        44,
        58,
        43
      ],
      "mod_code": [
        "cur = start ;",
        "if ( g [ j ] [ j ] && ! ok [ j ] )",
        "int cur = ( cur + 1 ) % 3 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        44,
        43
      ],
      "mod_code": [
        "cur = start ;",
        "if ( g [ j ] [ j ] && ! ok [ j ] )",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        50
      ],
      "mod_code": [
        "cur = start ;",
        "bool kpyto = true ;"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        50,
        58
      ],
      "mod_code": [
        "cur = start ;",
        "bool kpyto = true ;",
        "int cur = ( cur + 1 ) % 3 ;"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        50,
        58,
        43
      ],
      "mod_code": [
        "cur = start ;",
        "bool kpyto = true ;",
        "int cur = ( cur + 1 ) % 3 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        50,
        43
      ],
      "mod_code": [
        "cur = start ;",
        "bool kpyto = true ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        58
      ],
      "mod_code": [
        "cur = start ;",
        "int cur = ( cur + 1 ) % 3 ;"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        58,
        43
      ],
      "mod_code": [
        "cur = start ;",
        "int cur = ( cur + 1 ) % 3 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        43
      ],
      "mod_code": [
        "cur = start ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 35,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        36,
        44
      ],
      "mod_code": [
        "res = n ;",
        "if ( g [ j ] [ j ] && ! ok [ j ] )"
      ],
      "err_line": 36,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        36,
        44,
        50
      ],
      "mod_code": [
        "res = n ;",
        "if ( g [ j ] [ j ] && ! ok [ j ] )",
        "bool kpyto = true ;"
      ],
      "err_line": 36,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        36,
        44,
        50,
        58
      ],
      "mod_code": [
        "res = n ;",
        "if ( g [ j ] [ j ] && ! ok [ j ] )",
        "bool kpyto = true ;",
        "int cur = ( cur + 1 ) % 3 ;"
      ],
      "err_line": 36,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        36,
        44,
        50,
        43
      ],
      "mod_code": [
        "res = n ;",
        "if ( g [ j ] [ j ] && ! ok [ j ] )",
        "bool kpyto = true ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 36,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        36,
        44,
        58
      ],
      "mod_code": [
        "res = n ;",
        "if ( g [ j ] [ j ] && ! ok [ j ] )",
        "int cur = ( cur + 1 ) % 3 ;"
      ],
      "err_line": 36,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        36,
        44,
        58,
        43
      ],
      "mod_code": [
        "res = n ;",
        "if ( g [ j ] [ j ] && ! ok [ j ] )",
        "int cur = ( cur + 1 ) % 3 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 36,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        36,
        44,
        43
      ],
      "mod_code": [
        "res = n ;",
        "if ( g [ j ] [ j ] && ! ok [ j ] )",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 36,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        36,
        50
      ],
      "mod_code": [
        "res = n ;",
        "bool kpyto = true ;"
      ],
      "err_line": 36,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        36,
        50,
        58
      ],
      "mod_code": [
        "res = n ;",
        "bool kpyto = true ;",
        "int cur = ( cur + 1 ) % 3 ;"
      ],
      "err_line": 36,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        36,
        50,
        58,
        43
      ],
      "mod_code": [
        "res = n ;",
        "bool kpyto = true ;",
        "int cur = ( cur + 1 ) % 3 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 36,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        36,
        50,
        43
      ],
      "mod_code": [
        "res = n ;",
        "bool kpyto = true ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 36,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        36,
        58
      ],
      "mod_code": [
        "res = n ;",
        "int cur = ( cur + 1 ) % 3 ;"
      ],
      "err_line": 36,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        36,
        58,
        43
      ],
      "mod_code": [
        "res = n ;",
        "int cur = ( cur + 1 ) % 3 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 36,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        36,
        43
      ],
      "mod_code": [
        "res = n ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 36,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        44,
        50,
        58,
        43
      ],
      "mod_code": [
        "if ( g [ j ] [ j ] && ! ok [ j ] )",
        "bool kpyto = true ;",
        "int cur = ( cur + 1 ) % 3 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 43,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        44,
        50,
        43
      ],
      "mod_code": [
        "if ( g [ j ] [ j ] && ! ok [ j ] )",
        "bool kpyto = true ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 43,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        44,
        58,
        43
      ],
      "mod_code": [
        "if ( g [ j ] [ j ] && ! ok [ j ] )",
        "int cur = ( cur + 1 ) % 3 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 43,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        44,
        43
      ],
      "mod_code": [
        "if ( g [ j ] [ j ] && ! ok [ j ] )",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 43,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        50,
        58,
        43
      ],
      "mod_code": [
        "bool kpyto = true ;",
        "int cur = ( cur + 1 ) % 3 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 43,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        50,
        43
      ],
      "mod_code": [
        "bool kpyto = true ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 43,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        58,
        43
      ],
      "mod_code": [
        "int cur = ( cur + 1 ) % 3 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 43,
      "err_msg": "‘j’ was not declared in this scope"
    }
  ]
}