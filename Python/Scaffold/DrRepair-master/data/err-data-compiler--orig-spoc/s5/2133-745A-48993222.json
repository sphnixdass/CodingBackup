{
  "meta": {
    "index": 2133,
    "hitid": "33J5JKFMK6SPGQ3ARPRA8WCR0WF3Q7",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "745A",
    "subid": "48993222"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string , f = string = empty character",
      "code": "string s , f = \" \" ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "v = string vector",
      "code": "vector < string > v ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "s1 = string = s",
      "code": "string s1 = s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to size of s exclusive",
      "code": "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "f = empty character",
      "code": "f = \" \" ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "create an element at the end of v and insert s1 to the new element",
      "code": "v . push_back ( s1 ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "f = f + s1 [ size of s1 - 1 ]",
      "code": "f += s1 [ s1 . size ( ) - 1 ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "erase the contents of s1 at the position equal to the result of the size of s - 1",
      "code": "s1 . erase ( s . size ( ) - 1 , 1 ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "s1 = f + s1",
      "code": "s1 = f + s1 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "sort v in ascending order",
      "code": "sort ( v . begin ( ) , v . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "resize v to contain no duplicates",
      "code": "v . resize ( unique ( v . begin ( ) , v . end ( ) ) - v . begin ( ) ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print the size of v",
      "code": "cout << v . size ( ) << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "char f = \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "v . insert ( s1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < string = > v ;"
      ],
      "err_line": 3,
      "err_msg": "an assignment cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "string s1 , s ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "char f = endl ;"
      ],
      "err_line": 6,
      "err_msg": "cannot resolve overloaded function ‘endl’ based on conversion to type ‘char’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "char v . insert ( s1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘.’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "sort ( v . begin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘sort(std::vector<std::__cxx11::basic_string<char> >::iterator, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "v . resize ( no ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘no’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "char f = \" \" ;",
        "v . insert ( s1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        10
      ],
      "mod_code": [
        "char f = \" \" ;",
        "v . insert ( s1 ) ;",
        "s1 += s1 ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        13
      ],
      "mod_code": [
        "char f = \" \" ;",
        "v . insert ( s1 ) ;",
        "s1 += s1 ;",
        "v . resize ( 0 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        5
      ],
      "mod_code": [
        "char f = \" \" ;",
        "v . insert ( s1 ) ;",
        "s1 += s1 ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        1
      ],
      "mod_code": [
        "char f = \" \" ;",
        "v . insert ( s1 ) ;",
        "s1 += s1 ;",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        6,
        7,
        13
      ],
      "mod_code": [
        "char f = \" \" ;",
        "v . insert ( s1 ) ;",
        "v . resize ( 0 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        5
      ],
      "mod_code": [
        "char f = \" \" ;",
        "v . insert ( s1 ) ;",
        "v . resize ( 0 ) ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        1
      ],
      "mod_code": [
        "char f = \" \" ;",
        "v . insert ( s1 ) ;",
        "v . resize ( 0 ) ;",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        6,
        7,
        5
      ],
      "mod_code": [
        "char f = \" \" ;",
        "v . insert ( s1 ) ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        5,
        1
      ],
      "mod_code": [
        "char f = \" \" ;",
        "v . insert ( s1 ) ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        6,
        7,
        1
      ],
      "mod_code": [
        "char f = \" \" ;",
        "v . insert ( s1 ) ;",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "char f = \" \" ;",
        "s1 += s1 ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        10,
        13
      ],
      "mod_code": [
        "char f = \" \" ;",
        "s1 += s1 ;",
        "v . resize ( 0 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        5
      ],
      "mod_code": [
        "char f = \" \" ;",
        "s1 += s1 ;",
        "v . resize ( 0 ) ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        13,
        1
      ],
      "mod_code": [
        "char f = \" \" ;",
        "s1 += s1 ;",
        "v . resize ( 0 ) ;",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        6,
        10,
        5
      ],
      "mod_code": [
        "char f = \" \" ;",
        "s1 += s1 ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        5,
        1
      ],
      "mod_code": [
        "char f = \" \" ;",
        "s1 += s1 ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        6,
        10,
        1
      ],
      "mod_code": [
        "char f = \" \" ;",
        "s1 += s1 ;",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "char f = \" \" ;",
        "v . resize ( 0 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        13,
        5
      ],
      "mod_code": [
        "char f = \" \" ;",
        "v . resize ( 0 ) ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13,
        5,
        1
      ],
      "mod_code": [
        "char f = \" \" ;",
        "v . resize ( 0 ) ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        6,
        13,
        1
      ],
      "mod_code": [
        "char f = \" \" ;",
        "v . resize ( 0 ) ;",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "char f = \" \" ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        1
      ],
      "mod_code": [
        "char f = \" \" ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "char f = \" \" ;",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "v . insert ( s1 ) ;",
        "s1 += s1 ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        7,
        10,
        13
      ],
      "mod_code": [
        "v . insert ( s1 ) ;",
        "s1 += s1 ;",
        "v . resize ( 0 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        5
      ],
      "mod_code": [
        "v . insert ( s1 ) ;",
        "s1 += s1 ;",
        "v . resize ( 0 ) ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        13,
        1
      ],
      "mod_code": [
        "v . insert ( s1 ) ;",
        "s1 += s1 ;",
        "v . resize ( 0 ) ;",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        7,
        10,
        5
      ],
      "mod_code": [
        "v . insert ( s1 ) ;",
        "s1 += s1 ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        5,
        1
      ],
      "mod_code": [
        "v . insert ( s1 ) ;",
        "s1 += s1 ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        7,
        10,
        1
      ],
      "mod_code": [
        "v . insert ( s1 ) ;",
        "s1 += s1 ;",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "v . insert ( s1 ) ;",
        "v . resize ( 0 ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::insert(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        7,
        13,
        5
      ],
      "mod_code": [
        "v . insert ( s1 ) ;",
        "v . resize ( 0 ) ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13,
        5,
        1
      ],
      "mod_code": [
        "v . insert ( s1 ) ;",
        "v . resize ( 0 ) ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        7,
        13,
        1
      ],
      "mod_code": [
        "v . insert ( s1 ) ;",
        "v . resize ( 0 ) ;",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "v . insert ( s1 ) ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        1
      ],
      "mod_code": [
        "v . insert ( s1 ) ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "v . insert ( s1 ) ;",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        10,
        13,
        5
      ],
      "mod_code": [
        "s1 += s1 ;",
        "v . resize ( 0 ) ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        5,
        1
      ],
      "mod_code": [
        "s1 += s1 ;",
        "v . resize ( 0 ) ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        10,
        13,
        1
      ],
      "mod_code": [
        "s1 += s1 ;",
        "v . resize ( 0 ) ;",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "s1 += s1 ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        1
      ],
      "mod_code": [
        "s1 += s1 ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "s1 += s1 ;",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "v . resize ( 0 ) ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        5,
        1
      ],
      "mod_code": [
        "v . resize ( 0 ) ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "v . resize ( 0 ) ;",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "string s , f = endl ;"
      ],
      "err_line": 1,
      "err_msg": "conversion from ‘<unresolved overloaded function type>’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    }
  ]
}