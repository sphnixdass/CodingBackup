{
  "meta": {
    "index": 2619,
    "hitid": "3V0TR1NRVAWIB6FX27Z7S1PSAEN4AK",
    "workerid": "AAGJMIEHD79EY",
    "probid": "1101A",
    "subid": "49055946"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int q",
      "code": "int q ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read q",
      "code": "cin >> q ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while decrement q",
      "code": "while ( q -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let l , r and d be integers",
      "code": "int l , r , d ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read l , r and d",
      "code": "cin >> l >> r >> d ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if l is greater than d",
      "code": "if ( l > d )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print d",
      "code": "cout << d ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "create integer t with r / d",
      "code": "int t = r / d ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "print d * ( t + 1 )",
      "code": "cout << d * ( t + 1 ) ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print newline",
      "code": "cout << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> l >> r >> n ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int t / d ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        7,
        10,
        3,
        9
      ],
      "mod_code": [
        "cout << d << endl ;",
        "cout << d * ( t + 1 ) << endl ;",
        "while ( q -- ) q -- ;",
        "int t / d ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        7,
        10,
        6,
        9
      ],
      "mod_code": [
        "cout << d << endl ;",
        "cout << d * ( t + 1 ) << endl ;",
        "if ( l >= d )",
        "int t / d ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        7,
        10,
        9
      ],
      "mod_code": [
        "cout << d << endl ;",
        "cout << d * ( t + 1 ) << endl ;",
        "int t / d ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        7,
        10,
        9,
        2
      ],
      "mod_code": [
        "cout << d << endl ;",
        "cout << d * ( t + 1 ) << endl ;",
        "int t / d ;",
        "cout << q << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        7,
        3,
        6,
        9
      ],
      "mod_code": [
        "cout << d << endl ;",
        "while ( q -- ) q -- ;",
        "if ( l >= d )",
        "int t / d ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        7,
        3,
        9
      ],
      "mod_code": [
        "cout << d << endl ;",
        "while ( q -- ) q -- ;",
        "int t / d ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        7,
        3,
        9,
        2
      ],
      "mod_code": [
        "cout << d << endl ;",
        "while ( q -- ) q -- ;",
        "int t / d ;",
        "cout << q << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        7,
        6,
        9
      ],
      "mod_code": [
        "cout << d << endl ;",
        "if ( l >= d )",
        "int t / d ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        7,
        6,
        9,
        2
      ],
      "mod_code": [
        "cout << d << endl ;",
        "if ( l >= d )",
        "int t / d ;",
        "cout << q << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "cout << d << endl ;",
        "int t / d ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        7,
        9,
        2
      ],
      "mod_code": [
        "cout << d << endl ;",
        "int t / d ;",
        "cout << q << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        10,
        3,
        6,
        9
      ],
      "mod_code": [
        "cout << d * ( t + 1 ) << endl ;",
        "while ( q -- ) q -- ;",
        "if ( l >= d )",
        "int t / d ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        10,
        3,
        9
      ],
      "mod_code": [
        "cout << d * ( t + 1 ) << endl ;",
        "while ( q -- ) q -- ;",
        "int t / d ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        10,
        3,
        9,
        2
      ],
      "mod_code": [
        "cout << d * ( t + 1 ) << endl ;",
        "while ( q -- ) q -- ;",
        "int t / d ;",
        "cout << q << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        10,
        6,
        9
      ],
      "mod_code": [
        "cout << d * ( t + 1 ) << endl ;",
        "if ( l >= d )",
        "int t / d ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        10,
        6,
        9,
        2
      ],
      "mod_code": [
        "cout << d * ( t + 1 ) << endl ;",
        "if ( l >= d )",
        "int t / d ;",
        "cout << q << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "cout << d * ( t + 1 ) << endl ;",
        "int t / d ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        10,
        9,
        2
      ],
      "mod_code": [
        "cout << d * ( t + 1 ) << endl ;",
        "int t / d ;",
        "cout << q << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        6,
        9
      ],
      "mod_code": [
        "while ( q -- ) q -- ;",
        "if ( l >= d )",
        "int t / d ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        2
      ],
      "mod_code": [
        "while ( q -- ) q -- ;",
        "if ( l >= d )",
        "int t / d ;",
        "cout << q << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( q -- ) q -- ;",
        "int t / d ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        3,
        9,
        2
      ],
      "mod_code": [
        "while ( q -- ) q -- ;",
        "int t / d ;",
        "cout << q << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "if ( l >= d )",
        "int t / d ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        6,
        9,
        2
      ],
      "mod_code": [
        "if ( l >= d )",
        "int t / d ;",
        "cout << q << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "int t / d ;",
        "cout << q << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘/’ token"
    }
  ]
}