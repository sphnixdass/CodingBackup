{
  "meta": {
    "index": 1398,
    "hitid": "33EEIIWHK719SZ5TBZXGRR4AS34VQ3",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "259A",
    "subid": "48415715"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "str = string",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "ctr = 0",
      "code": "int ctr = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to 8 exclusive",
      "code": "for ( int i = 0 ; i < 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if str not is \" BWBWBWBW \" or \" WBWBWBWB \" increment ctr",
      "code": "if ( ! str . compare ( \" BWBWBWBW \" ) || ! str . compare ( \" WBWBWBWB \" ) ) ctr ++ ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if ctr is 8",
      "code": "if ( ctr == 8 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char str ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘compare’ in ‘str’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "ctr = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( ctr == 8 ) ctr ++ ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "ctr = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        4
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "ctr = 0 ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        4,
        3
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "ctr = 0 ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        4,
        7
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "ctr = 0 ;",
        "gets ( str ) ;",
        "if ( ctr == 8 ) ctr ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        4,
        1
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "ctr = 0 ;",
        "gets ( str ) ;",
        "char str ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        3
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "ctr = 0 ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        3,
        7
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "ctr = 0 ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( ctr == 8 ) ctr ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        3,
        1
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "ctr = 0 ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "char str ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        7
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "ctr = 0 ;",
        "if ( ctr == 8 ) ctr ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        7,
        1
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "ctr = 0 ;",
        "if ( ctr == 8 ) ctr ++ ;",
        "char str ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        1
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "ctr = 0 ;",
        "char str ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "gets ( str ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        4,
        3
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        3,
        7
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( ctr == 8 ) ctr ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        3,
        1
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "char str ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        7
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "gets ( str ) ;",
        "if ( ctr == 8 ) ctr ++ ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        4,
        7,
        1
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "gets ( str ) ;",
        "if ( ctr == 8 ) ctr ++ ;",
        "char str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        4,
        1
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "gets ( str ) ;",
        "char str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        7
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( ctr == 8 ) ctr ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        7,
        1
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( ctr == 8 ) ctr ++ ;",
        "char str ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        1
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "char str ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "if ( ctr == 8 ) ctr ++ ;"
      ],
      "err_line": 9,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        5,
        7,
        1
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "if ( ctr == 8 ) ctr ++ ;",
        "char str ;"
      ],
      "err_line": 5,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "if ( str != \" BWBWBWBW \" || str == \" WBWBWBWB \" ) ctr ++ ;",
        "char str ;"
      ],
      "err_line": 5,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "ctr = 0 ;",
        "gets ( str ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        3
      ],
      "mod_code": [
        "ctr = 0 ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        3,
        7
      ],
      "mod_code": [
        "ctr = 0 ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( ctr == 8 ) ctr ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        3,
        1
      ],
      "mod_code": [
        "ctr = 0 ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "char str ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        7
      ],
      "mod_code": [
        "ctr = 0 ;",
        "gets ( str ) ;",
        "if ( ctr == 8 ) ctr ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        7,
        1
      ],
      "mod_code": [
        "ctr = 0 ;",
        "gets ( str ) ;",
        "if ( ctr == 8 ) ctr ++ ;",
        "char str ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4,
        1
      ],
      "mod_code": [
        "ctr = 0 ;",
        "gets ( str ) ;",
        "char str ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "ctr = 0 ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        7
      ],
      "mod_code": [
        "ctr = 0 ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( ctr == 8 ) ctr ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        1
      ],
      "mod_code": [
        "ctr = 0 ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( ctr == 8 ) ctr ++ ;",
        "char str ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        1
      ],
      "mod_code": [
        "ctr = 0 ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "char str ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "ctr = 0 ;",
        "if ( ctr == 8 ) ctr ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        1
      ],
      "mod_code": [
        "ctr = 0 ;",
        "if ( ctr == 8 ) ctr ++ ;",
        "char str ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "ctr = 0 ;",
        "char str ;"
      ],
      "err_line": 2,
      "err_msg": "‘ctr’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "gets ( str ) ;",
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        7
      ],
      "mod_code": [
        "gets ( str ) ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( ctr == 8 ) ctr ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        7,
        1
      ],
      "mod_code": [
        "gets ( str ) ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( ctr == 8 ) ctr ++ ;",
        "char str ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        1
      ],
      "mod_code": [
        "gets ( str ) ;",
        "for ( i = 0 ; i < 8 ; i ++ )",
        "char str ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "gets ( str ) ;",
        "if ( ctr == 8 ) ctr ++ ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        7,
        1
      ],
      "mod_code": [
        "gets ( str ) ;",
        "if ( ctr == 8 ) ctr ++ ;",
        "char str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "gets ( str ) ;",
        "char str ;"
      ],
      "err_line": 4,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( ctr == 8 ) ctr ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )",
        "if ( ctr == 8 ) ctr ++ ;",
        "char str ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )",
        "char str ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "if ( ctr == 8 ) ctr ++ ;",
        "char str ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘compare’ in ‘str’, which is of non-class type ‘char’"
    }
  ]
}