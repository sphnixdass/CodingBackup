{
  "meta": {
    "index": 2673,
    "hitid": "3T5ZXGO9DEIQ1JA3CWMJCXH6FCUQZD",
    "workerid": "AIWEXPJAU66D9",
    "probid": "16A",
    "subid": "44935103"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n and m = integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare character variables pr , ls = ' a ' and nx",
      "code": "char pr , ls = ' a ' , nx ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set integer c to 0",
      "code": "int c = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read nx",
      "code": "cin >> nx ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if j is equal to m - 1",
      "code": "if ( j == m - 1 )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "ls = nx",
      "code": "ls = nx ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "else if j is equal to 0",
      "code": "else if ( j == 0 )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if nx is equal to ls",
      "code": "if ( nx == ls )",
      "indent": 4
    },
    {
      "line": 12,
      "text": "increment c",
      "code": "c ++ ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "print \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 16,
      "text": "set value of pr to nx",
      "code": "pr = nx ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "if j ! = 0",
      "code": "if ( j != 0 )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "if pr ! = nx",
      "code": "if ( pr != nx )",
      "indent": 4
    },
    {
      "line": 20,
      "text": "increment c",
      "code": "c ++ ;",
      "indent": 5
    },
    {
      "line": 21,
      "text": "print \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 5
    },
    {
      "line": 22,
      "text": "break the loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "if c ! = 0",
      "code": "if ( c != 0 ) break ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "if c is equal to 0 print \" YES \\ n \"",
      "code": "if ( c == 0 ) { cout << \" YES\\n \" ; }",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "if ( c != 0 )"
      ],
      "err_line": 27,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char pr , ls , nx , nx , nx ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘char nx’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( nx == \" ls \" )"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 14,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "* pr = nx ;"
      ],
      "err_line": 16,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "if ( c )"
      ],
      "err_line": 27,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        16
      ],
      "mod_code": [
        "if ( c != 0 )",
        "* pr = nx ;"
      ],
      "err_line": 16,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        26,
        16,
        6
      ],
      "mod_code": [
        "if ( c != 0 )",
        "* pr = nx ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        16,
        6,
        19
      ],
      "mod_code": [
        "if ( c != 0 )",
        "* pr = nx ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( pr != ' nx ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        16,
        6,
        14
      ],
      "mod_code": [
        "if ( c != 0 )",
        "* pr = nx ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "stop ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        16,
        6,
        10
      ],
      "mod_code": [
        "if ( c != 0 )",
        "* pr = nx ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        16,
        19
      ],
      "mod_code": [
        "if ( c != 0 )",
        "* pr = nx ;",
        "if ( pr != ' nx ' )"
      ],
      "err_line": 16,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        26,
        16,
        19,
        14
      ],
      "mod_code": [
        "if ( c != 0 )",
        "* pr = nx ;",
        "if ( pr != ' nx ' )",
        "stop ;"
      ],
      "err_line": 14,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        16,
        19,
        10
      ],
      "mod_code": [
        "if ( c != 0 )",
        "* pr = nx ;",
        "if ( pr != ' nx ' )",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 16,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        26,
        16,
        14
      ],
      "mod_code": [
        "if ( c != 0 )",
        "* pr = nx ;",
        "stop ;"
      ],
      "err_line": 14,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        16,
        14,
        10
      ],
      "mod_code": [
        "if ( c != 0 )",
        "* pr = nx ;",
        "stop ;",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        16,
        10
      ],
      "mod_code": [
        "if ( c != 0 )",
        "* pr = nx ;",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 16,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        26,
        6
      ],
      "mod_code": [
        "if ( c != 0 )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        6,
        19
      ],
      "mod_code": [
        "if ( c != 0 )",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( pr != ' nx ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        6,
        19,
        14
      ],
      "mod_code": [
        "if ( c != 0 )",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( pr != ' nx ' )",
        "stop ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        6,
        19,
        10
      ],
      "mod_code": [
        "if ( c != 0 )",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( pr != ' nx ' )",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        6,
        14
      ],
      "mod_code": [
        "if ( c != 0 )",
        "for ( j = 0 ; j < m ; j ++ )",
        "stop ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        6,
        14,
        10
      ],
      "mod_code": [
        "if ( c != 0 )",
        "for ( j = 0 ; j < m ; j ++ )",
        "stop ;",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        6,
        10
      ],
      "mod_code": [
        "if ( c != 0 )",
        "for ( j = 0 ; j < m ; j ++ )",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        19
      ],
      "mod_code": [
        "if ( c != 0 )",
        "if ( pr != ' nx ' )"
      ],
      "err_line": 27,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        19,
        14
      ],
      "mod_code": [
        "if ( c != 0 )",
        "if ( pr != ' nx ' )",
        "stop ;"
      ],
      "err_line": 14,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        19,
        14,
        10
      ],
      "mod_code": [
        "if ( c != 0 )",
        "if ( pr != ' nx ' )",
        "stop ;",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        19,
        10
      ],
      "mod_code": [
        "if ( c != 0 )",
        "if ( pr != ' nx ' )",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 27,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        26,
        14
      ],
      "mod_code": [
        "if ( c != 0 )",
        "stop ;"
      ],
      "err_line": 14,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        14,
        10
      ],
      "mod_code": [
        "if ( c != 0 )",
        "stop ;",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        10
      ],
      "mod_code": [
        "if ( c != 0 )",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 27,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        6
      ],
      "mod_code": [
        "* pr = nx ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6,
        19
      ],
      "mod_code": [
        "* pr = nx ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( pr != ' nx ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6,
        19,
        14
      ],
      "mod_code": [
        "* pr = nx ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( pr != ' nx ' )",
        "stop ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6,
        19,
        10
      ],
      "mod_code": [
        "* pr = nx ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( pr != ' nx ' )",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6,
        14
      ],
      "mod_code": [
        "* pr = nx ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "stop ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6,
        14,
        10
      ],
      "mod_code": [
        "* pr = nx ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "stop ;",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        6,
        10
      ],
      "mod_code": [
        "* pr = nx ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19
      ],
      "mod_code": [
        "* pr = nx ;",
        "if ( pr != ' nx ' )"
      ],
      "err_line": 16,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        16,
        19,
        14
      ],
      "mod_code": [
        "* pr = nx ;",
        "if ( pr != ' nx ' )",
        "stop ;"
      ],
      "err_line": 14,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        14,
        10
      ],
      "mod_code": [
        "* pr = nx ;",
        "if ( pr != ' nx ' )",
        "stop ;",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        10
      ],
      "mod_code": [
        "* pr = nx ;",
        "if ( pr != ' nx ' )",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 16,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        16,
        14
      ],
      "mod_code": [
        "* pr = nx ;",
        "stop ;"
      ],
      "err_line": 14,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        14,
        10
      ],
      "mod_code": [
        "* pr = nx ;",
        "stop ;",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        10
      ],
      "mod_code": [
        "* pr = nx ;",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 16,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        6,
        19
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( pr != ' nx ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        19,
        14
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( pr != ' nx ' )",
        "stop ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        19,
        14,
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( pr != ' nx ' )",
        "stop ;",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        19,
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( pr != ' nx ' )",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "stop ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "stop ;",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        14
      ],
      "mod_code": [
        "if ( pr != ' nx ' )",
        "stop ;"
      ],
      "err_line": 14,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        14,
        10
      ],
      "mod_code": [
        "if ( pr != ' nx ' )",
        "stop ;",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        10
      ],
      "mod_code": [
        "stop ;",
        "else if ( j == ' 0 ' )"
      ],
      "err_line": 14,
      "err_msg": "‘stop’ was not declared in this scope"
    }
  ]
}