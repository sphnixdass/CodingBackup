{
  "meta": {
    "index": 2268,
    "hitid": "33EEIIWHK719SZ5TBZXGRR4AR1OVQI",
    "workerid": "A1APYLD4DUK33J",
    "probid": "6A",
    "subid": "42274460"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer i , create integer array a with size 11111",
      "code": "int i , a [ 11111 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create boolean f",
      "code": "bool f ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to 4 inclusive , read a [ i ]",
      "code": "for ( i = 1 ; i <= 4 ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "sort elements from a + 1 to a + 5",
      "code": "sort ( a + 1 , a + 5 ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set f to false",
      "code": "f = false ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if a [ 1 ] + a [ 2 ] is greater than a [ 3 ] and f is false",
      "code": "if ( a [ 1 ] + a [ 2 ] > a [ 3 ] && f == false )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print \" TRIANGLE \" print newline",
      "code": "cout << \" TRIANGLE \" << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set f to true",
      "code": "f = true ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if a [ 1 ] + a [ 2 ] is greater than a [ 4 ] and f is false",
      "code": "if ( a [ 1 ] + a [ 2 ] > a [ 4 ] && f == false )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print \" TRIANGLE \" print newline",
      "code": "cout << \" TRIANGLE \" << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set f to true",
      "code": "f = true ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if a [ 2 ] + a [ 3 ] is greater than a [ 4 ] and f is false",
      "code": "if ( a [ 2 ] + a [ 3 ] > a [ 4 ] && f == false )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print \" TRIANGLE \" print newline",
      "code": "cout << \" TRIANGLE \" << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "set f to true",
      "code": "f = true ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if a [ 1 ] + a [ 2 ] is 3 and f is false",
      "code": "if ( a [ 1 ] + a [ 2 ] == a [ 3 ] && f == false )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print \" SEGMENT \" print newline",
      "code": "cout << \" SEGMENT \" << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "set f to true",
      "code": "f = true ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "if a [ 1 ] + a [ 2 ] is a [ 4 ] and f is false",
      "code": "if ( a [ 1 ] + a [ 2 ] == a [ 4 ] && f == false )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print \" SEGMENT \" print newline",
      "code": "cout << \" SEGMENT \" << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "set f to true",
      "code": "f = true ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "if a [ 2 ] + a [ 3 ] is a [ 4 ] and f is false",
      "code": "if ( a [ 2 ] + a [ 3 ] == a [ 4 ] && f == false )",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print \" SEGMENT \" print newline",
      "code": "cout << \" SEGMENT \" << endl ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "set f to true",
      "code": "f = true ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "if f is false , print \" IMPOSSIBLE \" print newline",
      "code": "if ( f == false ) cout << \" IMPOSSIBLE \" << endl ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "sort ( a + 1 + a + 5 ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [11111]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "bool f = false ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f’"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "if ( a [ 1 ] + a [ 2 ] == 3 && f == false )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        1,
        18,
        4
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "if ( a [ 1 ] + a [ 2 ] == 3 && f == false )",
        "sort ( a + 1 + a + 5 ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        1,
        18,
        4,
        16
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "if ( a [ 1 ] + a [ 2 ] == 3 && f == false )",
        "sort ( a + 1 + a + 5 ) ;",
        "bool f = true ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        1,
        18,
        4,
        20
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "if ( a [ 1 ] + a [ 2 ] == 3 && f == false )",
        "sort ( a + 1 + a + 5 ) ;",
        "bool f = true ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        1,
        18,
        16
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "if ( a [ 1 ] + a [ 2 ] == 3 && f == false )",
        "bool f = true ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        1,
        18,
        16,
        20
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "if ( a [ 1 ] + a [ 2 ] == 3 && f == false )",
        "bool f = true ;",
        "bool f = true ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        1,
        18,
        20
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "if ( a [ 1 ] + a [ 2 ] == 3 && f == false )",
        "bool f = true ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "sort ( a + 1 + a + 5 ) ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        1,
        4,
        18
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "sort ( a + 1 + a + 5 ) ;",
        "if ( ( a [ 1 ] + a [ 2 ] == 3 && f == false ) )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        1,
        4,
        18,
        16
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "sort ( a + 1 + a + 5 ) ;",
        "if ( ( a [ 1 ] + a [ 2 ] == 3 && f == false ) )",
        "bool f = true ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        1,
        4,
        18,
        20
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "sort ( a + 1 + a + 5 ) ;",
        "if ( ( a [ 1 ] + a [ 2 ] == 3 && f == false ) )",
        "bool f = true ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        1,
        4,
        16
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "sort ( a + 1 + a + 5 ) ;",
        "bool f = true ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        1,
        4,
        16,
        20
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "sort ( a + 1 + a + 5 ) ;",
        "bool f = true ;",
        "bool f = true ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        1,
        4,
        20
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "sort ( a + 1 + a + 5 ) ;",
        "bool f = true ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "if ( ( a [ 1 ] + a [ 2 ] == 3 && f == false ) )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        1,
        18,
        16
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "if ( ( a [ 1 ] + a [ 2 ] == 3 && f == false ) )",
        "bool f = true ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        1,
        18,
        16,
        20
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "if ( ( a [ 1 ] + a [ 2 ] == 3 && f == false ) )",
        "bool f = true ;",
        "bool f = true ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        1,
        18,
        20
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "if ( ( a [ 1 ] + a [ 2 ] == 3 && f == false ) )",
        "bool f = true ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "bool f = true ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        1,
        16,
        20
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "bool f = true ;",
        "bool f = true ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        1,
        20
      ],
      "mod_code": [
        "int a , a [ 11111 ] ;",
        "bool f = true ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int a [11111]’"
    },
    {
      "mod_line": [
        18,
        4
      ],
      "mod_code": [
        "if ( a [ 1 ] + a [ 2 ] == 3 && f == false )",
        "sort ( a + 1 + a + 5 ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [11111]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        18,
        4,
        16
      ],
      "mod_code": [
        "if ( a [ 1 ] + a [ 2 ] == 3 && f == false )",
        "sort ( a + 1 + a + 5 ) ;",
        "bool f = true ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [11111]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        18,
        4,
        16,
        20
      ],
      "mod_code": [
        "if ( a [ 1 ] + a [ 2 ] == 3 && f == false )",
        "sort ( a + 1 + a + 5 ) ;",
        "bool f = true ;",
        "bool f = true ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [11111]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        18,
        4,
        20
      ],
      "mod_code": [
        "if ( a [ 1 ] + a [ 2 ] == 3 && f == false )",
        "sort ( a + 1 + a + 5 ) ;",
        "bool f = true ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [11111]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        4,
        18
      ],
      "mod_code": [
        "sort ( a + 1 + a + 5 ) ;",
        "if ( ( a [ 1 ] + a [ 2 ] == 3 && f == false ) )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [11111]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        4,
        18,
        16
      ],
      "mod_code": [
        "sort ( a + 1 + a + 5 ) ;",
        "if ( ( a [ 1 ] + a [ 2 ] == 3 && f == false ) )",
        "bool f = true ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [11111]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        4,
        18,
        16,
        20
      ],
      "mod_code": [
        "sort ( a + 1 + a + 5 ) ;",
        "if ( ( a [ 1 ] + a [ 2 ] == 3 && f == false ) )",
        "bool f = true ;",
        "bool f = true ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [11111]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        4,
        18,
        20
      ],
      "mod_code": [
        "sort ( a + 1 + a + 5 ) ;",
        "if ( ( a [ 1 ] + a [ 2 ] == 3 && f == false ) )",
        "bool f = true ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [11111]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "sort ( a + 1 + a + 5 ) ;",
        "bool f = true ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [11111]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        4,
        16,
        20
      ],
      "mod_code": [
        "sort ( a + 1 + a + 5 ) ;",
        "bool f = true ;",
        "bool f = true ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [11111]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        4,
        20
      ],
      "mod_code": [
        "sort ( a + 1 + a + 5 ) ;",
        "bool f = true ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [11111]’ to binary ‘operator+’"
    }
  ]
}