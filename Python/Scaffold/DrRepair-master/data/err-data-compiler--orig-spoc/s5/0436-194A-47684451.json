{
  "meta": {
    "index": 436,
    "hitid": "3QI9WAYOGQ50QP552VEDAZ3CTY1S61",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "194A",
    "subid": "47684451"
  },
  "lines": [
    {
      "line": 0,
      "text": "T = 1 = int",
      "code": "int T = 1 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in void function solve",
      "code": "void solve ( )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n , k = int",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "is 0 > n - ( k - ( 2 * n ) ) then print 0 , else print n - ( k - ( 2 * n ) )",
      "code": "cout << ( ( ( 0 ) > ( n - ( k - ( 2 * n ) ) ) ) ? ( 0 ) : ( n - ( k - ( 2 * n ) ) ) ) << endl ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 7,
      "text": "while decrementing T , calls solve",
      "code": "while ( T -- ) { solve ( ) ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cout << ( n - ( k - ( k - ( 2 * n ) ) ) ? \" 0 ( k - ( 2 * n ) ) << endl ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int T , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , k , k ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "cout << ( n - ( k - ( k - ( 2 * n ) ) ) ? \" 0 ( k - ( 2 * n ) ) << endl ;",
        "while ( T -- )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        7,
        3
      ],
      "mod_code": [
        "cout << ( n - ( k - ( k - ( 2 * n ) ) ) ? \" 0 ( k - ( 2 * n ) ) << endl ;",
        "while ( T -- )",
        "cin >> n >> n ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        7,
        3,
        2
      ],
      "mod_code": [
        "cout << ( n - ( k - ( k - ( 2 * n ) ) ) ? \" 0 ( k - ( 2 * n ) ) << endl ;",
        "while ( T -- )",
        "cin >> n >> n ;",
        "int n , k , k ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        7,
        3,
        0
      ],
      "mod_code": [
        "cout << ( n - ( k - ( k - ( 2 * n ) ) ) ? \" 0 ( k - ( 2 * n ) ) << endl ;",
        "while ( T -- )",
        "cin >> n >> n ;",
        "int T , 1 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        7,
        2
      ],
      "mod_code": [
        "cout << ( n - ( k - ( k - ( 2 * n ) ) ) ? \" 0 ( k - ( 2 * n ) ) << endl ;",
        "while ( T -- )",
        "int n , k , k ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        7,
        2,
        0
      ],
      "mod_code": [
        "cout << ( n - ( k - ( k - ( 2 * n ) ) ) ? \" 0 ( k - ( 2 * n ) ) << endl ;",
        "while ( T -- )",
        "int n , k , k ;",
        "int T , 1 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        7,
        0
      ],
      "mod_code": [
        "cout << ( n - ( k - ( k - ( 2 * n ) ) ) ? \" 0 ( k - ( 2 * n ) ) << endl ;",
        "while ( T -- )",
        "int T , 1 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "cout << ( n - ( k - ( k - ( 2 * n ) ) ) ? \" 0 ( k - ( 2 * n ) ) << endl ;",
        "cin >> n >> n ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        3,
        2
      ],
      "mod_code": [
        "cout << ( n - ( k - ( k - ( 2 * n ) ) ) ? \" 0 ( k - ( 2 * n ) ) << endl ;",
        "cin >> n >> n ;",
        "int n , k , k ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        3,
        2,
        0
      ],
      "mod_code": [
        "cout << ( n - ( k - ( k - ( 2 * n ) ) ) ? \" 0 ( k - ( 2 * n ) ) << endl ;",
        "cin >> n >> n ;",
        "int n , k , k ;",
        "int T , 1 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        3,
        0
      ],
      "mod_code": [
        "cout << ( n - ( k - ( k - ( 2 * n ) ) ) ? \" 0 ( k - ( 2 * n ) ) << endl ;",
        "cin >> n >> n ;",
        "int T , 1 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "cout << ( n - ( k - ( k - ( 2 * n ) ) ) ? \" 0 ( k - ( 2 * n ) ) << endl ;",
        "int n , k , k ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        2,
        0
      ],
      "mod_code": [
        "cout << ( n - ( k - ( k - ( 2 * n ) ) ) ? \" 0 ( k - ( 2 * n ) ) << endl ;",
        "int n , k , k ;",
        "int T , 1 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "cout << ( n - ( k - ( k - ( 2 * n ) ) ) ? \" 0 ( k - ( 2 * n ) ) << endl ;",
        "int T , 1 ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        7,
        3,
        2
      ],
      "mod_code": [
        "while ( T -- )",
        "cin >> n >> n ;",
        "int n , k , k ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        7,
        3,
        2,
        0
      ],
      "mod_code": [
        "while ( T -- )",
        "cin >> n >> n ;",
        "int n , k , k ;",
        "int T , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        3,
        2,
        4
      ],
      "mod_code": [
        "while ( T -- )",
        "cin >> n >> n ;",
        "int n , k , k ;",
        "cout << ( n - ( k - ( 2 * ( 2 * n ) ) ) ? 0 : n - ( k * n ) ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        7,
        3,
        0
      ],
      "mod_code": [
        "while ( T -- )",
        "cin >> n >> n ;",
        "int T , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        3,
        0,
        4
      ],
      "mod_code": [
        "while ( T -- )",
        "cin >> n >> n ;",
        "int T , 1 ;",
        "cout << ( n - ( k - ( 2 * ( 2 * n ) ) ) ? 0 : n - ( k * n ) ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "while ( T -- )",
        "int n , k , k ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        7,
        2,
        0
      ],
      "mod_code": [
        "while ( T -- )",
        "int n , k , k ;",
        "int T , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        2,
        0,
        4
      ],
      "mod_code": [
        "while ( T -- )",
        "int n , k , k ;",
        "int T , 1 ;",
        "cout << ( n - ( k - ( 2 * ( 2 * n ) ) ) ? 0 : n - ( k * n ) ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        2,
        4
      ],
      "mod_code": [
        "while ( T -- )",
        "int n , k , k ;",
        "cout << ( n - ( k - ( 2 * ( 2 * n ) ) ) ? 0 : n - ( k * n ) ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "while ( T -- )",
        "int T , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        0,
        4
      ],
      "mod_code": [
        "while ( T -- )",
        "int T , 1 ;",
        "cout << ( n - ( k - ( 2 * ( 2 * n ) ) ) ? 0 : n - ( k * n ) ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int n , k , k ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        3,
        2,
        0
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int n , k , k ;",
        "int T , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        3,
        2,
        0,
        4
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int n , k , k ;",
        "int T , 1 ;",
        "cout << ( n - ( k - ( 2 * ( 2 * n ) ) ) ? 0 : n - ( k * n ) ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        3,
        2,
        4
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int n , k , k ;",
        "cout << ( n - ( k - ( 2 * ( 2 * n ) ) ) ? 0 : n - ( k * n ) ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int T , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        3,
        0,
        4
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int T , 1 ;",
        "cout << ( n - ( k - ( 2 * ( 2 * n ) ) ) ? 0 : n - ( k * n ) ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        0
      ],
      "mod_code": [
        "int n , k , k ;",
        "int T , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        0,
        4
      ],
      "mod_code": [
        "int n , k , k ;",
        "int T , 1 ;",
        "cout << ( n - ( k - ( 2 * ( 2 * n ) ) ) ? 0 : n - ( k * n ) ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "int n , k , k ;",
        "cout << ( n - ( k - ( 2 * ( 2 * n ) ) ) ? 0 : n - ( k * n ) ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "int T , 1 ;",
        "cout << ( n - ( k - ( 2 * ( 2 * n ) ) ) ? 0 : n - ( k * n ) ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    }
  ]
}