{
  "meta": {
    "index": 1196,
    "hitid": "3ZQX1VYFTDZ8WBW0OTU2A8P224I8O0",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "797A",
    "subid": "46028905"
  },
  "lines": [
    {
      "line": 0,
      "text": "n , k = int",
      "code": "int n , k ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a = int array of size 100005",
      "code": "int a [ 100005 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "in function fj taking a long n and returning a long",
      "code": "long fj ( long n )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "c = int with c = 1",
      "code": "int c = 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 2 to n inclusive",
      "code": "for ( int i = 2 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "loop while n is a multiple of i",
      "code": "while ( n % i == 0 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set a [ c ] to i then increment c",
      "code": "a [ c ++ ] = i ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "set n to n / i",
      "code": "n /= i ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "return c - 1",
      "code": "return c - 1 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 13,
      "text": "loop while reading n then k",
      "code": "while ( cin >> n >> k )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "set all values of a to 0",
      "code": "memset ( a , 0 , sizeof ( a ) ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "len = long with len = fj of n",
      "code": "long len = fj ( n ) ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "num = long with num = 1",
      "code": "long num = 1 ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if len < k",
      "code": "if ( len < k )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "continue",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "for i = k to len inclusive set num to num * a [ i ]",
      "code": "for ( int i = k ; i <= len ; ++ i ) { num *= a [ i ] ; }",
      "indent": 2
    },
    {
      "line": 22,
      "text": "for i = 1 to k print a [ i ] and ' '",
      "code": "for ( int i = 1 ; i < k ; ++ i ) { cout << a [ i ] << ' ' ; }",
      "indent": 2
    },
    {
      "line": 23,
      "text": "print num",
      "code": "cout << num << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , k , k ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int k’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int * c = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "while ( >> n >> k )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘>>’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 0 ; i ++ ) { a = 0 ; }"
      ],
      "err_line": 14,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [100005]’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "continue continue ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        22,
        13
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "while ( >> n >> k )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘>>’ token"
    },
    {
      "mod_line": [
        22,
        13,
        19
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "while ( >> n >> k )",
        "continue continue ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘>>’ token"
    },
    {
      "mod_line": [
        22,
        13,
        19,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "while ( >> n >> k )",
        "continue continue ;",
        "char a [ 100005 ] ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘>>’ token"
    },
    {
      "mod_line": [
        22,
        13,
        19,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "while ( >> n >> k )",
        "continue continue ;",
        "int * c = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        13,
        19,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "while ( >> n >> k )",
        "continue continue ;",
        "while ( n % i != 0 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘>>’ token"
    },
    {
      "mod_line": [
        22,
        13,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "while ( >> n >> k )",
        "char a [ 100005 ] ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘>>’ token"
    },
    {
      "mod_line": [
        22,
        13,
        1,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "while ( >> n >> k )",
        "char a [ 100005 ] ;",
        "int * c = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        13,
        1,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "while ( >> n >> k )",
        "char a [ 100005 ] ;",
        "while ( n % i != 0 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘>>’ token"
    },
    {
      "mod_line": [
        22,
        13,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "while ( >> n >> k )",
        "int * c = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        13,
        3,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "while ( >> n >> k )",
        "int * c = 1 ;",
        "while ( n % i != 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        13,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "while ( >> n >> k )",
        "while ( n % i != 0 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘>>’ token"
    },
    {
      "mod_line": [
        22,
        19
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "continue continue ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        22,
        19,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "continue continue ;",
        "char a [ 100005 ] ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        22,
        19,
        1,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "continue continue ;",
        "char a [ 100005 ] ;",
        "int * c = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        19,
        1,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "continue continue ;",
        "char a [ 100005 ] ;",
        "while ( n % i != 0 )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        22,
        19,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "continue continue ;",
        "int * c = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        19,
        3,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "continue continue ;",
        "int * c = 1 ;",
        "while ( n % i != 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        19,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "continue continue ;",
        "while ( n % i != 0 )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        22,
        1,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "char a [ 100005 ] ;",
        "int * c = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        1,
        3,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "char a [ 100005 ] ;",
        "int * c = 1 ;",
        "while ( n % i != 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "int * c = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        3,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= k ; i ++ ) cout << a [ i ] << ' ' ;",
        "int * c = 1 ;",
        "while ( n % i != 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        19
      ],
      "mod_code": [
        "while ( >> n >> k )",
        "continue continue ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘>>’ token"
    },
    {
      "mod_line": [
        13,
        19,
        1
      ],
      "mod_code": [
        "while ( >> n >> k )",
        "continue continue ;",
        "char a [ 100005 ] ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘>>’ token"
    },
    {
      "mod_line": [
        13,
        19,
        1,
        3
      ],
      "mod_code": [
        "while ( >> n >> k )",
        "continue continue ;",
        "char a [ 100005 ] ;",
        "int * c = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        19,
        1,
        5
      ],
      "mod_code": [
        "while ( >> n >> k )",
        "continue continue ;",
        "char a [ 100005 ] ;",
        "while ( n % i != 0 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘>>’ token"
    },
    {
      "mod_line": [
        13,
        19,
        3
      ],
      "mod_code": [
        "while ( >> n >> k )",
        "continue continue ;",
        "int * c = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        19,
        3,
        5
      ],
      "mod_code": [
        "while ( >> n >> k )",
        "continue continue ;",
        "int * c = 1 ;",
        "while ( n % i != 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        19,
        5
      ],
      "mod_code": [
        "while ( >> n >> k )",
        "continue continue ;",
        "while ( n % i != 0 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘>>’ token"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "while ( >> n >> k )",
        "char a [ 100005 ] ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘>>’ token"
    },
    {
      "mod_line": [
        13,
        1,
        3
      ],
      "mod_code": [
        "while ( >> n >> k )",
        "char a [ 100005 ] ;",
        "int * c = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        1,
        3,
        5
      ],
      "mod_code": [
        "while ( >> n >> k )",
        "char a [ 100005 ] ;",
        "int * c = 1 ;",
        "while ( n % i != 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        1,
        5
      ],
      "mod_code": [
        "while ( >> n >> k )",
        "char a [ 100005 ] ;",
        "while ( n % i != 0 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘>>’ token"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "while ( >> n >> k )",
        "int * c = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        3,
        5
      ],
      "mod_code": [
        "while ( >> n >> k )",
        "int * c = 1 ;",
        "while ( n % i != 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "while ( >> n >> k )",
        "while ( n % i != 0 )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘>>’ token"
    },
    {
      "mod_line": [
        19,
        1
      ],
      "mod_code": [
        "continue continue ;",
        "char a [ 100005 ] ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        19,
        1,
        3
      ],
      "mod_code": [
        "continue continue ;",
        "char a [ 100005 ] ;",
        "int * c = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        1,
        3,
        5
      ],
      "mod_code": [
        "continue continue ;",
        "char a [ 100005 ] ;",
        "int * c = 1 ;",
        "while ( n % i != 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        1,
        5
      ],
      "mod_code": [
        "continue continue ;",
        "char a [ 100005 ] ;",
        "while ( n % i != 0 )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        19,
        3
      ],
      "mod_code": [
        "continue continue ;",
        "int * c = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        3,
        5
      ],
      "mod_code": [
        "continue continue ;",
        "int * c = 1 ;",
        "while ( n % i != 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        5
      ],
      "mod_code": [
        "continue continue ;",
        "while ( n % i != 0 )"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "char a [ 100005 ] ;",
        "int * c = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "char a [ 100005 ] ;",
        "int * c = 1 ;",
        "while ( n % i != 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "int * c = 1 ;",
        "while ( n % i != 0 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    }
  ]
}