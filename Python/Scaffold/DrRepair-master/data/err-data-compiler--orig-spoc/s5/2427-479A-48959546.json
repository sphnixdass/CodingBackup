{
  "meta": {
    "index": 2427,
    "hitid": "3MA5N0ATTC50WL73O4IFH7BFZJGWKD",
    "workerid": "A1AYVATMT88U1W",
    "probid": "479A",
    "subid": "48959546"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a , b , c be integers",
      "code": "int a , b , c ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read a , b , c",
      "code": "cin >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "d = array of integers of length 1110",
      "code": "int d [ 1110 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let max be a integer with value max is equal to 0",
      "code": "int max = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "0th element of array d is equal to a + b + c",
      "code": "d [ 0 ] = a + b + c ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "1st element of array d is equal to a * ( b + c )",
      "code": "d [ 1 ] = a * ( b + c ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "2nd element of array d is equal to ( a + b ) * c",
      "code": "d [ 2 ] = ( a + b ) * c ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "3rd element of array d is equal to a * b * c",
      "code": "d [ 3 ] = a * b * c ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to 4 exclusive",
      "code": "for ( int i = 0 ; i < 4 ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if ( ith element of array d is greater than or equal to max ) , max is equal to ith element of array d",
      "code": "if ( d [ i ] >= max ) max = d [ i ] ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print max and newline",
      "code": "cout << max << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> a >> b >> c )"
      ],
      "err_line": 5,
      "err_msg": "‘d’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "d [ ] = a * b * c ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        9
      ],
      "mod_code": [
        "d [ 0 ] = a * ( b + c ) ;",
        "d [ 4 ] = ( a + b ) * c ;",
        "d [ 4 ] = a * b * c ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        9
      ],
      "mod_code": [
        "d [ 0 ] = a * ( b + c ) ;",
        "d [ 4 ] = ( a + b ) * c ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        5
      ],
      "mod_code": [
        "d [ 0 ] = a * ( b + c ) ;",
        "d [ 4 ] = ( a + b ) * c ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "d [ 4 ] = a + b + c ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        8
      ],
      "mod_code": [
        "d [ 0 ] = a * ( b + c ) ;",
        "d [ 4 ] = ( a + b ) * c ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "d [ ] = a * b * c ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        7,
        5,
        8
      ],
      "mod_code": [
        "d [ 0 ] = a * ( b + c ) ;",
        "d [ 4 ] = ( a + b ) * c ;",
        "d [ 4 ] = a + b + c ;",
        "d [ ] = a * b * c ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        7,
        8
      ],
      "mod_code": [
        "d [ 0 ] = a * ( b + c ) ;",
        "d [ 4 ] = ( a + b ) * c ;",
        "d [ ] = a * b * c ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        8,
        9
      ],
      "mod_code": [
        "d [ 0 ] = a * ( b + c ) ;",
        "d [ 4 ] = a * b * c ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        9,
        5
      ],
      "mod_code": [
        "d [ 0 ] = a * ( b + c ) ;",
        "d [ 4 ] = a * b * c ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "d [ 4 ] = a + b + c ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "d [ 0 ] = a * ( b + c ) ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        5
      ],
      "mod_code": [
        "d [ 0 ] = a * ( b + c ) ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "d [ 4 ] = a + b + c ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        5,
        8
      ],
      "mod_code": [
        "d [ 0 ] = a * ( b + c ) ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "d [ 4 ] = a + b + c ;",
        "d [ ] = a * b * c ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        9,
        8
      ],
      "mod_code": [
        "d [ 0 ] = a * ( b + c ) ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "d [ ] = a * b * c ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        5,
        8
      ],
      "mod_code": [
        "d [ 0 ] = a * ( b + c ) ;",
        "d [ 4 ] = a + b + c ;",
        "d [ ] = a * b * c ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "d [ 0 ] = a * ( b + c ) ;",
        "d [ ] = a * b * c ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        8,
        9
      ],
      "mod_code": [
        "d [ 4 ] = ( a + b ) * c ;",
        "d [ 4 ] = a * b * c ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        5
      ],
      "mod_code": [
        "d [ 4 ] = ( a + b ) * c ;",
        "d [ 4 ] = a * b * c ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "d [ 4 ] = a + b + c ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "d [ 4 ] = ( a + b ) * c ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        5
      ],
      "mod_code": [
        "d [ 4 ] = ( a + b ) * c ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "d [ 4 ] = a + b + c ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        5,
        8
      ],
      "mod_code": [
        "d [ 4 ] = ( a + b ) * c ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "d [ 4 ] = a + b + c ;",
        "d [ ] = a * b * c ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        9,
        8
      ],
      "mod_code": [
        "d [ 4 ] = ( a + b ) * c ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "d [ ] = a * b * c ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        5,
        8
      ],
      "mod_code": [
        "d [ 4 ] = ( a + b ) * c ;",
        "d [ 4 ] = a + b + c ;",
        "d [ ] = a * b * c ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "d [ 4 ] = ( a + b ) * c ;",
        "d [ ] = a * b * c ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "d [ 4 ] = a * b * c ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        5
      ],
      "mod_code": [
        "d [ 4 ] = a * b * c ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "d [ 4 ] = a + b + c ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < 4 ; i ++ )",
        "d [ 4 ] = a + b + c ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 4 ; i ++ )",
        "d [ 4 ] = a + b + c ;",
        "d [ ] = a * b * c ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 4 ; i ++ )",
        "d [ ] = a * b * c ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "d [ 4 ] = a + b + c ;",
        "d [ ] = a * b * c ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    }
  ]
}