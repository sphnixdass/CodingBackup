{
  "meta": {
    "index": 2670,
    "hitid": "3S37Y8CWI8UFIJI03CVZAQMJ2I8W4B",
    "workerid": "AIWEXPJAU66D9",
    "probid": "16A",
    "subid": "45440736"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers called r and c",
      "code": "int r , c ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read r and c",
      "code": "cin >> r >> c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare character variable temp",
      "code": "char temp ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integer variable t",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set integer prevc to - 1",
      "code": "int prevc = - 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set integer prevr to - 1",
      "code": "int prevr = - 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to r exclusive",
      "code": "for ( int i = 0 ; i < r ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "prevc = - 1",
      "code": "prevc = - 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for integer j = 0 to c exclusive",
      "code": "for ( int j = 0 ; j < c ; j ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "read temp",
      "code": "cin >> temp ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "t = temp - ' 0 '",
      "code": "t = temp - ' 0 ' ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if prevr ! = - 1 and t is equal to prevr",
      "code": "if ( prevr != - 1 && t == prevr )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "print \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if t ! = prevc and prevc ! = - 1",
      "code": "if ( t != prevc && prevc != - 1 )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "print \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 20,
      "text": "prevc = t",
      "code": "prevc = t ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "prevr = prevc",
      "code": "prevr = prevc ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print \" YES \\ n \"",
      "code": "cout << \" YES\\n \" ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        22
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "int prevr = prevc ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        22,
        11
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "int prevr = prevc ;",
        "t -= ' 0 ' ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        22,
        11,
        12
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "int prevr = prevc ;",
        "t -= ' 0 ' ;",
        "if ( prevr != - 1 && t == ' prevr ' )"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        22,
        11,
        2
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "int prevr = prevc ;",
        "t -= ' 0 ' ;",
        "cin >> r >> r ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        22,
        11,
        20
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "int prevr = prevc ;",
        "t -= ' 0 ' ;",
        "int prevc = t ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        22,
        12
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "int prevr = prevc ;",
        "if ( prevr != - 1 && t == ' prevr ' )"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        22,
        12,
        2
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "int prevr = prevc ;",
        "if ( prevr != - 1 && t == ' prevr ' )",
        "cin >> r >> r ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        22,
        12,
        20
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "int prevr = prevc ;",
        "if ( prevr != - 1 && t == ' prevr ' )",
        "int prevc = t ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        22,
        2
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "int prevr = prevc ;",
        "cin >> r >> r ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        22,
        2,
        20
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "int prevr = prevc ;",
        "cin >> r >> r ;",
        "int prevc = t ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        22,
        20
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "int prevr = prevc ;",
        "int prevc = t ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "t -= ' 0 ' ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        11,
        12
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "t -= ' 0 ' ;",
        "if ( prevr != - 1 && t == ' prevr ' )"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        11,
        12,
        2
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "t -= ' 0 ' ;",
        "if ( prevr != - 1 && t == ' prevr ' )",
        "cin >> r >> r ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        11,
        12,
        20
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "t -= ' 0 ' ;",
        "if ( prevr != - 1 && t == ' prevr ' )",
        "int prevc = t ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        11,
        2
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "t -= ' 0 ' ;",
        "cin >> r >> r ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        11,
        2,
        20
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "t -= ' 0 ' ;",
        "cin >> r >> r ;",
        "int prevc = t ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        11,
        20
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "t -= ' 0 ' ;",
        "int prevc = t ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "if ( prevr != - 1 && t == ' prevr ' )"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        12,
        2
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "if ( prevr != - 1 && t == ' prevr ' )",
        "cin >> r >> r ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        12,
        2,
        20
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "if ( prevr != - 1 && t == ' prevr ' )",
        "cin >> r >> r ;",
        "int prevc = t ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        12,
        20
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "if ( prevr != - 1 && t == ' prevr ' )",
        "int prevc = t ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "cin >> r >> r ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        2,
        20
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "cin >> r >> r ;",
        "int prevc = t ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    },
    {
      "mod_line": [
        3,
        20
      ],
      "mod_code": [
        "char temp [ 8 ] [ 8 ] ;",
        "int prevc = t ;"
      ],
      "err_line": 10,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [8][8]’)"
    }
  ]
}