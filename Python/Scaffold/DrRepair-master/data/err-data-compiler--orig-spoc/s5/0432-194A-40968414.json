{
  "meta": {
    "index": 432,
    "hitid": "3FHTJGYT8NU5AQEJMRJ5RLBQ0SXPGK",
    "workerid": "A1AYVATMT88U1W",
    "probid": "194A",
    "subid": "40968414"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , k , ans be integers",
      "code": "int n , k , ans ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while read n , k",
      "code": "while ( cin >> n >> k )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if k / n equals 2",
      "code": "if ( k / n == 2 )",
      "indent": 2
    },
    {
      "line": 4,
      "text": "ans is equal to k modulo n",
      "code": "ans = k % n ;",
      "indent": 3
    },
    {
      "line": 5,
      "text": "print n - ans and newline",
      "code": "cout << n - ans << endl ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print 0 and newline",
      "code": "cout << \" 0 \" << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( { cin >> n >> k )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "ans %= n ;",
        "while ( { cin >> n >> k )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        2,
        6
      ],
      "mod_code": [
        "ans %= n ;",
        "while ( { cin >> n >> k )",
        "while ( 1 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "while ( { cin >> n >> k )",
        "while ( 1 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    }
  ]
}